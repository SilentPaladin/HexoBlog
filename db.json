{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/hexo-theme-bamboo/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/css/animate.min.css","path":"css/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/activate-power-mode.js","path":"js/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/goTop.js","path":"js/goTop.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/jquery3.5.1.js","path":"js/jquery3.5.1.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/local_search.js","path":"js/local_search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/ribbon.min.js","path":"js/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue2.6.11.js","path":"js/vue2.6.11.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/wrapImage.js","path":"js/wrapImage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/aplayer/APlayer@1.10.1.min.css","path":"js/aplayer/APlayer@1.10.1.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/homeBubble.js","path":"js/bubble/homeBubble.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/clipboard/clipboard.min.js","path":"js/clipboard/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/barrager.css","path":"js/danmu/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/close.png","path":"js/danmu/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/jquery.barrager.js","path":"js/danmu/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/bubble.js","path":"js/bubble/bubble.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/clicklove.js","path":"js/cursor/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/explosion.min.js","path":"js/cursor/explosion.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/fireworks.js","path":"js/cursor/fireworks.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/text.js","path":"js/cursor/text.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/falling/sakura.js","path":"js/falling/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/falling/snow.js","path":"js/falling/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/getPhotoOnline/index.js","path":"js/getPhotoOnline/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/issues/index.js","path":"js/issues/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/pjax@0.2.8/index.js","path":"js/pjax@0.2.8/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/getSiteOnline/index.js","path":"js/getSiteOnline/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/getTalkOnline/index.js","path":"js/getTalkOnline/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-dark.min.css","path":"js/prism/prism-dark.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-funky.min.css","path":"js/prism/prism-funky.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-line-numbers.css","path":"js/prism/prism-line-numbers.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-okaidia.min.css","path":"js/prism/prism-okaidia.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-solarizedlight.min.css","path":"js/prism/prism-solarizedlight.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-tomorrow.min.css","path":"js/prism/prism-tomorrow.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-twilight.min.css","path":"js/prism/prism-twilight.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism.min.css","path":"js/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/font.css","path":"js/shareJs/font.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/share.min.css","path":"js/shareJs/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.animate1.0.3.min.js","path":"js/swiper/swiper.animate1.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.min.js","path":"js/swiper/swiper.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper@5.4.1.min.css","path":"js/swiper/swiper@5.4.1.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/vue-awesome-swiper.js","path":"js/swiper/vue-awesome-swiper.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.css","path":"js/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.min.js","path":"js/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/valine/index.js","path":"js/valine/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue-seamless-scroll/index.js","path":"js/vue-seamless-scroll/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-coy.min.css","path":"js/prism/prism-coy.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.js","path":"js/vue-typed-js/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/waline/waline.min.js","path":"js/waline/waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/social-share.min.js","path":"js/shareJs/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.css","path":"js/vue-typed-js/index.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/utils/index.js","path":"js/utils/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/cursor/Horizontal.cur","path":"medias/cursor/Horizontal.cur","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.eot","path":"js/shareJs/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.ttf","path":"js/shareJs/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.svg","path":"js/shareJs/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.woff","path":"js/shareJs/fonts/iconfont.woff","modified":0,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"ec11da469c7707e075e7208f3f9230d75883e8d4","modified":1728318250292},{"_id":"source/categories/index.md","hash":"20d6cea41f003e527164b3b20981b066f81f4b71","modified":1728182701124},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/ghcard.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1728153841654},{"_id":"source/tags/index.md","hash":"39c0b5a9bdd2a4f352850ce8c6b354755e8f6c62","modified":1728182928217},{"_id":"source/_posts/英语/英语语法.md","hash":"8d25246930eed5cb9c391f5fe439ac145dad4c5f","modified":1650287063205},{"_id":"source/_posts/计算机/Hexo博客教程.md","hash":"533168f0600f00d8f44c79865b64e122adc225c0","modified":1653193487894},{"_id":"source/_posts/数学/LaTex常用符号.md","hash":"7e8e18bc7f28ef31b9f55307b3d028788edcfcca","modified":1650293716517},{"_id":"source/_posts/计算机/树莓派接收MTI数据.md","hash":"054938737b7522025698bf38db1cabdf62007b39","modified":1650286034641},{"_id":"source/_posts/软件/MathType7无限试用.md","hash":"58b979ae305f16eef0e80f1584169b32edf48bef","modified":1650293171752},{"_id":"source/_posts/计算机/python/Python快速入门语法.md","hash":"4180e5012bdb22c3b8d8a1d248b8c7a6dfe062f1","modified":1702117222818},{"_id":"source/_posts/计算机/前端/AJAX快速入门.md","hash":"2f35aa7dd882e976ee7ca06943246c5149257ded","modified":1652804695114},{"_id":"source/_posts/计算机/前端/CSS3快速入门语法.md","hash":"cbfb80729fa769fe93e6f2cab5cb48bcbb34fb24","modified":1652594490308},{"_id":"source/_posts/计算机/命令行进度条的实现.md","hash":"eccd2c9cc5f42d4de14fc7b7b37780b890d54658","modified":1650293420335},{"_id":"source/_posts/计算机/前端/Nodejs快速入门.md","hash":"45d61c55afe776d3d996cb068aafaf4295d8bf00","modified":1652351247439},{"_id":"source/_posts/计算机/前端/React快速入门.md","hash":"042f9498bc9c9d2253c5bef7a0ab8299efc55ddb","modified":1652947080210},{"_id":"source/_posts/计算机/前端/JavaScript快速入门语法.md","hash":"3d958a094bf2395e5d216b60143fae25632f3842","modified":1652445554032},{"_id":"source/_posts/计算机/前端/HTML5快速入门语法.md","hash":"0db7356b43fb26d56509a06d714febe2e752673f","modified":1650700429334},{"_id":"source/_posts/计算机/前端/TypeScript快速入门语法.md","hash":"6ba813b855a8f41337ca11f96876c89a8956a7b6","modified":1652683551320},{"_id":"themes/hexo-theme-bamboo/_config.yml","hash":"fa902caa7174604306a7b816f1f4bee5b429805c","modified":1728317409387},{"_id":"themes/hexo-theme-bamboo/package.json","hash":"1db58d63b57e63d88e0a060e5b164db225cf2599","modified":1728153841492},{"_id":"themes/hexo-theme-bamboo/languages/default.yml","hash":"4c604dc1344630ae5ab50edc282a3e46982884c1","modified":1728153841255},{"_id":"themes/hexo-theme-bamboo/languages/zh-CN.yml","hash":"2bf66fefa219ee8152d35bb5f823ca5096fedcf2","modified":1728153841256},{"_id":"themes/hexo-theme-bamboo/languages/zh-TW.yml","hash":"bd3ef201b7dcbeeee54107301550d60e71d72ba7","modified":1728153841258},{"_id":"themes/hexo-theme-bamboo/layout/categories.ejs","hash":"b0f71816ca4c0899eb82b6fa100abf91b56508ab","modified":1728153841479},{"_id":"themes/hexo-theme-bamboo/layout/category.ejs","hash":"d0d19ac565414123c24b312f7158dbe1c9e275f8","modified":1728153841480},{"_id":"themes/hexo-theme-bamboo/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1728153841476},{"_id":"themes/hexo-theme-bamboo/layout/index.ejs","hash":"fea918c473fe66846b7a7f94da4617610cff3d07","modified":1728153841482},{"_id":"themes/hexo-theme-bamboo/layout/layout.ejs","hash":"a7dbe3f3f900e30c49f02b4d3a99803a4aba59ec","modified":1728153841485},{"_id":"themes/hexo-theme-bamboo/layout/tag.ejs","hash":"1061f8a9b51d983590a3efc536142a9b10acebf5","modified":1728153841489},{"_id":"themes/hexo-theme-bamboo/layout/tags.ejs","hash":"0c6a171fa56cf8bfa180db32f10f75c6760fd983","modified":1728153841491},{"_id":"themes/hexo-theme-bamboo/layout/post.ejs","hash":"206c60b92ec1ce6332e75e85761ce0c6947f5dae","modified":1728153841487},{"_id":"source/_posts/计算机/桌面开发/QSS快速入门语法.md","hash":"9d030d4cd1ee8339d117ce028c2fea49cd039ac4","modified":1702105518479},{"_id":"themes/hexo-theme-bamboo/layout/_partial/archive.ejs","hash":"246967d57c31bd873f98603536df79c1f67c96e2","modified":1728153841267},{"_id":"themes/hexo-theme-bamboo/layout/_partial/goTop.ejs","hash":"fa802c5b70f3ac8cf98dad040d05867891d7d4ff","modified":1728153841326},{"_id":"themes/hexo-theme-bamboo/layout/_partial/dark.ejs","hash":"774216ad95828bc349310b4cad02660018ca06e9","modified":1728153841316},{"_id":"themes/hexo-theme-bamboo/layout/_partial/home_widget.ejs","hash":"0882e6992cfc2fbf1e0b05acbc1463de68f77aa4","modified":1728153841338},{"_id":"themes/hexo-theme-bamboo/layout/_partial/lantern.ejs","hash":"225044aa82bf305e27a00adf1a8368146e860394","modified":1728153841341},{"_id":"themes/hexo-theme-bamboo/layout/_partial/loaded.ejs","hash":"8e29d9924d2ee35c3da7c2f3e27652112252a185","modified":1728153841342},{"_id":"themes/hexo-theme-bamboo/layout/_partial/motto.ejs","hash":"535af08125435651591be103f8e6d98c7222907d","modified":1728153841353},{"_id":"themes/hexo-theme-bamboo/layout/_partial/notice.ejs","hash":"ed4cad963e1a9b747864bd3ceb76bf9e763c1150","modified":1728153841355},{"_id":"themes/hexo-theme-bamboo/layout/_partial/paginator.ejs","hash":"26655627ce5b1eb7050b5e24cc262cf3fc46c400","modified":1728153841357},{"_id":"themes/hexo-theme-bamboo/layout/_partial/swiper.ejs","hash":"767c0fcae79bf94fa718ba26ea4ad1fdb610fe10","modified":1728153841472},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side.ejs","hash":"17f52c2fa6d771da94644d4fd0983d054a606384","modified":1728153841448},{"_id":"themes/hexo-theme-bamboo/layout/_partial/topArticle.ejs","hash":"9b321c75dbcbc424b2392e90426127182539a86d","modified":1728153841474},{"_id":"themes/hexo-theme-bamboo/scripts/helpers/side_archives.js","hash":"a292f0a9e9242556b83219f519e3e92a4d85e904","modified":1728153841503},{"_id":"themes/hexo-theme-bamboo/source/favicon.ico","hash":"801ff7b3f358b77a813787a97ef59148eec93fd8","modified":1728153841675},{"_id":"themes/hexo-theme-bamboo/scripts/events/index.js","hash":"514fb117a0c526de85c0338de7f66c23abc58b48","modified":1728153841497},{"_id":"themes/hexo-theme-bamboo/scripts/tag/btns.js","hash":"618e2f77ec244d8814f2b38c9820d1356580bbcd","modified":1728153841507},{"_id":"themes/hexo-theme-bamboo/scripts/tag/file.js","hash":"260333b277073ba8f41472cdddb35ee3e8212267","modified":1728153841510},{"_id":"themes/hexo-theme-bamboo/scripts/tag/folding.js","hash":"832c55a45cfeeabcd2d317d42faaee09ee54d2a4","modified":1728153841511},{"_id":"themes/hexo-theme-bamboo/scripts/tag/checkbox.js","hash":"49da9041bd41c57a547d42fb7a6741757b848f1c","modified":1728153841508},{"_id":"themes/hexo-theme-bamboo/scripts/tag/btn.js","hash":"0e628fa28e03f60e28f257af895b2e72a0cb8449","modified":1728153841505},{"_id":"themes/hexo-theme-bamboo/scripts/tag/gallery.js","hash":"694a6a81dd3b3aa4a37e39b35402e99322941ec1","modified":1728153841513},{"_id":"themes/hexo-theme-bamboo/scripts/tag/getPhotoOnline.js","hash":"16478a1a0d642b92cc4f86114d185bf79cbd0bf9","modified":1728153841517},{"_id":"themes/hexo-theme-bamboo/scripts/tag/getPhoto.js","hash":"e78765e6156ff261e564d8a22c6307ea98990a0d","modified":1728153841515},{"_id":"themes/hexo-theme-bamboo/scripts/tag/getSiteOnline.js","hash":"2dce91bf40a1e6f856e317eba777fc29399ec2fc","modified":1728153841519},{"_id":"themes/hexo-theme-bamboo/scripts/tag/ghcard.js","hash":"4e893d79abc1e8e1e5b3bfe08249ff32b250314d","modified":1728153841523},{"_id":"themes/hexo-theme-bamboo/scripts/tag/getTalkOnline.js","hash":"30f63677757c051835fec668ec928bcd47f6ba66","modified":1728153841521},{"_id":"themes/hexo-theme-bamboo/scripts/tag/image.js","hash":"faa1d83114bc255cffc18bd0ab037f08b430f515","modified":1728153841524},{"_id":"themes/hexo-theme-bamboo/scripts/tag/issues.js","hash":"7dcb40af462e4131f6a52d354ed3b147b4e874af","modified":1728153841528},{"_id":"themes/hexo-theme-bamboo/scripts/tag/link.js","hash":"a11fe06f20669f4b64a1a0dcc9f005a9f32e29dc","modified":1728153841530},{"_id":"themes/hexo-theme-bamboo/scripts/tag/progress.js","hash":"99a10305e3924aaab05135ef25afd10d04574bfe","modified":1728153841537},{"_id":"themes/hexo-theme-bamboo/scripts/tag/media.js","hash":"1d163ee349818baeb95504f82d3497da6f6556e2","modified":1728153841532},{"_id":"themes/hexo-theme-bamboo/scripts/tag/inline-labels.js","hash":"eaaedc3d65384e0beb4306534ef4ed202b46da18","modified":1728153841526},{"_id":"themes/hexo-theme-bamboo/scripts/tag/mermaid.js","hash":"1e69a5e4a4a5f88fdb76d0fe55ea651c14301816","modified":1728153841534},{"_id":"themes/hexo-theme-bamboo/scripts/tag/site.js","hash":"1cb487b1435925a55eaf957d761bc08254092c36","modified":1728153841538},{"_id":"themes/hexo-theme-bamboo/scripts/tag/note.js","hash":"9e990caa1fd815a760e31f1eaa02015d357fcef8","modified":1728153841535},{"_id":"themes/hexo-theme-bamboo/scripts/tag/span.js","hash":"d617b5a0056c4a0c983225513c89eed6f5b56833","modified":1728153841540},{"_id":"themes/hexo-theme-bamboo/scripts/tag/swiper.js","hash":"26a587371f7d2f6715cdb0e5f4f7b63a7f7921cd","modified":1728153841541},{"_id":"themes/hexo-theme-bamboo/scripts/tag/timeline.js","hash":"da2b0d7760dea698429f370aba5cded5bb24501e","modified":1728153841544},{"_id":"themes/hexo-theme-bamboo/scripts/tag/title.js","hash":"8cfce58425366f805a5f2c88f01b76dca44f91ce","modified":1728153841546},{"_id":"themes/hexo-theme-bamboo/scripts/tag/tabs.js","hash":"133310460bdf70a7932b44c3ccca509b3f221e1c","modified":1728153841542},{"_id":"themes/hexo-theme-bamboo/scripts/z-lazyload/index.js","hash":"58b935fb699a98f0a9ceb741d2105a977e24cf59","modified":1728153841551},{"_id":"themes/hexo-theme-bamboo/source/css/style.styl","hash":"29848c643d866b6b3ae76bd7d4238c3ab7343618","modified":1728153841674},{"_id":"themes/hexo-theme-bamboo/source/css/animate.min.css","hash":"dc47ce9b8438909921b14e766febdabf3018e3c2","modified":1728153841673},{"_id":"themes/hexo-theme-bamboo/source/js/activate-power-mode.js","hash":"2e14b0f48c55eaec543d96ec0eb2f16e80c20c01","modified":1728153841677},{"_id":"themes/hexo-theme-bamboo/scripts/tag/titleB.js","hash":"3dde507bf20477cd89e71549be8ddfc4964a76ed","modified":1728153841548},{"_id":"themes/hexo-theme-bamboo/source/js/goTop.js","hash":"ae548538475ddea2aae8949194935582cc0ae972","modified":1728153841713},{"_id":"themes/hexo-theme-bamboo/source/js/app.js","hash":"57f824da5f893a0c83c80522114797f09868ccf1","modified":1728153841682},{"_id":"themes/hexo-theme-bamboo/source/js/local_search.js","hash":"131d74198aa41bdb74dc27ef3ed856bc3d752f8d","modified":1728153841718},{"_id":"themes/hexo-theme-bamboo/source/js/ribbon.min.js","hash":"e6136a6243e04faca95844f47c21b070ade3661a","modified":1728153841735},{"_id":"themes/hexo-theme-bamboo/LICENSE","hash":"2f9d4d3c41f055757f8c86567cfe838846446e7b","modified":1728153841249},{"_id":"themes/hexo-theme-bamboo/source/js/wrapImage.js","hash":"08fa22ecfb8a93bdb96e1063e37367fcc97be29c","modified":1728153841781},{"_id":"themes/hexo-theme-bamboo/source/medias/logo.png","hash":"d08165f945567a08bd74d36b1241a0b8f1618536","modified":1728153841786},{"_id":"themes/hexo-theme-bamboo/layout/_partial/analytics/baidu-analytics.ejs","hash":"589ac42358e8f2e4b22aac4353caa0c2c462a332","modified":1728153841262},{"_id":"themes/hexo-theme-bamboo/layout/_partial/analytics/baidu-push.ejs","hash":"e7fcc44a10565505e85417ad4416d0d5d5839523","modified":1728153841264},{"_id":"themes/hexo-theme-bamboo/layout/_partial/analytics/google-analytics.ejs","hash":"cb7d5c76508fe8db43dbd4af9a691398fffccadb","modified":1728153841265},{"_id":"themes/hexo-theme-bamboo/layout/_partial/card/post.ejs","hash":"37fd6f4443620ff3b2963c19fc42bd21891428b0","modified":1728153841269},{"_id":"themes/hexo-theme-bamboo/layout/_partial/footer/busuanzi.ejs","hash":"bc3d2f6abc95b329dfe0186fa0364c48aab3772e","modified":1728153841319},{"_id":"themes/hexo-theme-bamboo/layout/_partial/footer/fish.ejs","hash":"c90e55153d7e83f5c054dd98add7dd9bbb6e095f","modified":1728153841321},{"_id":"themes/hexo-theme-bamboo/layout/_partial/footer/footer.ejs","hash":"3ed9b13b849c5a54dc667b9137beaa769d382980","modified":1728153841323},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/head.ejs","hash":"aea1a32f47edda23b22b4e3444c13cedb4f3e5a6","modified":1728153841333},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/drawer.ejs","hash":"1f78c957b472a14c13301ea6a7ec59d5ecc777e6","modified":1728153841330},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/header.ejs","hash":"0583e814ef8af4cce35382a2b2634488e432de75","modified":1728153841334},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/search.ejs","hash":"7cbf73c577874de0b6cc89180680b1e19c5e8348","modified":1728153841336},{"_id":"themes/hexo-theme-bamboo/layout/_partial/math/mathjax.ejs","hash":"dc9a1270d34448606e87e52a3b003a89f4f5b3aa","modified":1728153841346},{"_id":"themes/hexo-theme-bamboo/layout/_partial/math/mermaid.ejs","hash":"2c6894abc259167170e274728467c7c7aa1ef8e5","modified":1728153841349},{"_id":"themes/hexo-theme-bamboo/layout/_partial/meta/aplayer.ejs","hash":"33aeb95a90093ce66816676f9ac63f1f02d27852","modified":1728153841352},{"_id":"themes/hexo-theme-bamboo/layout/_partial/pjax/animate.ejs","hash":"8a60b1b8ec8340f712ed6539bacba62d137232cc","modified":1728153841360},{"_id":"themes/hexo-theme-bamboo/layout/_partial/pjax/index.ejs","hash":"6ac774c816f9dcb7099612e2ef13bb0e7893476c","modified":1728153841363},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_2.ejs","hash":"d1df3a9050bae7cb7cf17d44359292999a1d0664","modified":1728153841395},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_1.ejs","hash":"e82a5a888ba376080b21d4e39ac9b4fff2623d24","modified":1728153841393},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_3.ejs","hash":"1ef0876d3a2f3ae43eccdf3c88dbd9c642d22d62","modified":1728153841397},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_5.ejs","hash":"7db609c64eeabb8b68771097663d1ff427667e14","modified":1728153841402},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_4.ejs","hash":"458f5c179670b029178c037f1feb99f566b9408e","modified":1728153841400},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_6.ejs","hash":"7ce6bd6bf765d23acb30f1a054e56f265099a4dd","modified":1728153841404},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_7.ejs","hash":"3b6d1da24786682b5d248f5e59f8f48510a55d4d","modified":1728153841406},{"_id":"themes/hexo-theme-bamboo/layout/_partial/preLoader/loader_8.ejs","hash":"2ab0a97498e0f35516c1db65949afd831a2800da","modified":1728153841408},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/bgSwiper.ejs","hash":"77ade59920c57fda25c2be421b77adf7b0c943d9","modified":1728153841368},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/categories.ejs","hash":"15f33099ef5f653b9ceb3e27f089b36bff50cc4f","modified":1728153841370},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/comment.ejs","hash":"364875140582c1b702e01b63791f97011ca24b40","modified":1728153841374},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/copyright.ejs","hash":"fd3af5c33895f907b1e5daa56d8d7266549dd019","modified":1728153841377},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/donate.ejs","hash":"b54c1be4bf9a4b28a8c39d2835e8b4d9ee1e56ff","modified":1728153841380},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/post-detail-header.ejs","hash":"34ded5a37233689e991bb7292dc785d626430106","modified":1728153841382},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/post-nav.ejs","hash":"1e92a0ca46977f94ce27540ceb09ce05bc75accd","modified":1728153841384},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/prismjs.ejs","hash":"198a472f69517829caf2f2cb542d32996a8fed74","modified":1728153841386},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/tags.ejs","hash":"f92692427de2caa48033f975f193f9a8e4b02613","modified":1728153841390},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/copy.ejs","hash":"fda84bf47a5e7c5692f682a45f8fdcfab90900b0","modified":1728153841411},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/share.ejs","hash":"c414ae139680a2e2a50e776de4e137265fd0178d","modified":1728153841387},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/cursor_effect.ejs","hash":"0877a20709f046f693e4536fe70354ad1b67f195","modified":1728153841414},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/danmu.ejs","hash":"ca20ae64fbd2527f8b54fc8618a3a0502728420c","modified":1728153841416},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/dark.ejs","hash":"25558a06394cb251a140b5a8998069f9f776f67e","modified":1728153841417},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/falling.ejs","hash":"79d1c7cc0de290ac35e41312ef62fc4bf04be766","modified":1728153841419},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/getPhotoOnline.ejs","hash":"bd17b91d841055cef0fe7e4a70736f57a55e030b","modified":1728153841421},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/getSiteOnline.ejs","hash":"7735a6b702c32447e4667cbc7cab86cd28d5badf","modified":1728153841423},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/getTalkOnline.ejs","hash":"5e5806d276dcfad3702d460d43c4ee826d9ce9ea","modified":1728153841425},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/head.ejs","hash":"4536885880315fb90efd75935c133051a729d45c","modified":1728153841428},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/global.ejs","hash":"16851de5516d2908787ed902b778c8f03f9ae63b","modified":1728153841427},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/index.ejs","hash":"00a70fce835bc65801fd407236f72315e6df5934","modified":1728153841430},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/inputEffects.ejs","hash":"765c69436e021412dd8bbb852ea2403c97fc6adf","modified":1728153841432},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/issues.ejs","hash":"cf5436f10fb9a2fb7238a1c528a5ed64a2345840","modified":1728153841434},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/lazyload.ejs","hash":"b7e8071598a8dc70406aba8da949c5d6f5403e47","modified":1728153841436},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/setHeader.ejs","hash":"c082c910282c3c96465b0812222874fbe87c58cd","modified":1728153841439},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/scrollreveal.ejs","hash":"4aba6d5b506b3a8fc7d84abe0d42875e0107d64e","modified":1728153841438},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/swiperTag.ejs","hash":"020d6cd78cd9ace5477a79e57e958a2f5a6d43f3","modified":1728153841441},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/typed.ejs","hash":"262725f946bb3ae8957b8e3d50c1a7cd564f8866","modified":1728153841446},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/toc.ejs","hash":"af49e146385d28f5cbdaa6d7a5167fbbde25a917","modified":1728153841444},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/sideHeader.ejs","hash":"3985bd41e1310500d44d42b02863d4b16815154b","modified":1728153841452},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_archives.ejs","hash":"c82b7c669aaaa2b9575cf6daf6d0a133b64acfd0","modified":1728153841454},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_blogger.ejs","hash":"a2c637abf7943b273edfb69d0d8e0dc812c84127","modified":1728153841458},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_recent_post.ejs","hash":"7fe61d14865e97988ff5d42047abb4a4ee8af7f0","modified":1728153841462},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_category.ejs","hash":"dccd4537a94cf6e210803d6ab2789e6cd57d755e","modified":1728153841460},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_tagcloud.ejs","hash":"7e716ce939cb8dd4004896adf41559d57bcfff0e","modified":1728153841464},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_toc.ejs","hash":"670c9c8bbc0f8cadfaa1e5caca73fd641d2fe831","modified":1728153841466},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_webinfo.ejs","hash":"1efe51b2685b7c4ad2ab42849c5ebe59e2d20def","modified":1728153841467},{"_id":"themes/hexo-theme-bamboo/scripts/events/lib/stellar-tag-utils.js","hash":"315d9e8a8261e760e1001970e09c32a660c969e0","modified":1728153841500},{"_id":"themes/hexo-theme-bamboo/source/css/_defines/variable.styl","hash":"ff4fff39224138f8cce1fe82dd8e0ab4077804b3","modified":1728153841557},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/widget_library_sticky.ejs","hash":"e3929f7edf85900e7becc71e0cbe14da2333f621","modified":1728153841469},{"_id":"themes/hexo-theme-bamboo/scripts/z-lazyload/lib/process.js","hash":"48a29bdb7026c4a9c8a58190d044140a8a05a64c","modified":1728153841552},{"_id":"themes/hexo-theme-bamboo/source/css/_plugins/mathjax.styl","hash":"499f59db53e9c57d99bebe4722156aeca7adb8b7","modified":1728153841622},{"_id":"themes/hexo-theme-bamboo/source/css/_plugins/pjaxanimate.styl","hash":"f8c2d14c041bb87bc7f37d82ac939320e3d110bf","modified":1728153841623},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/about.styl","hash":"0673f15fbb3649e221da3b20ba091d03bbd1cc3e","modified":1728153841560},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/archive.styl","hash":"caf5c83ba9897644582e60e29770f1bb7362ad5a","modified":1728153841562},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/base.styl","hash":"e3c5b4f828552be20a6f773f6a8c242d58a2dc23","modified":1728153841564},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/categories.styl","hash":"ad6d70243be366677293ff88c2eec715d2c29e9e","modified":1728153841566},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/comment.styl","hash":"6d70e8ec7481d11558b430ed3bbf437805b42bc0","modified":1728153841569},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/category.styl","hash":"327d6d1f71d782f69fe0b365137b0abc331ca3bb","modified":1728153841567},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/copyRyght.styl","hash":"ed1377ceb86204fa6b6c7430d14a1366d9ca568e","modified":1728153841570},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/custom.styl","hash":"badd12c63cb9bb5f38c829f00be2509fb546e2cd","modified":1728153841571},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/donate.styl","hash":"a880996ca61f96ba1280d581a132deb924c4ff62","modified":1728153841576},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/danmu.styl","hash":"8aaa764bb2b1c6a49c2f6c9ee868da24a0359669","modified":1728153841573},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/dark.styl","hash":"28d5269fae1cbaec4f40c21daa0378c098c7d801","modified":1728153841574},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/drawer.styl","hash":"0498b0cf2819b681eeeec35193e491d1d039302d","modified":1728153841577},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/footer.styl","hash":"598d193754645b22a0f1406303c1df66d95ffd9d","modified":1728153841579},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/goTop.styl","hash":"08c3dc03570ca3738f18b99ebe95c79ec3d0ce0a","modified":1728153841582},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/header.styl","hash":"db725d2648fc740aa59360502628e6de959504a6","modified":1728153841583},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/highlight.styl","hash":"55fc39472aba296434fab0ffdc6be5684f01778a","modified":1728153841584},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/friends.styl","hash":"f7018f99210ccab74b2d315a55ba9c4350a12fc9","modified":1728153841580},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/home.styl","hash":"0bd1214d90fcf7ae020ee0673da4a9fd7c225274","modified":1728153841586},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/lantern.styl","hash":"04acde311d7b9f7a732340626dbe677814ab502f","modified":1728153841587},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/motto.styl","hash":"cb484d25bc6f0bcda4cadffb5f1cdbe5df93919e","modified":1728153841589},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/paginator.styl","hash":"df1fd26976fd5be8418cd49a5c65ec651a680496","modified":1728153841593},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/pace.styl","hash":"b666b9079262d2dcc2a7b6023f97f79c8535db0e","modified":1728153841592},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/notice.styl","hash":"8fd57b791e518c14e88c36510e1132c10288b86b","modified":1728153841590},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/post-detail-header.styl","hash":"b316f4bcb9964bbfa4f6829e550578aa27d509a8","modified":1728153841594},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/post.styl","hash":"32655204cccbf9861097efad65c1cf69dac11fd5","modified":1728153841597},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/post-nav.styl","hash":"a7c7b33ad813885af485815d8c787c0fb3b6c8c8","modified":1728153841595},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/posts.styl","hash":"9464726d962229149d38841c087f6207cd8c2adc","modified":1728153841599},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/search.styl","hash":"2f67103cd8cb9b92d1ca4f334e41c195e01c3ce3","modified":1728153841612},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/side.styl","hash":"2999120872bff96f84381f76ad0a65015bd3f549","modified":1728153841613},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/tag.styl","hash":"f2b741dddc033f1989d3c4710f339ee122900e58","modified":1728153841615},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/tags.styl","hash":"6fc3915d4a0f5d551b23f2281df868e0399bc13d","modified":1728153841617},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/topArticle.styl","hash":"910e24383b1009e27c0ebf26a5958051451da47c","modified":1728153841618},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/transition.styl","hash":"809b40b7214cda6691b2f22ae827cbdbfaf8c303","modified":1728153841620},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/checkbox.styl","hash":"dbc18a5685879493b06016c85993d4522fe48564","modified":1728153841627},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/btn.styl","hash":"dbba1c1f7d374bd7c69c5b9758a61371db334d87","modified":1728153841626},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/folding.styl","hash":"7a88c350d302c6a89ab008b6ce2a98ed6f19c007","modified":1728153841650},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/circle.styl","hash":"c2adc73eab52952140420c2b5fc8bf134432b695","modified":1728153841629},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/gallery.styl","hash":"440ae8b7cd2802e068a82e044c35a3273eb98668","modified":1728153841652},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/galleryGroup.styl","hash":"ea9f387bc1bc00b4d6d4bd34e2df9046bda3610a","modified":1728153841653},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/image.styl","hash":"ce0c9f758f0f0be385c38d65e9bf4fb708cbaf5c","modified":1728153841655},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/inline-label.styl","hash":"1903a258c5829c8370c4eb53fcb60df7f7921f08","modified":1728153841656},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/note.styl","hash":"4487702c5348bf691e329fa8a9bbb6f42808436f","modified":1728153841660},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/link.styl","hash":"7181435bed445840bb61d655451494f83ac4d7e9","modified":1728153841658},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/media.styl","hash":"6727008f95ad9b3146c609a2e890af009472f9e4","modified":1728153841659},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/progress.styl","hash":"de1e1b08d23f95493ffda2a5375888e9e678891b","modified":1728153841662},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/site-card.styl","hash":"ee95cbf6072dbe3ae11e6f73a3b38a9c09e31994","modified":1728153841663},{"_id":"themes/hexo-theme-bamboo/README.md","hash":"2b81d4346abf63bd58483420ea54220c8d1101b3","modified":1728153841251},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/span.styl","hash":"bede49e1edf1049d4ea2f3dd0a17787fe084b2d2","modified":1728153841664},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/talkByJson.styl","hash":"2affd0fe4a640ab92c07198cd4df13bef1ea1575","modified":1728153841669},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/swiper.styl","hash":"ff02b78ba54cb71eafad141c3e4ef4a9cd9085cd","modified":1728153841666},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/timeline.styl","hash":"ae8e4487a32606127d26dc27c74df592b2175f82","modified":1728153841670},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/title.styl","hash":"e17ce9da2937d314c71b459c43de5f01441fe421","modified":1728153841671},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/tabs.styl","hash":"ca2dac222da40e13aa3b117d55b2da74d7ce9a35","modified":1728153841667},{"_id":"themes/hexo-theme-bamboo/source/js/aplayer/APlayer@1.10.1.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1728153841680},{"_id":"themes/hexo-theme-bamboo/source/js/clipboard/clipboard.min.js","hash":"76fd19c15b1d0a2d7afc7b66ca5f80c9061aabe2","modified":1728153841689},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/homeBubble.js","hash":"8475e7ed2004b9791b3f7ad4162b7a2b89467874","modified":1728153841686},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/close.png","hash":"2c3ed4345f91dc1b74a57b6dcd1e1efa9e279dbb","modified":1728153841700},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/barrager.css","hash":"9de985f20d314f3f1182f30d1b0666e5eb9ca9b5","modified":1728153841698},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/bubble.js","hash":"57f116efe2418a389913a46909e018fa4c9b9e84","modified":1728153841685},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/jquery.barrager.js","hash":"72ec0d8bbd0811973152fcbb316b0dd839ffb8f3","modified":1728153841701},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/explosion.min.js","hash":"ed2d0a5ad306a2745b7c8180b69e36b78d4b0698","modified":1728153841693},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1728153841691},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/text.js","hash":"7dd898cb00b46ceda065c92f2ac092c4ef41b4e4","modified":1728153841696},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/fireworks.js","hash":"86ad9484e40268952b5e32c240fb04d0268f86dd","modified":1728153841694},{"_id":"themes/hexo-theme-bamboo/source/js/falling/snow.js","hash":"99222d79ff36b05200b3ff7f54f8209d8f0a364b","modified":1728153841705},{"_id":"themes/hexo-theme-bamboo/source/js/pjax@0.2.8/index.js","hash":"efb9166635c18f09f2c7604a8b15d6ac8aae4870","modified":1728153841720},{"_id":"themes/hexo-theme-bamboo/source/js/getPhotoOnline/index.js","hash":"3b6354c11105aba544b08ded11295d83219d59ec","modified":1728153841707},{"_id":"themes/hexo-theme-bamboo/source/js/issues/index.js","hash":"f02538ab609541489396a682879ce854519487ca","modified":1728153841716},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-dark.min.css","hash":"a3f604a19e9a46f83a2fde49dfb45782748957ca","modified":1728153841724},{"_id":"themes/hexo-theme-bamboo/source/js/getSiteOnline/index.js","hash":"733f75aff00e0a62013089cb3e869878d6fcc535","modified":1728153841709},{"_id":"themes/hexo-theme-bamboo/source/js/getTalkOnline/index.js","hash":"ba714c7ffe4abde553d0c54ce5d528453f279c06","modified":1728153841711},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-line-numbers.css","hash":"c42732535ac61ac59a4356af3d89186a3071edf1","modified":1728153841726},{"_id":"themes/hexo-theme-bamboo/source/js/falling/sakura.js","hash":"b1566483a7d0deda2dd35db3d5a46f13aa5f1a86","modified":1728153841703},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-okaidia.min.css","hash":"50be6cc15d883ff3fa5d0885fed47241695a986c","modified":1728153841728},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-solarizedlight.min.css","hash":"927b757cd8030d12953b5c0fa6eed5de15dda8ad","modified":1728153841730},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-tomorrow.min.css","hash":"7b4247bc4d3b719afe5957779d0e5c8fb716c8ea","modified":1728153841731},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-funky.min.css","hash":"0220f68ccda78c2b5d1109e58f3879674c93b587","modified":1728153841725},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/share.min.css","hash":"9bd0cd6c81b60e10085cdda6aa724f147ee76599","modified":1728153841747},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.animate1.0.3.min.js","hash":"6a8d6aa926e552a563356c36d52d1e0e0c83521e","modified":1728153841752},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper@5.4.1.min.css","hash":"fd618d2bdf929821d9fa70ae377b840ffc47d756","modified":1728153841756},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/vue-awesome-swiper.js","hash":"e6f36537ed091a6b69945b1acf49e426426f1cf0","modified":1728153841757},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-twilight.min.css","hash":"ff4a6e3c4f1cb9bb59ec061656eacb750d238c15","modified":1728153841733},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/font.css","hash":"f6407017418989fb0ced993509543fb07c6b0b33","modified":1728153841738},{"_id":"themes/hexo-theme-bamboo/source/js/vue-seamless-scroll/index.js","hash":"f2aaf3f9b1ab7362f7cc158e5360cb1d62a57172","modified":1728153841768},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism.min.css","hash":"aa405e2bcb571595c822a80f5482454c1536fa52","modified":1728153841734},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.css","hash":"45e469dffa7b9ebc03f99fd09fb97274cdc5e9b4","modified":1728153841759},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.js","hash":"c8e6f4510eb5fe55015401510ce03f5307556b1a","modified":1728153841772},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-coy.min.css","hash":"fe1246de39c25eaa7ad1b0c997ee530dbdd39ad8","modified":1728153841722},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.css","hash":"b9dac4cfc5f0dc8854393d670b525fb63092fd38","modified":1728153841770},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/social-share.min.js","hash":"efdfa6b695ac6f0dd04cd8153d3e3a1a1edd90c2","modified":1728153841749},{"_id":"themes/hexo-theme-bamboo/source/medias/cursor/Horizontal.cur","hash":"c3c5e8485a67b7ab16079a96b53aff7ff52de756","modified":1728153841785},{"_id":"themes/hexo-theme-bamboo/source/js/utils/index.js","hash":"fcea598ed253006d79f78d34cc36fdc6649639f3","modified":1728153841762},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/changyan/layout.ejs","hash":"46192143a90303d8924b3d07d28df116bc833894","modified":1728153841276},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/changyan/script.ejs","hash":"c357b9052564e12754cf21a1cb1debd3bdfe1eac","modified":1728153841277},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/beaudar/script.ejs","hash":"58b914569fbc9d5bf706674c1ea4d7a83b5540d1","modified":1728153841274},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/giscus/layout.ejs","hash":"a17970930b1064def6f5ad5f67a1afd3ed3169a0","modified":1728153841280},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/giscus/script.ejs","hash":"69ee0d2750ff779f754c8ffe6a5c44960420e2b7","modified":1728153841282},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitalk/layout.ejs","hash":"8a4c57646ee0d4a4e94d568708fb85a8f9ac97e7","modified":1728153841284},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitalk/script.ejs","hash":"733947cad238d89c5a5694ecf19a83b1d5648ab9","modified":1728153841285},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitment/layout.ejs","hash":"353820d6d6aade09cd21b31585afa20485008083","modified":1728153841287},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/beaudar/layout.ejs","hash":"52b9a55b6e83bd9a10fc3f66a18be98e3965475b","modified":1728153841272},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitment/script.ejs","hash":"1e02cf43a347a612796aa188446605e213e0dd51","modified":1728153841288},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/livere/layout.ejs","hash":"f88b32604056721e658c25f775866a1519e714f2","modified":1728153841291},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/livere/script.ejs","hash":"f545bc19b874f684bc4369ef1c6bfc4427b13b6b","modified":1728153841293},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/utterance/layout.ejs","hash":"eab867c580f6184d068d5fcc545a763a2919eb16","modified":1728153841303},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/utterance/script.ejs","hash":"b8206894169b3e5ad1d38b448db5b9f1e4717987","modified":1728153841305},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/valine/script.ejs","hash":"c39459b0fb46bb1eb49823cc62375f04d3b4a48e","modified":1728153841309},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/twikoo/layout.ejs","hash":"bdfd72b519f3bd8f3f78fd631a8326cbd0b20a98","modified":1728153841297},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/twikoo/script.ejs","hash":"c09ef940a9d99d4e567e4891644241dd0ee40135","modified":1728153841299},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/waline/script.ejs","hash":"ddfc35b05d22d2ad0f5b41444ed47793546f4b9d","modified":1728153841315},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_1.styl","hash":"ac20f1e2c9337396d590ceae03f9845b382ad534","modified":1728153841601},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_2.styl","hash":"112c765730edc8d143b503b8407046ab8deb3835","modified":1728153841602},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/waline/layout.ejs","hash":"a82f1c7819cadca142b7f3436957ddce5adf7fa0","modified":1728153841313},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_3.styl","hash":"be27e1a9f2c0d78ab31f7a6b59341dc8c4393f88","modified":1728153841604},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_4.styl","hash":"8dacae32f9ed4460546a75d313388b1b2497e097","modified":1728153841605},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/valine/layout.ejs","hash":"453fa08c310cef7d00a12bb7cf448aef34c7728a","modified":1728153841307},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_5.styl","hash":"7e63625a1fc42f0403c3f933b9f642362f44ff46","modified":1728153841606},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_6.styl","hash":"8a33ff2ed45cb2539743fd12b8ea4fc0d3873b98","modified":1728153841607},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_1.styl","hash":"f7fc1257c6b402b1ddec85d45ac8e665580dc14d","modified":1728153841631},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_8.styl","hash":"1826bd092b9ea3a028d41cacc993927899406deb","modified":1728153841610},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_11.styl","hash":"f7b6a4ab283029f649a0ae2732fa6e7079ecc435","modified":1728153841634},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_10.styl","hash":"01bcf630c126f7fa273892245e6e6c59b654bf56","modified":1728153841633},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/preLoader/loader_7.styl","hash":"955a96e5829684f0021ef2ad6bdf42b928433ad1","modified":1728153841609},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_12.styl","hash":"27792c767fa345b0dbe735a681c87cf790e19a8b","modified":1728153841635},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_13.styl","hash":"a5015270d9d79fa2f4ed246939d48bf4c9c7f7f6","modified":1728153841636},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_15.styl","hash":"fd9b1e87dfaed5db7d9d7b9dc272a5669056c278","modified":1728153841638},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_14.styl","hash":"0ad1c7d9faaf46bc201d8c7c9b34e39ae7efec48","modified":1728153841637},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_2.styl","hash":"dbf766a7086bfb35a7fabc635edeb67a32d1828f","modified":1728153841639},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_3.styl","hash":"083991d97f004f1f657c7a7649bd7b319dee652e","modified":1728153841641},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_4.styl","hash":"ea0a0fbfb605d7d0592a06bb94e38f386830aa24","modified":1728153841642},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_5.styl","hash":"6fea986bd4c37188ce7da86b0839749ac188bd02","modified":1728153841643},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_6.styl","hash":"7f6b7d34933921dbabee0937053cb288fcad9647","modified":1728153841645},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_7.styl","hash":"d75280def0358da644945744da22f6a5f2abd745","modified":1728153841646},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_8.styl","hash":"4ce4323bc8a183533bbb1ab9ea2bf946350e5713","modified":1728153841648},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/coolBtn/coolBtn_9.styl","hash":"6cdaa72cab01a2ca483eb7092372bcfcb2dc9b25","modified":1728153841649},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.min.js","hash":"bc45d3586a21f7e364cd6efe58844932c00cf11c","modified":1728153841760},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1728153841741},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1728153841746},{"_id":"source/friends/index.md","hash":"c122d5536e1fc0b86f86ab1e8d49b9a59c6454d2","modified":1728321476351},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1728153841744},{"_id":"themes/hexo-theme-bamboo/source/js/jquery3.5.1.js","hash":"29fa5ad995e9ec866ece1d3d0b698fc556580eee","modified":1728153841717},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1728153841742},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.min.js","hash":"674fa0bd5973cc8124d6a711c725b119c025da0c","modified":1728153841754},{"_id":"themes/hexo-theme-bamboo/source/js/waline/waline.min.js","hash":"3a17de5f24e0437c3c681b15f147ceef3980736f","modified":1728153841780},{"_id":"themes/hexo-theme-bamboo/source/js/vue2.6.11.js","hash":"1159f02f3f7191a5cf4c109734d0268173fab96d","modified":1728153841776},{"_id":"themes/hexo-theme-bamboo/source/js/valine/index.js","hash":"d520897b1bd3788aacb672b5cd9ff7ab0c81fc80","modified":1728153841766},{"_id":"public/atom.xml","hash":"1bf4e740fbdcc8f822879a579a3d33065073f351","modified":1728317235361},{"_id":"public/search.xml","hash":"d442b6502480ceab34a21f997127767c9aaf811e","modified":1728317235361},{"_id":"public/about/index.html","hash":"72aef7de406c0fc677fb651de42876f82fb1a99f","modified":1728321487593},{"_id":"public/categories/index.html","hash":"bc224e94c0d513db9b80f7ead33551e38a531496","modified":1728317685138},{"_id":"public/tags/index.html","hash":"c9a06f53681c08a263e14cdb6db8cfabb8deee5d","modified":1728317685138},{"_id":"public/friends/index.html","hash":"5d995442a3bf6ce2e3219aa7d5e9294ba5ac1d55","modified":1728321487593},{"_id":"public/2022/05/22/ji-suan-ji/python/python-kuai-su-ru-men-yu-fa/index.html","hash":"b94570c4dd29eda78b203ba05c6e2ae084f3d662","modified":1728317685138},{"_id":"public/2022/05/21/ji-suan-ji/zhuo-mian-kai-fa/qss-kuai-su-ru-men-yu-fa/index.html","hash":"f39e7a51b382f4a766d0b60c67358dcac926e1d2","modified":1728317685138},{"_id":"public/2022/05/16/ji-suan-ji/qian-duan/react-kuai-su-ru-men/index.html","hash":"979215efb1c3148f8110a1e44e02f2201da66720","modified":1728317685138},{"_id":"public/2022/05/05/ji-suan-ji/qian-duan/typescript-kuai-su-ru-men-yu-fa/index.html","hash":"e0a73d0d840458a5275f2a40963ad74a13d7b8c5","modified":1728317685138},{"_id":"public/2022/04/27/ji-suan-ji/qian-duan/nodejs-kuai-su-ru-men/index.html","hash":"8d577eb79d15602fd9ec5cd2ede8e6f11fd04a08","modified":1728317685138},{"_id":"public/2022/04/26/ji-suan-ji/qian-duan/ajax-kuai-su-ru-men/index.html","hash":"9e63308ee26897f6831d2e422c0c82bd5ddd2b1d","modified":1728317685138},{"_id":"public/2022/04/26/ji-suan-ji/qian-duan/javascript-kuai-su-ru-men-yu-fa/index.html","hash":"709a5eab271acffffd20497cee3cf4db065ee8ed","modified":1728317685138},{"_id":"public/2022/04/19/ji-suan-ji/qian-duan/html5-kuai-su-ru-men-yu-fa/index.html","hash":"6b89d7d0802cbcc14dec7edcea926be20598304b","modified":1728317685138},{"_id":"public/2022/04/23/ji-suan-ji/qian-duan/css3-kuai-su-ru-men-yu-fa/index.html","hash":"bab764963e39d45fd12bea4b5b9da3daa8619d83","modified":1728317685138},{"_id":"public/2022/04/18/ji-suan-ji/ming-ling-xing-jin-du-tiao-de-shi-xian/index.html","hash":"a2bf1f30abbe9e6c938a382d49fcce94bcb22171","modified":1728317685138},{"_id":"public/2022/04/18/ying-yu/ying-yu-yu-fa/index.html","hash":"2908deae189cacc1ab7fe4697e4cba9178f33dea","modified":1728317685138},{"_id":"public/2022/04/18/shu-xue/latex-chang-yong-fu-hao/index.html","hash":"5c7206c8aa17671be83ebb6324ebb11cafb1af7e","modified":1728317685138},{"_id":"public/2022/04/18/ruan-jian/mathtype7-wu-xian-shi-yong/index.html","hash":"26745ad7280be7757ae40fad89d26b066e3e17a8","modified":1728317685138},{"_id":"public/2022/04/18/ji-suan-ji/hexo-bo-ke-jiao-cheng/index.html","hash":"7bcbb0755264ba66133be75498ba9cf267056033","modified":1728317685138},{"_id":"public/2022/04/18/ji-suan-ji/shu-mei-pai-jie-shou-mti-shu-ju/index.html","hash":"aa11781d435a7fd60f7933c02bafa5cd79b26bac","modified":1728317685138},{"_id":"public/categories/数学/index.html","hash":"18b485bf9c74540b1b6f1a5405cf1eb5b54b53fa","modified":1728317685138},{"_id":"public/categories/计算机/index.html","hash":"e3ce54fe36d053229924b9ffd66e1e28c6520a6e","modified":1728317685138},{"_id":"public/categories/计算机/page/2/index.html","hash":"ba941541388a1ae0600f2b7dc57da369d0834657","modified":1728317685138},{"_id":"public/categories/英语/index.html","hash":"7136991b5fde9d0107c613aa39e1d31176b80cda","modified":1728317685138},{"_id":"public/archives/2022/index.html","hash":"7d80875d6ac0cfb47b4daa7ffb9a50cf44c7ca1b","modified":1728317685138},{"_id":"public/archives/index.html","hash":"9e320afe712539669d2c70ec590e44c5af5afe90","modified":1728317685138},{"_id":"public/archives/2022/04/index.html","hash":"59c2b8137aba27a6e6a876c26198bed2f74bb551","modified":1728317685138},{"_id":"public/archives/2022/04/page/2/index.html","hash":"5f8c90df8cc0419e4de6e184583a73008fd0cd2f","modified":1728317685138},{"_id":"public/archives/2022/05/index.html","hash":"990b32f77a02df01e167f4be9e0b6d643c9a8b16","modified":1728317685138},{"_id":"public/index.html","hash":"86480f63d96b2152b4fddefdd9f3d8847b859aee","modified":1728321487593},{"_id":"public/archives/2022/page/2/index.html","hash":"4bfd6a41e0df23c2546ac7af285ba2a97685126b","modified":1728317685138},{"_id":"public/page/2/index.html","hash":"2a8dfaf3dc3048dc8405b14a99ee1f365b114145","modified":1728321487593},{"_id":"public/tags/LaTex/index.html","hash":"a94cdd79f8fb29009ce01eb6ce16976827953cf5","modified":1728317685138},{"_id":"public/tags/数学公式符号/index.html","hash":"37fba24d8336c9a6fa442e10d84e722e5409c8da","modified":1728317685138},{"_id":"public/tags/数学/index.html","hash":"950c394bcb832bbd1d952572f4be2774b1332b8a","modified":1728317685138},{"_id":"public/tags/基础学习/index.html","hash":"2bcc5f14b5aead3bf06442980b96a1304229edc5","modified":1728317685138},{"_id":"public/tags/英语/index.html","hash":"b703a3e21300d6ca6a4caa7eb6ba3fa7bf66a2b9","modified":1728317685138},{"_id":"public/tags/英语语法/index.html","hash":"6ecfd8633a83675fdcdb2a00ac356dedc76bf3b6","modified":1728317685138},{"_id":"public/tags/Hexo/index.html","hash":"c99f84efb4f917c8a4f94bb44fa4004c4d5952f0","modified":1728317685138},{"_id":"public/tags/博客/index.html","hash":"16db3a2d63ca2f895d01d4853aa7cf8965b3032c","modified":1728317685138},{"_id":"public/tags/前端/index.html","hash":"f67065d083bad8f9d4711f1b10c0f69a852644fb","modified":1728317685138},{"_id":"public/tags/编程语言/index.html","hash":"17eb1d180b72f5495d7e07018158d8da4cb194b4","modified":1728317685138},{"_id":"public/tags/matlab/index.html","hash":"83f34eb8e592aa753b6e06d2e17bf0f6d5cfd74b","modified":1728317685138},{"_id":"public/tags/shell/index.html","hash":"742c0ab62e5712a1e7336e41b42991e7a592cd3d","modified":1728317685138},{"_id":"public/tags/进度条/index.html","hash":"87f3ba585578cf499cede7ce97f198b8ccd35a33","modified":1728317685138},{"_id":"public/tags/软件破解/index.html","hash":"004eccf39b9dbda75ce33e210dd046a7d1776e3b","modified":1728317685138},{"_id":"public/tags/Linux/index.html","hash":"3ed9f6c7bc2f96da8351bfbaf55e14aac71bacf2","modified":1728317685138},{"_id":"public/tags/MathType/index.html","hash":"81b692e2ba3aff4c8d31d3460df7f06700625b7a","modified":1728317685138},{"_id":"public/tags/数学软件/index.html","hash":"6477dc7d99a182b75d8cdc232ec6686926f58294","modified":1728317685138},{"_id":"public/tags/树莓派/index.html","hash":"93d5d5e9ee26b143a0db602d38175c863b105c82","modified":1728317685138},{"_id":"public/tags/MTI/index.html","hash":"e6bf78eaf00cd88ca01860912755724eba807db6","modified":1728317685138},{"_id":"public/tags/ubuntu/index.html","hash":"e471dfecc807ff529185021db7963dec7f5c18c2","modified":1728317685138},{"_id":"public/tags/ros/index.html","hash":"809d4974ff7b5723677b0804f49a75d28487664d","modified":1728317685138},{"_id":"public/tags/Python/index.html","hash":"3595decf5e40f36b9bc39ea17b2190914becb1bd","modified":1728317685138},{"_id":"public/tags/编程语法/index.html","hash":"a4159dd8af229599130930b3b1462b693f43defe","modified":1728317685138},{"_id":"public/tags/Ajax/index.html","hash":"0f6bab50993ac402c9a60c4325025437cf4165d8","modified":1728317685138},{"_id":"public/tags/前后端通信/index.html","hash":"ce935ae01ae2e721ac8e3527203221be8a424460","modified":1728317685138},{"_id":"public/archives/page/2/index.html","hash":"ccd55e60a5c323b7415860cb21149972b5c85b3b","modified":1728317685138},{"_id":"public/tags/CSS3/index.html","hash":"7db8f0e1327b3d83cb856acf0509f98b24cb2537","modified":1728317685138},{"_id":"public/tags/Node-js/index.html","hash":"ddd3640a04aa4aa03060a20492e5dae0aaf4d7d9","modified":1728317685138},{"_id":"public/tags/后端/index.html","hash":"237eb3defd88314870b42e5c7b99220981c94f6a","modified":1728317685138},{"_id":"public/tags/HTML5/index.html","hash":"f6fde8dd1a7740aec5f3e9f17cd33d672d8b7b30","modified":1728317685138},{"_id":"public/tags/React/index.html","hash":"0c09f2bf5cc530fb8a5b55bb6bece1ac572ca094","modified":1728317685138},{"_id":"public/tags/JSX/index.html","hash":"6f58a7c9d9631738d12d96f7c388190b9f8423b4","modified":1728317685138},{"_id":"public/tags/TypeScript/index.html","hash":"3f57f2147dc88aee4cb3060548c3f73189746871","modified":1728317685138},{"_id":"public/tags/TSX/index.html","hash":"76f273affac7e0bc0deec98d2b976cf1c2876d9f","modified":1728317685138},{"_id":"public/tags/GUI开发/index.html","hash":"7ba08b6840adaaee79b85cb1fb455329925bd9b0","modified":1728317685138},{"_id":"public/tags/JavaScript/index.html","hash":"a4441cd66a13ac8324989a2cf8ed207b677509f4","modified":1728317685138},{"_id":"public/tags/QT6/index.html","hash":"a60e9dd3816dc1df2d24f6ceb52d5270e433e85b","modified":1728317685138},{"_id":"public/tags/跨平台桌面开发/index.html","hash":"b29ca4ce280f156e7a37eac013b3edd65fb88def","modified":1728317685138},{"_id":"public/tags/QSS/index.html","hash":"4d7b76ca36bf70c681d0397c8aa3b22943e26937","modified":1728317685138},{"_id":"public/medias/cursor/Horizontal.cur","hash":"c3c5e8485a67b7ab16079a96b53aff7ff52de756","modified":1728317235361},{"_id":"public/favicon.ico","hash":"801ff7b3f358b77a813787a97ef59148eec93fd8","modified":1728317235361},{"_id":"public/js/danmu/close.png","hash":"2c3ed4345f91dc1b74a57b6dcd1e1efa9e279dbb","modified":1728317235361},{"_id":"public/js/shareJs/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1728317235361},{"_id":"public/js/shareJs/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1728317235361},{"_id":"public/js/shareJs/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1728317235361},{"_id":"public/medias/logo.png","hash":"d08165f945567a08bd74d36b1241a0b8f1618536","modified":1728317235361},{"_id":"public/js/shareJs/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1728317235361},{"_id":"public/js/app.js","hash":"38e8d7ce69449ee7fc28db92f6be88ae26e708b2","modified":1728317235361},{"_id":"public/js/activate-power-mode.js","hash":"3d02584da9dd820d1d9a454c5a93a2c37a8e4e42","modified":1728317235361},{"_id":"public/js/goTop.js","hash":"5bc7779f0d672c503a68b1e091fb3195df7e9815","modified":1728317235361},{"_id":"public/js/local_search.js","hash":"475dc0727cb85c22f15f86701dd93c4bf449a438","modified":1728317235361},{"_id":"public/css/animate.min.css","hash":"8411c1c0418521c96d07bcca0d9dbce7e832ccc9","modified":1728317235361},{"_id":"public/js/jquery3.5.1.js","hash":"d2cc8d43ce1c854b1172e42b1209502ad563db83","modified":1728317235361},{"_id":"public/css/style.css","hash":"5e7b0a3e82ae0031185c24d744a3d4329c20813f","modified":1728317235361},{"_id":"public/js/wrapImage.js","hash":"d29b7b5f24b1cbf342187096ee47ec29b5146e7c","modified":1728317235361},{"_id":"public/js/ribbon.min.js","hash":"3c8e4d717ca107f3723def1795c8ed62a5f1a8d0","modified":1728317235361},{"_id":"public/js/aplayer/APlayer@1.10.1.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1728317235361},{"_id":"public/js/bubble/homeBubble.js","hash":"a8635136621c8c54c04462932192a94f314942cb","modified":1728317235361},{"_id":"public/js/clipboard/clipboard.min.js","hash":"6371ec0a8e242395c7d4d008d2b98e472c9dcc52","modified":1728317235361},{"_id":"public/js/danmu/barrager.css","hash":"3691efec6dd3d554b4a3dd20ef04836459f151a8","modified":1728317235361},{"_id":"public/js/bubble/bubble.js","hash":"40cbc57f98407216ba6dc412e2b75e18c036240f","modified":1728317235361},{"_id":"public/js/cursor/fireworks.js","hash":"6e1e9206549a6a1a4f5a8672a2dc5044a8f691bd","modified":1728317235361},{"_id":"public/js/cursor/explosion.min.js","hash":"ed2d0a5ad306a2745b7c8180b69e36b78d4b0698","modified":1728317235361},{"_id":"public/js/cursor/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1728317235361},{"_id":"public/js/cursor/text.js","hash":"a015017310e601f1e544cbc4b08c35b8e547c939","modified":1728317235361},{"_id":"public/js/danmu/jquery.barrager.js","hash":"305d6e93f3de102b5e1e9b1373821c849d8f54cb","modified":1728317235361},{"_id":"public/js/falling/snow.js","hash":"6f4ef88304f874ef8bb8ea54f79b5d97f5a8f2f6","modified":1728317235361},{"_id":"public/js/falling/sakura.js","hash":"ab41921e8f6ea1bedfcc348924574dc0caa20858","modified":1728317235361},{"_id":"public/js/getPhotoOnline/index.js","hash":"f513605485600561123ffae1a70a0eb35cd5c675","modified":1728317235361},{"_id":"public/js/vue2.6.11.js","hash":"e793aa33ef33150eaba3bc02b07455a231f053ad","modified":1728317235361},{"_id":"public/js/getSiteOnline/index.js","hash":"8b93e96331bbdcbee0deb33c9aeca6b2dceacb4b","modified":1728317235361},{"_id":"public/js/getTalkOnline/index.js","hash":"58d9601cfd851c83c2eadd4803698171cd2d8b08","modified":1728317235361},{"_id":"public/js/prism/prism-dark.min.css","hash":"a3f604a19e9a46f83a2fde49dfb45782748957ca","modified":1728317235361},{"_id":"public/js/pjax@0.2.8/index.js","hash":"c9b1e349203e558dbe43665353e88c6eafc7dbcd","modified":1728317235361},{"_id":"public/js/prism/prism-funky.min.css","hash":"0220f68ccda78c2b5d1109e58f3879674c93b587","modified":1728317235361},{"_id":"public/js/prism/prism-okaidia.min.css","hash":"50be6cc15d883ff3fa5d0885fed47241695a986c","modified":1728317235361},{"_id":"public/js/issues/index.js","hash":"e5f7b37f9dd8e966c7a63b8b6da27d53510eddeb","modified":1728317235361},{"_id":"public/js/prism/prism-solarizedlight.min.css","hash":"927b757cd8030d12953b5c0fa6eed5de15dda8ad","modified":1728317235361},{"_id":"public/js/prism/prism-twilight.min.css","hash":"ff4a6e3c4f1cb9bb59ec061656eacb750d238c15","modified":1728317235361},{"_id":"public/js/prism/prism-tomorrow.min.css","hash":"7b4247bc4d3b719afe5957779d0e5c8fb716c8ea","modified":1728317235361},{"_id":"public/js/prism/prism.min.css","hash":"aa405e2bcb571595c822a80f5482454c1536fa52","modified":1728317235361},{"_id":"public/js/prism/prism-line-numbers.css","hash":"3b64b50b73729de943ec894c1d6f19115fa81624","modified":1728317235361},{"_id":"public/js/shareJs/share.min.css","hash":"573c7dddb465efd5f5a9337bd50a1ed3f8e82cff","modified":1728317235361},{"_id":"public/js/shareJs/font.css","hash":"9d909397e4e94f696b7dd90a16481b50cf170362","modified":1728317235361},{"_id":"public/js/swiper/vue-awesome-swiper.js","hash":"b7a1ab21dfc58272009bfb5cb7ab87b79f5df573","modified":1728317235361},{"_id":"public/js/swiper/swiper.animate1.0.3.min.js","hash":"0e48f180ca2f18b787e4b7b6e55ee3b0c6067691","modified":1728317235361},{"_id":"public/js/swiper/swiper@5.4.1.min.css","hash":"de2263f82e7bf0778f31fd05c53000799f60701a","modified":1728317235361},{"_id":"public/js/tocbot/tocbot.css","hash":"45e469dffa7b9ebc03f99fd09fb97274cdc5e9b4","modified":1728317235361},{"_id":"public/js/tocbot/tocbot.min.js","hash":"bc45d3586a21f7e364cd6efe58844932c00cf11c","modified":1728317235361},{"_id":"public/js/vue-seamless-scroll/index.js","hash":"f2aaf3f9b1ab7362f7cc158e5360cb1d62a57172","modified":1728317235361},{"_id":"public/js/prism/prism-coy.min.css","hash":"fe1246de39c25eaa7ad1b0c997ee530dbdd39ad8","modified":1728317235361},{"_id":"public/js/vue-typed-js/index.js","hash":"0d80f25135de943ccdfdebec23275bd82712fae1","modified":1728317235361},{"_id":"public/js/shareJs/social-share.min.js","hash":"efdfa6b695ac6f0dd04cd8153d3e3a1a1edd90c2","modified":1728317235361},{"_id":"public/js/vue-typed-js/index.css","hash":"36a1d2f61d11ab328e349d6a523dd9dea2ec7ee1","modified":1728317235361},{"_id":"public/js/valine/index.js","hash":"8809117760e0a7ce8dcc3f14b6421a4d415284a6","modified":1728317235361},{"_id":"public/js/utils/index.js","hash":"54c66b0a396cc3743884cdb979e5c400218613ce","modified":1728317235361},{"_id":"public/js/swiper/swiper.min.js","hash":"a2fe3c0df9196597c283b2f6ffecc1d4d8702245","modified":1728317235361},{"_id":"public/js/waline/waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1728317235361}],"Category":[{"name":"数学","_id":"cm1z7gipa0004dwvx2duz409r"},{"name":"英语","_id":"cm1z7gipf000bdwvx527w6pgp"},{"name":"计算机","_id":"cm1z7gipi000gdwvx3pda2nqn"}],"Data":[],"Page":[{"title":"About Me","date":"2024-10-06T05:38:47.000Z","onlyTitle":true,"_content":"# 个人介绍\n\n博主: SilentPaladin | 性别: 男 | 邮箱: CumerZhang@Gmail.com\n\n## 我的书籍\n\n{% sitegroup %}\n    {% site Example, url=http://www.baidu.com, screenshot=https://pic4.zhimg.com/v2-7fcb0d73e1d90788ccf136e22ba7b1bd_r.jpg, avatar=https://pic4.zhimg.com/80/v2-45eb5749949e7f90a5c788f9bc5721ef_1440w.jpg, description=这是描述 %}\n{% endsitegroup %}\n\n## 我的社交账号\n\n<div style=\"display: flex;\">\n    {% btn center cool-2, Example, https://github.com, fa-solid fa-user %}\n</div>  \n\n## 我的技能\n\n<div style=\"display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 30px 30px;\n  grid-column-gap: 20px\">\n{% progress 70 danger Python %}\n{% progress 70 info C++ %}\n{% progress 70 success Java %}\n{% progress 70 warning C %}\n{% progress 70 primary C# %}\n{% progress 70 primary JavaScript %}\n{% progress 30 primary SQL %}\n{% progress 70 primary MATLAB %}\n{% progress 70 primary Rust %}\n{% progress 50 primary .NET %}\n{% progress 50 primary Qt %}\n{% progress 10 primary Django %}\n{% progress 50 primary NumPy %}\n{% progress 50 primary Pandas %}\n{% progress 50 primary PyTorch %}\n</div>\n\n## 其他\n\n{% linkgroup %}\n    {% link Example, http://www.baidu.com, https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp %}\n{% endlinkgroup %}\n\n## 我的游戏\n\n{% gallery %}\n    ![王者荣耀](https://pic2.zhimg.com/v2-abb2c12e9fbe8dda1993f7cd5d149159_b.jpg)\n{% endgallery %}\n\n## 我的相册\n\n{% swiper %}\n    ![Example](https://pic3.zhimg.com/80/v2-7cfc909ebe8d83683909846edd6b5232_1440w.webp \"http://www.baidu.com\")\n{% endswiper %}\n","source":"about/index.md","raw":"---\ntitle: \"About Me\"\ndate: 2024-10-06 13:38:47\nonlyTitle: true\n---\n# 个人介绍\n\n博主: SilentPaladin | 性别: 男 | 邮箱: CumerZhang@Gmail.com\n\n## 我的书籍\n\n{% sitegroup %}\n    {% site Example, url=http://www.baidu.com, screenshot=https://pic4.zhimg.com/v2-7fcb0d73e1d90788ccf136e22ba7b1bd_r.jpg, avatar=https://pic4.zhimg.com/80/v2-45eb5749949e7f90a5c788f9bc5721ef_1440w.jpg, description=这是描述 %}\n{% endsitegroup %}\n\n## 我的社交账号\n\n<div style=\"display: flex;\">\n    {% btn center cool-2, Example, https://github.com, fa-solid fa-user %}\n</div>  \n\n## 我的技能\n\n<div style=\"display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 30px 30px;\n  grid-column-gap: 20px\">\n{% progress 70 danger Python %}\n{% progress 70 info C++ %}\n{% progress 70 success Java %}\n{% progress 70 warning C %}\n{% progress 70 primary C# %}\n{% progress 70 primary JavaScript %}\n{% progress 30 primary SQL %}\n{% progress 70 primary MATLAB %}\n{% progress 70 primary Rust %}\n{% progress 50 primary .NET %}\n{% progress 50 primary Qt %}\n{% progress 10 primary Django %}\n{% progress 50 primary NumPy %}\n{% progress 50 primary Pandas %}\n{% progress 50 primary PyTorch %}\n</div>\n\n## 其他\n\n{% linkgroup %}\n    {% link Example, http://www.baidu.com, https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp %}\n{% endlinkgroup %}\n\n## 我的游戏\n\n{% gallery %}\n    ![王者荣耀](https://pic2.zhimg.com/v2-abb2c12e9fbe8dda1993f7cd5d149159_b.jpg)\n{% endgallery %}\n\n## 我的相册\n\n{% swiper %}\n    ![Example](https://pic3.zhimg.com/80/v2-7cfc909ebe8d83683909846edd6b5232_1440w.webp \"http://www.baidu.com\")\n{% endswiper %}\n","updated":"2024-10-07T16:24:10.292Z","path":"about/index.html","_id":"cm1z7gioz0000dwvx9x032g54","comments":1,"layout":"page","content":"<h1 id=\"个人介绍\"><a href=\"#个人介绍\" class=\"headerlink\" title=\"个人介绍\"></a>个人介绍</h1><p>博主: SilentPaladin | 性别: 男 | 邮箱: <a href=\"mailto:&#x43;&#x75;&#109;&#x65;&#x72;&#90;&#x68;&#97;&#110;&#x67;&#x40;&#71;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#x6d;\">&#x43;&#x75;&#109;&#x65;&#x72;&#90;&#x68;&#97;&#110;&#x67;&#x40;&#71;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#x6d;</a></p>\n<h2 id=\"我的书籍\"><a href=\"#我的书籍\" class=\"headerlink\" title=\"我的书籍\"></a>我的书籍</h2><div class=\"site-card-group\"><a class=\"site-card\" href=\"http://www.baidu.com\"><div class=\"img\"><img src=\"https://pic4.zhimg.com/v2-7fcb0d73e1d90788ccf136e22ba7b1bd_r.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://pic4.zhimg.com/v2-7fcb0d73e1d90788ccf136e22ba7b1bd_r.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"info\"><img src=\"https://pic4.zhimg.com/80/v2-45eb5749949e7f90a5c788f9bc5721ef_1440w.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://pic4.zhimg.com/80/v2-45eb5749949e7f90a5c788f9bc5721ef_1440w.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/><span class=\"title\">Example</span><span class=\"desc\">这是描述</span></div></a></div>\n\n<h2 id=\"我的社交账号\"><a href=\"#我的社交账号\" class=\"headerlink\" title=\"我的社交账号\"></a>我的社交账号</h2><div style=\"display: flex;\">\n    <span class='btn center cool-2'><a class=\"button\" href='https://github.com' title='Example'><i class='fa-solid fa-user'></i>Example</a></span>\n</div>  \n\n<h2 id=\"我的技能\"><a href=\"#我的技能\" class=\"headerlink\" title=\"我的技能\"></a>我的技能</h2><div style=\"display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 30px 30px;\n  grid-column-gap: 20px\">\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-danger\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Python</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-info\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>C++</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-success\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Java</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-warning\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>C</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>C#</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>JavaScript</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 30%\" aria-valuenow=\"30\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>SQL</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>MATLAB</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Rust</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>.NET</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Qt</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 10%\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Django</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>NumPy</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Pandas</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>PyTorch</p></div></div>\n</div>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"Example\" href=\"http://www.baidu.com\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp)\"></span><div class=\"left\"><img src=\"https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp\" class=\"lazyload placeholder\" data-srcset=\"https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Example</p><p class=\"url\">http://www.baidu.com</p></div></a></div></div>\n\n<h2 id=\"我的游戏\"><a href=\"#我的游戏\" class=\"headerlink\" title=\"我的游戏\"></a>我的游戏</h2><div class=\"gallery \">\n              <p><img src=\"https://pic2.zhimg.com/v2-abb2c12e9fbe8dda1993f7cd5d149159_b.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://pic2.zhimg.com/v2-abb2c12e9fbe8dda1993f7cd5d149159_b.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"王者荣耀\"></p>\n            </div>\n\n<h2 id=\"我的相册\"><a href=\"#我的相册\" class=\"headerlink\" title=\"我的相册\"></a>我的相册</h2><div class=\"tag-plugin post-swiper-container\"><div class=\"swiper-wrapper\"><div class=\"swiper-slide\"><a class=\"swiper-slide-href_tag\" href=\"javascript:;\"><p class=\"ani animated swiper-slide-desc_tag\" swiper-animate-effect=\"fadeInDown\">Example</p><img no-lazy class=\"swiper-slide-img\" src=\"https://pic3.zhimg.com/80/v2-7cfc909ebe8d83683909846edd6b5232_1440w.webp\"></a></div></div><div class=\"swiper-pagination\"></div><div class=\"swiper-button-prev blur\"></div><div class=\"swiper-button-next blur\"></div></div>\n","excerpt":"","more":"<h1 id=\"个人介绍\"><a href=\"#个人介绍\" class=\"headerlink\" title=\"个人介绍\"></a>个人介绍</h1><p>博主: SilentPaladin | 性别: 男 | 邮箱: <a href=\"mailto:&#x43;&#x75;&#109;&#x65;&#x72;&#90;&#x68;&#97;&#110;&#x67;&#x40;&#71;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#x6d;\">&#x43;&#x75;&#109;&#x65;&#x72;&#90;&#x68;&#97;&#110;&#x67;&#x40;&#71;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#x6d;</a></p>\n<h2 id=\"我的书籍\"><a href=\"#我的书籍\" class=\"headerlink\" title=\"我的书籍\"></a>我的书籍</h2><div class=\"site-card-group\"><a class=\"site-card\" href=\"http://www.baidu.com\"><div class=\"img\"><img src=\"https://pic4.zhimg.com/v2-7fcb0d73e1d90788ccf136e22ba7b1bd_r.jpg\"/></div><div class=\"info\"><img src=\"https://pic4.zhimg.com/80/v2-45eb5749949e7f90a5c788f9bc5721ef_1440w.jpg\"/><span class=\"title\">Example</span><span class=\"desc\">这是描述</span></div></a></div>\n\n<h2 id=\"我的社交账号\"><a href=\"#我的社交账号\" class=\"headerlink\" title=\"我的社交账号\"></a>我的社交账号</h2><div style=\"display: flex;\">\n    <span class='btn center cool-2'><a class=\"button\" href='https://github.com' title='Example'><i class='fa-solid fa-user'></i>Example</a></span>\n</div>  \n\n<h2 id=\"我的技能\"><a href=\"#我的技能\" class=\"headerlink\" title=\"我的技能\"></a>我的技能</h2><div style=\"display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 30px 30px;\n  grid-column-gap: 20px\">\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-danger\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Python</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-info\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>C++</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-success\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Java</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-warning\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>C</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>C#</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>JavaScript</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 30%\" aria-valuenow=\"30\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>SQL</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>MATLAB</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 70%\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Rust</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>.NET</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Qt</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 10%\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Django</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>NumPy</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>Pandas</p></div></div>\n<div class=\"progress\"><div class=\"progress-bar-animated progress-bar progress-bar-striped bg-primary\"  style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"><p>PyTorch</p></div></div>\n</div>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"Example\" href=\"http://www.baidu.com\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp)\"></span><div class=\"left\"><img src=\"https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp\"/></div><div class=\"right\"><p class=\"text\">Example</p><p class=\"url\">http://www.baidu.com</p></div></a></div></div>\n\n<h2 id=\"我的游戏\"><a href=\"#我的游戏\" class=\"headerlink\" title=\"我的游戏\"></a>我的游戏</h2><div class=\"gallery \">\n              <p><img src=\"https://pic2.zhimg.com/v2-abb2c12e9fbe8dda1993f7cd5d149159_b.jpg\" alt=\"王者荣耀\"></p>\n            </div>\n\n<h2 id=\"我的相册\"><a href=\"#我的相册\" class=\"headerlink\" title=\"我的相册\"></a>我的相册</h2><div class=\"tag-plugin post-swiper-container\"><div class=\"swiper-wrapper\"><div class=\"swiper-slide\"><a class=\"swiper-slide-href_tag\" href=\"javascript:;\"><p class=\"ani animated swiper-slide-desc_tag\" swiper-animate-effect=\"fadeInDown\">Example</p><img no-lazy class=\"swiper-slide-img\" src=\"https://pic3.zhimg.com/80/v2-7cfc909ebe8d83683909846edd6b5232_1440w.webp\"></a></div></div><div class=\"swiper-pagination\"></div><div class=\"swiper-button-prev blur\"></div><div class=\"swiper-button-next blur\"></div></div>\n"},{"title":"categories","date":"2024-10-06T02:43:58.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-10-06 10:43:58\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2024-10-06T02:45:01.124Z","path":"categories/index.html","comments":1,"_id":"cm1z7gip70002dwvx623s49e8","content":"","excerpt":"","more":""},{"title":"tags","date":"2024-10-06T02:45:19.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-10-06 10:45:19\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2024-10-06T02:48:48.217Z","path":"tags/index.html","comments":1,"_id":"cm1z7gipb0006dwvx4fmqflwd","content":"","excerpt":"","more":""},{"title":"friends","date":"2024-10-06T05:37:57.000Z","_content":"\n## 资源\n{% linkgroup %}\n    {% link 百度翻译-200种语言互译、沟通全世界！, https://fanyi.baidu.com/, https://fanyi.baidu.com/favicon.ico %}\n    {% link 谷歌学术镜像_Google学术搜索导航, http://ac.scmor.com/, http://ac.scmor.com/favicon.ico %}\n    {% link The Best IP Address, Email and Networking Tools - IPAddress.com, https://www.ipaddress.com/, https://www.ipaddress.com/favicon.ico %}\n    {% link WWW.ALLDATASHEETCN.COM - IC搜索-提供Datasheet, IC数据表, datasheet资料表, ic资料表, 电子元器件手册, 电子元件手册 等 资料下载中心, 为电子元件和半导体等的供应商。, https://www.alldatasheetcn.com/, https://www.alldatasheetcn.com/favicon.ico %}\n    {% link 无, https://ssrshare.github.io/, https://ssrshare.github.io/favicon.ico %}\n    {% link IPChecker检查IP是否被封的利器 - VPS234主机测评, https://www.vps234.com/ipchecker/, https://www.vps234.com/favicon.ico %}\n    {% link Human Benchmark, https://humanbenchmark.com/, https://humanbenchmark.com/favicon.ico %}\n    {% link 国家中小学智慧教育平台, https://www.zxx.edu.cn/, https://www.zxx.edu.cn/favicon.ico %}\n    {% link SSD VPS服务器，云服务器和云主机的vultr - vultr.com, https://www.vultr.com/, https://www.vultr.com/favicon.ico %}\n    {% link 羽兔网-年轻人都在用的自学设计平台, https://www.yutu.cn/, https://www.yutu.cn/favicon.ico %}\n    {% link SCI-Hub论文下载可用网址链接（实时更新） - YoviSun工具集, https://tool.yovisun.com/scihub/, https://tool.yovisun.com/favicon.ico %}\n    {% link 思羽布丁, https://www.mfpud.com/, https://www.mfpud.com/favicon.ico %}\n    {% link 首页 - 合同示范文本库 - 国家市场监督管理总局, https://cont.12315.cn/, https://cont.12315.cn/favicon.ico %}\n    {% link Free Stock Photos, Royalty Free Stock Images & Copyright Free Pictures · Pexels, https://www.pexels.com/, https://www.pexels.com/favicon.ico %}\n    {% link 我要自学网-视频教程|免费教程|自学电脑|3D教程|平面教程|影视动画教程|办公教程|机械设计教程|网站设计教程-我要自学网, https://www.51zxw.net/, https://www.51zxw.net/favicon.ico %}\n    {% link 爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载, https://www.aigei.com/, https://www.aigei.com/favicon.ico %}\n    {% link 美食天下_原创菜谱与美食生活社区，我所有的朋友都是吃货！, https://www.meishichina.com/, https://www.meishichina.com/favicon.ico %}\n    {% link 【全球液晶屏交易中心 - 屏库】, https://www.panelook.cn/index_cn.php, https://www.panelook.cn/favicon.ico %}\n    {% link 苹果系统之家 - mac软件｜macOS镜像｜macOS教程｜黑苹果教程软件分享, https://macoshome.com/, https://macoshome.com/favicon.ico %}\n    {% link 在线LaTeX公式编辑器-编辑器, https://www.latexlive.com/home, https://www.latexlive.com/favicon.ico %}\n    {% link iCloud, https://www.icloud.com.cn/, https://www.icloud.com.cn/favicon.ico %}\n    {% link 经纬度查询 - 坐标拾取系统, https://jingweidu.bmcx.com/, https://jingweidu.bmcx.com/favicon.ico %}\n    {% link Claude - Sleepknight - Slack, https://app.slack.com/client/T057M6YAJ11/D057MB6N010?redir=%2Foauth%3Fclient_id%3D4656224793073.4662891757348%26scope%3Dapp_mentions%253Aread%252Cchannels%253Ahistory%252Cchannels%253Aread%252Cchat%253Awrite%252Ccommands%252Cfiles%253Awrite%252Cgroups%253Ahistory%252Cgroups%253Aread%252Cim%253Ahistory%252Cim%253Aread%252Cmpim%253Ahistory%252Cmpim%253Aread%252Cteam%253Aread%252Cusers%253Aread%26user_scope%3D%26redirect_uri%3D%26state%3DeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnN0YWxsT3B0aW9ucyI6eyJzY29wZXMiOlsiYXBwX21lbnRpb25zOnJlYWQiLCJjaGFubmVsczpoaXN0b3J5IiwiY2hhbm5lbHM6cmVhZCIsImNoYXQ6d3JpdGUiLCJjb21tYW5kcyIsImZpbGVzOndyaXRlIiwiZ3JvdXBzOmhpc3RvcnkiLCJncm91cHM6cmVhZCIsImltOmhpc3RvcnkiLCJpbTpyZWFkIiwibXBpbTpoaXN0b3J5IiwibXBpbTpyZWFkIiwidGVhbTpyZWFkIiwidXNlcnM6cmVhZCJdfSwibm93IjoiMjAyMy0wNS0xM1QwNTo0NDowOC43NjlaIiwicmFuZG9tIjo0Njg5NjEsImlhdCI6MTY4Mzk1NjY0OH0.srdE_wLE4beuhd1ev46tvgw3NlKQUTy4VJ2nvl0gS9s%26granular_bot_scope%3D1%26single_channel%3D0%26install_redirect%3D%26tracked%3D1%26team%3D, https://app.slack.com/favicon.ico %}\n    {% link 字体天下-提供各类字体的免费下载和在线预览服务, https://www.fonts.net.cn/, https://www.fonts.net.cn/favicon.ico %}\n    {% link 域名购买网站, https://www.namesilo.com/account/, https://www.namesilo.com/favicon.ico %}\n    {% link 来此加密 - Let's Encrypt 在线免费申请SSL证书, https://letsencrypt.osfipin.com/, https://letsencrypt.osfipin.com/favicon.ico %}\n    {% link ClouDNS: 域名设置 (cumerzhang.top), https://www.cloudns.net/records/domain/5095818/, https://www.cloudns.net/favicon.ico %}\n    {% link 中国计算机技术职业资格网, https://www.ruankao.org.cn/, https://www.ruankao.org.cn/favicon.ico %}\n    {% link 攀拓计算机能力测评 - 程序设计, https://www.patest.cn/home, https://www.patest.cn/favicon.ico %}\n    {% link Cheap Domain Names & Web Hosting Starting at $0.99! | NameSilo, https://www.namesilo.com/?rid=076c694cr, https://www.namesilo.com/favicon.ico %}\n    {% link 美国地址生成器 - 美国身份生成器 - 美国信用卡生成器, https://www.meiguodizhi.com/, https://www.meiguodizhi.com/favicon.ico %}\n    {% link 5G | ShareTechnote, http://www.sharetechnote.com/html/5G/Handbook_5G_Index.html, http://www.sharetechnote.com/favicon.ico %}\n    {% link TOP 網站排名：11月 2023 訪問量最大的網站｜Similarweb, https://www.similarweb.com/zh-tw/top-websites/, https://www.similarweb.com/favicon.ico %}\n    {% link 下载 | Office Tool Plus 官方网站, https://otp.landian.vip/zh-cn/download.html, https://otp.landian.vip/favicon.ico %}\n    {% link 浙江省公共图书馆资源服务门户, http://zjisa.zjlib.cn//home/zy_home.jsp?libCode=zjlib&libCode1=null&elecLibId=&elecAZ=&elec_re_type=hot_type&elec_change_background=null, http://zjisa.zjlib.cn/favicon.ico %}\n    {% link 迪威模型-海量3D模型下载-威海联讯信息技术有限公司, http://www.3dwhere.com/, http://www.3dwhere.com/favicon.ico %}\n    {% link Civitai | Stable Diffusion models, embeddings, hypernetworks and more, https://civitai.com/, https://civitai.com/favicon.ico %}\n    {% link 3d打印模型 stl文件素材 免费下载 - 爱给网, https://www.aigei.com/3d/print/?wd=3d%E6%89%93%E5%8D%B0%E7%B4%A0%E6%9D%90%E5%BA%93&bd_vid=8258425428836347346, https://www.aigei.com/favicon.ico %}\n    {% link 3D打印资源库(3dzyk) - 专业的3D打印垂直平台 | 媒体_资源_教育, https://www.3dzyk.cn/, https://www.3dzyk.cn/favicon.ico %}\n    {% link Nodecafe - ComfyUI Custom Nodes Library and Wiki, https://www.nodecafe.org/, https://www.nodecafe.org/favicon.ico %}\n    {% link AutoDL算力云 | 弹性、好用、省钱。租GPU就上AutoDL, https://www.autodl.com/console/homepage/personal, https://www.autodl.com/favicon.ico %}\n    {% link 色輪、調色盤產生器 | Adobe Color, https://color.adobe.com/zh/create/color-wheel, https://color.adobe.com/favicon.ico %}\n    {% link Google Fonts | 谷歌字体中文版 | GoogleFonts, https://googlefonts.cn/, https://googlefonts.cn/favicon.ico %}\n    {% link Introduction | NextUI - Beautiful, fast and modern React UI Library, https://nextui.org/docs/components/avatar, https://nextui.org/favicon.ico %}\n    {% link 🏡 Home | Open WebUI, https://docs.openwebui.com/, https://docs.openwebui.com/favicon.ico %}\n    {% link Earthworm, https://earthworm.cuixueshe.com/, https://earthworm.cuixueshe.com/favicon.ico %}\n    {% link 语文 · 汉字字帖 | Z2H字帖, https://paper.z2h.cn/han, https://paper.z2h.cn/favicon.ico %}\n    {% link 绿软小站 - 分享绿色软件、免费软件、最新资讯！, https://www.gndown.com/, https://www.gndown.com/favicon.ico %}\n    {% link Luvvoice：免费在线将文本转换为语音，无字数限制, https://luvvoice.com/zh/, https://luvvoice.com/favicon.ico %}\n    {% link 中国国家图书馆 · 中国国家数字图书馆 · 国家典籍博物馆, https://www.nlc.cn/web/index.shtml, https://www.nlc.cn/favicon.ico %}\n    {% link Reference – Typst Documentation, https://typst.app/docs/reference/, https://typst.app/favicon.ico %}\n    {% link Image Upload - SM.MS - Simple Free Image Hosting, https://smms.app/, https://smms.app/favicon.ico %}\n{% endlinkgroup %}\n \n## 影音\n{% linkgroup %}\n    {% link 哔哩哔哩 (゜-゜)つロ 干杯~-bilibili, https://www.bilibili.com/, https://www.bilibili.com/favicon.ico %}\n    {% link D站_五弹幕_干净の弹幕视频网_dilili,发射(。ﾟωﾟ)ﾉ\"！, https://www.5dm.link/, https://www.5dm.link/favicon.ico %}\n    {% link AGE动漫 - 在线动漫观看, https://www.agedm.org/, https://www.agedm.org/favicon.ico %}\n    {% link 樱花动漫 - 专注二次元ACG动漫BT迅雷下载, https://yinghuadongman.me/, https://yinghuadongman.me/favicon.ico %}\n    {% link 风车动漫－专注动漫的门户网站, https://www.92wuc.com/, https://www.92wuc.com/favicon.ico %}\n    {% link 恭喜，访问嘻嘻成功！, http://xixidm.com/, http://xixidm.com/favicon.ico %}\n    {% link 阳光电影_免费电影_迅雷电影下载-第一电影天堂, https://www.ygdy8.net/, https://www.ygdy8.net/favicon.ico %}\n    {% link YouTube, https://www.youtube.com/, https://www.youtube.com/favicon.ico %}\n    {% link Facebook, https://www.facebook.com/profile.php?id=61554129792966, https://www.facebook.com/favicon.ico %}\n    {% link 主页 / X, https://twitter.com/home, https://twitter.com/favicon.ico %}\n    {% link pixiv, https://www.pixiv.net/, https://www.pixiv.net/favicon.ico %}\n    {% link The Free Software Media System | Jellyfin, https://jellyfin.org/, https://jellyfin.org/favicon.ico %}\n    {% link 个人中心 - 爱合租, https://www.ihezu.com.cn/mine, https://www.ihezu.com.cn/favicon.ico %}\n    {% link MusicBrainz Picard, https://picard.musicbrainz.org/, https://picard.musicbrainz.org/favicon.ico %}\n    {% link 动漫GIF-在Gifburg上搜索和下载GIF, https://gifburg.com/cn/gifs/anime/, https://gifburg.com/favicon.ico %}\n    {% link Watchtving | 人人看美剧，美剧资讯网！, https://www.watchtving.com/, https://www.watchtving.com/favicon.ico %}\n    {% link 集知盒子 - 有态度、有内涵、有价值, https://www.jizhihezi.com/, https://www.jizhihezi.com/favicon.ico %}\n    {% link 影视导航 - 免费电影网站导航, https://ys.urlsdh.com/, https://ys.urlsdh.com/favicon.ico %}\n    {% link 品云机场导航 | 专业科学上网导航, https://52.mk/, https://52.mk/favicon.ico %}\n    {% link BT种子 | 磁力搜索神器, https://cilishenqi.cc/sitetag/bt-torrent, https://cilishenqi.cc/favicon.ico %}\n    {% link 磁力搜索 | 工具达人, https://toolsdar.cn/sitetag/%E7%A3%81%E5%8A%9B%E6%90%9C%E7%B4%A2, https://toolsdar.cn/favicon.ico %}\n    {% link 我的个人资料 — The Movie Database (TMDB), https://www.themoviedb.org/u/SilentPaladin, https://www.themoviedb.org/favicon.ico %}\n    {% link 人人电影网,百度云盘,阿里网盘下载, https://www.rrdynb.com/index.html, https://www.rrdynb.com/favicon.ico %}\n    {% link 七味 - 七味网, https://www.pkmkv.com/, https://www.pkmkv.com/favicon.ico %}\n    {% link 无版权图片网站导航 - 免费高清可商用图片网址大全, https://www.amz123.com/tuku, https://www.amz123.com/favicon.ico %}\n    {% link STC-SPADES, https://stc-spades.com/user, https://stc-spades.com/favicon.ico %}\n    {% link 放心云, https://speed17.net/, https://speed17.net/favicon.ico %}\n    {% link 用户中心 - prprCloud, https://prpr.96110.cn.com/clientarea.php?action=productdetails&id=136414, https://prpr.96110.cn.com/favicon.ico %}\n    {% link 趣作图—海量图库_电商素材_高清图片, https://pickwant.com/home, https://pickwant.com/favicon.ico %}\n    {% link Freesound, https://freesound.org/, https://freesound.org/favicon.ico %}\n    {% link 適合IPTV的免費EPG源 | 免費電視節目表, https://epg.pw/xmltv.html?lang=zh-hant, https://epg.pw/favicon.ico %}\n{% endlinkgroup %}\n \n## 游戏\n{% linkgroup %}\n    {% link SWITCH游戏 | 上游世界, https://www.vgter.com/archives/category/switch, https://www.vgter.com/favicon.ico %}\n    {% link Screep 中文教程目录 - 简书, https://www.jianshu.com/p/5431cb7f42d3, https://www.jianshu.com/favicon.ico %}\n    {% link 总览 | Screeps 中文文档, https://screeps-cn.github.io/index.html, https://screeps-cn.github.io/favicon.ico %}\n    {% link Introduction - Screeps Typescript Starter, https://screepers.gitbook.io/screeps-typescript-starter/, https://screepers.gitbook.io/favicon.ico %}\n    {% link Nexus mods and community, https://www.nexusmods.com/, https://www.nexusmods.com/favicon.ico %}\n    {% link MC百科|最大的Minecraft中文MOD百科, https://www.mcmod.cn/, https://www.mcmod.cn/favicon.ico %}\n    {% link https://www.ppsspp.org, https://www.ppsspp.org/, https://www.ppsspp.org/favicon.ico %}\n    {% link 围棋-棋力自测, https://www.weiqi.net/, https://www.weiqi.net/favicon.ico %}\n    {% link KataGo Distributed Training, https://katagotraining.org/, https://katagotraining.org/favicon.ico %}\n    {% link SteamDB, https://steamdb.info/, https://steamdb.info/favicon.ico %}\n    {% link 欢迎来到 Steam, https://store.steampowered.com/, https://store.steampowered.com/favicon.ico %}\n    {% link Electronic Arts 首頁 - EA 官方網站, https://www.ea.com/zh-tw, https://www.ea.com/favicon.ico %}\n    {% link 游戏 - Ubisoft Connect, https://zh-cn.ubisoft.com/ubisoftconnect, https://zh-cn.ubisoft.com/favicon.ico %}\n    {% link 《英雄聯盟》, https://www.leagueoflegends.com/zh-tw/?_gl=1*dz7cx9*_ga*MTA3NDI3MDUzNy4xNzEzNjA0OTgx*_ga_FXBJE5DEDD*MTcxNjAyODExOS4yLjEuMTcxNjAyODMwNi4wLjAuMA.., https://www.leagueoflegends.com/favicon.ico %}\n    {% link Epic游戏商城 | 下载畅玩 PC 平台游戏、模组、DLC 和更多 – Epic Games, https://store.epicgames.com/zh-CN/, https://store.epicgames.com/favicon.ico %}\n    {% link 植僵工具箱, https://pvz.tools/, https://pvz.tools/favicon.ico %}\n    {% link 浏览所有支持的游戏 | WeMod, https://www.wemod.com/zh/cheats, https://www.wemod.com/favicon.ico %}\n    {% link psp游戏排行榜-psp游戏大全-k73游戏之家, http://www.k73.com/pspdown/, http://www.k73.com/favicon.ico %}\n    {% link 娱乐力量全开！——YGO Game Online, http://ygopro.ysepan.com/, http://ygopro.ysepan.com/favicon.ico %}\n    {% link 仪表盘 - LittleSkin, https://littleskin.cn/user, https://littleskin.cn/favicon.ico %}\n    {% link Switch520, https://www.gamer520.com/, https://www.gamer520.com/favicon.ico %}\n    {% link CumerZhang's Steam profile - Exophase.com, https://www.exophase.com/steam/user/76561198345489610/, https://www.exophase.com/favicon.ico %}\n    {% link RuTracker.org, https://rutracker.org/forum/index.php, https://rutracker.org/favicon.ico %}\n    {% link MDPro3, https://flowus.cn/share/9a00b49d-3bbb-4d4e-a28b-35018c9a14db?code=CCGLRX, https://flowus.cn/favicon.ico %}\n    {% link What's new | Virt-A-Mate Hub, https://clouddedicatedserver.virtamate.com/whats-new/, https://clouddedicatedserver.virtamate.com/favicon.ico %}\n    {% link Gomoku AI protocol, https://plastovicka.github.io/protocl2en.htm, https://plastovicka.github.io/favicon.ico %}\n    {% link 101围棋网, https://www.101weiqi.com/, https://www.101weiqi.com/favicon.ico %}\n    {% link RenjuClass五子棋课程在线学习, https://ku10.com/, https://ku10.com/favicon.ico %}\n    {% link 五林五子棋 - 专业的五子棋比赛和学习平台, https://renjuworld.net/renju/, https://renjuworld.net/favicon.ico %}\n{% endlinkgroup %}\n \n## 代码\n{% linkgroup %}\n    {% link HelloGitHub, https://hellogithub.com/, https://hellogithub.com/favicon.ico %}\n    {% link GitHub, https://github.com/, https://github.com/favicon.ico %}\n    {% link Introduction - OpenAI API, https://platform.openai.com/docs/introduction, https://platform.openai.com/favicon.ico %}\n    {% link Vcpkg Ports, https://vcpkg.roundtrip.dev/, https://vcpkg.roundtrip.dev/favicon.ico %}\n    {% link Dashboard - WakaTime, https://wakatime.com/dashboard, https://wakatime.com/favicon.ico %}\n    {% link C++中文 - API参考文档, https://www.apiref.com/cpp-zh/index.html, https://www.apiref.com/favicon.ico %}\n    {% link Hugging Face – The AI community building the future., https://huggingface.co/, https://huggingface.co/favicon.ico %}\n    {% link Docker Hub, https://hub.docker.com/, https://hub.docker.com/favicon.ico %}\n    {% link Linux命令大全(手册) – 真正好用的Linux命令在线查询网站, https://www.linuxcool.com/, https://www.linuxcool.com/favicon.ico %}\n    {% link 吾爱破解 - LCG - LSG|安卓破解|病毒分析|www.52pojie.cn, https://www.52pojie.cn/, https://www.52pojie.cn/favicon.ico %}\n    {% link SSH工具 客户端, http://www.hostbuf.com/, http://www.hostbuf.com/favicon.ico %}\n    {% link JFrog ConanCenter - The Central Repository for C / C++ packages, https://conan.io/center/, https://conan.io/favicon.ico %}\n    {% link FreeRTOS - Market leading RTOS (Real Time Operating System) for embedded systems with Internet of Things extensions, https://freertos.org/, https://freertos.org/favicon.ico %}\n    {% link Projects - Home, https://dev.azure.com/CumerZhang, https://dev.azure.com/favicon.ico %}\n    {% link Index of /archive/qt, http://download.qt.io/archive/qt/, http://download.qt.io/favicon.ico %}\n    {% link Learn Git Branching, https://learngitbranching.js.org/?locale=zh_CN, https://learngitbranching.js.org/favicon.ico %}\n    {% link ROS2入门教程 | 古月居, https://www.guyuehome.com/category/column/ros2-tutorials, https://www.guyuehome.com/favicon.ico %}\n    {% link Online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript, https://regex101.com/, https://regex101.com/favicon.ico %}\n    {% link 我的工作台 - 码云 Gitee.com, https://gitee.com/, https://gitee.com/favicon.ico %}\n    {% link 项目 · 仪表板 · GitLab, https://gitlab.com/, https://gitlab.com/favicon.ico %}\n    {% link 堆栈溢出-开发人员学习，共享和建立职业的地方, https://stackoverflow.com/, https://stackoverflow.com/favicon.ico %}\n    {% link 力扣（LeetCode）官网 - 全球极客挚爱的技术成长平台, https://leetcode.cn/, https://leetcode.cn/favicon.ico %}\n    {% link Team overview | Netlify, https://app.netlify.com/teams/cumerzhang/overview, https://app.netlify.com/favicon.ico %}\n    {% link 电气罐头 ⚡️, https://tech.biko.pub/tool#/rpi-apt-sources, https://tech.biko.pub/favicon.ico %}\n    {% link 概览 | NoneBot, https://nb2.baka.icu/docs/, https://nb2.baka.icu/favicon.ico %}\n    {% link 主页 - MasterGo, https://mastergo.com/files/home, https://mastergo.com/favicon.ico %}\n    {% link React, https://react.docschina.org/, https://react.docschina.org/favicon.ico %}\n    {% link Compare, Download & Develop Open Source & Business Software - SourceForge, https://sourceforge.net/, https://sourceforge.net/favicon.ico %}\n    {% link Pinecone Console, https://app.pinecone.io/organizations/-NT05T8Axq4fcVukaBgJ/projects/asia-southeast1-gcp:850cb17/keys, https://app.pinecone.io/favicon.ico %}\n    {% link 中文文档 - Tailwind CSS 中文文档, https://www.tailwindcss.cn/docs, https://www.tailwindcss.cn/favicon.ico %}\n    {% link The DevSecOps Platform | GitLab, https://about.gitlab.com/, https://about.gitlab.com/favicon.ico %}\n    {% link 模型库首页 · 魔搭社区, https://modelscope.cn/models, https://modelscope.cn/favicon.ico %}\n    {% link GitClone, https://gitclone.com/, https://gitclone.com/favicon.ico %}\n    {% link 首页 | ethereum.org, https://ethereum.org/zh/, https://ethereum.org/favicon.ico %}\n    {% link cppds.com, http://cppds.com/, http://cppds.com/favicon.ico %}\n    {% link AutoXjs, http://doc.autoxjs.com/#/?id=%e7%bb%bc%e8%bf%b0, http://doc.autoxjs.com/favicon.ico %}\n    {% link CSSBattle, https://cssbattle.dev/, https://cssbattle.dev/favicon.ico %}\n    {% link Dashboard – Vercel, https://vercel.com/dashboard, https://vercel.com/favicon.ico %}\n    {% link Neumorphism/Soft UI CSS shadow generator, https://neumorphism.io/#e0e0e0, https://neumorphism.io/favicon.ico %}\n    {% link Tushare大数据社区, https://tushare.pro/, https://tushare.pro/favicon.ico %}\n    {% link Auto.js Pro, https://pro.autojs.org/, https://pro.autojs.org/favicon.ico %}\n    {% link Google Analytics（分析） | 首页, https://analytics.google.com/analytics/web/provision/#/p419218611/reports/intelligenthome, https://analytics.google.com/favicon.ico %}\n    {% link PoweredbyAI - Free ai tools | Home, https://poweredbyai.app/, https://poweredbyai.app/favicon.ico %}\n    {% link Font Awesome, https://fontawesome.com/search?o=r&m=free, https://fontawesome.com/favicon.ico %}\n    {% link switchroot, https://switchroot.org/, https://switchroot.org/favicon.ico %}\n    {% link 全部 - 硬件模块设计 - 硬创社, https://x.jlc.com/category/all, https://x.jlc.com/favicon.ico %}\n    {% link 牛客网-找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网, https://www.nowcoder.com/, https://www.nowcoder.com/favicon.ico %}\n    {% link ChatGPT, https://chatgpt.com/c/3eb3068d-9781-4b20-8579-af613633ffc3, https://chatgpt.com/favicon.ico %}\n{% endlinkgroup %}\n \n## 待看\n{% linkgroup %}\n    {% link 1. 引言 — 动手学深度学习 2.0.0 documentation, https://zh.d2l.ai/chapter_introduction/index.html, https://zh.d2l.ai/favicon.ico %}\n    {% link arXiv.org e-Print archive, https://arxiv.org/, https://arxiv.org/favicon.ico %}\n    {% link TXYZ - Chat With Knowledge, https://www.txyz.ai/, https://www.txyz.ai/favicon.ico %}\n    {% link Thingiverse - Digital Designs for Physical Objects, https://www.thingiverse.com/, https://www.thingiverse.com/favicon.ico %}\n    {% link 简介 - Effective Modern C++, https://cntransgroup.github.io/EffectiveModernCppChinese/Introduction.html, https://cntransgroup.github.io/favicon.ico %}\n    {% link Hello 算法, https://www.hello-algo.com/, https://www.hello-algo.com/favicon.ico %}\n    {% link 开源工具，使用简单的文字描述画UML图。, https://plantuml.com/zh/, https://plantuml.com/favicon.ico %}\n    {% link 产品经理的人工智能学习库 - easyAI, https://easyai.tech/, https://easyai.tech/favicon.ico %}\n    {% link Data Structure Visualization, https://www.cs.usfca.edu/~galles/visualization/Algorithms.html, https://www.cs.usfca.edu/favicon.ico %}\n    {% link Introduction - Backtrader, https://www.backtrader.com/docu/, https://www.backtrader.com/favicon.ico %}\n    {% link FPGA验证流程（远程实验版） :: RISC-V CPU设计实验教程, https://fpga-lab.gitee.io/jurv-open/jurv/v2.0/L02-guide-remote.html, https://fpga-lab.gitee.io/favicon.ico %}\n    {% link 书栈网 · BookStack_程序员IT互联网开源编程书籍免费阅读，助您【码】力十足！, https://www.bookstack.cn/cate, https://www.bookstack.cn/favicon.ico %}\n    {% link 1. Kaleidoscope： Kaleidoscope 简介和 Lexer — LLVM 19.0.0git 文档 --- 1. Kaleidoscope: Kaleidoscope Introduction and the Lexer — LLVM 19.0.0git documentation, https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html, https://llvm.org/favicon.ico %}\n    {% link Lv1.3. 解析 main 函数 - 北京大学编译实践课程在线文档 | 北大编译实践在线文档, https://pku-minic.github.io/online-doc/#/lv1-main/parsing-main, https://pku-minic.github.io/favicon.ico %}\n{% endlinkgroup %}\n \n## 漫画\n{% linkgroup %}\n    {% link Netflav - 主頁 / Home, https://netflav.com/, https://netflav.com/favicon.ico %}\n    {% link 免費A漫 - 禁漫天堂, https://18comic.org/, https://18comic.org/favicon.ico %}\n    {% link 色漫網 - 免費H漫, 精品A漫，禁漫天堂, https://www.cartoon18.com/, https://www.cartoon18.com/favicon.ico %}\n    {% link Hanime1.me - H動漫/裏番/線上看, https://hanime1.me/, https://hanime1.me/favicon.ico %}\n    {% link Pronhub色情片 | Pornhub.com, https://cn.pornhub.com/video/search?search=pronhub, https://cn.pornhub.com/favicon.ico %}\n    {% link 免費成人視頻 - XVIDEOS.COM, https://www.xvideos.com/, https://www.xvideos.com/favicon.ico %}\n    {% link 在线里番 - ACG盒子, https://www.acgbox.link/q/zaixianlifan, https://www.acgbox.link/favicon.ico %}\n    {% link 女优大全 - 男人团, http://abc.nanrenvip3.cc/nvyouku/1-0-0-0-0-0.html, http://abc.nanrenvip3.cc/favicon.ico %}\n    {% link 琉璃神社★分享动漫快乐 琉璃神社APP 琉璃app, https://acg.gy/?lang=2021, https://acg.gy/favicon.ico %}\n{% endlinkgroup %}\n \n## 其他\n{% linkgroup %}\n    {% link YGOPro AI脚本教程（译文） - 简书, https://www.jianshu.com/p/762d78417576, https://www.jianshu.com/favicon.ico %}\n    {% link Virt a Mate（VAM）游戏折腾记录 – IYATT-yx 的博客, https://blog.iyatt.com/?p=13283#%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD, https://blog.iyatt.com/favicon.ico %}\n    {% link VirScan - 多引擎文件在线检测平台, https://www.virscan.org/, https://www.virscan.org/favicon.ico %}\n    {% link 简介 · PyTorch实用教程（第二版）, https://tingsongyu.github.io/PyTorch-Tutorial-2nd/, https://tingsongyu.github.io/favicon.ico %}\n    {% link 🦀 Rust 学习路线图 | Better Rust, https://rs.trybetter.app/docs/guide/roadmap/, https://rs.trybetter.app/favicon.ico %}\n    {% link 简介 - 通过例子学 Rust 中文版, https://rustwiki.org/zh-CN/rust-by-example/, https://rustwiki.org/favicon.ico %}\n    {% link 91自拍论坛 - Powered by Discuz!, https://t0601.91p889.com/index.php, https://t0601.91p889.com/favicon.ico %}\n{% endlinkgroup %}\n \n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2024-10-06 13:37:57\n---\n\n## 资源\n{% linkgroup %}\n    {% link 百度翻译-200种语言互译、沟通全世界！, https://fanyi.baidu.com/, https://fanyi.baidu.com/favicon.ico %}\n    {% link 谷歌学术镜像_Google学术搜索导航, http://ac.scmor.com/, http://ac.scmor.com/favicon.ico %}\n    {% link The Best IP Address, Email and Networking Tools - IPAddress.com, https://www.ipaddress.com/, https://www.ipaddress.com/favicon.ico %}\n    {% link WWW.ALLDATASHEETCN.COM - IC搜索-提供Datasheet, IC数据表, datasheet资料表, ic资料表, 电子元器件手册, 电子元件手册 等 资料下载中心, 为电子元件和半导体等的供应商。, https://www.alldatasheetcn.com/, https://www.alldatasheetcn.com/favicon.ico %}\n    {% link 无, https://ssrshare.github.io/, https://ssrshare.github.io/favicon.ico %}\n    {% link IPChecker检查IP是否被封的利器 - VPS234主机测评, https://www.vps234.com/ipchecker/, https://www.vps234.com/favicon.ico %}\n    {% link Human Benchmark, https://humanbenchmark.com/, https://humanbenchmark.com/favicon.ico %}\n    {% link 国家中小学智慧教育平台, https://www.zxx.edu.cn/, https://www.zxx.edu.cn/favicon.ico %}\n    {% link SSD VPS服务器，云服务器和云主机的vultr - vultr.com, https://www.vultr.com/, https://www.vultr.com/favicon.ico %}\n    {% link 羽兔网-年轻人都在用的自学设计平台, https://www.yutu.cn/, https://www.yutu.cn/favicon.ico %}\n    {% link SCI-Hub论文下载可用网址链接（实时更新） - YoviSun工具集, https://tool.yovisun.com/scihub/, https://tool.yovisun.com/favicon.ico %}\n    {% link 思羽布丁, https://www.mfpud.com/, https://www.mfpud.com/favicon.ico %}\n    {% link 首页 - 合同示范文本库 - 国家市场监督管理总局, https://cont.12315.cn/, https://cont.12315.cn/favicon.ico %}\n    {% link Free Stock Photos, Royalty Free Stock Images & Copyright Free Pictures · Pexels, https://www.pexels.com/, https://www.pexels.com/favicon.ico %}\n    {% link 我要自学网-视频教程|免费教程|自学电脑|3D教程|平面教程|影视动画教程|办公教程|机械设计教程|网站设计教程-我要自学网, https://www.51zxw.net/, https://www.51zxw.net/favicon.ico %}\n    {% link 爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载, https://www.aigei.com/, https://www.aigei.com/favicon.ico %}\n    {% link 美食天下_原创菜谱与美食生活社区，我所有的朋友都是吃货！, https://www.meishichina.com/, https://www.meishichina.com/favicon.ico %}\n    {% link 【全球液晶屏交易中心 - 屏库】, https://www.panelook.cn/index_cn.php, https://www.panelook.cn/favicon.ico %}\n    {% link 苹果系统之家 - mac软件｜macOS镜像｜macOS教程｜黑苹果教程软件分享, https://macoshome.com/, https://macoshome.com/favicon.ico %}\n    {% link 在线LaTeX公式编辑器-编辑器, https://www.latexlive.com/home, https://www.latexlive.com/favicon.ico %}\n    {% link iCloud, https://www.icloud.com.cn/, https://www.icloud.com.cn/favicon.ico %}\n    {% link 经纬度查询 - 坐标拾取系统, https://jingweidu.bmcx.com/, https://jingweidu.bmcx.com/favicon.ico %}\n    {% link Claude - Sleepknight - Slack, https://app.slack.com/client/T057M6YAJ11/D057MB6N010?redir=%2Foauth%3Fclient_id%3D4656224793073.4662891757348%26scope%3Dapp_mentions%253Aread%252Cchannels%253Ahistory%252Cchannels%253Aread%252Cchat%253Awrite%252Ccommands%252Cfiles%253Awrite%252Cgroups%253Ahistory%252Cgroups%253Aread%252Cim%253Ahistory%252Cim%253Aread%252Cmpim%253Ahistory%252Cmpim%253Aread%252Cteam%253Aread%252Cusers%253Aread%26user_scope%3D%26redirect_uri%3D%26state%3DeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnN0YWxsT3B0aW9ucyI6eyJzY29wZXMiOlsiYXBwX21lbnRpb25zOnJlYWQiLCJjaGFubmVsczpoaXN0b3J5IiwiY2hhbm5lbHM6cmVhZCIsImNoYXQ6d3JpdGUiLCJjb21tYW5kcyIsImZpbGVzOndyaXRlIiwiZ3JvdXBzOmhpc3RvcnkiLCJncm91cHM6cmVhZCIsImltOmhpc3RvcnkiLCJpbTpyZWFkIiwibXBpbTpoaXN0b3J5IiwibXBpbTpyZWFkIiwidGVhbTpyZWFkIiwidXNlcnM6cmVhZCJdfSwibm93IjoiMjAyMy0wNS0xM1QwNTo0NDowOC43NjlaIiwicmFuZG9tIjo0Njg5NjEsImlhdCI6MTY4Mzk1NjY0OH0.srdE_wLE4beuhd1ev46tvgw3NlKQUTy4VJ2nvl0gS9s%26granular_bot_scope%3D1%26single_channel%3D0%26install_redirect%3D%26tracked%3D1%26team%3D, https://app.slack.com/favicon.ico %}\n    {% link 字体天下-提供各类字体的免费下载和在线预览服务, https://www.fonts.net.cn/, https://www.fonts.net.cn/favicon.ico %}\n    {% link 域名购买网站, https://www.namesilo.com/account/, https://www.namesilo.com/favicon.ico %}\n    {% link 来此加密 - Let's Encrypt 在线免费申请SSL证书, https://letsencrypt.osfipin.com/, https://letsencrypt.osfipin.com/favicon.ico %}\n    {% link ClouDNS: 域名设置 (cumerzhang.top), https://www.cloudns.net/records/domain/5095818/, https://www.cloudns.net/favicon.ico %}\n    {% link 中国计算机技术职业资格网, https://www.ruankao.org.cn/, https://www.ruankao.org.cn/favicon.ico %}\n    {% link 攀拓计算机能力测评 - 程序设计, https://www.patest.cn/home, https://www.patest.cn/favicon.ico %}\n    {% link Cheap Domain Names & Web Hosting Starting at $0.99! | NameSilo, https://www.namesilo.com/?rid=076c694cr, https://www.namesilo.com/favicon.ico %}\n    {% link 美国地址生成器 - 美国身份生成器 - 美国信用卡生成器, https://www.meiguodizhi.com/, https://www.meiguodizhi.com/favicon.ico %}\n    {% link 5G | ShareTechnote, http://www.sharetechnote.com/html/5G/Handbook_5G_Index.html, http://www.sharetechnote.com/favicon.ico %}\n    {% link TOP 網站排名：11月 2023 訪問量最大的網站｜Similarweb, https://www.similarweb.com/zh-tw/top-websites/, https://www.similarweb.com/favicon.ico %}\n    {% link 下载 | Office Tool Plus 官方网站, https://otp.landian.vip/zh-cn/download.html, https://otp.landian.vip/favicon.ico %}\n    {% link 浙江省公共图书馆资源服务门户, http://zjisa.zjlib.cn//home/zy_home.jsp?libCode=zjlib&libCode1=null&elecLibId=&elecAZ=&elec_re_type=hot_type&elec_change_background=null, http://zjisa.zjlib.cn/favicon.ico %}\n    {% link 迪威模型-海量3D模型下载-威海联讯信息技术有限公司, http://www.3dwhere.com/, http://www.3dwhere.com/favicon.ico %}\n    {% link Civitai | Stable Diffusion models, embeddings, hypernetworks and more, https://civitai.com/, https://civitai.com/favicon.ico %}\n    {% link 3d打印模型 stl文件素材 免费下载 - 爱给网, https://www.aigei.com/3d/print/?wd=3d%E6%89%93%E5%8D%B0%E7%B4%A0%E6%9D%90%E5%BA%93&bd_vid=8258425428836347346, https://www.aigei.com/favicon.ico %}\n    {% link 3D打印资源库(3dzyk) - 专业的3D打印垂直平台 | 媒体_资源_教育, https://www.3dzyk.cn/, https://www.3dzyk.cn/favicon.ico %}\n    {% link Nodecafe - ComfyUI Custom Nodes Library and Wiki, https://www.nodecafe.org/, https://www.nodecafe.org/favicon.ico %}\n    {% link AutoDL算力云 | 弹性、好用、省钱。租GPU就上AutoDL, https://www.autodl.com/console/homepage/personal, https://www.autodl.com/favicon.ico %}\n    {% link 色輪、調色盤產生器 | Adobe Color, https://color.adobe.com/zh/create/color-wheel, https://color.adobe.com/favicon.ico %}\n    {% link Google Fonts | 谷歌字体中文版 | GoogleFonts, https://googlefonts.cn/, https://googlefonts.cn/favicon.ico %}\n    {% link Introduction | NextUI - Beautiful, fast and modern React UI Library, https://nextui.org/docs/components/avatar, https://nextui.org/favicon.ico %}\n    {% link 🏡 Home | Open WebUI, https://docs.openwebui.com/, https://docs.openwebui.com/favicon.ico %}\n    {% link Earthworm, https://earthworm.cuixueshe.com/, https://earthworm.cuixueshe.com/favicon.ico %}\n    {% link 语文 · 汉字字帖 | Z2H字帖, https://paper.z2h.cn/han, https://paper.z2h.cn/favicon.ico %}\n    {% link 绿软小站 - 分享绿色软件、免费软件、最新资讯！, https://www.gndown.com/, https://www.gndown.com/favicon.ico %}\n    {% link Luvvoice：免费在线将文本转换为语音，无字数限制, https://luvvoice.com/zh/, https://luvvoice.com/favicon.ico %}\n    {% link 中国国家图书馆 · 中国国家数字图书馆 · 国家典籍博物馆, https://www.nlc.cn/web/index.shtml, https://www.nlc.cn/favicon.ico %}\n    {% link Reference – Typst Documentation, https://typst.app/docs/reference/, https://typst.app/favicon.ico %}\n    {% link Image Upload - SM.MS - Simple Free Image Hosting, https://smms.app/, https://smms.app/favicon.ico %}\n{% endlinkgroup %}\n \n## 影音\n{% linkgroup %}\n    {% link 哔哩哔哩 (゜-゜)つロ 干杯~-bilibili, https://www.bilibili.com/, https://www.bilibili.com/favicon.ico %}\n    {% link D站_五弹幕_干净の弹幕视频网_dilili,发射(。ﾟωﾟ)ﾉ\"！, https://www.5dm.link/, https://www.5dm.link/favicon.ico %}\n    {% link AGE动漫 - 在线动漫观看, https://www.agedm.org/, https://www.agedm.org/favicon.ico %}\n    {% link 樱花动漫 - 专注二次元ACG动漫BT迅雷下载, https://yinghuadongman.me/, https://yinghuadongman.me/favicon.ico %}\n    {% link 风车动漫－专注动漫的门户网站, https://www.92wuc.com/, https://www.92wuc.com/favicon.ico %}\n    {% link 恭喜，访问嘻嘻成功！, http://xixidm.com/, http://xixidm.com/favicon.ico %}\n    {% link 阳光电影_免费电影_迅雷电影下载-第一电影天堂, https://www.ygdy8.net/, https://www.ygdy8.net/favicon.ico %}\n    {% link YouTube, https://www.youtube.com/, https://www.youtube.com/favicon.ico %}\n    {% link Facebook, https://www.facebook.com/profile.php?id=61554129792966, https://www.facebook.com/favicon.ico %}\n    {% link 主页 / X, https://twitter.com/home, https://twitter.com/favicon.ico %}\n    {% link pixiv, https://www.pixiv.net/, https://www.pixiv.net/favicon.ico %}\n    {% link The Free Software Media System | Jellyfin, https://jellyfin.org/, https://jellyfin.org/favicon.ico %}\n    {% link 个人中心 - 爱合租, https://www.ihezu.com.cn/mine, https://www.ihezu.com.cn/favicon.ico %}\n    {% link MusicBrainz Picard, https://picard.musicbrainz.org/, https://picard.musicbrainz.org/favicon.ico %}\n    {% link 动漫GIF-在Gifburg上搜索和下载GIF, https://gifburg.com/cn/gifs/anime/, https://gifburg.com/favicon.ico %}\n    {% link Watchtving | 人人看美剧，美剧资讯网！, https://www.watchtving.com/, https://www.watchtving.com/favicon.ico %}\n    {% link 集知盒子 - 有态度、有内涵、有价值, https://www.jizhihezi.com/, https://www.jizhihezi.com/favicon.ico %}\n    {% link 影视导航 - 免费电影网站导航, https://ys.urlsdh.com/, https://ys.urlsdh.com/favicon.ico %}\n    {% link 品云机场导航 | 专业科学上网导航, https://52.mk/, https://52.mk/favicon.ico %}\n    {% link BT种子 | 磁力搜索神器, https://cilishenqi.cc/sitetag/bt-torrent, https://cilishenqi.cc/favicon.ico %}\n    {% link 磁力搜索 | 工具达人, https://toolsdar.cn/sitetag/%E7%A3%81%E5%8A%9B%E6%90%9C%E7%B4%A2, https://toolsdar.cn/favicon.ico %}\n    {% link 我的个人资料 — The Movie Database (TMDB), https://www.themoviedb.org/u/SilentPaladin, https://www.themoviedb.org/favicon.ico %}\n    {% link 人人电影网,百度云盘,阿里网盘下载, https://www.rrdynb.com/index.html, https://www.rrdynb.com/favicon.ico %}\n    {% link 七味 - 七味网, https://www.pkmkv.com/, https://www.pkmkv.com/favicon.ico %}\n    {% link 无版权图片网站导航 - 免费高清可商用图片网址大全, https://www.amz123.com/tuku, https://www.amz123.com/favicon.ico %}\n    {% link STC-SPADES, https://stc-spades.com/user, https://stc-spades.com/favicon.ico %}\n    {% link 放心云, https://speed17.net/, https://speed17.net/favicon.ico %}\n    {% link 用户中心 - prprCloud, https://prpr.96110.cn.com/clientarea.php?action=productdetails&id=136414, https://prpr.96110.cn.com/favicon.ico %}\n    {% link 趣作图—海量图库_电商素材_高清图片, https://pickwant.com/home, https://pickwant.com/favicon.ico %}\n    {% link Freesound, https://freesound.org/, https://freesound.org/favicon.ico %}\n    {% link 適合IPTV的免費EPG源 | 免費電視節目表, https://epg.pw/xmltv.html?lang=zh-hant, https://epg.pw/favicon.ico %}\n{% endlinkgroup %}\n \n## 游戏\n{% linkgroup %}\n    {% link SWITCH游戏 | 上游世界, https://www.vgter.com/archives/category/switch, https://www.vgter.com/favicon.ico %}\n    {% link Screep 中文教程目录 - 简书, https://www.jianshu.com/p/5431cb7f42d3, https://www.jianshu.com/favicon.ico %}\n    {% link 总览 | Screeps 中文文档, https://screeps-cn.github.io/index.html, https://screeps-cn.github.io/favicon.ico %}\n    {% link Introduction - Screeps Typescript Starter, https://screepers.gitbook.io/screeps-typescript-starter/, https://screepers.gitbook.io/favicon.ico %}\n    {% link Nexus mods and community, https://www.nexusmods.com/, https://www.nexusmods.com/favicon.ico %}\n    {% link MC百科|最大的Minecraft中文MOD百科, https://www.mcmod.cn/, https://www.mcmod.cn/favicon.ico %}\n    {% link https://www.ppsspp.org, https://www.ppsspp.org/, https://www.ppsspp.org/favicon.ico %}\n    {% link 围棋-棋力自测, https://www.weiqi.net/, https://www.weiqi.net/favicon.ico %}\n    {% link KataGo Distributed Training, https://katagotraining.org/, https://katagotraining.org/favicon.ico %}\n    {% link SteamDB, https://steamdb.info/, https://steamdb.info/favicon.ico %}\n    {% link 欢迎来到 Steam, https://store.steampowered.com/, https://store.steampowered.com/favicon.ico %}\n    {% link Electronic Arts 首頁 - EA 官方網站, https://www.ea.com/zh-tw, https://www.ea.com/favicon.ico %}\n    {% link 游戏 - Ubisoft Connect, https://zh-cn.ubisoft.com/ubisoftconnect, https://zh-cn.ubisoft.com/favicon.ico %}\n    {% link 《英雄聯盟》, https://www.leagueoflegends.com/zh-tw/?_gl=1*dz7cx9*_ga*MTA3NDI3MDUzNy4xNzEzNjA0OTgx*_ga_FXBJE5DEDD*MTcxNjAyODExOS4yLjEuMTcxNjAyODMwNi4wLjAuMA.., https://www.leagueoflegends.com/favicon.ico %}\n    {% link Epic游戏商城 | 下载畅玩 PC 平台游戏、模组、DLC 和更多 – Epic Games, https://store.epicgames.com/zh-CN/, https://store.epicgames.com/favicon.ico %}\n    {% link 植僵工具箱, https://pvz.tools/, https://pvz.tools/favicon.ico %}\n    {% link 浏览所有支持的游戏 | WeMod, https://www.wemod.com/zh/cheats, https://www.wemod.com/favicon.ico %}\n    {% link psp游戏排行榜-psp游戏大全-k73游戏之家, http://www.k73.com/pspdown/, http://www.k73.com/favicon.ico %}\n    {% link 娱乐力量全开！——YGO Game Online, http://ygopro.ysepan.com/, http://ygopro.ysepan.com/favicon.ico %}\n    {% link 仪表盘 - LittleSkin, https://littleskin.cn/user, https://littleskin.cn/favicon.ico %}\n    {% link Switch520, https://www.gamer520.com/, https://www.gamer520.com/favicon.ico %}\n    {% link CumerZhang's Steam profile - Exophase.com, https://www.exophase.com/steam/user/76561198345489610/, https://www.exophase.com/favicon.ico %}\n    {% link RuTracker.org, https://rutracker.org/forum/index.php, https://rutracker.org/favicon.ico %}\n    {% link MDPro3, https://flowus.cn/share/9a00b49d-3bbb-4d4e-a28b-35018c9a14db?code=CCGLRX, https://flowus.cn/favicon.ico %}\n    {% link What's new | Virt-A-Mate Hub, https://clouddedicatedserver.virtamate.com/whats-new/, https://clouddedicatedserver.virtamate.com/favicon.ico %}\n    {% link Gomoku AI protocol, https://plastovicka.github.io/protocl2en.htm, https://plastovicka.github.io/favicon.ico %}\n    {% link 101围棋网, https://www.101weiqi.com/, https://www.101weiqi.com/favicon.ico %}\n    {% link RenjuClass五子棋课程在线学习, https://ku10.com/, https://ku10.com/favicon.ico %}\n    {% link 五林五子棋 - 专业的五子棋比赛和学习平台, https://renjuworld.net/renju/, https://renjuworld.net/favicon.ico %}\n{% endlinkgroup %}\n \n## 代码\n{% linkgroup %}\n    {% link HelloGitHub, https://hellogithub.com/, https://hellogithub.com/favicon.ico %}\n    {% link GitHub, https://github.com/, https://github.com/favicon.ico %}\n    {% link Introduction - OpenAI API, https://platform.openai.com/docs/introduction, https://platform.openai.com/favicon.ico %}\n    {% link Vcpkg Ports, https://vcpkg.roundtrip.dev/, https://vcpkg.roundtrip.dev/favicon.ico %}\n    {% link Dashboard - WakaTime, https://wakatime.com/dashboard, https://wakatime.com/favicon.ico %}\n    {% link C++中文 - API参考文档, https://www.apiref.com/cpp-zh/index.html, https://www.apiref.com/favicon.ico %}\n    {% link Hugging Face – The AI community building the future., https://huggingface.co/, https://huggingface.co/favicon.ico %}\n    {% link Docker Hub, https://hub.docker.com/, https://hub.docker.com/favicon.ico %}\n    {% link Linux命令大全(手册) – 真正好用的Linux命令在线查询网站, https://www.linuxcool.com/, https://www.linuxcool.com/favicon.ico %}\n    {% link 吾爱破解 - LCG - LSG|安卓破解|病毒分析|www.52pojie.cn, https://www.52pojie.cn/, https://www.52pojie.cn/favicon.ico %}\n    {% link SSH工具 客户端, http://www.hostbuf.com/, http://www.hostbuf.com/favicon.ico %}\n    {% link JFrog ConanCenter - The Central Repository for C / C++ packages, https://conan.io/center/, https://conan.io/favicon.ico %}\n    {% link FreeRTOS - Market leading RTOS (Real Time Operating System) for embedded systems with Internet of Things extensions, https://freertos.org/, https://freertos.org/favicon.ico %}\n    {% link Projects - Home, https://dev.azure.com/CumerZhang, https://dev.azure.com/favicon.ico %}\n    {% link Index of /archive/qt, http://download.qt.io/archive/qt/, http://download.qt.io/favicon.ico %}\n    {% link Learn Git Branching, https://learngitbranching.js.org/?locale=zh_CN, https://learngitbranching.js.org/favicon.ico %}\n    {% link ROS2入门教程 | 古月居, https://www.guyuehome.com/category/column/ros2-tutorials, https://www.guyuehome.com/favicon.ico %}\n    {% link Online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript, https://regex101.com/, https://regex101.com/favicon.ico %}\n    {% link 我的工作台 - 码云 Gitee.com, https://gitee.com/, https://gitee.com/favicon.ico %}\n    {% link 项目 · 仪表板 · GitLab, https://gitlab.com/, https://gitlab.com/favicon.ico %}\n    {% link 堆栈溢出-开发人员学习，共享和建立职业的地方, https://stackoverflow.com/, https://stackoverflow.com/favicon.ico %}\n    {% link 力扣（LeetCode）官网 - 全球极客挚爱的技术成长平台, https://leetcode.cn/, https://leetcode.cn/favicon.ico %}\n    {% link Team overview | Netlify, https://app.netlify.com/teams/cumerzhang/overview, https://app.netlify.com/favicon.ico %}\n    {% link 电气罐头 ⚡️, https://tech.biko.pub/tool#/rpi-apt-sources, https://tech.biko.pub/favicon.ico %}\n    {% link 概览 | NoneBot, https://nb2.baka.icu/docs/, https://nb2.baka.icu/favicon.ico %}\n    {% link 主页 - MasterGo, https://mastergo.com/files/home, https://mastergo.com/favicon.ico %}\n    {% link React, https://react.docschina.org/, https://react.docschina.org/favicon.ico %}\n    {% link Compare, Download & Develop Open Source & Business Software - SourceForge, https://sourceforge.net/, https://sourceforge.net/favicon.ico %}\n    {% link Pinecone Console, https://app.pinecone.io/organizations/-NT05T8Axq4fcVukaBgJ/projects/asia-southeast1-gcp:850cb17/keys, https://app.pinecone.io/favicon.ico %}\n    {% link 中文文档 - Tailwind CSS 中文文档, https://www.tailwindcss.cn/docs, https://www.tailwindcss.cn/favicon.ico %}\n    {% link The DevSecOps Platform | GitLab, https://about.gitlab.com/, https://about.gitlab.com/favicon.ico %}\n    {% link 模型库首页 · 魔搭社区, https://modelscope.cn/models, https://modelscope.cn/favicon.ico %}\n    {% link GitClone, https://gitclone.com/, https://gitclone.com/favicon.ico %}\n    {% link 首页 | ethereum.org, https://ethereum.org/zh/, https://ethereum.org/favicon.ico %}\n    {% link cppds.com, http://cppds.com/, http://cppds.com/favicon.ico %}\n    {% link AutoXjs, http://doc.autoxjs.com/#/?id=%e7%bb%bc%e8%bf%b0, http://doc.autoxjs.com/favicon.ico %}\n    {% link CSSBattle, https://cssbattle.dev/, https://cssbattle.dev/favicon.ico %}\n    {% link Dashboard – Vercel, https://vercel.com/dashboard, https://vercel.com/favicon.ico %}\n    {% link Neumorphism/Soft UI CSS shadow generator, https://neumorphism.io/#e0e0e0, https://neumorphism.io/favicon.ico %}\n    {% link Tushare大数据社区, https://tushare.pro/, https://tushare.pro/favicon.ico %}\n    {% link Auto.js Pro, https://pro.autojs.org/, https://pro.autojs.org/favicon.ico %}\n    {% link Google Analytics（分析） | 首页, https://analytics.google.com/analytics/web/provision/#/p419218611/reports/intelligenthome, https://analytics.google.com/favicon.ico %}\n    {% link PoweredbyAI - Free ai tools | Home, https://poweredbyai.app/, https://poweredbyai.app/favicon.ico %}\n    {% link Font Awesome, https://fontawesome.com/search?o=r&m=free, https://fontawesome.com/favicon.ico %}\n    {% link switchroot, https://switchroot.org/, https://switchroot.org/favicon.ico %}\n    {% link 全部 - 硬件模块设计 - 硬创社, https://x.jlc.com/category/all, https://x.jlc.com/favicon.ico %}\n    {% link 牛客网-找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网, https://www.nowcoder.com/, https://www.nowcoder.com/favicon.ico %}\n    {% link ChatGPT, https://chatgpt.com/c/3eb3068d-9781-4b20-8579-af613633ffc3, https://chatgpt.com/favicon.ico %}\n{% endlinkgroup %}\n \n## 待看\n{% linkgroup %}\n    {% link 1. 引言 — 动手学深度学习 2.0.0 documentation, https://zh.d2l.ai/chapter_introduction/index.html, https://zh.d2l.ai/favicon.ico %}\n    {% link arXiv.org e-Print archive, https://arxiv.org/, https://arxiv.org/favicon.ico %}\n    {% link TXYZ - Chat With Knowledge, https://www.txyz.ai/, https://www.txyz.ai/favicon.ico %}\n    {% link Thingiverse - Digital Designs for Physical Objects, https://www.thingiverse.com/, https://www.thingiverse.com/favicon.ico %}\n    {% link 简介 - Effective Modern C++, https://cntransgroup.github.io/EffectiveModernCppChinese/Introduction.html, https://cntransgroup.github.io/favicon.ico %}\n    {% link Hello 算法, https://www.hello-algo.com/, https://www.hello-algo.com/favicon.ico %}\n    {% link 开源工具，使用简单的文字描述画UML图。, https://plantuml.com/zh/, https://plantuml.com/favicon.ico %}\n    {% link 产品经理的人工智能学习库 - easyAI, https://easyai.tech/, https://easyai.tech/favicon.ico %}\n    {% link Data Structure Visualization, https://www.cs.usfca.edu/~galles/visualization/Algorithms.html, https://www.cs.usfca.edu/favicon.ico %}\n    {% link Introduction - Backtrader, https://www.backtrader.com/docu/, https://www.backtrader.com/favicon.ico %}\n    {% link FPGA验证流程（远程实验版） :: RISC-V CPU设计实验教程, https://fpga-lab.gitee.io/jurv-open/jurv/v2.0/L02-guide-remote.html, https://fpga-lab.gitee.io/favicon.ico %}\n    {% link 书栈网 · BookStack_程序员IT互联网开源编程书籍免费阅读，助您【码】力十足！, https://www.bookstack.cn/cate, https://www.bookstack.cn/favicon.ico %}\n    {% link 1. Kaleidoscope： Kaleidoscope 简介和 Lexer — LLVM 19.0.0git 文档 --- 1. Kaleidoscope: Kaleidoscope Introduction and the Lexer — LLVM 19.0.0git documentation, https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html, https://llvm.org/favicon.ico %}\n    {% link Lv1.3. 解析 main 函数 - 北京大学编译实践课程在线文档 | 北大编译实践在线文档, https://pku-minic.github.io/online-doc/#/lv1-main/parsing-main, https://pku-minic.github.io/favicon.ico %}\n{% endlinkgroup %}\n \n## 漫画\n{% linkgroup %}\n    {% link Netflav - 主頁 / Home, https://netflav.com/, https://netflav.com/favicon.ico %}\n    {% link 免費A漫 - 禁漫天堂, https://18comic.org/, https://18comic.org/favicon.ico %}\n    {% link 色漫網 - 免費H漫, 精品A漫，禁漫天堂, https://www.cartoon18.com/, https://www.cartoon18.com/favicon.ico %}\n    {% link Hanime1.me - H動漫/裏番/線上看, https://hanime1.me/, https://hanime1.me/favicon.ico %}\n    {% link Pronhub色情片 | Pornhub.com, https://cn.pornhub.com/video/search?search=pronhub, https://cn.pornhub.com/favicon.ico %}\n    {% link 免費成人視頻 - XVIDEOS.COM, https://www.xvideos.com/, https://www.xvideos.com/favicon.ico %}\n    {% link 在线里番 - ACG盒子, https://www.acgbox.link/q/zaixianlifan, https://www.acgbox.link/favicon.ico %}\n    {% link 女优大全 - 男人团, http://abc.nanrenvip3.cc/nvyouku/1-0-0-0-0-0.html, http://abc.nanrenvip3.cc/favicon.ico %}\n    {% link 琉璃神社★分享动漫快乐 琉璃神社APP 琉璃app, https://acg.gy/?lang=2021, https://acg.gy/favicon.ico %}\n{% endlinkgroup %}\n \n## 其他\n{% linkgroup %}\n    {% link YGOPro AI脚本教程（译文） - 简书, https://www.jianshu.com/p/762d78417576, https://www.jianshu.com/favicon.ico %}\n    {% link Virt a Mate（VAM）游戏折腾记录 – IYATT-yx 的博客, https://blog.iyatt.com/?p=13283#%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD, https://blog.iyatt.com/favicon.ico %}\n    {% link VirScan - 多引擎文件在线检测平台, https://www.virscan.org/, https://www.virscan.org/favicon.ico %}\n    {% link 简介 · PyTorch实用教程（第二版）, https://tingsongyu.github.io/PyTorch-Tutorial-2nd/, https://tingsongyu.github.io/favicon.ico %}\n    {% link 🦀 Rust 学习路线图 | Better Rust, https://rs.trybetter.app/docs/guide/roadmap/, https://rs.trybetter.app/favicon.ico %}\n    {% link 简介 - 通过例子学 Rust 中文版, https://rustwiki.org/zh-CN/rust-by-example/, https://rustwiki.org/favicon.ico %}\n    {% link 91自拍论坛 - Powered by Discuz!, https://t0601.91p889.com/index.php, https://t0601.91p889.com/favicon.ico %}\n{% endlinkgroup %}\n \n","updated":"2024-10-07T17:20:05.432Z","path":"friends/index.html","_id":"cm1z7gipd0008dwvxckjff352","comments":1,"layout":"page","content":"<h2 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"百度翻译-200种语言互译、沟通全世界！\" href=\"https://fanyi.baidu.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://fanyi.baidu.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://fanyi.baidu.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://fanyi.baidu.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">百度翻译-200种语言互译、沟通全世界！</p><p class=\"url\">https://fanyi.baidu.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"谷歌学术镜像_Google学术搜索导航\" href=\"http://ac.scmor.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://ac.scmor.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://ac.scmor.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://ac.scmor.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">谷歌学术镜像_Google学术搜索导航</p><p class=\"url\">http://ac.scmor.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"无\" href=\"https://ssrshare.github.io/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ssrshare.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ssrshare.github.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://ssrshare.github.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">无</p><p class=\"url\">https://ssrshare.github.io/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"IPChecker检查IP是否被封的利器 - VPS234主机测评\" href=\"https://www.vps234.com/ipchecker/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.vps234.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.vps234.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.vps234.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">IPChecker检查IP是否被封的利器 - VPS234主机测评</p><p class=\"url\">https://www.vps234.com/ipchecker/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Human Benchmark\" href=\"https://humanbenchmark.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://humanbenchmark.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://humanbenchmark.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://humanbenchmark.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Human Benchmark</p><p class=\"url\">https://humanbenchmark.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"国家中小学智慧教育平台\" href=\"https://www.zxx.edu.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.zxx.edu.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.zxx.edu.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.zxx.edu.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">国家中小学智慧教育平台</p><p class=\"url\">https://www.zxx.edu.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SSD VPS服务器，云服务器和云主机的vultr - vultr.com\" href=\"https://www.vultr.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.vultr.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.vultr.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.vultr.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">SSD VPS服务器，云服务器和云主机的vultr - vultr.com</p><p class=\"url\">https://www.vultr.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"羽兔网-年轻人都在用的自学设计平台\" href=\"https://www.yutu.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.yutu.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.yutu.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.yutu.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">羽兔网-年轻人都在用的自学设计平台</p><p class=\"url\">https://www.yutu.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SCI-Hub论文下载可用网址链接（实时更新） - YoviSun工具集\" href=\"https://tool.yovisun.com/scihub/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tool.yovisun.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tool.yovisun.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://tool.yovisun.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">SCI-Hub论文下载可用网址链接（实时更新） - YoviSun工具集</p><p class=\"url\">https://tool.yovisun.com/scihub/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"思羽布丁\" href=\"https://www.mfpud.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.mfpud.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.mfpud.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.mfpud.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">思羽布丁</p><p class=\"url\">https://www.mfpud.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"首页 - 合同示范文本库 - 国家市场监督管理总局\" href=\"https://cont.12315.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cont.12315.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cont.12315.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://cont.12315.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">首页 - 合同示范文本库 - 国家市场监督管理总局</p><p class=\"url\">https://cont.12315.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"我要自学网-视频教程|免费教程|自学电脑|3D教程|平面教程|影视动画教程|办公教程|机械设计教程|网站设计教程-我要自学网\" href=\"https://www.51zxw.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.51zxw.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.51zxw.net/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.51zxw.net/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">我要自学网-视频教程|免费教程|自学电脑|3D教程|平面教程|影视动画教程|办公教程|机械设计教程|网站设计教程-我要自学网</p><p class=\"url\">https://www.51zxw.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载\" href=\"https://www.aigei.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.aigei.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.aigei.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.aigei.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载</p><p class=\"url\">https://www.aigei.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"美食天下_原创菜谱与美食生活社区，我所有的朋友都是吃货！\" href=\"https://www.meishichina.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.meishichina.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.meishichina.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.meishichina.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">美食天下_原创菜谱与美食生活社区，我所有的朋友都是吃货！</p><p class=\"url\">https://www.meishichina.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"【全球液晶屏交易中心 - 屏库】\" href=\"https://www.panelook.cn/index_cn.php\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.panelook.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.panelook.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.panelook.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">【全球液晶屏交易中心 - 屏库】</p><p class=\"url\">https://www.panelook.cn/index_cn.php</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"苹果系统之家 - mac软件｜macOS镜像｜macOS教程｜黑苹果教程软件分享\" href=\"https://macoshome.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://macoshome.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://macoshome.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://macoshome.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">苹果系统之家 - mac软件｜macOS镜像｜macOS教程｜黑苹果教程软件分享</p><p class=\"url\">https://macoshome.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"在线LaTeX公式编辑器-编辑器\" href=\"https://www.latexlive.com/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.latexlive.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.latexlive.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.latexlive.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">在线LaTeX公式编辑器-编辑器</p><p class=\"url\">https://www.latexlive.com/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"iCloud\" href=\"https://www.icloud.com.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.icloud.com.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.icloud.com.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.icloud.com.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">iCloud</p><p class=\"url\">https://www.icloud.com.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"经纬度查询 - 坐标拾取系统\" href=\"https://jingweidu.bmcx.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://jingweidu.bmcx.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://jingweidu.bmcx.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://jingweidu.bmcx.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">经纬度查询 - 坐标拾取系统</p><p class=\"url\">https://jingweidu.bmcx.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Claude - Sleepknight - Slack\" href=\"https://app.slack.com/client/T057M6YAJ11/D057MB6N010?redir=%2Foauth%3Fclient_id%3D4656224793073.4662891757348%26scope%3Dapp_mentions%253Aread%252Cchannels%253Ahistory%252Cchannels%253Aread%252Cchat%253Awrite%252Ccommands%252Cfiles%253Awrite%252Cgroups%253Ahistory%252Cgroups%253Aread%252Cim%253Ahistory%252Cim%253Aread%252Cmpim%253Ahistory%252Cmpim%253Aread%252Cteam%253Aread%252Cusers%253Aread%26user_scope%3D%26redirect_uri%3D%26state%3DeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnN0YWxsT3B0aW9ucyI6eyJzY29wZXMiOlsiYXBwX21lbnRpb25zOnJlYWQiLCJjaGFubmVsczpoaXN0b3J5IiwiY2hhbm5lbHM6cmVhZCIsImNoYXQ6d3JpdGUiLCJjb21tYW5kcyIsImZpbGVzOndyaXRlIiwiZ3JvdXBzOmhpc3RvcnkiLCJncm91cHM6cmVhZCIsImltOmhpc3RvcnkiLCJpbTpyZWFkIiwibXBpbTpoaXN0b3J5IiwibXBpbTpyZWFkIiwidGVhbTpyZWFkIiwidXNlcnM6cmVhZCJdfSwibm93IjoiMjAyMy0wNS0xM1QwNTo0NDowOC43NjlaIiwicmFuZG9tIjo0Njg5NjEsImlhdCI6MTY4Mzk1NjY0OH0.srdE_wLE4beuhd1ev46tvgw3NlKQUTy4VJ2nvl0gS9s%26granular_bot_scope%3D1%26single_channel%3D0%26install_redirect%3D%26tracked%3D1%26team%3D\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://app.slack.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://app.slack.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://app.slack.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Claude - Sleepknight - Slack</p><p class=\"url\">https://app.slack.com/client/T057M6YAJ11/D057MB6N010?redir=%2Foauth%3Fclient_id%3D4656224793073.4662891757348%26scope%3Dapp_mentions%253Aread%252Cchannels%253Ahistory%252Cchannels%253Aread%252Cchat%253Awrite%252Ccommands%252Cfiles%253Awrite%252Cgroups%253Ahistory%252Cgroups%253Aread%252Cim%253Ahistory%252Cim%253Aread%252Cmpim%253Ahistory%252Cmpim%253Aread%252Cteam%253Aread%252Cusers%253Aread%26user_scope%3D%26redirect_uri%3D%26state%3DeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnN0YWxsT3B0aW9ucyI6eyJzY29wZXMiOlsiYXBwX21lbnRpb25zOnJlYWQiLCJjaGFubmVsczpoaXN0b3J5IiwiY2hhbm5lbHM6cmVhZCIsImNoYXQ6d3JpdGUiLCJjb21tYW5kcyIsImZpbGVzOndyaXRlIiwiZ3JvdXBzOmhpc3RvcnkiLCJncm91cHM6cmVhZCIsImltOmhpc3RvcnkiLCJpbTpyZWFkIiwibXBpbTpoaXN0b3J5IiwibXBpbTpyZWFkIiwidGVhbTpyZWFkIiwidXNlcnM6cmVhZCJdfSwibm93IjoiMjAyMy0wNS0xM1QwNTo0NDowOC43NjlaIiwicmFuZG9tIjo0Njg5NjEsImlhdCI6MTY4Mzk1NjY0OH0.srdE_wLE4beuhd1ev46tvgw3NlKQUTy4VJ2nvl0gS9s%26granular_bot_scope%3D1%26single_channel%3D0%26install_redirect%3D%26tracked%3D1%26team%3D</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"字体天下-提供各类字体的免费下载和在线预览服务\" href=\"https://www.fonts.net.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.fonts.net.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.fonts.net.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.fonts.net.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">字体天下-提供各类字体的免费下载和在线预览服务</p><p class=\"url\">https://www.fonts.net.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"域名购买网站\" href=\"https://www.namesilo.com/account/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.namesilo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.namesilo.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.namesilo.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">域名购买网站</p><p class=\"url\">https://www.namesilo.com/account/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"来此加密 - Let's Encrypt 在线免费申请SSL证书\" href=\"https://letsencrypt.osfipin.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://letsencrypt.osfipin.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://letsencrypt.osfipin.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://letsencrypt.osfipin.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">来此加密 - Let's Encrypt 在线免费申请SSL证书</p><p class=\"url\">https://letsencrypt.osfipin.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"ClouDNS: 域名设置 (cumerzhang.top)\" href=\"https://www.cloudns.net/records/domain/5095818/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.cloudns.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.cloudns.net/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.cloudns.net/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">ClouDNS: 域名设置 (cumerzhang.top)</p><p class=\"url\">https://www.cloudns.net/records/domain/5095818/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"中国计算机技术职业资格网\" href=\"https://www.ruankao.org.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ruankao.org.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ruankao.org.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.ruankao.org.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">中国计算机技术职业资格网</p><p class=\"url\">https://www.ruankao.org.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"攀拓计算机能力测评 - 程序设计\" href=\"https://www.patest.cn/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.patest.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.patest.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.patest.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">攀拓计算机能力测评 - 程序设计</p><p class=\"url\">https://www.patest.cn/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Cheap Domain Names & Web Hosting Starting at $0.99! | NameSilo\" href=\"https://www.namesilo.com/?rid=076c694cr\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.namesilo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.namesilo.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.namesilo.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Cheap Domain Names & Web Hosting Starting at $0.99! | NameSilo</p><p class=\"url\">https://www.namesilo.com/?rid=076c694cr</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"美国地址生成器 - 美国身份生成器 - 美国信用卡生成器\" href=\"https://www.meiguodizhi.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.meiguodizhi.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.meiguodizhi.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.meiguodizhi.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">美国地址生成器 - 美国身份生成器 - 美国信用卡生成器</p><p class=\"url\">https://www.meiguodizhi.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"5G | ShareTechnote\" href=\"http://www.sharetechnote.com/html/5G/Handbook_5G_Index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.sharetechnote.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.sharetechnote.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://www.sharetechnote.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">5G | ShareTechnote</p><p class=\"url\">http://www.sharetechnote.com/html/5G/Handbook_5G_Index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"TOP 網站排名：11月 2023 訪問量最大的網站｜Similarweb\" href=\"https://www.similarweb.com/zh-tw/top-websites/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.similarweb.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.similarweb.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.similarweb.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">TOP 網站排名：11月 2023 訪問量最大的網站｜Similarweb</p><p class=\"url\">https://www.similarweb.com/zh-tw/top-websites/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"下载 | Office Tool Plus 官方网站\" href=\"https://otp.landian.vip/zh-cn/download.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://otp.landian.vip/favicon.ico)\"></span><div class=\"left\"><img src=\"https://otp.landian.vip/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://otp.landian.vip/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">下载 | Office Tool Plus 官方网站</p><p class=\"url\">https://otp.landian.vip/zh-cn/download.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"浙江省公共图书馆资源服务门户\" href=\"http://zjisa.zjlib.cn//home/zy_home.jsp?libCode=zjlib&libCode1=null&elecLibId=&elecAZ=&elec_re_type=hot_type&elec_change_background=null\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://zjisa.zjlib.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"http://zjisa.zjlib.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://zjisa.zjlib.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">浙江省公共图书馆资源服务门户</p><p class=\"url\">http://zjisa.zjlib.cn//home/zy_home.jsp?libCode=zjlib&libCode1=null&elecLibId=&elecAZ=&elec_re_type=hot_type&elec_change_background=null</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"迪威模型-海量3D模型下载-威海联讯信息技术有限公司\" href=\"http://www.3dwhere.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.3dwhere.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.3dwhere.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://www.3dwhere.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">迪威模型-海量3D模型下载-威海联讯信息技术有限公司</p><p class=\"url\">http://www.3dwhere.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"3d打印模型 stl文件素材 免费下载 - 爱给网\" href=\"https://www.aigei.com/3d/print/?wd=3d%E6%89%93%E5%8D%B0%E7%B4%A0%E6%9D%90%E5%BA%93&bd_vid=8258425428836347346\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.aigei.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.aigei.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.aigei.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">3d打印模型 stl文件素材 免费下载 - 爱给网</p><p class=\"url\">https://www.aigei.com/3d/print/?wd=3d%E6%89%93%E5%8D%B0%E7%B4%A0%E6%9D%90%E5%BA%93&bd_vid=8258425428836347346</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"3D打印资源库(3dzyk) - 专业的3D打印垂直平台 | 媒体_资源_教育\" href=\"https://www.3dzyk.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.3dzyk.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.3dzyk.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.3dzyk.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">3D打印资源库(3dzyk) - 专业的3D打印垂直平台 | 媒体_资源_教育</p><p class=\"url\">https://www.3dzyk.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Nodecafe - ComfyUI Custom Nodes Library and Wiki\" href=\"https://www.nodecafe.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nodecafe.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nodecafe.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.nodecafe.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Nodecafe - ComfyUI Custom Nodes Library and Wiki</p><p class=\"url\">https://www.nodecafe.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"AutoDL算力云 | 弹性、好用、省钱。租GPU就上AutoDL\" href=\"https://www.autodl.com/console/homepage/personal\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.autodl.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.autodl.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.autodl.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">AutoDL算力云 | 弹性、好用、省钱。租GPU就上AutoDL</p><p class=\"url\">https://www.autodl.com/console/homepage/personal</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"色輪、調色盤產生器 | Adobe Color\" href=\"https://color.adobe.com/zh/create/color-wheel\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://color.adobe.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://color.adobe.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://color.adobe.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">色輪、調色盤產生器 | Adobe Color</p><p class=\"url\">https://color.adobe.com/zh/create/color-wheel</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Google Fonts | 谷歌字体中文版 | GoogleFonts\" href=\"https://googlefonts.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://googlefonts.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://googlefonts.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://googlefonts.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Google Fonts | 谷歌字体中文版 | GoogleFonts</p><p class=\"url\">https://googlefonts.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"🏡 Home | Open WebUI\" href=\"https://docs.openwebui.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://docs.openwebui.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://docs.openwebui.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://docs.openwebui.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">🏡 Home | Open WebUI</p><p class=\"url\">https://docs.openwebui.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Earthworm\" href=\"https://earthworm.cuixueshe.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://earthworm.cuixueshe.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://earthworm.cuixueshe.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://earthworm.cuixueshe.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Earthworm</p><p class=\"url\">https://earthworm.cuixueshe.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"语文 · 汉字字帖 | Z2H字帖\" href=\"https://paper.z2h.cn/han\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://paper.z2h.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://paper.z2h.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://paper.z2h.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">语文 · 汉字字帖 | Z2H字帖</p><p class=\"url\">https://paper.z2h.cn/han</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"绿软小站 - 分享绿色软件、免费软件、最新资讯！\" href=\"https://www.gndown.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.gndown.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.gndown.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.gndown.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">绿软小站 - 分享绿色软件、免费软件、最新资讯！</p><p class=\"url\">https://www.gndown.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Luvvoice：免费在线将文本转换为语音，无字数限制\" href=\"https://luvvoice.com/zh/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://luvvoice.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://luvvoice.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://luvvoice.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Luvvoice：免费在线将文本转换为语音，无字数限制</p><p class=\"url\">https://luvvoice.com/zh/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"中国国家图书馆 · 中国国家数字图书馆 · 国家典籍博物馆\" href=\"https://www.nlc.cn/web/index.shtml\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nlc.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nlc.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.nlc.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">中国国家图书馆 · 中国国家数字图书馆 · 国家典籍博物馆</p><p class=\"url\">https://www.nlc.cn/web/index.shtml</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Reference – Typst Documentation\" href=\"https://typst.app/docs/reference/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://typst.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://typst.app/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://typst.app/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Reference – Typst Documentation</p><p class=\"url\">https://typst.app/docs/reference/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Image Upload - SM.MS - Simple Free Image Hosting\" href=\"https://smms.app/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://smms.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://smms.app/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://smms.app/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Image Upload - SM.MS - Simple Free Image Hosting</p><p class=\"url\">https://smms.app/</p></div></a></div></div>\n<h2 id=\"影音\"><a href=\"#影音\" class=\"headerlink\" title=\"影音\"></a>影音</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"哔哩哔哩 (゜-゜)つロ 干杯~-bilibili\" href=\"https://www.bilibili.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.bilibili.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.bilibili.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.bilibili.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</p><p class=\"url\">https://www.bilibili.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"AGE动漫 - 在线动漫观看\" href=\"https://www.agedm.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.agedm.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.agedm.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.agedm.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">AGE动漫 - 在线动漫观看</p><p class=\"url\">https://www.agedm.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"樱花动漫 - 专注二次元ACG动漫BT迅雷下载\" href=\"https://yinghuadongman.me/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://yinghuadongman.me/favicon.ico)\"></span><div class=\"left\"><img src=\"https://yinghuadongman.me/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://yinghuadongman.me/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">樱花动漫 - 专注二次元ACG动漫BT迅雷下载</p><p class=\"url\">https://yinghuadongman.me/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"风车动漫－专注动漫的门户网站\" href=\"https://www.92wuc.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.92wuc.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.92wuc.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.92wuc.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">风车动漫－专注动漫的门户网站</p><p class=\"url\">https://www.92wuc.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"恭喜，访问嘻嘻成功！\" href=\"http://xixidm.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://xixidm.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://xixidm.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://xixidm.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">恭喜，访问嘻嘻成功！</p><p class=\"url\">http://xixidm.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"阳光电影_免费电影_迅雷电影下载-第一电影天堂\" href=\"https://www.ygdy8.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ygdy8.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ygdy8.net/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.ygdy8.net/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">阳光电影_免费电影_迅雷电影下载-第一电影天堂</p><p class=\"url\">https://www.ygdy8.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"YouTube\" href=\"https://www.youtube.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.youtube.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.youtube.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.youtube.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">YouTube</p><p class=\"url\">https://www.youtube.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Facebook\" href=\"https://www.facebook.com/profile.php?id=61554129792966\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.facebook.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.facebook.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.facebook.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Facebook</p><p class=\"url\">https://www.facebook.com/profile.php?id=61554129792966</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"主页 / X\" href=\"https://twitter.com/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://twitter.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://twitter.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://twitter.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">主页 / X</p><p class=\"url\">https://twitter.com/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"pixiv\" href=\"https://www.pixiv.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.pixiv.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.pixiv.net/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.pixiv.net/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">pixiv</p><p class=\"url\">https://www.pixiv.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"The Free Software Media System | Jellyfin\" href=\"https://jellyfin.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://jellyfin.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://jellyfin.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://jellyfin.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">The Free Software Media System | Jellyfin</p><p class=\"url\">https://jellyfin.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"个人中心 - 爱合租\" href=\"https://www.ihezu.com.cn/mine\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ihezu.com.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ihezu.com.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.ihezu.com.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">个人中心 - 爱合租</p><p class=\"url\">https://www.ihezu.com.cn/mine</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"MusicBrainz Picard\" href=\"https://picard.musicbrainz.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://picard.musicbrainz.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://picard.musicbrainz.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://picard.musicbrainz.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">MusicBrainz Picard</p><p class=\"url\">https://picard.musicbrainz.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"动漫GIF-在Gifburg上搜索和下载GIF\" href=\"https://gifburg.com/cn/gifs/anime/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gifburg.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gifburg.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://gifburg.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">动漫GIF-在Gifburg上搜索和下载GIF</p><p class=\"url\">https://gifburg.com/cn/gifs/anime/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Watchtving | 人人看美剧，美剧资讯网！\" href=\"https://www.watchtving.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.watchtving.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.watchtving.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.watchtving.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Watchtving | 人人看美剧，美剧资讯网！</p><p class=\"url\">https://www.watchtving.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"集知盒子 - 有态度、有内涵、有价值\" href=\"https://www.jizhihezi.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.jizhihezi.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.jizhihezi.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.jizhihezi.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">集知盒子 - 有态度、有内涵、有价值</p><p class=\"url\">https://www.jizhihezi.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"影视导航 - 免费电影网站导航\" href=\"https://ys.urlsdh.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ys.urlsdh.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ys.urlsdh.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://ys.urlsdh.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">影视导航 - 免费电影网站导航</p><p class=\"url\">https://ys.urlsdh.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"品云机场导航 | 专业科学上网导航\" href=\"https://52.mk/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://52.mk/favicon.ico)\"></span><div class=\"left\"><img src=\"https://52.mk/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://52.mk/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">品云机场导航 | 专业科学上网导航</p><p class=\"url\">https://52.mk/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"BT种子 | 磁力搜索神器\" href=\"https://cilishenqi.cc/sitetag/bt-torrent\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cilishenqi.cc/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cilishenqi.cc/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://cilishenqi.cc/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">BT种子 | 磁力搜索神器</p><p class=\"url\">https://cilishenqi.cc/sitetag/bt-torrent</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"磁力搜索 | 工具达人\" href=\"https://toolsdar.cn/sitetag/%E7%A3%81%E5%8A%9B%E6%90%9C%E7%B4%A2\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://toolsdar.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://toolsdar.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://toolsdar.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">磁力搜索 | 工具达人</p><p class=\"url\">https://toolsdar.cn/sitetag/%E7%A3%81%E5%8A%9B%E6%90%9C%E7%B4%A2</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"我的个人资料 — The Movie Database (TMDB)\" href=\"https://www.themoviedb.org/u/SilentPaladin\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.themoviedb.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.themoviedb.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.themoviedb.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">我的个人资料 — The Movie Database (TMDB)</p><p class=\"url\">https://www.themoviedb.org/u/SilentPaladin</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"七味 - 七味网\" href=\"https://www.pkmkv.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.pkmkv.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.pkmkv.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.pkmkv.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">七味 - 七味网</p><p class=\"url\">https://www.pkmkv.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"无版权图片网站导航 - 免费高清可商用图片网址大全\" href=\"https://www.amz123.com/tuku\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.amz123.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.amz123.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.amz123.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">无版权图片网站导航 - 免费高清可商用图片网址大全</p><p class=\"url\">https://www.amz123.com/tuku</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"STC-SPADES\" href=\"https://stc-spades.com/user\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://stc-spades.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://stc-spades.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://stc-spades.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">STC-SPADES</p><p class=\"url\">https://stc-spades.com/user</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"放心云\" href=\"https://speed17.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://speed17.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://speed17.net/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://speed17.net/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">放心云</p><p class=\"url\">https://speed17.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"用户中心 - prprCloud\" href=\"https://prpr.96110.cn.com/clientarea.php?action=productdetails&id=136414\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://prpr.96110.cn.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://prpr.96110.cn.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://prpr.96110.cn.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">用户中心 - prprCloud</p><p class=\"url\">https://prpr.96110.cn.com/clientarea.php?action=productdetails&id=136414</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"趣作图—海量图库_电商素材_高清图片\" href=\"https://pickwant.com/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pickwant.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pickwant.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://pickwant.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">趣作图—海量图库_电商素材_高清图片</p><p class=\"url\">https://pickwant.com/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Freesound\" href=\"https://freesound.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://freesound.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://freesound.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://freesound.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Freesound</p><p class=\"url\">https://freesound.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"適合IPTV的免費EPG源 | 免費電視節目表\" href=\"https://epg.pw/xmltv.html?lang=zh-hant\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://epg.pw/favicon.ico)\"></span><div class=\"left\"><img src=\"https://epg.pw/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://epg.pw/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">適合IPTV的免費EPG源 | 免費電視節目表</p><p class=\"url\">https://epg.pw/xmltv.html?lang=zh-hant</p></div></a></div></div>\n<h2 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"SWITCH游戏 | 上游世界\" href=\"https://www.vgter.com/archives/category/switch\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.vgter.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.vgter.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.vgter.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">SWITCH游戏 | 上游世界</p><p class=\"url\">https://www.vgter.com/archives/category/switch</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Screep 中文教程目录 - 简书\" href=\"https://www.jianshu.com/p/5431cb7f42d3\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.jianshu.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.jianshu.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.jianshu.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Screep 中文教程目录 - 简书</p><p class=\"url\">https://www.jianshu.com/p/5431cb7f42d3</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"总览 | Screeps 中文文档\" href=\"https://screeps-cn.github.io/index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://screeps-cn.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://screeps-cn.github.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://screeps-cn.github.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">总览 | Screeps 中文文档</p><p class=\"url\">https://screeps-cn.github.io/index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Introduction - Screeps Typescript Starter\" href=\"https://screepers.gitbook.io/screeps-typescript-starter/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://screepers.gitbook.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://screepers.gitbook.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://screepers.gitbook.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Introduction - Screeps Typescript Starter</p><p class=\"url\">https://screepers.gitbook.io/screeps-typescript-starter/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Nexus mods and community\" href=\"https://www.nexusmods.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nexusmods.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nexusmods.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.nexusmods.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Nexus mods and community</p><p class=\"url\">https://www.nexusmods.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"MC百科|最大的Minecraft中文MOD百科\" href=\"https://www.mcmod.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.mcmod.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.mcmod.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.mcmod.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">MC百科|最大的Minecraft中文MOD百科</p><p class=\"url\">https://www.mcmod.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"https://www.ppsspp.org\" href=\"https://www.ppsspp.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ppsspp.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ppsspp.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.ppsspp.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">https://www.ppsspp.org</p><p class=\"url\">https://www.ppsspp.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"围棋-棋力自测\" href=\"https://www.weiqi.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.weiqi.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.weiqi.net/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.weiqi.net/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">围棋-棋力自测</p><p class=\"url\">https://www.weiqi.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"KataGo Distributed Training\" href=\"https://katagotraining.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://katagotraining.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://katagotraining.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://katagotraining.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">KataGo Distributed Training</p><p class=\"url\">https://katagotraining.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SteamDB\" href=\"https://steamdb.info/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://steamdb.info/favicon.ico)\"></span><div class=\"left\"><img src=\"https://steamdb.info/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://steamdb.info/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">SteamDB</p><p class=\"url\">https://steamdb.info/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"欢迎来到 Steam\" href=\"https://store.steampowered.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://store.steampowered.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://store.steampowered.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://store.steampowered.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">欢迎来到 Steam</p><p class=\"url\">https://store.steampowered.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Electronic Arts 首頁 - EA 官方網站\" href=\"https://www.ea.com/zh-tw\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ea.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ea.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.ea.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Electronic Arts 首頁 - EA 官方網站</p><p class=\"url\">https://www.ea.com/zh-tw</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"游戏 - Ubisoft Connect\" href=\"https://zh-cn.ubisoft.com/ubisoftconnect\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://zh-cn.ubisoft.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://zh-cn.ubisoft.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://zh-cn.ubisoft.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">游戏 - Ubisoft Connect</p><p class=\"url\">https://zh-cn.ubisoft.com/ubisoftconnect</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"《英雄聯盟》\" href=\"https://www.leagueoflegends.com/zh-tw/?_gl=1*dz7cx9*_ga*MTA3NDI3MDUzNy4xNzEzNjA0OTgx*_ga_FXBJE5DEDD*MTcxNjAyODExOS4yLjEuMTcxNjAyODMwNi4wLjAuMA..\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.leagueoflegends.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.leagueoflegends.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.leagueoflegends.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">《英雄聯盟》</p><p class=\"url\">https://www.leagueoflegends.com/zh-tw/?_gl=1*dz7cx9*_ga*MTA3NDI3MDUzNy4xNzEzNjA0OTgx*_ga_FXBJE5DEDD*MTcxNjAyODExOS4yLjEuMTcxNjAyODMwNi4wLjAuMA..</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Epic游戏商城 | 下载畅玩 PC 平台游戏、模组、DLC 和更多 – Epic Games\" href=\"https://store.epicgames.com/zh-CN/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://store.epicgames.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://store.epicgames.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://store.epicgames.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Epic游戏商城 | 下载畅玩 PC 平台游戏、模组、DLC 和更多 – Epic Games</p><p class=\"url\">https://store.epicgames.com/zh-CN/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"植僵工具箱\" href=\"https://pvz.tools/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pvz.tools/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pvz.tools/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://pvz.tools/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">植僵工具箱</p><p class=\"url\">https://pvz.tools/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"浏览所有支持的游戏 | WeMod\" href=\"https://www.wemod.com/zh/cheats\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.wemod.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.wemod.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.wemod.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">浏览所有支持的游戏 | WeMod</p><p class=\"url\">https://www.wemod.com/zh/cheats</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"psp游戏排行榜-psp游戏大全-k73游戏之家\" href=\"http://www.k73.com/pspdown/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.k73.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.k73.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://www.k73.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">psp游戏排行榜-psp游戏大全-k73游戏之家</p><p class=\"url\">http://www.k73.com/pspdown/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"娱乐力量全开！——YGO Game Online\" href=\"http://ygopro.ysepan.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://ygopro.ysepan.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://ygopro.ysepan.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://ygopro.ysepan.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">娱乐力量全开！——YGO Game Online</p><p class=\"url\">http://ygopro.ysepan.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"仪表盘 - LittleSkin\" href=\"https://littleskin.cn/user\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://littleskin.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://littleskin.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://littleskin.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">仪表盘 - LittleSkin</p><p class=\"url\">https://littleskin.cn/user</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Switch520\" href=\"https://www.gamer520.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.gamer520.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.gamer520.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.gamer520.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Switch520</p><p class=\"url\">https://www.gamer520.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"CumerZhang's Steam profile - Exophase.com\" href=\"https://www.exophase.com/steam/user/76561198345489610/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.exophase.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.exophase.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.exophase.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">CumerZhang's Steam profile - Exophase.com</p><p class=\"url\">https://www.exophase.com/steam/user/76561198345489610/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"RuTracker.org\" href=\"https://rutracker.org/forum/index.php\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://rutracker.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://rutracker.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://rutracker.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">RuTracker.org</p><p class=\"url\">https://rutracker.org/forum/index.php</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"MDPro3\" href=\"https://flowus.cn/share/9a00b49d-3bbb-4d4e-a28b-35018c9a14db?code=CCGLRX\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://flowus.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://flowus.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://flowus.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">MDPro3</p><p class=\"url\">https://flowus.cn/share/9a00b49d-3bbb-4d4e-a28b-35018c9a14db?code=CCGLRX</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"What's new | Virt-A-Mate Hub\" href=\"https://clouddedicatedserver.virtamate.com/whats-new/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://clouddedicatedserver.virtamate.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://clouddedicatedserver.virtamate.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://clouddedicatedserver.virtamate.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">What's new | Virt-A-Mate Hub</p><p class=\"url\">https://clouddedicatedserver.virtamate.com/whats-new/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Gomoku AI protocol\" href=\"https://plastovicka.github.io/protocl2en.htm\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://plastovicka.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://plastovicka.github.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://plastovicka.github.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Gomoku AI protocol</p><p class=\"url\">https://plastovicka.github.io/protocl2en.htm</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"101围棋网\" href=\"https://www.101weiqi.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.101weiqi.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.101weiqi.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.101weiqi.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">101围棋网</p><p class=\"url\">https://www.101weiqi.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"RenjuClass五子棋课程在线学习\" href=\"https://ku10.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ku10.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ku10.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://ku10.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">RenjuClass五子棋课程在线学习</p><p class=\"url\">https://ku10.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"五林五子棋 - 专业的五子棋比赛和学习平台\" href=\"https://renjuworld.net/renju/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://renjuworld.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://renjuworld.net/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://renjuworld.net/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">五林五子棋 - 专业的五子棋比赛和学习平台</p><p class=\"url\">https://renjuworld.net/renju/</p></div></a></div></div>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"HelloGitHub\" href=\"https://hellogithub.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://hellogithub.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://hellogithub.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://hellogithub.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">HelloGitHub</p><p class=\"url\">https://hellogithub.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"GitHub\" href=\"https://github.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://github.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://github.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://github.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">GitHub</p><p class=\"url\">https://github.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Introduction - OpenAI API\" href=\"https://platform.openai.com/docs/introduction\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://platform.openai.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://platform.openai.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://platform.openai.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Introduction - OpenAI API</p><p class=\"url\">https://platform.openai.com/docs/introduction</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Vcpkg Ports\" href=\"https://vcpkg.roundtrip.dev/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://vcpkg.roundtrip.dev/favicon.ico)\"></span><div class=\"left\"><img src=\"https://vcpkg.roundtrip.dev/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://vcpkg.roundtrip.dev/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Vcpkg Ports</p><p class=\"url\">https://vcpkg.roundtrip.dev/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Dashboard - WakaTime\" href=\"https://wakatime.com/dashboard\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://wakatime.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://wakatime.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://wakatime.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Dashboard - WakaTime</p><p class=\"url\">https://wakatime.com/dashboard</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"C++中文 - API参考文档\" href=\"https://www.apiref.com/cpp-zh/index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.apiref.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.apiref.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.apiref.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">C++中文 - API参考文档</p><p class=\"url\">https://www.apiref.com/cpp-zh/index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Hugging Face – The AI community building the future.\" href=\"https://huggingface.co/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://huggingface.co/favicon.ico)\"></span><div class=\"left\"><img src=\"https://huggingface.co/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://huggingface.co/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Hugging Face – The AI community building the future.</p><p class=\"url\">https://huggingface.co/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Docker Hub\" href=\"https://hub.docker.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://hub.docker.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://hub.docker.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://hub.docker.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Docker Hub</p><p class=\"url\">https://hub.docker.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Linux命令大全(手册) – 真正好用的Linux命令在线查询网站\" href=\"https://www.linuxcool.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.linuxcool.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.linuxcool.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.linuxcool.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Linux命令大全(手册) – 真正好用的Linux命令在线查询网站</p><p class=\"url\">https://www.linuxcool.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"吾爱破解 - LCG - LSG|安卓破解|病毒分析|www.52pojie.cn\" href=\"https://www.52pojie.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.52pojie.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.52pojie.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.52pojie.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">吾爱破解 - LCG - LSG|安卓破解|病毒分析|www.52pojie.cn</p><p class=\"url\">https://www.52pojie.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SSH工具 客户端\" href=\"http://www.hostbuf.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.hostbuf.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.hostbuf.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://www.hostbuf.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">SSH工具 客户端</p><p class=\"url\">http://www.hostbuf.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"JFrog ConanCenter - The Central Repository for C / C++ packages\" href=\"https://conan.io/center/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://conan.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://conan.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://conan.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">JFrog ConanCenter - The Central Repository for C / C++ packages</p><p class=\"url\">https://conan.io/center/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"FreeRTOS - Market leading RTOS (Real Time Operating System) for embedded systems with Internet of Things extensions\" href=\"https://freertos.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://freertos.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://freertos.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://freertos.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">FreeRTOS - Market leading RTOS (Real Time Operating System) for embedded systems with Internet of Things extensions</p><p class=\"url\">https://freertos.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Projects - Home\" href=\"https://dev.azure.com/CumerZhang\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://dev.azure.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://dev.azure.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://dev.azure.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Projects - Home</p><p class=\"url\">https://dev.azure.com/CumerZhang</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Index of /archive/qt\" href=\"http://download.qt.io/archive/qt/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://download.qt.io/favicon.ico)\"></span><div class=\"left\"><img src=\"http://download.qt.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://download.qt.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Index of /archive/qt</p><p class=\"url\">http://download.qt.io/archive/qt/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Learn Git Branching\" href=\"https://learngitbranching.js.org/?locale=zh_CN\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://learngitbranching.js.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://learngitbranching.js.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://learngitbranching.js.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Learn Git Branching</p><p class=\"url\">https://learngitbranching.js.org/?locale=zh_CN</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"ROS2入门教程 | 古月居\" href=\"https://www.guyuehome.com/category/column/ros2-tutorials\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.guyuehome.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.guyuehome.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.guyuehome.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">ROS2入门教程 | 古月居</p><p class=\"url\">https://www.guyuehome.com/category/column/ros2-tutorials</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"我的工作台 - 码云 Gitee.com\" href=\"https://gitee.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gitee.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gitee.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://gitee.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">我的工作台 - 码云 Gitee.com</p><p class=\"url\">https://gitee.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"项目 · 仪表板 · GitLab\" href=\"https://gitlab.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gitlab.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gitlab.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://gitlab.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">项目 · 仪表板 · GitLab</p><p class=\"url\">https://gitlab.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"堆栈溢出-开发人员学习，共享和建立职业的地方\" href=\"https://stackoverflow.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://stackoverflow.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://stackoverflow.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://stackoverflow.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">堆栈溢出-开发人员学习，共享和建立职业的地方</p><p class=\"url\">https://stackoverflow.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"力扣（LeetCode）官网 - 全球极客挚爱的技术成长平台\" href=\"https://leetcode.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://leetcode.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://leetcode.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://leetcode.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">力扣（LeetCode）官网 - 全球极客挚爱的技术成长平台</p><p class=\"url\">https://leetcode.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Team overview | Netlify\" href=\"https://app.netlify.com/teams/cumerzhang/overview\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://app.netlify.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://app.netlify.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://app.netlify.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Team overview | Netlify</p><p class=\"url\">https://app.netlify.com/teams/cumerzhang/overview</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"电气罐头 ⚡️\" href=\"https://tech.biko.pub/tool#/rpi-apt-sources\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tech.biko.pub/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tech.biko.pub/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://tech.biko.pub/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">电气罐头 ⚡️</p><p class=\"url\">https://tech.biko.pub/tool#/rpi-apt-sources</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"概览 | NoneBot\" href=\"https://nb2.baka.icu/docs/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://nb2.baka.icu/favicon.ico)\"></span><div class=\"left\"><img src=\"https://nb2.baka.icu/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://nb2.baka.icu/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">概览 | NoneBot</p><p class=\"url\">https://nb2.baka.icu/docs/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"主页 - MasterGo\" href=\"https://mastergo.com/files/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://mastergo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://mastergo.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://mastergo.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">主页 - MasterGo</p><p class=\"url\">https://mastergo.com/files/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"React\" href=\"https://react.docschina.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://react.docschina.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://react.docschina.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://react.docschina.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">React</p><p class=\"url\">https://react.docschina.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Pinecone Console\" href=\"https://app.pinecone.io/organizations/-NT05T8Axq4fcVukaBgJ/projects/asia-southeast1-gcp:850cb17/keys\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://app.pinecone.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://app.pinecone.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://app.pinecone.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Pinecone Console</p><p class=\"url\">https://app.pinecone.io/organizations/-NT05T8Axq4fcVukaBgJ/projects/asia-southeast1-gcp:850cb17/keys</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"中文文档 - Tailwind CSS 中文文档\" href=\"https://www.tailwindcss.cn/docs\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.tailwindcss.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.tailwindcss.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.tailwindcss.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">中文文档 - Tailwind CSS 中文文档</p><p class=\"url\">https://www.tailwindcss.cn/docs</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"The DevSecOps Platform | GitLab\" href=\"https://about.gitlab.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://about.gitlab.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://about.gitlab.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://about.gitlab.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">The DevSecOps Platform | GitLab</p><p class=\"url\">https://about.gitlab.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"模型库首页 · 魔搭社区\" href=\"https://modelscope.cn/models\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://modelscope.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://modelscope.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://modelscope.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">模型库首页 · 魔搭社区</p><p class=\"url\">https://modelscope.cn/models</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"GitClone\" href=\"https://gitclone.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gitclone.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gitclone.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://gitclone.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">GitClone</p><p class=\"url\">https://gitclone.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"首页 | ethereum.org\" href=\"https://ethereum.org/zh/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ethereum.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ethereum.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://ethereum.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">首页 | ethereum.org</p><p class=\"url\">https://ethereum.org/zh/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"cppds.com\" href=\"http://cppds.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://cppds.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://cppds.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://cppds.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">cppds.com</p><p class=\"url\">http://cppds.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"AutoXjs\" href=\"http://doc.autoxjs.com/#/?id=%e7%bb%bc%e8%bf%b0\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://doc.autoxjs.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://doc.autoxjs.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://doc.autoxjs.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">AutoXjs</p><p class=\"url\">http://doc.autoxjs.com/#/?id=%e7%bb%bc%e8%bf%b0</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"CSSBattle\" href=\"https://cssbattle.dev/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cssbattle.dev/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cssbattle.dev/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://cssbattle.dev/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">CSSBattle</p><p class=\"url\">https://cssbattle.dev/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Dashboard – Vercel\" href=\"https://vercel.com/dashboard\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://vercel.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://vercel.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://vercel.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Dashboard – Vercel</p><p class=\"url\">https://vercel.com/dashboard</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Neumorphism/Soft UI CSS shadow generator\" href=\"https://neumorphism.io/#e0e0e0\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://neumorphism.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://neumorphism.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://neumorphism.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Neumorphism/Soft UI CSS shadow generator</p><p class=\"url\">https://neumorphism.io/#e0e0e0</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Tushare大数据社区\" href=\"https://tushare.pro/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tushare.pro/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tushare.pro/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://tushare.pro/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Tushare大数据社区</p><p class=\"url\">https://tushare.pro/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Auto.js Pro\" href=\"https://pro.autojs.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pro.autojs.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pro.autojs.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://pro.autojs.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Auto.js Pro</p><p class=\"url\">https://pro.autojs.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Google Analytics（分析） | 首页\" href=\"https://analytics.google.com/analytics/web/provision/#/p419218611/reports/intelligenthome\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://analytics.google.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://analytics.google.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://analytics.google.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Google Analytics（分析） | 首页</p><p class=\"url\">https://analytics.google.com/analytics/web/provision/#/p419218611/reports/intelligenthome</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"PoweredbyAI - Free ai tools | Home\" href=\"https://poweredbyai.app/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://poweredbyai.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://poweredbyai.app/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://poweredbyai.app/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">PoweredbyAI - Free ai tools | Home</p><p class=\"url\">https://poweredbyai.app/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Font Awesome\" href=\"https://fontawesome.com/search?o=r&m=free\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://fontawesome.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://fontawesome.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://fontawesome.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Font Awesome</p><p class=\"url\">https://fontawesome.com/search?o=r&m=free</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"switchroot\" href=\"https://switchroot.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://switchroot.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://switchroot.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://switchroot.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">switchroot</p><p class=\"url\">https://switchroot.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"全部 - 硬件模块设计 - 硬创社\" href=\"https://x.jlc.com/category/all\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://x.jlc.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://x.jlc.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://x.jlc.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">全部 - 硬件模块设计 - 硬创社</p><p class=\"url\">https://x.jlc.com/category/all</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"牛客网-找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网\" href=\"https://www.nowcoder.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nowcoder.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nowcoder.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.nowcoder.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">牛客网-找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网</p><p class=\"url\">https://www.nowcoder.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"ChatGPT\" href=\"https://chatgpt.com/c/3eb3068d-9781-4b20-8579-af613633ffc3\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://chatgpt.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://chatgpt.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://chatgpt.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">ChatGPT</p><p class=\"url\">https://chatgpt.com/c/3eb3068d-9781-4b20-8579-af613633ffc3</p></div></a></div></div>\n<h2 id=\"待看\"><a href=\"#待看\" class=\"headerlink\" title=\"待看\"></a>待看</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"1. 引言 — 动手学深度学习 2.0.0 documentation\" href=\"https://zh.d2l.ai/chapter_introduction/index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://zh.d2l.ai/favicon.ico)\"></span><div class=\"left\"><img src=\"https://zh.d2l.ai/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://zh.d2l.ai/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">1. 引言 — 动手学深度学习 2.0.0 documentation</p><p class=\"url\">https://zh.d2l.ai/chapter_introduction/index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"arXiv.org e-Print archive\" href=\"https://arxiv.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://arxiv.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://arxiv.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://arxiv.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">arXiv.org e-Print archive</p><p class=\"url\">https://arxiv.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"TXYZ - Chat With Knowledge\" href=\"https://www.txyz.ai/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.txyz.ai/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.txyz.ai/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.txyz.ai/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">TXYZ - Chat With Knowledge</p><p class=\"url\">https://www.txyz.ai/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Thingiverse - Digital Designs for Physical Objects\" href=\"https://www.thingiverse.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.thingiverse.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.thingiverse.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.thingiverse.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Thingiverse - Digital Designs for Physical Objects</p><p class=\"url\">https://www.thingiverse.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"简介 - Effective Modern C++\" href=\"https://cntransgroup.github.io/EffectiveModernCppChinese/Introduction.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cntransgroup.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cntransgroup.github.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://cntransgroup.github.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">简介 - Effective Modern C++</p><p class=\"url\">https://cntransgroup.github.io/EffectiveModernCppChinese/Introduction.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Hello 算法\" href=\"https://www.hello-algo.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.hello-algo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.hello-algo.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.hello-algo.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Hello 算法</p><p class=\"url\">https://www.hello-algo.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"开源工具，使用简单的文字描述画UML图。\" href=\"https://plantuml.com/zh/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://plantuml.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://plantuml.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://plantuml.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">开源工具，使用简单的文字描述画UML图。</p><p class=\"url\">https://plantuml.com/zh/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"产品经理的人工智能学习库 - easyAI\" href=\"https://easyai.tech/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://easyai.tech/favicon.ico)\"></span><div class=\"left\"><img src=\"https://easyai.tech/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://easyai.tech/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">产品经理的人工智能学习库 - easyAI</p><p class=\"url\">https://easyai.tech/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Data Structure Visualization\" href=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.cs.usfca.edu/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.cs.usfca.edu/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.cs.usfca.edu/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Data Structure Visualization</p><p class=\"url\">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Introduction - Backtrader\" href=\"https://www.backtrader.com/docu/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.backtrader.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.backtrader.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.backtrader.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Introduction - Backtrader</p><p class=\"url\">https://www.backtrader.com/docu/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"FPGA验证流程（远程实验版）\" href=\"RISC-V CPU设计实验教程, https://fpga-lab.gitee.io/jurv-open/jurv/v2.0/L02-guide-remote.html, https://fpga-lab.gitee.io/favicon.ico\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">FPGA验证流程（远程实验版）</p><p class=\"url\">RISC-V CPU设计实验教程, https://fpga-lab.gitee.io/jurv-open/jurv/v2.0/L02-guide-remote.html, https://fpga-lab.gitee.io/favicon.ico</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"书栈网 · BookStack_程序员IT互联网开源编程书籍免费阅读，助您【码】力十足！\" href=\"https://www.bookstack.cn/cate\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.bookstack.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.bookstack.cn/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.bookstack.cn/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">书栈网 · BookStack_程序员IT互联网开源编程书籍免费阅读，助您【码】力十足！</p><p class=\"url\">https://www.bookstack.cn/cate</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"1. Kaleidoscope： Kaleidoscope 简介和 Lexer — LLVM 19.0.0git 文档 --- 1. Kaleidoscope: Kaleidoscope Introduction and the Lexer — LLVM 19.0.0git documentation\" href=\"https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://llvm.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://llvm.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://llvm.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">1. Kaleidoscope： Kaleidoscope 简介和 Lexer — LLVM 19.0.0git 文档 --- 1. Kaleidoscope: Kaleidoscope Introduction and the Lexer — LLVM 19.0.0git documentation</p><p class=\"url\">https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Lv1.3. 解析 main 函数 - 北京大学编译实践课程在线文档 | 北大编译实践在线文档\" href=\"https://pku-minic.github.io/online-doc/#/lv1-main/parsing-main\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pku-minic.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pku-minic.github.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://pku-minic.github.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Lv1.3. 解析 main 函数 - 北京大学编译实践课程在线文档 | 北大编译实践在线文档</p><p class=\"url\">https://pku-minic.github.io/online-doc/#/lv1-main/parsing-main</p></div></a></div></div>\n<h2 id=\"漫画\"><a href=\"#漫画\" class=\"headerlink\" title=\"漫画\"></a>漫画</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"Netflav - 主頁 / Home\" href=\"https://netflav.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://netflav.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://netflav.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://netflav.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Netflav - 主頁 / Home</p><p class=\"url\">https://netflav.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"免費A漫 - 禁漫天堂\" href=\"https://18comic.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://18comic.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://18comic.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://18comic.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">免費A漫 - 禁漫天堂</p><p class=\"url\">https://18comic.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Hanime1.me - H動漫/裏番/線上看\" href=\"https://hanime1.me/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://hanime1.me/favicon.ico)\"></span><div class=\"left\"><img src=\"https://hanime1.me/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://hanime1.me/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Hanime1.me - H動漫/裏番/線上看</p><p class=\"url\">https://hanime1.me/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Pronhub色情片 | Pornhub.com\" href=\"https://cn.pornhub.com/video/search?search=pronhub\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cn.pornhub.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cn.pornhub.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://cn.pornhub.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Pronhub色情片 | Pornhub.com</p><p class=\"url\">https://cn.pornhub.com/video/search?search=pronhub</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"免費成人視頻 - XVIDEOS.COM\" href=\"https://www.xvideos.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.xvideos.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.xvideos.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.xvideos.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">免費成人視頻 - XVIDEOS.COM</p><p class=\"url\">https://www.xvideos.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"在线里番 - ACG盒子\" href=\"https://www.acgbox.link/q/zaixianlifan\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.acgbox.link/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.acgbox.link/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.acgbox.link/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">在线里番 - ACG盒子</p><p class=\"url\">https://www.acgbox.link/q/zaixianlifan</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"女优大全 - 男人团\" href=\"http://abc.nanrenvip3.cc/nvyouku/1-0-0-0-0-0.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://abc.nanrenvip3.cc/favicon.ico)\"></span><div class=\"left\"><img src=\"http://abc.nanrenvip3.cc/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"http://abc.nanrenvip3.cc/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">女优大全 - 男人团</p><p class=\"url\">http://abc.nanrenvip3.cc/nvyouku/1-0-0-0-0-0.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"琉璃神社★分享动漫快乐 琉璃神社APP 琉璃app\" href=\"https://acg.gy/?lang=2021\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://acg.gy/favicon.ico)\"></span><div class=\"left\"><img src=\"https://acg.gy/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://acg.gy/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">琉璃神社★分享动漫快乐 琉璃神社APP 琉璃app</p><p class=\"url\">https://acg.gy/?lang=2021</p></div></a></div></div>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"YGOPro AI脚本教程（译文） - 简书\" href=\"https://www.jianshu.com/p/762d78417576\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.jianshu.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.jianshu.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.jianshu.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">YGOPro AI脚本教程（译文） - 简书</p><p class=\"url\">https://www.jianshu.com/p/762d78417576</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Virt a Mate（VAM）游戏折腾记录 – IYATT-yx 的博客\" href=\"https://blog.iyatt.com/?p=13283#%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://blog.iyatt.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://blog.iyatt.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://blog.iyatt.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">Virt a Mate（VAM）游戏折腾记录 – IYATT-yx 的博客</p><p class=\"url\">https://blog.iyatt.com/?p=13283#%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"VirScan - 多引擎文件在线检测平台\" href=\"https://www.virscan.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.virscan.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.virscan.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://www.virscan.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">VirScan - 多引擎文件在线检测平台</p><p class=\"url\">https://www.virscan.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"简介 · PyTorch实用教程（第二版）\" href=\"https://tingsongyu.github.io/PyTorch-Tutorial-2nd/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tingsongyu.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tingsongyu.github.io/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://tingsongyu.github.io/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">简介 · PyTorch实用教程（第二版）</p><p class=\"url\">https://tingsongyu.github.io/PyTorch-Tutorial-2nd/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"🦀 Rust 学习路线图 | Better Rust\" href=\"https://rs.trybetter.app/docs/guide/roadmap/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://rs.trybetter.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://rs.trybetter.app/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://rs.trybetter.app/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">🦀 Rust 学习路线图 | Better Rust</p><p class=\"url\">https://rs.trybetter.app/docs/guide/roadmap/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"简介 - 通过例子学 Rust 中文版\" href=\"https://rustwiki.org/zh-CN/rust-by-example/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://rustwiki.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://rustwiki.org/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://rustwiki.org/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">简介 - 通过例子学 Rust 中文版</p><p class=\"url\">https://rustwiki.org/zh-CN/rust-by-example/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"91自拍论坛 - Powered by Discuz!\" href=\"https://t0601.91p889.com/index.php\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://t0601.91p889.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://t0601.91p889.com/favicon.ico\" class=\"lazyload placeholder\" data-srcset=\"https://t0601.91p889.com/favicon.ico\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"/></div><div class=\"right\"><p class=\"text\">91自拍论坛 - Powered by Discuz!</p><p class=\"url\">https://t0601.91p889.com/index.php</p></div></a></div></div>\n","excerpt":"","more":"<h2 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"百度翻译-200种语言互译、沟通全世界！\" href=\"https://fanyi.baidu.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://fanyi.baidu.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://fanyi.baidu.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">百度翻译-200种语言互译、沟通全世界！</p><p class=\"url\">https://fanyi.baidu.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"谷歌学术镜像_Google学术搜索导航\" href=\"http://ac.scmor.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://ac.scmor.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://ac.scmor.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">谷歌学术镜像_Google学术搜索导航</p><p class=\"url\">http://ac.scmor.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"无\" href=\"https://ssrshare.github.io/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ssrshare.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ssrshare.github.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">无</p><p class=\"url\">https://ssrshare.github.io/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"IPChecker检查IP是否被封的利器 - VPS234主机测评\" href=\"https://www.vps234.com/ipchecker/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.vps234.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.vps234.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">IPChecker检查IP是否被封的利器 - VPS234主机测评</p><p class=\"url\">https://www.vps234.com/ipchecker/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Human Benchmark\" href=\"https://humanbenchmark.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://humanbenchmark.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://humanbenchmark.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Human Benchmark</p><p class=\"url\">https://humanbenchmark.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"国家中小学智慧教育平台\" href=\"https://www.zxx.edu.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.zxx.edu.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.zxx.edu.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">国家中小学智慧教育平台</p><p class=\"url\">https://www.zxx.edu.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SSD VPS服务器，云服务器和云主机的vultr - vultr.com\" href=\"https://www.vultr.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.vultr.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.vultr.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">SSD VPS服务器，云服务器和云主机的vultr - vultr.com</p><p class=\"url\">https://www.vultr.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"羽兔网-年轻人都在用的自学设计平台\" href=\"https://www.yutu.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.yutu.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.yutu.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">羽兔网-年轻人都在用的自学设计平台</p><p class=\"url\">https://www.yutu.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SCI-Hub论文下载可用网址链接（实时更新） - YoviSun工具集\" href=\"https://tool.yovisun.com/scihub/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tool.yovisun.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tool.yovisun.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">SCI-Hub论文下载可用网址链接（实时更新） - YoviSun工具集</p><p class=\"url\">https://tool.yovisun.com/scihub/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"思羽布丁\" href=\"https://www.mfpud.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.mfpud.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.mfpud.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">思羽布丁</p><p class=\"url\">https://www.mfpud.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"首页 - 合同示范文本库 - 国家市场监督管理总局\" href=\"https://cont.12315.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cont.12315.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cont.12315.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">首页 - 合同示范文本库 - 国家市场监督管理总局</p><p class=\"url\">https://cont.12315.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"我要自学网-视频教程|免费教程|自学电脑|3D教程|平面教程|影视动画教程|办公教程|机械设计教程|网站设计教程-我要自学网\" href=\"https://www.51zxw.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.51zxw.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.51zxw.net/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">我要自学网-视频教程|免费教程|自学电脑|3D教程|平面教程|影视动画教程|办公教程|机械设计教程|网站设计教程-我要自学网</p><p class=\"url\">https://www.51zxw.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载\" href=\"https://www.aigei.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.aigei.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.aigei.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载</p><p class=\"url\">https://www.aigei.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"美食天下_原创菜谱与美食生活社区，我所有的朋友都是吃货！\" href=\"https://www.meishichina.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.meishichina.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.meishichina.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">美食天下_原创菜谱与美食生活社区，我所有的朋友都是吃货！</p><p class=\"url\">https://www.meishichina.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"【全球液晶屏交易中心 - 屏库】\" href=\"https://www.panelook.cn/index_cn.php\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.panelook.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.panelook.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">【全球液晶屏交易中心 - 屏库】</p><p class=\"url\">https://www.panelook.cn/index_cn.php</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"苹果系统之家 - mac软件｜macOS镜像｜macOS教程｜黑苹果教程软件分享\" href=\"https://macoshome.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://macoshome.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://macoshome.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">苹果系统之家 - mac软件｜macOS镜像｜macOS教程｜黑苹果教程软件分享</p><p class=\"url\">https://macoshome.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"在线LaTeX公式编辑器-编辑器\" href=\"https://www.latexlive.com/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.latexlive.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.latexlive.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">在线LaTeX公式编辑器-编辑器</p><p class=\"url\">https://www.latexlive.com/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"iCloud\" href=\"https://www.icloud.com.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.icloud.com.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.icloud.com.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">iCloud</p><p class=\"url\">https://www.icloud.com.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"经纬度查询 - 坐标拾取系统\" href=\"https://jingweidu.bmcx.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://jingweidu.bmcx.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://jingweidu.bmcx.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">经纬度查询 - 坐标拾取系统</p><p class=\"url\">https://jingweidu.bmcx.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Claude - Sleepknight - Slack\" href=\"https://app.slack.com/client/T057M6YAJ11/D057MB6N010?redir=%2Foauth%3Fclient_id%3D4656224793073.4662891757348%26scope%3Dapp_mentions%253Aread%252Cchannels%253Ahistory%252Cchannels%253Aread%252Cchat%253Awrite%252Ccommands%252Cfiles%253Awrite%252Cgroups%253Ahistory%252Cgroups%253Aread%252Cim%253Ahistory%252Cim%253Aread%252Cmpim%253Ahistory%252Cmpim%253Aread%252Cteam%253Aread%252Cusers%253Aread%26user_scope%3D%26redirect_uri%3D%26state%3DeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnN0YWxsT3B0aW9ucyI6eyJzY29wZXMiOlsiYXBwX21lbnRpb25zOnJlYWQiLCJjaGFubmVsczpoaXN0b3J5IiwiY2hhbm5lbHM6cmVhZCIsImNoYXQ6d3JpdGUiLCJjb21tYW5kcyIsImZpbGVzOndyaXRlIiwiZ3JvdXBzOmhpc3RvcnkiLCJncm91cHM6cmVhZCIsImltOmhpc3RvcnkiLCJpbTpyZWFkIiwibXBpbTpoaXN0b3J5IiwibXBpbTpyZWFkIiwidGVhbTpyZWFkIiwidXNlcnM6cmVhZCJdfSwibm93IjoiMjAyMy0wNS0xM1QwNTo0NDowOC43NjlaIiwicmFuZG9tIjo0Njg5NjEsImlhdCI6MTY4Mzk1NjY0OH0.srdE_wLE4beuhd1ev46tvgw3NlKQUTy4VJ2nvl0gS9s%26granular_bot_scope%3D1%26single_channel%3D0%26install_redirect%3D%26tracked%3D1%26team%3D\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://app.slack.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://app.slack.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Claude - Sleepknight - Slack</p><p class=\"url\">https://app.slack.com/client/T057M6YAJ11/D057MB6N010?redir=%2Foauth%3Fclient_id%3D4656224793073.4662891757348%26scope%3Dapp_mentions%253Aread%252Cchannels%253Ahistory%252Cchannels%253Aread%252Cchat%253Awrite%252Ccommands%252Cfiles%253Awrite%252Cgroups%253Ahistory%252Cgroups%253Aread%252Cim%253Ahistory%252Cim%253Aread%252Cmpim%253Ahistory%252Cmpim%253Aread%252Cteam%253Aread%252Cusers%253Aread%26user_scope%3D%26redirect_uri%3D%26state%3DeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnN0YWxsT3B0aW9ucyI6eyJzY29wZXMiOlsiYXBwX21lbnRpb25zOnJlYWQiLCJjaGFubmVsczpoaXN0b3J5IiwiY2hhbm5lbHM6cmVhZCIsImNoYXQ6d3JpdGUiLCJjb21tYW5kcyIsImZpbGVzOndyaXRlIiwiZ3JvdXBzOmhpc3RvcnkiLCJncm91cHM6cmVhZCIsImltOmhpc3RvcnkiLCJpbTpyZWFkIiwibXBpbTpoaXN0b3J5IiwibXBpbTpyZWFkIiwidGVhbTpyZWFkIiwidXNlcnM6cmVhZCJdfSwibm93IjoiMjAyMy0wNS0xM1QwNTo0NDowOC43NjlaIiwicmFuZG9tIjo0Njg5NjEsImlhdCI6MTY4Mzk1NjY0OH0.srdE_wLE4beuhd1ev46tvgw3NlKQUTy4VJ2nvl0gS9s%26granular_bot_scope%3D1%26single_channel%3D0%26install_redirect%3D%26tracked%3D1%26team%3D</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"字体天下-提供各类字体的免费下载和在线预览服务\" href=\"https://www.fonts.net.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.fonts.net.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.fonts.net.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">字体天下-提供各类字体的免费下载和在线预览服务</p><p class=\"url\">https://www.fonts.net.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"域名购买网站\" href=\"https://www.namesilo.com/account/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.namesilo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.namesilo.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">域名购买网站</p><p class=\"url\">https://www.namesilo.com/account/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"来此加密 - Let's Encrypt 在线免费申请SSL证书\" href=\"https://letsencrypt.osfipin.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://letsencrypt.osfipin.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://letsencrypt.osfipin.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">来此加密 - Let's Encrypt 在线免费申请SSL证书</p><p class=\"url\">https://letsencrypt.osfipin.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"ClouDNS: 域名设置 (cumerzhang.top)\" href=\"https://www.cloudns.net/records/domain/5095818/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.cloudns.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.cloudns.net/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">ClouDNS: 域名设置 (cumerzhang.top)</p><p class=\"url\">https://www.cloudns.net/records/domain/5095818/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"中国计算机技术职业资格网\" href=\"https://www.ruankao.org.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ruankao.org.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ruankao.org.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">中国计算机技术职业资格网</p><p class=\"url\">https://www.ruankao.org.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"攀拓计算机能力测评 - 程序设计\" href=\"https://www.patest.cn/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.patest.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.patest.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">攀拓计算机能力测评 - 程序设计</p><p class=\"url\">https://www.patest.cn/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Cheap Domain Names & Web Hosting Starting at $0.99! | NameSilo\" href=\"https://www.namesilo.com/?rid=076c694cr\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.namesilo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.namesilo.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Cheap Domain Names & Web Hosting Starting at $0.99! | NameSilo</p><p class=\"url\">https://www.namesilo.com/?rid=076c694cr</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"美国地址生成器 - 美国身份生成器 - 美国信用卡生成器\" href=\"https://www.meiguodizhi.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.meiguodizhi.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.meiguodizhi.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">美国地址生成器 - 美国身份生成器 - 美国信用卡生成器</p><p class=\"url\">https://www.meiguodizhi.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"5G | ShareTechnote\" href=\"http://www.sharetechnote.com/html/5G/Handbook_5G_Index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.sharetechnote.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.sharetechnote.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">5G | ShareTechnote</p><p class=\"url\">http://www.sharetechnote.com/html/5G/Handbook_5G_Index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"TOP 網站排名：11月 2023 訪問量最大的網站｜Similarweb\" href=\"https://www.similarweb.com/zh-tw/top-websites/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.similarweb.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.similarweb.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">TOP 網站排名：11月 2023 訪問量最大的網站｜Similarweb</p><p class=\"url\">https://www.similarweb.com/zh-tw/top-websites/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"下载 | Office Tool Plus 官方网站\" href=\"https://otp.landian.vip/zh-cn/download.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://otp.landian.vip/favicon.ico)\"></span><div class=\"left\"><img src=\"https://otp.landian.vip/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">下载 | Office Tool Plus 官方网站</p><p class=\"url\">https://otp.landian.vip/zh-cn/download.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"浙江省公共图书馆资源服务门户\" href=\"http://zjisa.zjlib.cn//home/zy_home.jsp?libCode=zjlib&libCode1=null&elecLibId=&elecAZ=&elec_re_type=hot_type&elec_change_background=null\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://zjisa.zjlib.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"http://zjisa.zjlib.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">浙江省公共图书馆资源服务门户</p><p class=\"url\">http://zjisa.zjlib.cn//home/zy_home.jsp?libCode=zjlib&libCode1=null&elecLibId=&elecAZ=&elec_re_type=hot_type&elec_change_background=null</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"迪威模型-海量3D模型下载-威海联讯信息技术有限公司\" href=\"http://www.3dwhere.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.3dwhere.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.3dwhere.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">迪威模型-海量3D模型下载-威海联讯信息技术有限公司</p><p class=\"url\">http://www.3dwhere.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"3d打印模型 stl文件素材 免费下载 - 爱给网\" href=\"https://www.aigei.com/3d/print/?wd=3d%E6%89%93%E5%8D%B0%E7%B4%A0%E6%9D%90%E5%BA%93&bd_vid=8258425428836347346\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.aigei.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.aigei.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">3d打印模型 stl文件素材 免费下载 - 爱给网</p><p class=\"url\">https://www.aigei.com/3d/print/?wd=3d%E6%89%93%E5%8D%B0%E7%B4%A0%E6%9D%90%E5%BA%93&bd_vid=8258425428836347346</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"3D打印资源库(3dzyk) - 专业的3D打印垂直平台 | 媒体_资源_教育\" href=\"https://www.3dzyk.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.3dzyk.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.3dzyk.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">3D打印资源库(3dzyk) - 专业的3D打印垂直平台 | 媒体_资源_教育</p><p class=\"url\">https://www.3dzyk.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Nodecafe - ComfyUI Custom Nodes Library and Wiki\" href=\"https://www.nodecafe.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nodecafe.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nodecafe.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Nodecafe - ComfyUI Custom Nodes Library and Wiki</p><p class=\"url\">https://www.nodecafe.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"AutoDL算力云 | 弹性、好用、省钱。租GPU就上AutoDL\" href=\"https://www.autodl.com/console/homepage/personal\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.autodl.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.autodl.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">AutoDL算力云 | 弹性、好用、省钱。租GPU就上AutoDL</p><p class=\"url\">https://www.autodl.com/console/homepage/personal</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"色輪、調色盤產生器 | Adobe Color\" href=\"https://color.adobe.com/zh/create/color-wheel\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://color.adobe.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://color.adobe.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">色輪、調色盤產生器 | Adobe Color</p><p class=\"url\">https://color.adobe.com/zh/create/color-wheel</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Google Fonts | 谷歌字体中文版 | GoogleFonts\" href=\"https://googlefonts.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://googlefonts.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://googlefonts.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Google Fonts | 谷歌字体中文版 | GoogleFonts</p><p class=\"url\">https://googlefonts.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"🏡 Home | Open WebUI\" href=\"https://docs.openwebui.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://docs.openwebui.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://docs.openwebui.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">🏡 Home | Open WebUI</p><p class=\"url\">https://docs.openwebui.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Earthworm\" href=\"https://earthworm.cuixueshe.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://earthworm.cuixueshe.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://earthworm.cuixueshe.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Earthworm</p><p class=\"url\">https://earthworm.cuixueshe.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"语文 · 汉字字帖 | Z2H字帖\" href=\"https://paper.z2h.cn/han\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://paper.z2h.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://paper.z2h.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">语文 · 汉字字帖 | Z2H字帖</p><p class=\"url\">https://paper.z2h.cn/han</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"绿软小站 - 分享绿色软件、免费软件、最新资讯！\" href=\"https://www.gndown.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.gndown.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.gndown.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">绿软小站 - 分享绿色软件、免费软件、最新资讯！</p><p class=\"url\">https://www.gndown.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Luvvoice：免费在线将文本转换为语音，无字数限制\" href=\"https://luvvoice.com/zh/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://luvvoice.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://luvvoice.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Luvvoice：免费在线将文本转换为语音，无字数限制</p><p class=\"url\">https://luvvoice.com/zh/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"中国国家图书馆 · 中国国家数字图书馆 · 国家典籍博物馆\" href=\"https://www.nlc.cn/web/index.shtml\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nlc.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nlc.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">中国国家图书馆 · 中国国家数字图书馆 · 国家典籍博物馆</p><p class=\"url\">https://www.nlc.cn/web/index.shtml</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Reference – Typst Documentation\" href=\"https://typst.app/docs/reference/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://typst.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://typst.app/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Reference – Typst Documentation</p><p class=\"url\">https://typst.app/docs/reference/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Image Upload - SM.MS - Simple Free Image Hosting\" href=\"https://smms.app/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://smms.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://smms.app/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Image Upload - SM.MS - Simple Free Image Hosting</p><p class=\"url\">https://smms.app/</p></div></a></div></div>\n<h2 id=\"影音\"><a href=\"#影音\" class=\"headerlink\" title=\"影音\"></a>影音</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"哔哩哔哩 (゜-゜)つロ 干杯~-bilibili\" href=\"https://www.bilibili.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.bilibili.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.bilibili.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</p><p class=\"url\">https://www.bilibili.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"AGE动漫 - 在线动漫观看\" href=\"https://www.agedm.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.agedm.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.agedm.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">AGE动漫 - 在线动漫观看</p><p class=\"url\">https://www.agedm.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"樱花动漫 - 专注二次元ACG动漫BT迅雷下载\" href=\"https://yinghuadongman.me/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://yinghuadongman.me/favicon.ico)\"></span><div class=\"left\"><img src=\"https://yinghuadongman.me/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">樱花动漫 - 专注二次元ACG动漫BT迅雷下载</p><p class=\"url\">https://yinghuadongman.me/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"风车动漫－专注动漫的门户网站\" href=\"https://www.92wuc.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.92wuc.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.92wuc.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">风车动漫－专注动漫的门户网站</p><p class=\"url\">https://www.92wuc.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"恭喜，访问嘻嘻成功！\" href=\"http://xixidm.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://xixidm.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://xixidm.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">恭喜，访问嘻嘻成功！</p><p class=\"url\">http://xixidm.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"阳光电影_免费电影_迅雷电影下载-第一电影天堂\" href=\"https://www.ygdy8.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ygdy8.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ygdy8.net/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">阳光电影_免费电影_迅雷电影下载-第一电影天堂</p><p class=\"url\">https://www.ygdy8.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"YouTube\" href=\"https://www.youtube.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.youtube.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.youtube.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">YouTube</p><p class=\"url\">https://www.youtube.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Facebook\" href=\"https://www.facebook.com/profile.php?id=61554129792966\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.facebook.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.facebook.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Facebook</p><p class=\"url\">https://www.facebook.com/profile.php?id=61554129792966</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"主页 / X\" href=\"https://twitter.com/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://twitter.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://twitter.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">主页 / X</p><p class=\"url\">https://twitter.com/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"pixiv\" href=\"https://www.pixiv.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.pixiv.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.pixiv.net/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">pixiv</p><p class=\"url\">https://www.pixiv.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"The Free Software Media System | Jellyfin\" href=\"https://jellyfin.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://jellyfin.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://jellyfin.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">The Free Software Media System | Jellyfin</p><p class=\"url\">https://jellyfin.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"个人中心 - 爱合租\" href=\"https://www.ihezu.com.cn/mine\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ihezu.com.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ihezu.com.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">个人中心 - 爱合租</p><p class=\"url\">https://www.ihezu.com.cn/mine</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"MusicBrainz Picard\" href=\"https://picard.musicbrainz.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://picard.musicbrainz.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://picard.musicbrainz.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">MusicBrainz Picard</p><p class=\"url\">https://picard.musicbrainz.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"动漫GIF-在Gifburg上搜索和下载GIF\" href=\"https://gifburg.com/cn/gifs/anime/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gifburg.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gifburg.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">动漫GIF-在Gifburg上搜索和下载GIF</p><p class=\"url\">https://gifburg.com/cn/gifs/anime/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Watchtving | 人人看美剧，美剧资讯网！\" href=\"https://www.watchtving.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.watchtving.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.watchtving.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Watchtving | 人人看美剧，美剧资讯网！</p><p class=\"url\">https://www.watchtving.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"集知盒子 - 有态度、有内涵、有价值\" href=\"https://www.jizhihezi.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.jizhihezi.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.jizhihezi.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">集知盒子 - 有态度、有内涵、有价值</p><p class=\"url\">https://www.jizhihezi.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"影视导航 - 免费电影网站导航\" href=\"https://ys.urlsdh.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ys.urlsdh.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ys.urlsdh.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">影视导航 - 免费电影网站导航</p><p class=\"url\">https://ys.urlsdh.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"品云机场导航 | 专业科学上网导航\" href=\"https://52.mk/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://52.mk/favicon.ico)\"></span><div class=\"left\"><img src=\"https://52.mk/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">品云机场导航 | 专业科学上网导航</p><p class=\"url\">https://52.mk/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"BT种子 | 磁力搜索神器\" href=\"https://cilishenqi.cc/sitetag/bt-torrent\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cilishenqi.cc/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cilishenqi.cc/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">BT种子 | 磁力搜索神器</p><p class=\"url\">https://cilishenqi.cc/sitetag/bt-torrent</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"磁力搜索 | 工具达人\" href=\"https://toolsdar.cn/sitetag/%E7%A3%81%E5%8A%9B%E6%90%9C%E7%B4%A2\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://toolsdar.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://toolsdar.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">磁力搜索 | 工具达人</p><p class=\"url\">https://toolsdar.cn/sitetag/%E7%A3%81%E5%8A%9B%E6%90%9C%E7%B4%A2</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"我的个人资料 — The Movie Database (TMDB)\" href=\"https://www.themoviedb.org/u/SilentPaladin\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.themoviedb.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.themoviedb.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">我的个人资料 — The Movie Database (TMDB)</p><p class=\"url\">https://www.themoviedb.org/u/SilentPaladin</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"七味 - 七味网\" href=\"https://www.pkmkv.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.pkmkv.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.pkmkv.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">七味 - 七味网</p><p class=\"url\">https://www.pkmkv.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"无版权图片网站导航 - 免费高清可商用图片网址大全\" href=\"https://www.amz123.com/tuku\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.amz123.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.amz123.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">无版权图片网站导航 - 免费高清可商用图片网址大全</p><p class=\"url\">https://www.amz123.com/tuku</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"STC-SPADES\" href=\"https://stc-spades.com/user\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://stc-spades.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://stc-spades.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">STC-SPADES</p><p class=\"url\">https://stc-spades.com/user</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"放心云\" href=\"https://speed17.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://speed17.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://speed17.net/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">放心云</p><p class=\"url\">https://speed17.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"用户中心 - prprCloud\" href=\"https://prpr.96110.cn.com/clientarea.php?action=productdetails&id=136414\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://prpr.96110.cn.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://prpr.96110.cn.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">用户中心 - prprCloud</p><p class=\"url\">https://prpr.96110.cn.com/clientarea.php?action=productdetails&id=136414</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"趣作图—海量图库_电商素材_高清图片\" href=\"https://pickwant.com/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pickwant.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pickwant.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">趣作图—海量图库_电商素材_高清图片</p><p class=\"url\">https://pickwant.com/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Freesound\" href=\"https://freesound.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://freesound.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://freesound.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Freesound</p><p class=\"url\">https://freesound.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"適合IPTV的免費EPG源 | 免費電視節目表\" href=\"https://epg.pw/xmltv.html?lang=zh-hant\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://epg.pw/favicon.ico)\"></span><div class=\"left\"><img src=\"https://epg.pw/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">適合IPTV的免費EPG源 | 免費電視節目表</p><p class=\"url\">https://epg.pw/xmltv.html?lang=zh-hant</p></div></a></div></div>\n<h2 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"SWITCH游戏 | 上游世界\" href=\"https://www.vgter.com/archives/category/switch\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.vgter.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.vgter.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">SWITCH游戏 | 上游世界</p><p class=\"url\">https://www.vgter.com/archives/category/switch</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Screep 中文教程目录 - 简书\" href=\"https://www.jianshu.com/p/5431cb7f42d3\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.jianshu.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.jianshu.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Screep 中文教程目录 - 简书</p><p class=\"url\">https://www.jianshu.com/p/5431cb7f42d3</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"总览 | Screeps 中文文档\" href=\"https://screeps-cn.github.io/index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://screeps-cn.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://screeps-cn.github.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">总览 | Screeps 中文文档</p><p class=\"url\">https://screeps-cn.github.io/index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Introduction - Screeps Typescript Starter\" href=\"https://screepers.gitbook.io/screeps-typescript-starter/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://screepers.gitbook.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://screepers.gitbook.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Introduction - Screeps Typescript Starter</p><p class=\"url\">https://screepers.gitbook.io/screeps-typescript-starter/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Nexus mods and community\" href=\"https://www.nexusmods.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nexusmods.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nexusmods.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Nexus mods and community</p><p class=\"url\">https://www.nexusmods.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"MC百科|最大的Minecraft中文MOD百科\" href=\"https://www.mcmod.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.mcmod.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.mcmod.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">MC百科|最大的Minecraft中文MOD百科</p><p class=\"url\">https://www.mcmod.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"https://www.ppsspp.org\" href=\"https://www.ppsspp.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ppsspp.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ppsspp.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">https://www.ppsspp.org</p><p class=\"url\">https://www.ppsspp.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"围棋-棋力自测\" href=\"https://www.weiqi.net/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.weiqi.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.weiqi.net/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">围棋-棋力自测</p><p class=\"url\">https://www.weiqi.net/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"KataGo Distributed Training\" href=\"https://katagotraining.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://katagotraining.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://katagotraining.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">KataGo Distributed Training</p><p class=\"url\">https://katagotraining.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SteamDB\" href=\"https://steamdb.info/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://steamdb.info/favicon.ico)\"></span><div class=\"left\"><img src=\"https://steamdb.info/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">SteamDB</p><p class=\"url\">https://steamdb.info/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"欢迎来到 Steam\" href=\"https://store.steampowered.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://store.steampowered.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://store.steampowered.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">欢迎来到 Steam</p><p class=\"url\">https://store.steampowered.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Electronic Arts 首頁 - EA 官方網站\" href=\"https://www.ea.com/zh-tw\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.ea.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.ea.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Electronic Arts 首頁 - EA 官方網站</p><p class=\"url\">https://www.ea.com/zh-tw</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"游戏 - Ubisoft Connect\" href=\"https://zh-cn.ubisoft.com/ubisoftconnect\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://zh-cn.ubisoft.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://zh-cn.ubisoft.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">游戏 - Ubisoft Connect</p><p class=\"url\">https://zh-cn.ubisoft.com/ubisoftconnect</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"《英雄聯盟》\" href=\"https://www.leagueoflegends.com/zh-tw/?_gl=1*dz7cx9*_ga*MTA3NDI3MDUzNy4xNzEzNjA0OTgx*_ga_FXBJE5DEDD*MTcxNjAyODExOS4yLjEuMTcxNjAyODMwNi4wLjAuMA..\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.leagueoflegends.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.leagueoflegends.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">《英雄聯盟》</p><p class=\"url\">https://www.leagueoflegends.com/zh-tw/?_gl=1*dz7cx9*_ga*MTA3NDI3MDUzNy4xNzEzNjA0OTgx*_ga_FXBJE5DEDD*MTcxNjAyODExOS4yLjEuMTcxNjAyODMwNi4wLjAuMA..</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Epic游戏商城 | 下载畅玩 PC 平台游戏、模组、DLC 和更多 – Epic Games\" href=\"https://store.epicgames.com/zh-CN/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://store.epicgames.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://store.epicgames.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Epic游戏商城 | 下载畅玩 PC 平台游戏、模组、DLC 和更多 – Epic Games</p><p class=\"url\">https://store.epicgames.com/zh-CN/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"植僵工具箱\" href=\"https://pvz.tools/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pvz.tools/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pvz.tools/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">植僵工具箱</p><p class=\"url\">https://pvz.tools/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"浏览所有支持的游戏 | WeMod\" href=\"https://www.wemod.com/zh/cheats\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.wemod.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.wemod.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">浏览所有支持的游戏 | WeMod</p><p class=\"url\">https://www.wemod.com/zh/cheats</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"psp游戏排行榜-psp游戏大全-k73游戏之家\" href=\"http://www.k73.com/pspdown/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.k73.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.k73.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">psp游戏排行榜-psp游戏大全-k73游戏之家</p><p class=\"url\">http://www.k73.com/pspdown/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"娱乐力量全开！——YGO Game Online\" href=\"http://ygopro.ysepan.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://ygopro.ysepan.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://ygopro.ysepan.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">娱乐力量全开！——YGO Game Online</p><p class=\"url\">http://ygopro.ysepan.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"仪表盘 - LittleSkin\" href=\"https://littleskin.cn/user\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://littleskin.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://littleskin.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">仪表盘 - LittleSkin</p><p class=\"url\">https://littleskin.cn/user</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Switch520\" href=\"https://www.gamer520.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.gamer520.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.gamer520.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Switch520</p><p class=\"url\">https://www.gamer520.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"CumerZhang's Steam profile - Exophase.com\" href=\"https://www.exophase.com/steam/user/76561198345489610/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.exophase.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.exophase.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">CumerZhang's Steam profile - Exophase.com</p><p class=\"url\">https://www.exophase.com/steam/user/76561198345489610/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"RuTracker.org\" href=\"https://rutracker.org/forum/index.php\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://rutracker.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://rutracker.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">RuTracker.org</p><p class=\"url\">https://rutracker.org/forum/index.php</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"MDPro3\" href=\"https://flowus.cn/share/9a00b49d-3bbb-4d4e-a28b-35018c9a14db?code=CCGLRX\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://flowus.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://flowus.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">MDPro3</p><p class=\"url\">https://flowus.cn/share/9a00b49d-3bbb-4d4e-a28b-35018c9a14db?code=CCGLRX</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"What's new | Virt-A-Mate Hub\" href=\"https://clouddedicatedserver.virtamate.com/whats-new/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://clouddedicatedserver.virtamate.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://clouddedicatedserver.virtamate.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">What's new | Virt-A-Mate Hub</p><p class=\"url\">https://clouddedicatedserver.virtamate.com/whats-new/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Gomoku AI protocol\" href=\"https://plastovicka.github.io/protocl2en.htm\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://plastovicka.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://plastovicka.github.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Gomoku AI protocol</p><p class=\"url\">https://plastovicka.github.io/protocl2en.htm</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"101围棋网\" href=\"https://www.101weiqi.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.101weiqi.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.101weiqi.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">101围棋网</p><p class=\"url\">https://www.101weiqi.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"RenjuClass五子棋课程在线学习\" href=\"https://ku10.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ku10.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ku10.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">RenjuClass五子棋课程在线学习</p><p class=\"url\">https://ku10.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"五林五子棋 - 专业的五子棋比赛和学习平台\" href=\"https://renjuworld.net/renju/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://renjuworld.net/favicon.ico)\"></span><div class=\"left\"><img src=\"https://renjuworld.net/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">五林五子棋 - 专业的五子棋比赛和学习平台</p><p class=\"url\">https://renjuworld.net/renju/</p></div></a></div></div>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"HelloGitHub\" href=\"https://hellogithub.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://hellogithub.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://hellogithub.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">HelloGitHub</p><p class=\"url\">https://hellogithub.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"GitHub\" href=\"https://github.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://github.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://github.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">GitHub</p><p class=\"url\">https://github.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Introduction - OpenAI API\" href=\"https://platform.openai.com/docs/introduction\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://platform.openai.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://platform.openai.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Introduction - OpenAI API</p><p class=\"url\">https://platform.openai.com/docs/introduction</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Vcpkg Ports\" href=\"https://vcpkg.roundtrip.dev/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://vcpkg.roundtrip.dev/favicon.ico)\"></span><div class=\"left\"><img src=\"https://vcpkg.roundtrip.dev/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Vcpkg Ports</p><p class=\"url\">https://vcpkg.roundtrip.dev/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Dashboard - WakaTime\" href=\"https://wakatime.com/dashboard\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://wakatime.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://wakatime.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Dashboard - WakaTime</p><p class=\"url\">https://wakatime.com/dashboard</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"C++中文 - API参考文档\" href=\"https://www.apiref.com/cpp-zh/index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.apiref.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.apiref.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">C++中文 - API参考文档</p><p class=\"url\">https://www.apiref.com/cpp-zh/index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Hugging Face – The AI community building the future.\" href=\"https://huggingface.co/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://huggingface.co/favicon.ico)\"></span><div class=\"left\"><img src=\"https://huggingface.co/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Hugging Face – The AI community building the future.</p><p class=\"url\">https://huggingface.co/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Docker Hub\" href=\"https://hub.docker.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://hub.docker.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://hub.docker.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Docker Hub</p><p class=\"url\">https://hub.docker.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Linux命令大全(手册) – 真正好用的Linux命令在线查询网站\" href=\"https://www.linuxcool.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.linuxcool.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.linuxcool.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Linux命令大全(手册) – 真正好用的Linux命令在线查询网站</p><p class=\"url\">https://www.linuxcool.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"吾爱破解 - LCG - LSG|安卓破解|病毒分析|www.52pojie.cn\" href=\"https://www.52pojie.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.52pojie.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.52pojie.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">吾爱破解 - LCG - LSG|安卓破解|病毒分析|www.52pojie.cn</p><p class=\"url\">https://www.52pojie.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"SSH工具 客户端\" href=\"http://www.hostbuf.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://www.hostbuf.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://www.hostbuf.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">SSH工具 客户端</p><p class=\"url\">http://www.hostbuf.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"JFrog ConanCenter - The Central Repository for C / C++ packages\" href=\"https://conan.io/center/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://conan.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://conan.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">JFrog ConanCenter - The Central Repository for C / C++ packages</p><p class=\"url\">https://conan.io/center/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"FreeRTOS - Market leading RTOS (Real Time Operating System) for embedded systems with Internet of Things extensions\" href=\"https://freertos.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://freertos.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://freertos.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">FreeRTOS - Market leading RTOS (Real Time Operating System) for embedded systems with Internet of Things extensions</p><p class=\"url\">https://freertos.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Projects - Home\" href=\"https://dev.azure.com/CumerZhang\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://dev.azure.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://dev.azure.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Projects - Home</p><p class=\"url\">https://dev.azure.com/CumerZhang</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Index of /archive/qt\" href=\"http://download.qt.io/archive/qt/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://download.qt.io/favicon.ico)\"></span><div class=\"left\"><img src=\"http://download.qt.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Index of /archive/qt</p><p class=\"url\">http://download.qt.io/archive/qt/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Learn Git Branching\" href=\"https://learngitbranching.js.org/?locale=zh_CN\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://learngitbranching.js.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://learngitbranching.js.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Learn Git Branching</p><p class=\"url\">https://learngitbranching.js.org/?locale=zh_CN</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"ROS2入门教程 | 古月居\" href=\"https://www.guyuehome.com/category/column/ros2-tutorials\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.guyuehome.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.guyuehome.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">ROS2入门教程 | 古月居</p><p class=\"url\">https://www.guyuehome.com/category/column/ros2-tutorials</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"我的工作台 - 码云 Gitee.com\" href=\"https://gitee.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gitee.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gitee.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">我的工作台 - 码云 Gitee.com</p><p class=\"url\">https://gitee.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"项目 · 仪表板 · GitLab\" href=\"https://gitlab.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gitlab.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gitlab.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">项目 · 仪表板 · GitLab</p><p class=\"url\">https://gitlab.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"堆栈溢出-开发人员学习，共享和建立职业的地方\" href=\"https://stackoverflow.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://stackoverflow.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://stackoverflow.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">堆栈溢出-开发人员学习，共享和建立职业的地方</p><p class=\"url\">https://stackoverflow.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"力扣（LeetCode）官网 - 全球极客挚爱的技术成长平台\" href=\"https://leetcode.cn/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://leetcode.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://leetcode.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">力扣（LeetCode）官网 - 全球极客挚爱的技术成长平台</p><p class=\"url\">https://leetcode.cn/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Team overview | Netlify\" href=\"https://app.netlify.com/teams/cumerzhang/overview\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://app.netlify.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://app.netlify.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Team overview | Netlify</p><p class=\"url\">https://app.netlify.com/teams/cumerzhang/overview</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"电气罐头 ⚡️\" href=\"https://tech.biko.pub/tool#/rpi-apt-sources\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tech.biko.pub/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tech.biko.pub/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">电气罐头 ⚡️</p><p class=\"url\">https://tech.biko.pub/tool#/rpi-apt-sources</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"概览 | NoneBot\" href=\"https://nb2.baka.icu/docs/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://nb2.baka.icu/favicon.ico)\"></span><div class=\"left\"><img src=\"https://nb2.baka.icu/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">概览 | NoneBot</p><p class=\"url\">https://nb2.baka.icu/docs/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"主页 - MasterGo\" href=\"https://mastergo.com/files/home\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://mastergo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://mastergo.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">主页 - MasterGo</p><p class=\"url\">https://mastergo.com/files/home</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"React\" href=\"https://react.docschina.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://react.docschina.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://react.docschina.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">React</p><p class=\"url\">https://react.docschina.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Pinecone Console\" href=\"https://app.pinecone.io/organizations/-NT05T8Axq4fcVukaBgJ/projects/asia-southeast1-gcp:850cb17/keys\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://app.pinecone.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://app.pinecone.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Pinecone Console</p><p class=\"url\">https://app.pinecone.io/organizations/-NT05T8Axq4fcVukaBgJ/projects/asia-southeast1-gcp:850cb17/keys</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"中文文档 - Tailwind CSS 中文文档\" href=\"https://www.tailwindcss.cn/docs\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.tailwindcss.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.tailwindcss.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">中文文档 - Tailwind CSS 中文文档</p><p class=\"url\">https://www.tailwindcss.cn/docs</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"The DevSecOps Platform | GitLab\" href=\"https://about.gitlab.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://about.gitlab.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://about.gitlab.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">The DevSecOps Platform | GitLab</p><p class=\"url\">https://about.gitlab.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"模型库首页 · 魔搭社区\" href=\"https://modelscope.cn/models\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://modelscope.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://modelscope.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">模型库首页 · 魔搭社区</p><p class=\"url\">https://modelscope.cn/models</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"GitClone\" href=\"https://gitclone.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://gitclone.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://gitclone.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">GitClone</p><p class=\"url\">https://gitclone.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"首页 | ethereum.org\" href=\"https://ethereum.org/zh/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://ethereum.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://ethereum.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">首页 | ethereum.org</p><p class=\"url\">https://ethereum.org/zh/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"cppds.com\" href=\"http://cppds.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://cppds.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://cppds.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">cppds.com</p><p class=\"url\">http://cppds.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"AutoXjs\" href=\"http://doc.autoxjs.com/#/?id=%e7%bb%bc%e8%bf%b0\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://doc.autoxjs.com/favicon.ico)\"></span><div class=\"left\"><img src=\"http://doc.autoxjs.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">AutoXjs</p><p class=\"url\">http://doc.autoxjs.com/#/?id=%e7%bb%bc%e8%bf%b0</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"CSSBattle\" href=\"https://cssbattle.dev/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cssbattle.dev/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cssbattle.dev/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">CSSBattle</p><p class=\"url\">https://cssbattle.dev/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Dashboard – Vercel\" href=\"https://vercel.com/dashboard\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://vercel.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://vercel.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Dashboard – Vercel</p><p class=\"url\">https://vercel.com/dashboard</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Neumorphism/Soft UI CSS shadow generator\" href=\"https://neumorphism.io/#e0e0e0\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://neumorphism.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://neumorphism.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Neumorphism/Soft UI CSS shadow generator</p><p class=\"url\">https://neumorphism.io/#e0e0e0</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Tushare大数据社区\" href=\"https://tushare.pro/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tushare.pro/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tushare.pro/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Tushare大数据社区</p><p class=\"url\">https://tushare.pro/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Auto.js Pro\" href=\"https://pro.autojs.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pro.autojs.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pro.autojs.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Auto.js Pro</p><p class=\"url\">https://pro.autojs.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Google Analytics（分析） | 首页\" href=\"https://analytics.google.com/analytics/web/provision/#/p419218611/reports/intelligenthome\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://analytics.google.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://analytics.google.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Google Analytics（分析） | 首页</p><p class=\"url\">https://analytics.google.com/analytics/web/provision/#/p419218611/reports/intelligenthome</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"PoweredbyAI - Free ai tools | Home\" href=\"https://poweredbyai.app/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://poweredbyai.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://poweredbyai.app/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">PoweredbyAI - Free ai tools | Home</p><p class=\"url\">https://poweredbyai.app/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Font Awesome\" href=\"https://fontawesome.com/search?o=r&m=free\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://fontawesome.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://fontawesome.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Font Awesome</p><p class=\"url\">https://fontawesome.com/search?o=r&m=free</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"switchroot\" href=\"https://switchroot.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://switchroot.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://switchroot.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">switchroot</p><p class=\"url\">https://switchroot.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"全部 - 硬件模块设计 - 硬创社\" href=\"https://x.jlc.com/category/all\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://x.jlc.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://x.jlc.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">全部 - 硬件模块设计 - 硬创社</p><p class=\"url\">https://x.jlc.com/category/all</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"牛客网-找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网\" href=\"https://www.nowcoder.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.nowcoder.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.nowcoder.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">牛客网-找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网</p><p class=\"url\">https://www.nowcoder.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"ChatGPT\" href=\"https://chatgpt.com/c/3eb3068d-9781-4b20-8579-af613633ffc3\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://chatgpt.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://chatgpt.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">ChatGPT</p><p class=\"url\">https://chatgpt.com/c/3eb3068d-9781-4b20-8579-af613633ffc3</p></div></a></div></div>\n<h2 id=\"待看\"><a href=\"#待看\" class=\"headerlink\" title=\"待看\"></a>待看</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"1. 引言 — 动手学深度学习 2.0.0 documentation\" href=\"https://zh.d2l.ai/chapter_introduction/index.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://zh.d2l.ai/favicon.ico)\"></span><div class=\"left\"><img src=\"https://zh.d2l.ai/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">1. 引言 — 动手学深度学习 2.0.0 documentation</p><p class=\"url\">https://zh.d2l.ai/chapter_introduction/index.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"arXiv.org e-Print archive\" href=\"https://arxiv.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://arxiv.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://arxiv.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">arXiv.org e-Print archive</p><p class=\"url\">https://arxiv.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"TXYZ - Chat With Knowledge\" href=\"https://www.txyz.ai/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.txyz.ai/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.txyz.ai/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">TXYZ - Chat With Knowledge</p><p class=\"url\">https://www.txyz.ai/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Thingiverse - Digital Designs for Physical Objects\" href=\"https://www.thingiverse.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.thingiverse.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.thingiverse.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Thingiverse - Digital Designs for Physical Objects</p><p class=\"url\">https://www.thingiverse.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"简介 - Effective Modern C++\" href=\"https://cntransgroup.github.io/EffectiveModernCppChinese/Introduction.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cntransgroup.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cntransgroup.github.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">简介 - Effective Modern C++</p><p class=\"url\">https://cntransgroup.github.io/EffectiveModernCppChinese/Introduction.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Hello 算法\" href=\"https://www.hello-algo.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.hello-algo.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.hello-algo.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Hello 算法</p><p class=\"url\">https://www.hello-algo.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"开源工具，使用简单的文字描述画UML图。\" href=\"https://plantuml.com/zh/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://plantuml.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://plantuml.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">开源工具，使用简单的文字描述画UML图。</p><p class=\"url\">https://plantuml.com/zh/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"产品经理的人工智能学习库 - easyAI\" href=\"https://easyai.tech/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://easyai.tech/favicon.ico)\"></span><div class=\"left\"><img src=\"https://easyai.tech/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">产品经理的人工智能学习库 - easyAI</p><p class=\"url\">https://easyai.tech/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Data Structure Visualization\" href=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.cs.usfca.edu/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.cs.usfca.edu/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Data Structure Visualization</p><p class=\"url\">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Introduction - Backtrader\" href=\"https://www.backtrader.com/docu/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.backtrader.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.backtrader.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Introduction - Backtrader</p><p class=\"url\">https://www.backtrader.com/docu/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"FPGA验证流程（远程实验版）\" href=\"RISC-V CPU设计实验教程, https://fpga-lab.gitee.io/jurv-open/jurv/v2.0/L02-guide-remote.html, https://fpga-lab.gitee.io/favicon.ico\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\">FPGA验证流程（远程实验版）</p><p class=\"url\">RISC-V CPU设计实验教程, https://fpga-lab.gitee.io/jurv-open/jurv/v2.0/L02-guide-remote.html, https://fpga-lab.gitee.io/favicon.ico</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"书栈网 · BookStack_程序员IT互联网开源编程书籍免费阅读，助您【码】力十足！\" href=\"https://www.bookstack.cn/cate\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.bookstack.cn/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.bookstack.cn/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">书栈网 · BookStack_程序员IT互联网开源编程书籍免费阅读，助您【码】力十足！</p><p class=\"url\">https://www.bookstack.cn/cate</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"1. Kaleidoscope： Kaleidoscope 简介和 Lexer — LLVM 19.0.0git 文档 --- 1. Kaleidoscope: Kaleidoscope Introduction and the Lexer — LLVM 19.0.0git documentation\" href=\"https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://llvm.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://llvm.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">1. Kaleidoscope： Kaleidoscope 简介和 Lexer — LLVM 19.0.0git 文档 --- 1. Kaleidoscope: Kaleidoscope Introduction and the Lexer — LLVM 19.0.0git documentation</p><p class=\"url\">https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Lv1.3. 解析 main 函数 - 北京大学编译实践课程在线文档 | 北大编译实践在线文档\" href=\"https://pku-minic.github.io/online-doc/#/lv1-main/parsing-main\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://pku-minic.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://pku-minic.github.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Lv1.3. 解析 main 函数 - 北京大学编译实践课程在线文档 | 北大编译实践在线文档</p><p class=\"url\">https://pku-minic.github.io/online-doc/#/lv1-main/parsing-main</p></div></a></div></div>\n<h2 id=\"漫画\"><a href=\"#漫画\" class=\"headerlink\" title=\"漫画\"></a>漫画</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"Netflav - 主頁 / Home\" href=\"https://netflav.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://netflav.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://netflav.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Netflav - 主頁 / Home</p><p class=\"url\">https://netflav.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"免費A漫 - 禁漫天堂\" href=\"https://18comic.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://18comic.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://18comic.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">免費A漫 - 禁漫天堂</p><p class=\"url\">https://18comic.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"\" href=\"\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)\"></span><div class=\"left\"><img src=\"https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg\"/></div><div class=\"right\"><p class=\"text\"></p><p class=\"url\"></p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Hanime1.me - H動漫/裏番/線上看\" href=\"https://hanime1.me/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://hanime1.me/favicon.ico)\"></span><div class=\"left\"><img src=\"https://hanime1.me/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Hanime1.me - H動漫/裏番/線上看</p><p class=\"url\">https://hanime1.me/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Pronhub色情片 | Pornhub.com\" href=\"https://cn.pornhub.com/video/search?search=pronhub\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://cn.pornhub.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://cn.pornhub.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Pronhub色情片 | Pornhub.com</p><p class=\"url\">https://cn.pornhub.com/video/search?search=pronhub</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"免費成人視頻 - XVIDEOS.COM\" href=\"https://www.xvideos.com/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.xvideos.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.xvideos.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">免費成人視頻 - XVIDEOS.COM</p><p class=\"url\">https://www.xvideos.com/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"在线里番 - ACG盒子\" href=\"https://www.acgbox.link/q/zaixianlifan\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.acgbox.link/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.acgbox.link/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">在线里番 - ACG盒子</p><p class=\"url\">https://www.acgbox.link/q/zaixianlifan</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"女优大全 - 男人团\" href=\"http://abc.nanrenvip3.cc/nvyouku/1-0-0-0-0-0.html\"><span class=\"link-card-backdrop\" style=\"background-image: url(http://abc.nanrenvip3.cc/favicon.ico)\"></span><div class=\"left\"><img src=\"http://abc.nanrenvip3.cc/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">女优大全 - 男人团</p><p class=\"url\">http://abc.nanrenvip3.cc/nvyouku/1-0-0-0-0-0.html</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"琉璃神社★分享动漫快乐 琉璃神社APP 琉璃app\" href=\"https://acg.gy/?lang=2021\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://acg.gy/favicon.ico)\"></span><div class=\"left\"><img src=\"https://acg.gy/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">琉璃神社★分享动漫快乐 琉璃神社APP 琉璃app</p><p class=\"url\">https://acg.gy/?lang=2021</p></div></a></div></div>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><div class=\"link-group\"><div class=\"tagLink\"><a class=\"link-card\" title=\"YGOPro AI脚本教程（译文） - 简书\" href=\"https://www.jianshu.com/p/762d78417576\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.jianshu.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.jianshu.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">YGOPro AI脚本教程（译文） - 简书</p><p class=\"url\">https://www.jianshu.com/p/762d78417576</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Virt a Mate（VAM）游戏折腾记录 – IYATT-yx 的博客\" href=\"https://blog.iyatt.com/?p=13283#%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://blog.iyatt.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://blog.iyatt.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">Virt a Mate（VAM）游戏折腾记录 – IYATT-yx 的博客</p><p class=\"url\">https://blog.iyatt.com/?p=13283#%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"VirScan - 多引擎文件在线检测平台\" href=\"https://www.virscan.org/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://www.virscan.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://www.virscan.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">VirScan - 多引擎文件在线检测平台</p><p class=\"url\">https://www.virscan.org/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"简介 · PyTorch实用教程（第二版）\" href=\"https://tingsongyu.github.io/PyTorch-Tutorial-2nd/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://tingsongyu.github.io/favicon.ico)\"></span><div class=\"left\"><img src=\"https://tingsongyu.github.io/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">简介 · PyTorch实用教程（第二版）</p><p class=\"url\">https://tingsongyu.github.io/PyTorch-Tutorial-2nd/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"🦀 Rust 学习路线图 | Better Rust\" href=\"https://rs.trybetter.app/docs/guide/roadmap/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://rs.trybetter.app/favicon.ico)\"></span><div class=\"left\"><img src=\"https://rs.trybetter.app/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">🦀 Rust 学习路线图 | Better Rust</p><p class=\"url\">https://rs.trybetter.app/docs/guide/roadmap/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"简介 - 通过例子学 Rust 中文版\" href=\"https://rustwiki.org/zh-CN/rust-by-example/\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://rustwiki.org/favicon.ico)\"></span><div class=\"left\"><img src=\"https://rustwiki.org/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">简介 - 通过例子学 Rust 中文版</p><p class=\"url\">https://rustwiki.org/zh-CN/rust-by-example/</p></div></a></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"91自拍论坛 - Powered by Discuz!\" href=\"https://t0601.91p889.com/index.php\"><span class=\"link-card-backdrop\" style=\"background-image: url(https://t0601.91p889.com/favicon.ico)\"></span><div class=\"left\"><img src=\"https://t0601.91p889.com/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">91自拍论坛 - Powered by Discuz!</p><p class=\"url\">https://t0601.91p889.com/index.php</p></div></a></div></div>\n"}],"Post":[{"title":"LaTex常用符号","img":"https://cdn.pixabay.com/photo/2022/03/06/06/42/flowers-7050948_960_720.jpg","excerpt":"常见和非常见的数学符号与LaTex代码之间对应关系","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-18T12:59:21.000Z","_content":"\n# LaTex常用符号\n\n![](https://s2.loli.net/2022/04/18/bztYh69LiXTE8Bw.png)\n\n![](https://s2.loli.net/2022/04/18/ljLGwHYqdteMPRS.png)\n\n![](https://s2.loli.net/2022/04/18/BnrJAokpV1ICqeF.png)\n\n![](https://s2.loli.net/2022/04/18/vGAx5YdTMuNRnpI.png)\n\n![](https://s2.loli.net/2022/04/18/RcVUrm6X7lpIvEA.png)\n\n![](https://s2.loli.net/2022/04/18/387hO461FWEYRtS.png)\n\n![](https://s2.loli.net/2022/04/18/xhAHJN8ecv6tdUl.png)\n\n![](https://s2.loli.net/2022/04/18/udfjyGSZwiThc1e.png)\n\n![](https://s2.loli.net/2022/04/18/Tmlqs9an1FMpjwg.png)\n\n![](https://s2.loli.net/2022/04/18/WzJKajlNMquYhgp.png)\n\n![](https://s2.loli.net/2022/04/18/sPSUtwxIH4DnCe2.png)\n\n![](https://s2.loli.net/2022/04/18/SZYTJbkglL4DVXt.png)\n\n![](https://s2.loli.net/2022/04/18/Kcy6vSG4nRIqpuV.png)\n\n![](https://s2.loli.net/2022/04/18/pu7xwyJbsSBTV9R.png)\n\n![](https://s2.loli.net/2022/04/18/RJDgNrjOBUw3Cu4.png)\n\n![](https://s2.loli.net/2022/04/18/PV9Arq35BTjiGQ1.png)","source":"_posts/数学/LaTex常用符号.md","raw":"---\ntitle: LaTex常用符号\nimg: https://cdn.pixabay.com/photo/2022/03/06/06/42/flowers-7050948_960_720.jpg\nexcerpt: 常见和非常见的数学符号与LaTex代码之间对应关系\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 数学\ntags: [LaTex,数学,数学公式符号]\nmathjax: true\ndate: 2022-04-18 20:59:21\n---\n\n# LaTex常用符号\n\n![](https://s2.loli.net/2022/04/18/bztYh69LiXTE8Bw.png)\n\n![](https://s2.loli.net/2022/04/18/ljLGwHYqdteMPRS.png)\n\n![](https://s2.loli.net/2022/04/18/BnrJAokpV1ICqeF.png)\n\n![](https://s2.loli.net/2022/04/18/vGAx5YdTMuNRnpI.png)\n\n![](https://s2.loli.net/2022/04/18/RcVUrm6X7lpIvEA.png)\n\n![](https://s2.loli.net/2022/04/18/387hO461FWEYRtS.png)\n\n![](https://s2.loli.net/2022/04/18/xhAHJN8ecv6tdUl.png)\n\n![](https://s2.loli.net/2022/04/18/udfjyGSZwiThc1e.png)\n\n![](https://s2.loli.net/2022/04/18/Tmlqs9an1FMpjwg.png)\n\n![](https://s2.loli.net/2022/04/18/WzJKajlNMquYhgp.png)\n\n![](https://s2.loli.net/2022/04/18/sPSUtwxIH4DnCe2.png)\n\n![](https://s2.loli.net/2022/04/18/SZYTJbkglL4DVXt.png)\n\n![](https://s2.loli.net/2022/04/18/Kcy6vSG4nRIqpuV.png)\n\n![](https://s2.loli.net/2022/04/18/pu7xwyJbsSBTV9R.png)\n\n![](https://s2.loli.net/2022/04/18/RJDgNrjOBUw3Cu4.png)\n\n![](https://s2.loli.net/2022/04/18/PV9Arq35BTjiGQ1.png)","slug":"数学/LaTex常用符号","published":1,"updated":"2022-04-18T14:55:16.517Z","layout":"post","photos":[],"_id":"cm1z7gip30001dwvx0mpc4m73","content":"<h1 id=\"LaTex常用符号\"><a href=\"#LaTex常用符号\" class=\"headerlink\" title=\"LaTex常用符号\"></a>LaTex常用符号</h1><p><img src=\"https://s2.loli.net/2022/04/18/bztYh69LiXTE8Bw.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/bztYh69LiXTE8Bw.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/ljLGwHYqdteMPRS.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/ljLGwHYqdteMPRS.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/BnrJAokpV1ICqeF.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/BnrJAokpV1ICqeF.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/vGAx5YdTMuNRnpI.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/vGAx5YdTMuNRnpI.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/RcVUrm6X7lpIvEA.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/RcVUrm6X7lpIvEA.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/387hO461FWEYRtS.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/387hO461FWEYRtS.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/xhAHJN8ecv6tdUl.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/xhAHJN8ecv6tdUl.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/udfjyGSZwiThc1e.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/udfjyGSZwiThc1e.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/Tmlqs9an1FMpjwg.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/Tmlqs9an1FMpjwg.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/WzJKajlNMquYhgp.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/WzJKajlNMquYhgp.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/sPSUtwxIH4DnCe2.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/sPSUtwxIH4DnCe2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/SZYTJbkglL4DVXt.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/SZYTJbkglL4DVXt.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/Kcy6vSG4nRIqpuV.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/Kcy6vSG4nRIqpuV.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/pu7xwyJbsSBTV9R.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/pu7xwyJbsSBTV9R.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/RJDgNrjOBUw3Cu4.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/RJDgNrjOBUw3Cu4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/PV9Arq35BTjiGQ1.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/PV9Arq35BTjiGQ1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n","more":"<h1 id=\"LaTex常用符号\"><a href=\"#LaTex常用符号\" class=\"headerlink\" title=\"LaTex常用符号\"></a>LaTex常用符号</h1><p><img src=\"https://s2.loli.net/2022/04/18/bztYh69LiXTE8Bw.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/ljLGwHYqdteMPRS.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/BnrJAokpV1ICqeF.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/vGAx5YdTMuNRnpI.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/RcVUrm6X7lpIvEA.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/387hO461FWEYRtS.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/xhAHJN8ecv6tdUl.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/udfjyGSZwiThc1e.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/Tmlqs9an1FMpjwg.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/WzJKajlNMquYhgp.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/sPSUtwxIH4DnCe2.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/SZYTJbkglL4DVXt.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/Kcy6vSG4nRIqpuV.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/pu7xwyJbsSBTV9R.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/RJDgNrjOBUw3Cu4.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/04/18/PV9Arq35BTjiGQ1.png\"></p>\n"},{"title":"英语语法","img":"https://cdn.pixabay.com/photo/2022/04/11/18/05/easter-eggs-7126346_960_720.jpg","excerpt":"考研英语语法汇总","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-18T13:02:23.000Z","_content":"\n\n# 英语语法\n\n# 一、简单句\n\n## （一）句子的分类\n\n> 什么是英语的句子：英语必须具备主谓结构。并且主语一定是谓语动作的发出者，如果有宾语的话，宾语一定是谓语的承受着。\n\n### 1.主谓\n\n### 2.主谓宾\n\n谓语：实义动词\n\n\n\n### 3.主谓表\n\n谓语：系动词\n\n- be\n\n- 感官动词：look， smell（n.气味），taste（n.喜爱/喜好  have taste for sth 喜爱…..），sound（n.声音），feel\n\n- 变化：become，get，turn，grow，fall\n\n- 保持：keep，stay，remain，stand\n\n- 表象：seem，appear\n\n- 证明：prove\n\n  \n\n### 4.主谓双宾（少）\n\n### 5.主谓宾补（少）\n\n只需要在最后两个宾语中间加个be动词，意思通顺就是宾补，否则是双宾\n\n\n\n## （二）句子的成分（词性的问题）\n\n### 1.谓语\n\n#### （1）谓语的成分\n\n有时态的系动词或实义动词充当谓语\n\n \n\n#### （2）一句话当中动词能不能多（不能）\n\n谓语只能是动词\n\n动词只能做谓语\n\n把一句话所有不是谓语的动词变成不是动词：\n\n- v+ing：主动\n\n- v+ed：被动\n\n- to do：目的\n\n一句话当中只能有一个动词存在并且充当谓语，多余的动词全部变成非谓语动词。\n\n\n\neg1.\n\nPandas are the rarest members in bear family，mainly living in the forest of Chinese southwest.\n\neg2.\n\nYangZi River flowing through diverse ecological systems，keeps the home of a sea of endangered species，irrigating one fifth of Chinese land.\n\neg3.（独立主格）\n\nI love you，you loving me.\n\neg4.\n\nWinter approaching，spring will be around the corner.\n\neg5.（分词作状语）\n\nBeing a teacher，I have passion for singing songs.\n\n\n\n#### （3）一句话动词能不能少（不能）\n\n一句话当中有且只能有一个有时态的实义动词或者系动词的存在，并且充当谓语。\n\n\n\n### 2.主语\n\n#### （1）主语的成分\n\n名词、代词、非谓语动词、从句（引导词+句子）\n\n\n\n#### （2）一句话主语能不能少（不能）\n\n一句没有主语怎么办：\n\n- 加it作为主语：必须与天气、温度、时间有关系。\n- there be句型，听到“有”的时候使用。\n- 被动：当听到一句话没有主语或者人称代词作主语，都可以考虑写成被动。\n- 人称代词作主语：I、you、we\n\n三种情况没有被动：\n\n- 动词后面有介词时\n- 系动词没有被动\n- have表达”有“的意思时\n\n\n\neg1.\n\nIf there exits a dream，glories are supposed to be achieved.\n\n\n\n### 3.宾语\n\n#### （1）宾语的成分\n\n名词、代词、非谓语动词，从句\n\n\n\n### 4.表语\n\n#### （1）表语的成分\n\n名词、代词、非谓语动词、从句、形容词、介词短语\n\n\n\n## （三）简单句在写作的使用\n\n### 1.写作\n\n- 所有写不来的长难句，暂时写成简单句，一定保证语法正确。\n\n\n\n### 2.长难句\n\n- 找这句话的动词，从而找到这句话的主谓宾。\n- 如果一句话找到多个动词，就确定主句的谓语动词（前面没有引导词的动词）。\n\n\n\n# 二、并列句\n\n## （一）什么是并列句\n\n就是用连词连接两个句子。\n\n\n\n## （二）常见的连词\n\n- 平行：and，not only…but also\n- 平行关系副词/介词短语：similarly，equally，likewise，at the same time（同样的），in the meanwhile\n- 转折：but，yet，while，whereas\n- 转折关系副词/介词短语：however，nevertheless，on the contrary，conversely（但是），unexpectedly，unfortunately，by contrast\n- 选择：or\n- 选择关系副词/介词短语：alternatively\n- 因果：for，so\n- 因果关系副词/介词短语：therefore，thus，consequently，as a result\n- 递进：then\n- 递进关系副词/介词短语：besides，furthermore，moreover，additionally，subsequently，in addition\n\n\n\n## （三）并列句的考点分析\n\n### 1.写作\n\n写作上下句之间有逻辑关系就一定要用逻辑关系词（连词、副词、介词、介词短语）。\n\n连词和其他逻辑词区别在于，连词前面有无逗号均可，而其他逻辑关系词前面要么用句号，要么加连词and\n\n\n\neg1.\n\nRomance has evaporated，but she still misses the past.\n\nRomance has evaporated，and on the contrary she still misses the past.\n\neg2.\n\nThere remain an army of companies coming from afar，and consequently I feel more than delighted.\n\neg3.\n\nI am claimed changeable like water. By contrast,my clarity keeps consistent.\n\neg4.\n\nDo you still keep that day in mind? I failed to pass CET4，and as result，I shed tears in the rain alone. At the same time，you came up to me and subsequently you beat my shoulder and told me “There exists no destination in life”.\n\n\n\n### 2.长难句分析\n\n在分析长难句中，只要有并列连词出现通常都会有省略。\n\n分析长难句第二步，找连词，但是当连词在连接两个单词的时候，忽略这个连词。\n\n那么如何查找省略的内容？一句话只要有省略就一定会省略在连词后——>所以连词后面有的成分，连词前面一定有——>连词前面有，而连词后面没有的成分便是省略的内容。\n\n\n\n# 三、名词（短语）和名词性从句\n\n## （一）名词充当的成分\n\n### 1.主语\n\n### 2.宾语\n\n### 3.表语\n\n### 4.同位语\n\n同样位置的语，用来解释名词的成分就是同位语。\n\n只要在作文中见到名词，都可以有意识的在后面加同位语，对该名词进行补充说明。（小于2次）\n\n充当同位语的成分：\n\n（1）名词\n\n（2）代词\n\n（3）非谓语动词\n\n（4）从句\n\n\n\neg1.\n\nThe movie looks terrific.\n\nI admire his mother.\n\nGump is a man.\n\nI enjoy the part，the beginning.\n\neg2.(写作满分句型)\n\nI，a university student， like Eason，a well-known singer from Hong Kong.\n\nMy mother，a typical housewife，enjoy playing mahjong，a Chinese entertainment.\n\nPersistence，an active mentally，plays a critical role in the glories of all children and adults.\n\n\n\n## （二）什么是名词性从句\n\n> 名词在句子充当的成分，从句都能充当，这就是名词性从句。\n\n### 1.主语从句\n\n### 2.宾语从句\n\n### 3.表语从句\n\n### 4.同位语从句\n\n\n\neg1.\n\nWhat I saw looks terrific.\n\nI admire what she said.\n\nGump is who we should learn from.\n\nI enjoy the part that a bird is flying.\n\n\n\n## （三）名词性从句的引导词\n\n名词性从句的引导词是按照从句的类型分的类，一共把引导词分成三类：\n\n- 当从句是陈述句时，that没有意思并且在从句中不充当任何成分\n- 当从句是一般疑问句时，并且whether/if在从句中不充当任何成分，意思是是否\n- 所有的特殊疑问词：当从句是特殊疑问句时。\n- 并且英语中所有的从句都是陈述句。\n\n\n\neg1.\n\nI am wondering whether aliens exist.\n\nThat ladies tend to be right remains common knowledge.\n\nMy meaning seems that supporting the elderly remains a Chinese conventional virtue.\n\nSomeday，one will perceive that career，kinship and friendship prove more indispensable than romance.\n\nThe point seems when wealth will become available for you.\n\n\n\n## （四）名词性从句考点分析\n\n### 1.写作\n\n#### （1）主语从句\n\n主语从句的满分表达：\n\n- 把主语放在句末，加it作形式主语\n- It is apparent that……….\n- It looks beyond dispute that…………….（显而易见、众所周知）\n- It has been widely accepted that………..\n- It is universally acknowledged that…………\n- It keeps my argument that………….（我认为….)\n\n\n\n#### （2）同位语从句\n\neg1.\n\nThe matter that he managed to find a girlfriend makes his superiors rejoiced.\n\n同位语从句即可放在它所解释的词后，也可以放在整句话后\n\neg2.\n\nNothing can hide the truth that she is getting old.\n\neg3.\n\nThe outlook proves wrong that people in HN seem all deceivers.\n\neg4.\n\nThe evidence that flowers in the greenhouse fail to undergo storms indicates that kids should by no means be spoiled by the in senior citizens.\n\n\n\n### 2.长难句分析\n\n能够识别各个名词性从句，并且能通顺的翻译出来。\n\n#### （1）如何识别主语从句\n\n- 只要见到有引导词放在句首，并且从句后没有被逗号隔开，就一定是主语从句，主语从句从句首开始，到主句谓语动词结束。\n- 除此以外，在分析长难句中，遇到It…….that………，通常都是主语从句，主语从句从that开始到句末结束。\n\n\n\n#### （2）如何识别宾语从句\n\n- 只要实义动词后面有引导词，就暂定是宾语从句。\n\n\n\n#### （3）如何识别表语从句\n\n- 只要系动词后面有引导词就是表语从句\n\n\n\n#### （4）如何识别同位语从句\n\n- 只要名词后面有引导词，就暂定为同位语从句。\n\n\n\n# 四、定语和定语从句\n\n## （一）什么是定语\n\n> 定语就是修饰名词的成分。只要听到…..的+名词，….的就是这个名词的定语成分。\n\n\n\n## （二）定语的成分\n\n### 1.形容词作定语\n\neg1.\n\nThe innocent nightingale died.\n\nThe nightingale brave and innocent died.\n\n\n\n### 2.名词（短语）作定语\n\neg1.The singing of the nightingale can make the rose bloom.\n\n\n\n### 3.介词短语作定语\n\neg1.The nightingale out of the window heard the sighs of the youngster.\n\n\n\n### 4.非谓语动词作定语\n\neg1.The singing nightingale lost his life.\n\n\n\n### 5.从句作定语\n\neg1.The rose that the nightingale exchanged with his life was discarded.\n\n\n\n## （三）定语的位置\n\n前小后大：当一个单词修饰名词的时候，通常放在名词前；当多个单词修饰名词，通常放在名词后。\n\neg1.\n\nThis is a fiction about a nightingale and a rose.\n\nThe youngster grasping romance left the party of the prince.\n\nThe boy rejected looks pitiful. 当过去分词作定语通常放在名词后。\n\nI have something important to tell you.当形容词修饰不定代词时，即使只有一个单词，通常也放在名词后。\n\n\n\n## (四)定语从句\n\n### 1.定语从句的构成\n\n名词（先行词）+引导词+句子\n\n\n\n### 2.定语从句的引导词\n\n引导词按照先行词种类分类：\n\n- 人：who，whom，whose\n- 物：that，which，whose\n- 时间：that，which，when\n- 地点：that，which，where\n- 原因：that，which，why\n\n到底是谁决定定语从句引导词的用法：\n\n- 先行词\n- 引导词在从句中能够充当的成分\n\n定语从句引导词新的分类标准，按照引导词本身的词性分类：\n\n- 代词（在从句中充当主语或者宾语）：who，whom，that，which\n- 副词（在从句中不充当成分）：where，when，why\n- 形容词（在从句中修饰离它最近的名词）：whose\n\n\n\n## （五）定语从句特殊用法\n\n### 1.that作引导词\n\nthat在引导定语从句时，在从句充当宾语，that可以省略。（自己写作文不要省）\n\n在分析长难句时，如果见到有两个名词或者代词直接放在一起，中间没有被连词或者标点符号隔开，通常都是省略that的定语从句。\n\neg1.I enjoy the book my mother bought for me.\n\n\n\n### 2.区别限制和非限制性定语从句\n\n非限制有逗号，限制没有逗号。\n\n在分析长难句的时候，非限制性定语从句就相当于插入语，可以不看。\n\n\n\n### 3.先行词与引导词之间有介词\n\n- 人：whom\n\n- 物：which\n\n\n\n### 4.区别the same….as；the same …..that引导的定语从句\n\neg1.\n\nHe is the same man as I love.（他就像我爱的男人）\n\nHe is the same man that I love.（他就是我爱的男人）\n\n\n\n### 5.as和which引导的非限制性定语从句\n\nwhich引导的非限制定语从句可以修饰前面整个句子。as也可以，但是which只能放在主句的后面，而as则可前可后。\n\neg1.He enjoy talking with young ladies，which drives me mad.\n\n\n\n## （六）区别定语从句和同位语从句\n\n### 1.相同点\n\n都是先行词+引导词+句子\n\n\n\n### 2.不同点\n\n- 看从句本身的意思，定语从句是对前面名词的修饰，而同位语从句是对前面句子的解释。\n- 看引导词that在从句中是否充当成分，如果充当成分就是定语从句，否则就是同位语从句。\n- 定语从句的先行词可以是所有的名词，而同位语从句只能是抽象名词。\n- 定语从句引导词共有8个，而同位语引导词一般都是that。\n\n\n\n## （七）定语从句的难点\n\n> 寻找先行词\n\n- 定语从句的先行词就是离它最近的名词。\n\n- 定语从句的先行词是它前面的几个并列的名词。\n- 定语从句的先行词是它前面的一个从句。\n- 定语从句的先行词是它前面的整个句子。\n- 定语从句的先行词和引导词被隔开。\n\n\n\n英汉差异对比：\n\n- 英语意合，汉语形合\n\n  A：句子结构上\tB：逻辑关系词使用上\n\n- 汉语主动，英语被动\n- 汉语多短句，英语多长句\n\n\n\n## （八）定语从句的考点\n\n### 1.长难句分析\n\n能够找到一句话的定语成分，并且把它们通顺的翻译出来。\n\n找定语的关键是找名词。只要名词后有东西，不是动词，暂定是定语，定语从名词后开始，到主句的谓语动词结束。主句谓语动词在定语前，定语从名词后到句末结束，如果有连词的话，到连词之前结束。\n\n\n\n# 五、状语和状语从句\n\n## （一）形容词、副词的成分\n\n### 1.形容词\n\n- 放在系动词后作表语\n- 放在名词前作定语\n\n\n\n### 2.副词\n\n- 修饰实义动词\n- 修饰形容词\n- 修饰副词\n- 修饰句子\n\n副词无论在哪都是作状语\n\n\n\n## （二）什么是状语\n\n### 1.状语的含义\n\n状语就是在一个句子中，用来修饰实义动词、形容词、副词或者整个句子的成分。\n\n状语除了名词不能修饰，其他都能修饰。\n\n\n\n### 2.状语的成分\n\n- 副词\n- 介词短语\n- 非谓语动词\n- 从句\n\n\n\n### 3.状语的位置\n\n随便放\n\n\n\n## （三）状语从句\n\n状语从句的引导词是以引导词本身的意思分的类，共9类。\n\n### 1.时间状语从句\n\n#### （1）引导词\n\n- when=while=as    当while翻译成“当….的时候”，后面要跟进行时态。\n- before\n- after\n- since    “自从”，主句为完成时态\n- the moment=as soon as  “那一刻”\n- by the time\n- until   “直到….才”\n- not ……..until  “直到….才”\n\n\n\n#### （2）状语从句的时态问题\n\n在所有状语从句中，如果主句的动作和从句的动作尚未发生的话，主句用一般将来时，从句用一般现在时表将来。\n\n\n\n#### （3）区别 until 和 not….until\n\n看主句谓语是延续性动词还是瞬间动词，如果是延续性动词就用until，如果是瞬间动词就用not………until\n\neg1.\n\nI didn’t realize the greatness of mothers  until I grew up.  直到我长大我才意识到母亲的伟大。\n\n\n\n#### （4）when引导的时间状语从句省略的情况\n\neg1.When a kid ，I enjoyed singing songs.\n\nwhen引导的时间状语从句，如果主句的主语与从句主语一致，并且从句的谓语中有be动词，此时从句的主语和be动词可以省略。\n\n\n\n### 2.地点状语从句\n\n#### （1）引导词\n\nwhere\n\n作地点状语的通常都是介词短语，很少是从句。\n\n\n\n### 3.原因状语从句\n\n#### （1）引导词\n\n- because  “因为”\n- since\n- in that\n- seeing that\n- considering that\n- now that\n- given that\n\n\n\n#### （2）for（连词）\n\n#### （3）介词短语\n\n- because of   “因为”\n- due to\n- owing to\n- thanks to\n- for the sake of\n- as a result of\n\n\n\neg1.\n\nHe had a car accident because he was careless.\n\nHe had a car accident for he was careless.\n\nHe had a car accident because of his careless.\n\n\n\n### 4.目的状语从句\n\n#### （1）引导词\n\n> 动词不定式：\n>\n> to\n>\n> in order to   + 动词原形\n>\n> so as to\n\n- so that 表示目的放在句末，不放在句首\n\n- in order that \n\n\n\neg1.（farther物理距离远/further抽象远）\n\nWe will ascend higher in order to overlook farther.\n\nWe will ascend higher in order that we overlook farther.\n\n\n\n### 5.结果状语从句\n\n#### （1）引导词\n\n- so……+形容词/副词+….that…..  （替换 very）\n- such……+名词+….that……\n\neg1.\n\nIt feels so hot today that I wear my dress.\n\n\n\n作文中所有出现形容词和副词的地方都可以用到so  that 句型\n\n\n\n### 6.让步状语从句\n\n#### （1）引导词\n\n- although\n- though\n- even though         虽然/尽管\n- even if\n- as\n- while       当翻译“虽然/尽管”只能放在句首，不能放在句中\n\n\n\nas 引导的让步状语从句，从句的表语可以放在句首引起部分倒装。\n\neg1.\n\nShe looks like a beauty，although \n\n\n\n### 7.方式状语从句\n\n#### （1）引导词\n\n- as\n- the way            好像/似乎\n- as if/though\n\n\n\n### 8.条件状语从句\n\n#### （1）引导词\n\n- suppose that\n- supposing that\n- if\n- unless\n- provided that\n- as long as\n- so long as\n\n \n\n### 9.比较状语从句\n\n#### （1）引导词\n\n- as …….as………\n- 比较结构\n\n\n\neg1.\n\nYou are as beautiful as I.\n\n\n\n## （四）状语考点分析\n\n### 1.写作\n\n作文中任何一句话的旁边都可以加一个状语把句子拉长。\n\n\n\neg1.\n\nOne can live as if he were a pig. Conversely，he can never be as delighted as a pig.\n\n\n\n### 2.长难句分析\n\n能够识别状语，并通顺的把它翻译出来。\n\n一句话当中，除了句子主干和定语以外，只要在句子中见到以下东西，就是状语：\n\n- 副词\n- 比较，条件，结果，原因，让步，目的，方式状语从句\n- 伴随状语\n\n时间、地点不在名词后，一定是状语。\n\n名词+时间/地点 （容易混淆）\n\nI love a boy in Zhejiang Universities.\n\n如果无法确定定语还是状语的时候，定语优先原则。只有翻译成定语不通顺的时候，才翻译成状语。\n\n\n\n### 3.补充as\n\n- as+名词（“作为”）\n- v+…名词….+as  “取决于动词意思”\n- as+句子  引导状语从句：“当……时候/因为/虽然/好像” \n\n\n\n### 4.补充than\n\n- not so much as =not even  甚至不/没有\n- not so much A as B 与其说A不如说B\n- more A than B  与其说B不如说A\n- more than  （+名词   不仅仅是） （+副词/形容词  非常） （+数词 多余）\n\n\n\n# 六、特殊结构\n\n## （一）强调句型\n\n### 1.构成\n\nIt is ……..that………..\n\neg1.\n\nI met my old flame in the street yesterday.\n\nIt was I that met my old flame in the street yesterday.      和过去式有关就用was，其他用is\n\nIt was my old flame that I met in the street yesterday.\n\n\n\n## （二）倒装\n\n### 1.什么是倒装\n\n倒装就是把一句话写成一般疑问句的形式，也就是给一句话加个助动词或把be动词放在句首。\n\n\n\n### 2.具体用法\n\n#### （1）否定词放在句首用倒装\n\neg1.\n\nI can hardly speak Japanese.\n\nHardly can I speak Japanese.\n\n\n\n#### （2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\n\n#### （3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\n\n#### （4）only引出的状语位于句首时用倒装\n\n#### （5）as引导让步状语从句，从句的表语可以放在句首构成倒装\n\n#### （6）省略if的虚拟语气用倒装\n\n\n\n## （三）虚拟语气\n\n### 1.什么是虚拟语气\n\n虚拟语气表示与事实相反或者语气委婉\n\n\n\n### 2.用法\n\n#### （1）一般用法\n\nif引导的条件状语从句\n\neg1.\n\nIf you were a tear in my eyes，I would never shed it.\n\nIf I had been a dog，I could have slept with you.\n\n写成正常句子后，变成过去时（满分句型）\n\n\n\n#### （2）特殊用法\n\n- 以下情况从句用“should + 动词”表示虚拟，并且should可以省略（自己写不省）。\n\n以防：incase、lest、for fear that\n\n命令：order、direct、command\n\n建议：advise、suggest、propose\n\n要求：ask、request、demand、require\n\n用虚拟\n\n是必要的：It is necessary/important that\n\neg1.\n\nIncase that you should develop fetal infections，you had better stay at home.\n\n\n\n- 以下情况用过去时表示虚拟，\n\nwould rather 和 It is high time that………\n\n\n\n- 以下情况区别对待：就是把它本来时态写成过去式就行了。\n\nwish，if only，but for，or/otherwise，as if/as though等\n\n\n\n### 3.情态动词\n\n表名说话人主观态度的词汇（没有动作，不能充当谓语），情态动词相当于助动词+动词原形\n\n#### （1）表示对现在和将来的推测：情态动词+动词原形\n\n#### （2）表示对过去的推测：\n\neg1.\n\nHe must have been self-biased in his university.  一定做过某事must have done\n\nYou need not have shown your love in this way.   本没必要做某事，但是做了need not have done\n\nI could have become a prominent poet.   本能做某事但却没有做，表示遗憾could have done\n\nWe should have got married if there exists a chance.   本应该做某事但是没有做。should have done\n\nmust的否定=can‘t      must not表示禁止\n\n\n\n# 备注：\n\n\n\n|       单数       | 第一人称 | 第二人称 |   第三人称    |\n| :--------------: | :------: | :------: | :-----------: |\n|   主格（主语）   |    I     |   you    |  he、she、it  |\n|   宾格（宾语）   |    me    |   you    | him、her、it  |\n| 物主代词（定语） |    my    |   your   | his、her、its |\n\n|       复数       | 第一人称 | 第二人称 | 第三人称 |\n| :--------------: | :------: | :------: | :------: |\n|   主格（主语）   |    we    |   you    |   they   |\n|   宾格（宾语）   |    us    |   you    |   them   |\n| 物主代词（定语） |   our    |   your   |  their   |\n\n\n\n|          |      过去      |        现在         |            将来            |           过去将来           |\n| :------: | :------------: | :-----------------: | :------------------------: | :--------------------------: |\n|   一般   |      did       |       do/does       |       will/shall do        |       would/should do        |\n|   进行   | was/were doing |   am/is/are doing   |    will/shall be doing     |    would/should be doing     |\n|   完成   |    had done    |    has/have done    |    will/shall have done    |    would/should have done    |\n| 完成进行 | had been doing | has/have been doing | will/shall have been doing | would/should have been doing |\n\n","source":"_posts/英语/英语语法.md","raw":"---\ntitle: 英语语法\nimg: https://cdn.pixabay.com/photo/2022/04/11/18/05/easter-eggs-7126346_960_720.jpg\nexcerpt: 考研英语语法汇总\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 英语\ntags: [基础学习,英语,英语语法]\nmathjax: true\ndate: 2022-04-18 21:02:23\n---\n\n\n# 英语语法\n\n# 一、简单句\n\n## （一）句子的分类\n\n> 什么是英语的句子：英语必须具备主谓结构。并且主语一定是谓语动作的发出者，如果有宾语的话，宾语一定是谓语的承受着。\n\n### 1.主谓\n\n### 2.主谓宾\n\n谓语：实义动词\n\n\n\n### 3.主谓表\n\n谓语：系动词\n\n- be\n\n- 感官动词：look， smell（n.气味），taste（n.喜爱/喜好  have taste for sth 喜爱…..），sound（n.声音），feel\n\n- 变化：become，get，turn，grow，fall\n\n- 保持：keep，stay，remain，stand\n\n- 表象：seem，appear\n\n- 证明：prove\n\n  \n\n### 4.主谓双宾（少）\n\n### 5.主谓宾补（少）\n\n只需要在最后两个宾语中间加个be动词，意思通顺就是宾补，否则是双宾\n\n\n\n## （二）句子的成分（词性的问题）\n\n### 1.谓语\n\n#### （1）谓语的成分\n\n有时态的系动词或实义动词充当谓语\n\n \n\n#### （2）一句话当中动词能不能多（不能）\n\n谓语只能是动词\n\n动词只能做谓语\n\n把一句话所有不是谓语的动词变成不是动词：\n\n- v+ing：主动\n\n- v+ed：被动\n\n- to do：目的\n\n一句话当中只能有一个动词存在并且充当谓语，多余的动词全部变成非谓语动词。\n\n\n\neg1.\n\nPandas are the rarest members in bear family，mainly living in the forest of Chinese southwest.\n\neg2.\n\nYangZi River flowing through diverse ecological systems，keeps the home of a sea of endangered species，irrigating one fifth of Chinese land.\n\neg3.（独立主格）\n\nI love you，you loving me.\n\neg4.\n\nWinter approaching，spring will be around the corner.\n\neg5.（分词作状语）\n\nBeing a teacher，I have passion for singing songs.\n\n\n\n#### （3）一句话动词能不能少（不能）\n\n一句话当中有且只能有一个有时态的实义动词或者系动词的存在，并且充当谓语。\n\n\n\n### 2.主语\n\n#### （1）主语的成分\n\n名词、代词、非谓语动词、从句（引导词+句子）\n\n\n\n#### （2）一句话主语能不能少（不能）\n\n一句没有主语怎么办：\n\n- 加it作为主语：必须与天气、温度、时间有关系。\n- there be句型，听到“有”的时候使用。\n- 被动：当听到一句话没有主语或者人称代词作主语，都可以考虑写成被动。\n- 人称代词作主语：I、you、we\n\n三种情况没有被动：\n\n- 动词后面有介词时\n- 系动词没有被动\n- have表达”有“的意思时\n\n\n\neg1.\n\nIf there exits a dream，glories are supposed to be achieved.\n\n\n\n### 3.宾语\n\n#### （1）宾语的成分\n\n名词、代词、非谓语动词，从句\n\n\n\n### 4.表语\n\n#### （1）表语的成分\n\n名词、代词、非谓语动词、从句、形容词、介词短语\n\n\n\n## （三）简单句在写作的使用\n\n### 1.写作\n\n- 所有写不来的长难句，暂时写成简单句，一定保证语法正确。\n\n\n\n### 2.长难句\n\n- 找这句话的动词，从而找到这句话的主谓宾。\n- 如果一句话找到多个动词，就确定主句的谓语动词（前面没有引导词的动词）。\n\n\n\n# 二、并列句\n\n## （一）什么是并列句\n\n就是用连词连接两个句子。\n\n\n\n## （二）常见的连词\n\n- 平行：and，not only…but also\n- 平行关系副词/介词短语：similarly，equally，likewise，at the same time（同样的），in the meanwhile\n- 转折：but，yet，while，whereas\n- 转折关系副词/介词短语：however，nevertheless，on the contrary，conversely（但是），unexpectedly，unfortunately，by contrast\n- 选择：or\n- 选择关系副词/介词短语：alternatively\n- 因果：for，so\n- 因果关系副词/介词短语：therefore，thus，consequently，as a result\n- 递进：then\n- 递进关系副词/介词短语：besides，furthermore，moreover，additionally，subsequently，in addition\n\n\n\n## （三）并列句的考点分析\n\n### 1.写作\n\n写作上下句之间有逻辑关系就一定要用逻辑关系词（连词、副词、介词、介词短语）。\n\n连词和其他逻辑词区别在于，连词前面有无逗号均可，而其他逻辑关系词前面要么用句号，要么加连词and\n\n\n\neg1.\n\nRomance has evaporated，but she still misses the past.\n\nRomance has evaporated，and on the contrary she still misses the past.\n\neg2.\n\nThere remain an army of companies coming from afar，and consequently I feel more than delighted.\n\neg3.\n\nI am claimed changeable like water. By contrast,my clarity keeps consistent.\n\neg4.\n\nDo you still keep that day in mind? I failed to pass CET4，and as result，I shed tears in the rain alone. At the same time，you came up to me and subsequently you beat my shoulder and told me “There exists no destination in life”.\n\n\n\n### 2.长难句分析\n\n在分析长难句中，只要有并列连词出现通常都会有省略。\n\n分析长难句第二步，找连词，但是当连词在连接两个单词的时候，忽略这个连词。\n\n那么如何查找省略的内容？一句话只要有省略就一定会省略在连词后——>所以连词后面有的成分，连词前面一定有——>连词前面有，而连词后面没有的成分便是省略的内容。\n\n\n\n# 三、名词（短语）和名词性从句\n\n## （一）名词充当的成分\n\n### 1.主语\n\n### 2.宾语\n\n### 3.表语\n\n### 4.同位语\n\n同样位置的语，用来解释名词的成分就是同位语。\n\n只要在作文中见到名词，都可以有意识的在后面加同位语，对该名词进行补充说明。（小于2次）\n\n充当同位语的成分：\n\n（1）名词\n\n（2）代词\n\n（3）非谓语动词\n\n（4）从句\n\n\n\neg1.\n\nThe movie looks terrific.\n\nI admire his mother.\n\nGump is a man.\n\nI enjoy the part，the beginning.\n\neg2.(写作满分句型)\n\nI，a university student， like Eason，a well-known singer from Hong Kong.\n\nMy mother，a typical housewife，enjoy playing mahjong，a Chinese entertainment.\n\nPersistence，an active mentally，plays a critical role in the glories of all children and adults.\n\n\n\n## （二）什么是名词性从句\n\n> 名词在句子充当的成分，从句都能充当，这就是名词性从句。\n\n### 1.主语从句\n\n### 2.宾语从句\n\n### 3.表语从句\n\n### 4.同位语从句\n\n\n\neg1.\n\nWhat I saw looks terrific.\n\nI admire what she said.\n\nGump is who we should learn from.\n\nI enjoy the part that a bird is flying.\n\n\n\n## （三）名词性从句的引导词\n\n名词性从句的引导词是按照从句的类型分的类，一共把引导词分成三类：\n\n- 当从句是陈述句时，that没有意思并且在从句中不充当任何成分\n- 当从句是一般疑问句时，并且whether/if在从句中不充当任何成分，意思是是否\n- 所有的特殊疑问词：当从句是特殊疑问句时。\n- 并且英语中所有的从句都是陈述句。\n\n\n\neg1.\n\nI am wondering whether aliens exist.\n\nThat ladies tend to be right remains common knowledge.\n\nMy meaning seems that supporting the elderly remains a Chinese conventional virtue.\n\nSomeday，one will perceive that career，kinship and friendship prove more indispensable than romance.\n\nThe point seems when wealth will become available for you.\n\n\n\n## （四）名词性从句考点分析\n\n### 1.写作\n\n#### （1）主语从句\n\n主语从句的满分表达：\n\n- 把主语放在句末，加it作形式主语\n- It is apparent that……….\n- It looks beyond dispute that…………….（显而易见、众所周知）\n- It has been widely accepted that………..\n- It is universally acknowledged that…………\n- It keeps my argument that………….（我认为….)\n\n\n\n#### （2）同位语从句\n\neg1.\n\nThe matter that he managed to find a girlfriend makes his superiors rejoiced.\n\n同位语从句即可放在它所解释的词后，也可以放在整句话后\n\neg2.\n\nNothing can hide the truth that she is getting old.\n\neg3.\n\nThe outlook proves wrong that people in HN seem all deceivers.\n\neg4.\n\nThe evidence that flowers in the greenhouse fail to undergo storms indicates that kids should by no means be spoiled by the in senior citizens.\n\n\n\n### 2.长难句分析\n\n能够识别各个名词性从句，并且能通顺的翻译出来。\n\n#### （1）如何识别主语从句\n\n- 只要见到有引导词放在句首，并且从句后没有被逗号隔开，就一定是主语从句，主语从句从句首开始，到主句谓语动词结束。\n- 除此以外，在分析长难句中，遇到It…….that………，通常都是主语从句，主语从句从that开始到句末结束。\n\n\n\n#### （2）如何识别宾语从句\n\n- 只要实义动词后面有引导词，就暂定是宾语从句。\n\n\n\n#### （3）如何识别表语从句\n\n- 只要系动词后面有引导词就是表语从句\n\n\n\n#### （4）如何识别同位语从句\n\n- 只要名词后面有引导词，就暂定为同位语从句。\n\n\n\n# 四、定语和定语从句\n\n## （一）什么是定语\n\n> 定语就是修饰名词的成分。只要听到…..的+名词，….的就是这个名词的定语成分。\n\n\n\n## （二）定语的成分\n\n### 1.形容词作定语\n\neg1.\n\nThe innocent nightingale died.\n\nThe nightingale brave and innocent died.\n\n\n\n### 2.名词（短语）作定语\n\neg1.The singing of the nightingale can make the rose bloom.\n\n\n\n### 3.介词短语作定语\n\neg1.The nightingale out of the window heard the sighs of the youngster.\n\n\n\n### 4.非谓语动词作定语\n\neg1.The singing nightingale lost his life.\n\n\n\n### 5.从句作定语\n\neg1.The rose that the nightingale exchanged with his life was discarded.\n\n\n\n## （三）定语的位置\n\n前小后大：当一个单词修饰名词的时候，通常放在名词前；当多个单词修饰名词，通常放在名词后。\n\neg1.\n\nThis is a fiction about a nightingale and a rose.\n\nThe youngster grasping romance left the party of the prince.\n\nThe boy rejected looks pitiful. 当过去分词作定语通常放在名词后。\n\nI have something important to tell you.当形容词修饰不定代词时，即使只有一个单词，通常也放在名词后。\n\n\n\n## (四)定语从句\n\n### 1.定语从句的构成\n\n名词（先行词）+引导词+句子\n\n\n\n### 2.定语从句的引导词\n\n引导词按照先行词种类分类：\n\n- 人：who，whom，whose\n- 物：that，which，whose\n- 时间：that，which，when\n- 地点：that，which，where\n- 原因：that，which，why\n\n到底是谁决定定语从句引导词的用法：\n\n- 先行词\n- 引导词在从句中能够充当的成分\n\n定语从句引导词新的分类标准，按照引导词本身的词性分类：\n\n- 代词（在从句中充当主语或者宾语）：who，whom，that，which\n- 副词（在从句中不充当成分）：where，when，why\n- 形容词（在从句中修饰离它最近的名词）：whose\n\n\n\n## （五）定语从句特殊用法\n\n### 1.that作引导词\n\nthat在引导定语从句时，在从句充当宾语，that可以省略。（自己写作文不要省）\n\n在分析长难句时，如果见到有两个名词或者代词直接放在一起，中间没有被连词或者标点符号隔开，通常都是省略that的定语从句。\n\neg1.I enjoy the book my mother bought for me.\n\n\n\n### 2.区别限制和非限制性定语从句\n\n非限制有逗号，限制没有逗号。\n\n在分析长难句的时候，非限制性定语从句就相当于插入语，可以不看。\n\n\n\n### 3.先行词与引导词之间有介词\n\n- 人：whom\n\n- 物：which\n\n\n\n### 4.区别the same….as；the same …..that引导的定语从句\n\neg1.\n\nHe is the same man as I love.（他就像我爱的男人）\n\nHe is the same man that I love.（他就是我爱的男人）\n\n\n\n### 5.as和which引导的非限制性定语从句\n\nwhich引导的非限制定语从句可以修饰前面整个句子。as也可以，但是which只能放在主句的后面，而as则可前可后。\n\neg1.He enjoy talking with young ladies，which drives me mad.\n\n\n\n## （六）区别定语从句和同位语从句\n\n### 1.相同点\n\n都是先行词+引导词+句子\n\n\n\n### 2.不同点\n\n- 看从句本身的意思，定语从句是对前面名词的修饰，而同位语从句是对前面句子的解释。\n- 看引导词that在从句中是否充当成分，如果充当成分就是定语从句，否则就是同位语从句。\n- 定语从句的先行词可以是所有的名词，而同位语从句只能是抽象名词。\n- 定语从句引导词共有8个，而同位语引导词一般都是that。\n\n\n\n## （七）定语从句的难点\n\n> 寻找先行词\n\n- 定语从句的先行词就是离它最近的名词。\n\n- 定语从句的先行词是它前面的几个并列的名词。\n- 定语从句的先行词是它前面的一个从句。\n- 定语从句的先行词是它前面的整个句子。\n- 定语从句的先行词和引导词被隔开。\n\n\n\n英汉差异对比：\n\n- 英语意合，汉语形合\n\n  A：句子结构上\tB：逻辑关系词使用上\n\n- 汉语主动，英语被动\n- 汉语多短句，英语多长句\n\n\n\n## （八）定语从句的考点\n\n### 1.长难句分析\n\n能够找到一句话的定语成分，并且把它们通顺的翻译出来。\n\n找定语的关键是找名词。只要名词后有东西，不是动词，暂定是定语，定语从名词后开始，到主句的谓语动词结束。主句谓语动词在定语前，定语从名词后到句末结束，如果有连词的话，到连词之前结束。\n\n\n\n# 五、状语和状语从句\n\n## （一）形容词、副词的成分\n\n### 1.形容词\n\n- 放在系动词后作表语\n- 放在名词前作定语\n\n\n\n### 2.副词\n\n- 修饰实义动词\n- 修饰形容词\n- 修饰副词\n- 修饰句子\n\n副词无论在哪都是作状语\n\n\n\n## （二）什么是状语\n\n### 1.状语的含义\n\n状语就是在一个句子中，用来修饰实义动词、形容词、副词或者整个句子的成分。\n\n状语除了名词不能修饰，其他都能修饰。\n\n\n\n### 2.状语的成分\n\n- 副词\n- 介词短语\n- 非谓语动词\n- 从句\n\n\n\n### 3.状语的位置\n\n随便放\n\n\n\n## （三）状语从句\n\n状语从句的引导词是以引导词本身的意思分的类，共9类。\n\n### 1.时间状语从句\n\n#### （1）引导词\n\n- when=while=as    当while翻译成“当….的时候”，后面要跟进行时态。\n- before\n- after\n- since    “自从”，主句为完成时态\n- the moment=as soon as  “那一刻”\n- by the time\n- until   “直到….才”\n- not ……..until  “直到….才”\n\n\n\n#### （2）状语从句的时态问题\n\n在所有状语从句中，如果主句的动作和从句的动作尚未发生的话，主句用一般将来时，从句用一般现在时表将来。\n\n\n\n#### （3）区别 until 和 not….until\n\n看主句谓语是延续性动词还是瞬间动词，如果是延续性动词就用until，如果是瞬间动词就用not………until\n\neg1.\n\nI didn’t realize the greatness of mothers  until I grew up.  直到我长大我才意识到母亲的伟大。\n\n\n\n#### （4）when引导的时间状语从句省略的情况\n\neg1.When a kid ，I enjoyed singing songs.\n\nwhen引导的时间状语从句，如果主句的主语与从句主语一致，并且从句的谓语中有be动词，此时从句的主语和be动词可以省略。\n\n\n\n### 2.地点状语从句\n\n#### （1）引导词\n\nwhere\n\n作地点状语的通常都是介词短语，很少是从句。\n\n\n\n### 3.原因状语从句\n\n#### （1）引导词\n\n- because  “因为”\n- since\n- in that\n- seeing that\n- considering that\n- now that\n- given that\n\n\n\n#### （2）for（连词）\n\n#### （3）介词短语\n\n- because of   “因为”\n- due to\n- owing to\n- thanks to\n- for the sake of\n- as a result of\n\n\n\neg1.\n\nHe had a car accident because he was careless.\n\nHe had a car accident for he was careless.\n\nHe had a car accident because of his careless.\n\n\n\n### 4.目的状语从句\n\n#### （1）引导词\n\n> 动词不定式：\n>\n> to\n>\n> in order to   + 动词原形\n>\n> so as to\n\n- so that 表示目的放在句末，不放在句首\n\n- in order that \n\n\n\neg1.（farther物理距离远/further抽象远）\n\nWe will ascend higher in order to overlook farther.\n\nWe will ascend higher in order that we overlook farther.\n\n\n\n### 5.结果状语从句\n\n#### （1）引导词\n\n- so……+形容词/副词+….that…..  （替换 very）\n- such……+名词+….that……\n\neg1.\n\nIt feels so hot today that I wear my dress.\n\n\n\n作文中所有出现形容词和副词的地方都可以用到so  that 句型\n\n\n\n### 6.让步状语从句\n\n#### （1）引导词\n\n- although\n- though\n- even though         虽然/尽管\n- even if\n- as\n- while       当翻译“虽然/尽管”只能放在句首，不能放在句中\n\n\n\nas 引导的让步状语从句，从句的表语可以放在句首引起部分倒装。\n\neg1.\n\nShe looks like a beauty，although \n\n\n\n### 7.方式状语从句\n\n#### （1）引导词\n\n- as\n- the way            好像/似乎\n- as if/though\n\n\n\n### 8.条件状语从句\n\n#### （1）引导词\n\n- suppose that\n- supposing that\n- if\n- unless\n- provided that\n- as long as\n- so long as\n\n \n\n### 9.比较状语从句\n\n#### （1）引导词\n\n- as …….as………\n- 比较结构\n\n\n\neg1.\n\nYou are as beautiful as I.\n\n\n\n## （四）状语考点分析\n\n### 1.写作\n\n作文中任何一句话的旁边都可以加一个状语把句子拉长。\n\n\n\neg1.\n\nOne can live as if he were a pig. Conversely，he can never be as delighted as a pig.\n\n\n\n### 2.长难句分析\n\n能够识别状语，并通顺的把它翻译出来。\n\n一句话当中，除了句子主干和定语以外，只要在句子中见到以下东西，就是状语：\n\n- 副词\n- 比较，条件，结果，原因，让步，目的，方式状语从句\n- 伴随状语\n\n时间、地点不在名词后，一定是状语。\n\n名词+时间/地点 （容易混淆）\n\nI love a boy in Zhejiang Universities.\n\n如果无法确定定语还是状语的时候，定语优先原则。只有翻译成定语不通顺的时候，才翻译成状语。\n\n\n\n### 3.补充as\n\n- as+名词（“作为”）\n- v+…名词….+as  “取决于动词意思”\n- as+句子  引导状语从句：“当……时候/因为/虽然/好像” \n\n\n\n### 4.补充than\n\n- not so much as =not even  甚至不/没有\n- not so much A as B 与其说A不如说B\n- more A than B  与其说B不如说A\n- more than  （+名词   不仅仅是） （+副词/形容词  非常） （+数词 多余）\n\n\n\n# 六、特殊结构\n\n## （一）强调句型\n\n### 1.构成\n\nIt is ……..that………..\n\neg1.\n\nI met my old flame in the street yesterday.\n\nIt was I that met my old flame in the street yesterday.      和过去式有关就用was，其他用is\n\nIt was my old flame that I met in the street yesterday.\n\n\n\n## （二）倒装\n\n### 1.什么是倒装\n\n倒装就是把一句话写成一般疑问句的形式，也就是给一句话加个助动词或把be动词放在句首。\n\n\n\n### 2.具体用法\n\n#### （1）否定词放在句首用倒装\n\neg1.\n\nI can hardly speak Japanese.\n\nHardly can I speak Japanese.\n\n\n\n#### （2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\n\n#### （3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\n\n#### （4）only引出的状语位于句首时用倒装\n\n#### （5）as引导让步状语从句，从句的表语可以放在句首构成倒装\n\n#### （6）省略if的虚拟语气用倒装\n\n\n\n## （三）虚拟语气\n\n### 1.什么是虚拟语气\n\n虚拟语气表示与事实相反或者语气委婉\n\n\n\n### 2.用法\n\n#### （1）一般用法\n\nif引导的条件状语从句\n\neg1.\n\nIf you were a tear in my eyes，I would never shed it.\n\nIf I had been a dog，I could have slept with you.\n\n写成正常句子后，变成过去时（满分句型）\n\n\n\n#### （2）特殊用法\n\n- 以下情况从句用“should + 动词”表示虚拟，并且should可以省略（自己写不省）。\n\n以防：incase、lest、for fear that\n\n命令：order、direct、command\n\n建议：advise、suggest、propose\n\n要求：ask、request、demand、require\n\n用虚拟\n\n是必要的：It is necessary/important that\n\neg1.\n\nIncase that you should develop fetal infections，you had better stay at home.\n\n\n\n- 以下情况用过去时表示虚拟，\n\nwould rather 和 It is high time that………\n\n\n\n- 以下情况区别对待：就是把它本来时态写成过去式就行了。\n\nwish，if only，but for，or/otherwise，as if/as though等\n\n\n\n### 3.情态动词\n\n表名说话人主观态度的词汇（没有动作，不能充当谓语），情态动词相当于助动词+动词原形\n\n#### （1）表示对现在和将来的推测：情态动词+动词原形\n\n#### （2）表示对过去的推测：\n\neg1.\n\nHe must have been self-biased in his university.  一定做过某事must have done\n\nYou need not have shown your love in this way.   本没必要做某事，但是做了need not have done\n\nI could have become a prominent poet.   本能做某事但却没有做，表示遗憾could have done\n\nWe should have got married if there exists a chance.   本应该做某事但是没有做。should have done\n\nmust的否定=can‘t      must not表示禁止\n\n\n\n# 备注：\n\n\n\n|       单数       | 第一人称 | 第二人称 |   第三人称    |\n| :--------------: | :------: | :------: | :-----------: |\n|   主格（主语）   |    I     |   you    |  he、she、it  |\n|   宾格（宾语）   |    me    |   you    | him、her、it  |\n| 物主代词（定语） |    my    |   your   | his、her、its |\n\n|       复数       | 第一人称 | 第二人称 | 第三人称 |\n| :--------------: | :------: | :------: | :------: |\n|   主格（主语）   |    we    |   you    |   they   |\n|   宾格（宾语）   |    us    |   you    |   them   |\n| 物主代词（定语） |   our    |   your   |  their   |\n\n\n\n|          |      过去      |        现在         |            将来            |           过去将来           |\n| :------: | :------------: | :-----------------: | :------------------------: | :--------------------------: |\n|   一般   |      did       |       do/does       |       will/shall do        |       would/should do        |\n|   进行   | was/were doing |   am/is/are doing   |    will/shall be doing     |    would/should be doing     |\n|   完成   |    had done    |    has/have done    |    will/shall have done    |    would/should have done    |\n| 完成进行 | had been doing | has/have been doing | will/shall have been doing | would/should have been doing |\n\n","slug":"英语/英语语法","published":1,"updated":"2022-04-18T13:04:23.205Z","layout":"post","photos":[],"_id":"cm1z7gip70003dwvx8ga51wh0","content":"<h1 id=\"英语语法\"><a href=\"#英语语法\" class=\"headerlink\" title=\"英语语法\"></a>英语语法</h1><h1 id=\"一、简单句\"><a href=\"#一、简单句\" class=\"headerlink\" title=\"一、简单句\"></a>一、简单句</h1><h2 id=\"（一）句子的分类\"><a href=\"#（一）句子的分类\" class=\"headerlink\" title=\"（一）句子的分类\"></a>（一）句子的分类</h2><blockquote>\n<p>什么是英语的句子：英语必须具备主谓结构。并且主语一定是谓语动作的发出者，如果有宾语的话，宾语一定是谓语的承受着。</p>\n</blockquote>\n<h3 id=\"1-主谓\"><a href=\"#1-主谓\" class=\"headerlink\" title=\"1.主谓\"></a>1.主谓</h3><h3 id=\"2-主谓宾\"><a href=\"#2-主谓宾\" class=\"headerlink\" title=\"2.主谓宾\"></a>2.主谓宾</h3><p>谓语：实义动词</p>\n<h3 id=\"3-主谓表\"><a href=\"#3-主谓表\" class=\"headerlink\" title=\"3.主谓表\"></a>3.主谓表</h3><p>谓语：系动词</p>\n<ul>\n<li><p>be</p>\n</li>\n<li><p>感官动词：look， smell（n.气味），taste（n.喜爱&#x2F;喜好  have taste for sth 喜爱…..），sound（n.声音），feel</p>\n</li>\n<li><p>变化：become，get，turn，grow，fall</p>\n</li>\n<li><p>保持：keep，stay，remain，stand</p>\n</li>\n<li><p>表象：seem，appear</p>\n</li>\n<li><p>证明：prove</p>\n</li>\n</ul>\n<h3 id=\"4-主谓双宾（少）\"><a href=\"#4-主谓双宾（少）\" class=\"headerlink\" title=\"4.主谓双宾（少）\"></a>4.主谓双宾（少）</h3><h3 id=\"5-主谓宾补（少）\"><a href=\"#5-主谓宾补（少）\" class=\"headerlink\" title=\"5.主谓宾补（少）\"></a>5.主谓宾补（少）</h3><p>只需要在最后两个宾语中间加个be动词，意思通顺就是宾补，否则是双宾</p>\n<h2 id=\"（二）句子的成分（词性的问题）\"><a href=\"#（二）句子的成分（词性的问题）\" class=\"headerlink\" title=\"（二）句子的成分（词性的问题）\"></a>（二）句子的成分（词性的问题）</h2><h3 id=\"1-谓语\"><a href=\"#1-谓语\" class=\"headerlink\" title=\"1.谓语\"></a>1.谓语</h3><h4 id=\"（1）谓语的成分\"><a href=\"#（1）谓语的成分\" class=\"headerlink\" title=\"（1）谓语的成分\"></a>（1）谓语的成分</h4><p>有时态的系动词或实义动词充当谓语</p>\n<h4 id=\"（2）一句话当中动词能不能多（不能）\"><a href=\"#（2）一句话当中动词能不能多（不能）\" class=\"headerlink\" title=\"（2）一句话当中动词能不能多（不能）\"></a>（2）一句话当中动词能不能多（不能）</h4><p>谓语只能是动词</p>\n<p>动词只能做谓语</p>\n<p>把一句话所有不是谓语的动词变成不是动词：</p>\n<ul>\n<li><p>v+ing：主动</p>\n</li>\n<li><p>v+ed：被动</p>\n</li>\n<li><p>to do：目的</p>\n</li>\n</ul>\n<p>一句话当中只能有一个动词存在并且充当谓语，多余的动词全部变成非谓语动词。</p>\n<p>eg1.</p>\n<p>Pandas are the rarest members in bear family，mainly living in the forest of Chinese southwest.</p>\n<p>eg2.</p>\n<p>YangZi River flowing through diverse ecological systems，keeps the home of a sea of endangered species，irrigating one fifth of Chinese land.</p>\n<p>eg3.（独立主格）</p>\n<p>I love you，you loving me.</p>\n<p>eg4.</p>\n<p>Winter approaching，spring will be around the corner.</p>\n<p>eg5.（分词作状语）</p>\n<p>Being a teacher，I have passion for singing songs.</p>\n<h4 id=\"（3）一句话动词能不能少（不能）\"><a href=\"#（3）一句话动词能不能少（不能）\" class=\"headerlink\" title=\"（3）一句话动词能不能少（不能）\"></a>（3）一句话动词能不能少（不能）</h4><p>一句话当中有且只能有一个有时态的实义动词或者系动词的存在，并且充当谓语。</p>\n<h3 id=\"2-主语\"><a href=\"#2-主语\" class=\"headerlink\" title=\"2.主语\"></a>2.主语</h3><h4 id=\"（1）主语的成分\"><a href=\"#（1）主语的成分\" class=\"headerlink\" title=\"（1）主语的成分\"></a>（1）主语的成分</h4><p>名词、代词、非谓语动词、从句（引导词+句子）</p>\n<h4 id=\"（2）一句话主语能不能少（不能）\"><a href=\"#（2）一句话主语能不能少（不能）\" class=\"headerlink\" title=\"（2）一句话主语能不能少（不能）\"></a>（2）一句话主语能不能少（不能）</h4><p>一句没有主语怎么办：</p>\n<ul>\n<li>加it作为主语：必须与天气、温度、时间有关系。</li>\n<li>there be句型，听到“有”的时候使用。</li>\n<li>被动：当听到一句话没有主语或者人称代词作主语，都可以考虑写成被动。</li>\n<li>人称代词作主语：I、you、we</li>\n</ul>\n<p>三种情况没有被动：</p>\n<ul>\n<li>动词后面有介词时</li>\n<li>系动词没有被动</li>\n<li>have表达”有“的意思时</li>\n</ul>\n<p>eg1.</p>\n<p>If there exits a dream，glories are supposed to be achieved.</p>\n<h3 id=\"3-宾语\"><a href=\"#3-宾语\" class=\"headerlink\" title=\"3.宾语\"></a>3.宾语</h3><h4 id=\"（1）宾语的成分\"><a href=\"#（1）宾语的成分\" class=\"headerlink\" title=\"（1）宾语的成分\"></a>（1）宾语的成分</h4><p>名词、代词、非谓语动词，从句</p>\n<h3 id=\"4-表语\"><a href=\"#4-表语\" class=\"headerlink\" title=\"4.表语\"></a>4.表语</h3><h4 id=\"（1）表语的成分\"><a href=\"#（1）表语的成分\" class=\"headerlink\" title=\"（1）表语的成分\"></a>（1）表语的成分</h4><p>名词、代词、非谓语动词、从句、形容词、介词短语</p>\n<h2 id=\"（三）简单句在写作的使用\"><a href=\"#（三）简单句在写作的使用\" class=\"headerlink\" title=\"（三）简单句在写作的使用\"></a>（三）简单句在写作的使用</h2><h3 id=\"1-写作\"><a href=\"#1-写作\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><ul>\n<li>所有写不来的长难句，暂时写成简单句，一定保证语法正确。</li>\n</ul>\n<h3 id=\"2-长难句\"><a href=\"#2-长难句\" class=\"headerlink\" title=\"2.长难句\"></a>2.长难句</h3><ul>\n<li>找这句话的动词，从而找到这句话的主谓宾。</li>\n<li>如果一句话找到多个动词，就确定主句的谓语动词（前面没有引导词的动词）。</li>\n</ul>\n<h1 id=\"二、并列句\"><a href=\"#二、并列句\" class=\"headerlink\" title=\"二、并列句\"></a>二、并列句</h1><h2 id=\"（一）什么是并列句\"><a href=\"#（一）什么是并列句\" class=\"headerlink\" title=\"（一）什么是并列句\"></a>（一）什么是并列句</h2><p>就是用连词连接两个句子。</p>\n<h2 id=\"（二）常见的连词\"><a href=\"#（二）常见的连词\" class=\"headerlink\" title=\"（二）常见的连词\"></a>（二）常见的连词</h2><ul>\n<li>平行：and，not only…but also</li>\n<li>平行关系副词&#x2F;介词短语：similarly，equally，likewise，at the same time（同样的），in the meanwhile</li>\n<li>转折：but，yet，while，whereas</li>\n<li>转折关系副词&#x2F;介词短语：however，nevertheless，on the contrary，conversely（但是），unexpectedly，unfortunately，by contrast</li>\n<li>选择：or</li>\n<li>选择关系副词&#x2F;介词短语：alternatively</li>\n<li>因果：for，so</li>\n<li>因果关系副词&#x2F;介词短语：therefore，thus，consequently，as a result</li>\n<li>递进：then</li>\n<li>递进关系副词&#x2F;介词短语：besides，furthermore，moreover，additionally，subsequently，in addition</li>\n</ul>\n<h2 id=\"（三）并列句的考点分析\"><a href=\"#（三）并列句的考点分析\" class=\"headerlink\" title=\"（三）并列句的考点分析\"></a>（三）并列句的考点分析</h2><h3 id=\"1-写作-1\"><a href=\"#1-写作-1\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><p>写作上下句之间有逻辑关系就一定要用逻辑关系词（连词、副词、介词、介词短语）。</p>\n<p>连词和其他逻辑词区别在于，连词前面有无逗号均可，而其他逻辑关系词前面要么用句号，要么加连词and</p>\n<p>eg1.</p>\n<p>Romance has evaporated，but she still misses the past.</p>\n<p>Romance has evaporated，and on the contrary she still misses the past.</p>\n<p>eg2.</p>\n<p>There remain an army of companies coming from afar，and consequently I feel more than delighted.</p>\n<p>eg3.</p>\n<p>I am claimed changeable like water. By contrast,my clarity keeps consistent.</p>\n<p>eg4.</p>\n<p>Do you still keep that day in mind? I failed to pass CET4，and as result，I shed tears in the rain alone. At the same time，you came up to me and subsequently you beat my shoulder and told me “There exists no destination in life”.</p>\n<h3 id=\"2-长难句分析\"><a href=\"#2-长难句分析\" class=\"headerlink\" title=\"2.长难句分析\"></a>2.长难句分析</h3><p>在分析长难句中，只要有并列连词出现通常都会有省略。</p>\n<p>分析长难句第二步，找连词，但是当连词在连接两个单词的时候，忽略这个连词。</p>\n<p>那么如何查找省略的内容？一句话只要有省略就一定会省略在连词后——&gt;所以连词后面有的成分，连词前面一定有——&gt;连词前面有，而连词后面没有的成分便是省略的内容。</p>\n<h1 id=\"三、名词（短语）和名词性从句\"><a href=\"#三、名词（短语）和名词性从句\" class=\"headerlink\" title=\"三、名词（短语）和名词性从句\"></a>三、名词（短语）和名词性从句</h1><h2 id=\"（一）名词充当的成分\"><a href=\"#（一）名词充当的成分\" class=\"headerlink\" title=\"（一）名词充当的成分\"></a>（一）名词充当的成分</h2><h3 id=\"1-主语\"><a href=\"#1-主语\" class=\"headerlink\" title=\"1.主语\"></a>1.主语</h3><h3 id=\"2-宾语\"><a href=\"#2-宾语\" class=\"headerlink\" title=\"2.宾语\"></a>2.宾语</h3><h3 id=\"3-表语\"><a href=\"#3-表语\" class=\"headerlink\" title=\"3.表语\"></a>3.表语</h3><h3 id=\"4-同位语\"><a href=\"#4-同位语\" class=\"headerlink\" title=\"4.同位语\"></a>4.同位语</h3><p>同样位置的语，用来解释名词的成分就是同位语。</p>\n<p>只要在作文中见到名词，都可以有意识的在后面加同位语，对该名词进行补充说明。（小于2次）</p>\n<p>充当同位语的成分：</p>\n<p>（1）名词</p>\n<p>（2）代词</p>\n<p>（3）非谓语动词</p>\n<p>（4）从句</p>\n<p>eg1.</p>\n<p>The movie looks terrific.</p>\n<p>I admire his mother.</p>\n<p>Gump is a man.</p>\n<p>I enjoy the part，the beginning.</p>\n<p>eg2.(写作满分句型)</p>\n<p>I，a university student， like Eason，a well-known singer from Hong Kong.</p>\n<p>My mother，a typical housewife，enjoy playing mahjong，a Chinese entertainment.</p>\n<p>Persistence，an active mentally，plays a critical role in the glories of all children and adults.</p>\n<h2 id=\"（二）什么是名词性从句\"><a href=\"#（二）什么是名词性从句\" class=\"headerlink\" title=\"（二）什么是名词性从句\"></a>（二）什么是名词性从句</h2><blockquote>\n<p>名词在句子充当的成分，从句都能充当，这就是名词性从句。</p>\n</blockquote>\n<h3 id=\"1-主语从句\"><a href=\"#1-主语从句\" class=\"headerlink\" title=\"1.主语从句\"></a>1.主语从句</h3><h3 id=\"2-宾语从句\"><a href=\"#2-宾语从句\" class=\"headerlink\" title=\"2.宾语从句\"></a>2.宾语从句</h3><h3 id=\"3-表语从句\"><a href=\"#3-表语从句\" class=\"headerlink\" title=\"3.表语从句\"></a>3.表语从句</h3><h3 id=\"4-同位语从句\"><a href=\"#4-同位语从句\" class=\"headerlink\" title=\"4.同位语从句\"></a>4.同位语从句</h3><p>eg1.</p>\n<p>What I saw looks terrific.</p>\n<p>I admire what she said.</p>\n<p>Gump is who we should learn from.</p>\n<p>I enjoy the part that a bird is flying.</p>\n<h2 id=\"（三）名词性从句的引导词\"><a href=\"#（三）名词性从句的引导词\" class=\"headerlink\" title=\"（三）名词性从句的引导词\"></a>（三）名词性从句的引导词</h2><p>名词性从句的引导词是按照从句的类型分的类，一共把引导词分成三类：</p>\n<ul>\n<li>当从句是陈述句时，that没有意思并且在从句中不充当任何成分</li>\n<li>当从句是一般疑问句时，并且whether&#x2F;if在从句中不充当任何成分，意思是是否</li>\n<li>所有的特殊疑问词：当从句是特殊疑问句时。</li>\n<li>并且英语中所有的从句都是陈述句。</li>\n</ul>\n<p>eg1.</p>\n<p>I am wondering whether aliens exist.</p>\n<p>That ladies tend to be right remains common knowledge.</p>\n<p>My meaning seems that supporting the elderly remains a Chinese conventional virtue.</p>\n<p>Someday，one will perceive that career，kinship and friendship prove more indispensable than romance.</p>\n<p>The point seems when wealth will become available for you.</p>\n<h2 id=\"（四）名词性从句考点分析\"><a href=\"#（四）名词性从句考点分析\" class=\"headerlink\" title=\"（四）名词性从句考点分析\"></a>（四）名词性从句考点分析</h2><h3 id=\"1-写作-2\"><a href=\"#1-写作-2\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><h4 id=\"（1）主语从句\"><a href=\"#（1）主语从句\" class=\"headerlink\" title=\"（1）主语从句\"></a>（1）主语从句</h4><p>主语从句的满分表达：</p>\n<ul>\n<li>把主语放在句末，加it作形式主语</li>\n<li>It is apparent that……….</li>\n<li>It looks beyond dispute that…………….（显而易见、众所周知）</li>\n<li>It has been widely accepted that………..</li>\n<li>It is universally acknowledged that…………</li>\n<li>It keeps my argument that………….（我认为….)</li>\n</ul>\n<h4 id=\"（2）同位语从句\"><a href=\"#（2）同位语从句\" class=\"headerlink\" title=\"（2）同位语从句\"></a>（2）同位语从句</h4><p>eg1.</p>\n<p>The matter that he managed to find a girlfriend makes his superiors rejoiced.</p>\n<p>同位语从句即可放在它所解释的词后，也可以放在整句话后</p>\n<p>eg2.</p>\n<p>Nothing can hide the truth that she is getting old.</p>\n<p>eg3.</p>\n<p>The outlook proves wrong that people in HN seem all deceivers.</p>\n<p>eg4.</p>\n<p>The evidence that flowers in the greenhouse fail to undergo storms indicates that kids should by no means be spoiled by the in senior citizens.</p>\n<h3 id=\"2-长难句分析-1\"><a href=\"#2-长难句分析-1\" class=\"headerlink\" title=\"2.长难句分析\"></a>2.长难句分析</h3><p>能够识别各个名词性从句，并且能通顺的翻译出来。</p>\n<h4 id=\"（1）如何识别主语从句\"><a href=\"#（1）如何识别主语从句\" class=\"headerlink\" title=\"（1）如何识别主语从句\"></a>（1）如何识别主语从句</h4><ul>\n<li>只要见到有引导词放在句首，并且从句后没有被逗号隔开，就一定是主语从句，主语从句从句首开始，到主句谓语动词结束。</li>\n<li>除此以外，在分析长难句中，遇到It…….that………，通常都是主语从句，主语从句从that开始到句末结束。</li>\n</ul>\n<h4 id=\"（2）如何识别宾语从句\"><a href=\"#（2）如何识别宾语从句\" class=\"headerlink\" title=\"（2）如何识别宾语从句\"></a>（2）如何识别宾语从句</h4><ul>\n<li>只要实义动词后面有引导词，就暂定是宾语从句。</li>\n</ul>\n<h4 id=\"（3）如何识别表语从句\"><a href=\"#（3）如何识别表语从句\" class=\"headerlink\" title=\"（3）如何识别表语从句\"></a>（3）如何识别表语从句</h4><ul>\n<li>只要系动词后面有引导词就是表语从句</li>\n</ul>\n<h4 id=\"（4）如何识别同位语从句\"><a href=\"#（4）如何识别同位语从句\" class=\"headerlink\" title=\"（4）如何识别同位语从句\"></a>（4）如何识别同位语从句</h4><ul>\n<li>只要名词后面有引导词，就暂定为同位语从句。</li>\n</ul>\n<h1 id=\"四、定语和定语从句\"><a href=\"#四、定语和定语从句\" class=\"headerlink\" title=\"四、定语和定语从句\"></a>四、定语和定语从句</h1><h2 id=\"（一）什么是定语\"><a href=\"#（一）什么是定语\" class=\"headerlink\" title=\"（一）什么是定语\"></a>（一）什么是定语</h2><blockquote>\n<p>定语就是修饰名词的成分。只要听到…..的+名词，….的就是这个名词的定语成分。</p>\n</blockquote>\n<h2 id=\"（二）定语的成分\"><a href=\"#（二）定语的成分\" class=\"headerlink\" title=\"（二）定语的成分\"></a>（二）定语的成分</h2><h3 id=\"1-形容词作定语\"><a href=\"#1-形容词作定语\" class=\"headerlink\" title=\"1.形容词作定语\"></a>1.形容词作定语</h3><p>eg1.</p>\n<p>The innocent nightingale died.</p>\n<p>The nightingale brave and innocent died.</p>\n<h3 id=\"2-名词（短语）作定语\"><a href=\"#2-名词（短语）作定语\" class=\"headerlink\" title=\"2.名词（短语）作定语\"></a>2.名词（短语）作定语</h3><p>eg1.The singing of the nightingale can make the rose bloom.</p>\n<h3 id=\"3-介词短语作定语\"><a href=\"#3-介词短语作定语\" class=\"headerlink\" title=\"3.介词短语作定语\"></a>3.介词短语作定语</h3><p>eg1.The nightingale out of the window heard the sighs of the youngster.</p>\n<h3 id=\"4-非谓语动词作定语\"><a href=\"#4-非谓语动词作定语\" class=\"headerlink\" title=\"4.非谓语动词作定语\"></a>4.非谓语动词作定语</h3><p>eg1.The singing nightingale lost his life.</p>\n<h3 id=\"5-从句作定语\"><a href=\"#5-从句作定语\" class=\"headerlink\" title=\"5.从句作定语\"></a>5.从句作定语</h3><p>eg1.The rose that the nightingale exchanged with his life was discarded.</p>\n<h2 id=\"（三）定语的位置\"><a href=\"#（三）定语的位置\" class=\"headerlink\" title=\"（三）定语的位置\"></a>（三）定语的位置</h2><p>前小后大：当一个单词修饰名词的时候，通常放在名词前；当多个单词修饰名词，通常放在名词后。</p>\n<p>eg1.</p>\n<p>This is a fiction about a nightingale and a rose.</p>\n<p>The youngster grasping romance left the party of the prince.</p>\n<p>The boy rejected looks pitiful. 当过去分词作定语通常放在名词后。</p>\n<p>I have something important to tell you.当形容词修饰不定代词时，即使只有一个单词，通常也放在名词后。</p>\n<h2 id=\"四-定语从句\"><a href=\"#四-定语从句\" class=\"headerlink\" title=\"(四)定语从句\"></a>(四)定语从句</h2><h3 id=\"1-定语从句的构成\"><a href=\"#1-定语从句的构成\" class=\"headerlink\" title=\"1.定语从句的构成\"></a>1.定语从句的构成</h3><p>名词（先行词）+引导词+句子</p>\n<h3 id=\"2-定语从句的引导词\"><a href=\"#2-定语从句的引导词\" class=\"headerlink\" title=\"2.定语从句的引导词\"></a>2.定语从句的引导词</h3><p>引导词按照先行词种类分类：</p>\n<ul>\n<li>人：who，whom，whose</li>\n<li>物：that，which，whose</li>\n<li>时间：that，which，when</li>\n<li>地点：that，which，where</li>\n<li>原因：that，which，why</li>\n</ul>\n<p>到底是谁决定定语从句引导词的用法：</p>\n<ul>\n<li>先行词</li>\n<li>引导词在从句中能够充当的成分</li>\n</ul>\n<p>定语从句引导词新的分类标准，按照引导词本身的词性分类：</p>\n<ul>\n<li>代词（在从句中充当主语或者宾语）：who，whom，that，which</li>\n<li>副词（在从句中不充当成分）：where，when，why</li>\n<li>形容词（在从句中修饰离它最近的名词）：whose</li>\n</ul>\n<h2 id=\"（五）定语从句特殊用法\"><a href=\"#（五）定语从句特殊用法\" class=\"headerlink\" title=\"（五）定语从句特殊用法\"></a>（五）定语从句特殊用法</h2><h3 id=\"1-that作引导词\"><a href=\"#1-that作引导词\" class=\"headerlink\" title=\"1.that作引导词\"></a>1.that作引导词</h3><p>that在引导定语从句时，在从句充当宾语，that可以省略。（自己写作文不要省）</p>\n<p>在分析长难句时，如果见到有两个名词或者代词直接放在一起，中间没有被连词或者标点符号隔开，通常都是省略that的定语从句。</p>\n<p>eg1.I enjoy the book my mother bought for me.</p>\n<h3 id=\"2-区别限制和非限制性定语从句\"><a href=\"#2-区别限制和非限制性定语从句\" class=\"headerlink\" title=\"2.区别限制和非限制性定语从句\"></a>2.区别限制和非限制性定语从句</h3><p>非限制有逗号，限制没有逗号。</p>\n<p>在分析长难句的时候，非限制性定语从句就相当于插入语，可以不看。</p>\n<h3 id=\"3-先行词与引导词之间有介词\"><a href=\"#3-先行词与引导词之间有介词\" class=\"headerlink\" title=\"3.先行词与引导词之间有介词\"></a>3.先行词与引导词之间有介词</h3><ul>\n<li><p>人：whom</p>\n</li>\n<li><p>物：which</p>\n</li>\n</ul>\n<h3 id=\"4-区别the-same…-as；the-same-…-that引导的定语从句\"><a href=\"#4-区别the-same…-as；the-same-…-that引导的定语从句\" class=\"headerlink\" title=\"4.区别the same….as；the same …..that引导的定语从句\"></a>4.区别the same….as；the same …..that引导的定语从句</h3><p>eg1.</p>\n<p>He is the same man as I love.（他就像我爱的男人）</p>\n<p>He is the same man that I love.（他就是我爱的男人）</p>\n<h3 id=\"5-as和which引导的非限制性定语从句\"><a href=\"#5-as和which引导的非限制性定语从句\" class=\"headerlink\" title=\"5.as和which引导的非限制性定语从句\"></a>5.as和which引导的非限制性定语从句</h3><p>which引导的非限制定语从句可以修饰前面整个句子。as也可以，但是which只能放在主句的后面，而as则可前可后。</p>\n<p>eg1.He enjoy talking with young ladies，which drives me mad.</p>\n<h2 id=\"（六）区别定语从句和同位语从句\"><a href=\"#（六）区别定语从句和同位语从句\" class=\"headerlink\" title=\"（六）区别定语从句和同位语从句\"></a>（六）区别定语从句和同位语从句</h2><h3 id=\"1-相同点\"><a href=\"#1-相同点\" class=\"headerlink\" title=\"1.相同点\"></a>1.相同点</h3><p>都是先行词+引导词+句子</p>\n<h3 id=\"2-不同点\"><a href=\"#2-不同点\" class=\"headerlink\" title=\"2.不同点\"></a>2.不同点</h3><ul>\n<li>看从句本身的意思，定语从句是对前面名词的修饰，而同位语从句是对前面句子的解释。</li>\n<li>看引导词that在从句中是否充当成分，如果充当成分就是定语从句，否则就是同位语从句。</li>\n<li>定语从句的先行词可以是所有的名词，而同位语从句只能是抽象名词。</li>\n<li>定语从句引导词共有8个，而同位语引导词一般都是that。</li>\n</ul>\n<h2 id=\"（七）定语从句的难点\"><a href=\"#（七）定语从句的难点\" class=\"headerlink\" title=\"（七）定语从句的难点\"></a>（七）定语从句的难点</h2><blockquote>\n<p>寻找先行词</p>\n</blockquote>\n<ul>\n<li><p>定语从句的先行词就是离它最近的名词。</p>\n</li>\n<li><p>定语从句的先行词是它前面的几个并列的名词。</p>\n</li>\n<li><p>定语从句的先行词是它前面的一个从句。</p>\n</li>\n<li><p>定语从句的先行词是它前面的整个句子。</p>\n</li>\n<li><p>定语从句的先行词和引导词被隔开。</p>\n</li>\n</ul>\n<p>英汉差异对比：</p>\n<ul>\n<li><p>英语意合，汉语形合</p>\n<p>A：句子结构上\tB：逻辑关系词使用上</p>\n</li>\n<li><p>汉语主动，英语被动</p>\n</li>\n<li><p>汉语多短句，英语多长句</p>\n</li>\n</ul>\n<h2 id=\"（八）定语从句的考点\"><a href=\"#（八）定语从句的考点\" class=\"headerlink\" title=\"（八）定语从句的考点\"></a>（八）定语从句的考点</h2><h3 id=\"1-长难句分析\"><a href=\"#1-长难句分析\" class=\"headerlink\" title=\"1.长难句分析\"></a>1.长难句分析</h3><p>能够找到一句话的定语成分，并且把它们通顺的翻译出来。</p>\n<p>找定语的关键是找名词。只要名词后有东西，不是动词，暂定是定语，定语从名词后开始，到主句的谓语动词结束。主句谓语动词在定语前，定语从名词后到句末结束，如果有连词的话，到连词之前结束。</p>\n<h1 id=\"五、状语和状语从句\"><a href=\"#五、状语和状语从句\" class=\"headerlink\" title=\"五、状语和状语从句\"></a>五、状语和状语从句</h1><h2 id=\"（一）形容词、副词的成分\"><a href=\"#（一）形容词、副词的成分\" class=\"headerlink\" title=\"（一）形容词、副词的成分\"></a>（一）形容词、副词的成分</h2><h3 id=\"1-形容词\"><a href=\"#1-形容词\" class=\"headerlink\" title=\"1.形容词\"></a>1.形容词</h3><ul>\n<li>放在系动词后作表语</li>\n<li>放在名词前作定语</li>\n</ul>\n<h3 id=\"2-副词\"><a href=\"#2-副词\" class=\"headerlink\" title=\"2.副词\"></a>2.副词</h3><ul>\n<li>修饰实义动词</li>\n<li>修饰形容词</li>\n<li>修饰副词</li>\n<li>修饰句子</li>\n</ul>\n<p>副词无论在哪都是作状语</p>\n<h2 id=\"（二）什么是状语\"><a href=\"#（二）什么是状语\" class=\"headerlink\" title=\"（二）什么是状语\"></a>（二）什么是状语</h2><h3 id=\"1-状语的含义\"><a href=\"#1-状语的含义\" class=\"headerlink\" title=\"1.状语的含义\"></a>1.状语的含义</h3><p>状语就是在一个句子中，用来修饰实义动词、形容词、副词或者整个句子的成分。</p>\n<p>状语除了名词不能修饰，其他都能修饰。</p>\n<h3 id=\"2-状语的成分\"><a href=\"#2-状语的成分\" class=\"headerlink\" title=\"2.状语的成分\"></a>2.状语的成分</h3><ul>\n<li>副词</li>\n<li>介词短语</li>\n<li>非谓语动词</li>\n<li>从句</li>\n</ul>\n<h3 id=\"3-状语的位置\"><a href=\"#3-状语的位置\" class=\"headerlink\" title=\"3.状语的位置\"></a>3.状语的位置</h3><p>随便放</p>\n<h2 id=\"（三）状语从句\"><a href=\"#（三）状语从句\" class=\"headerlink\" title=\"（三）状语从句\"></a>（三）状语从句</h2><p>状语从句的引导词是以引导词本身的意思分的类，共9类。</p>\n<h3 id=\"1-时间状语从句\"><a href=\"#1-时间状语从句\" class=\"headerlink\" title=\"1.时间状语从句\"></a>1.时间状语从句</h3><h4 id=\"（1）引导词\"><a href=\"#（1）引导词\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>when&#x3D;while&#x3D;as    当while翻译成“当….的时候”，后面要跟进行时态。</li>\n<li>before</li>\n<li>after</li>\n<li>since    “自从”，主句为完成时态</li>\n<li>the moment&#x3D;as soon as  “那一刻”</li>\n<li>by the time</li>\n<li>until   “直到….才”</li>\n<li>not ……..until  “直到….才”</li>\n</ul>\n<h4 id=\"（2）状语从句的时态问题\"><a href=\"#（2）状语从句的时态问题\" class=\"headerlink\" title=\"（2）状语从句的时态问题\"></a>（2）状语从句的时态问题</h4><p>在所有状语从句中，如果主句的动作和从句的动作尚未发生的话，主句用一般将来时，从句用一般现在时表将来。</p>\n<h4 id=\"（3）区别-until-和-not…-until\"><a href=\"#（3）区别-until-和-not…-until\" class=\"headerlink\" title=\"（3）区别 until 和 not….until\"></a>（3）区别 until 和 not….until</h4><p>看主句谓语是延续性动词还是瞬间动词，如果是延续性动词就用until，如果是瞬间动词就用not………until</p>\n<p>eg1.</p>\n<p>I didn’t realize the greatness of mothers  until I grew up.  直到我长大我才意识到母亲的伟大。</p>\n<h4 id=\"（4）when引导的时间状语从句省略的情况\"><a href=\"#（4）when引导的时间状语从句省略的情况\" class=\"headerlink\" title=\"（4）when引导的时间状语从句省略的情况\"></a>（4）when引导的时间状语从句省略的情况</h4><p>eg1.When a kid ，I enjoyed singing songs.</p>\n<p>when引导的时间状语从句，如果主句的主语与从句主语一致，并且从句的谓语中有be动词，此时从句的主语和be动词可以省略。</p>\n<h3 id=\"2-地点状语从句\"><a href=\"#2-地点状语从句\" class=\"headerlink\" title=\"2.地点状语从句\"></a>2.地点状语从句</h3><h4 id=\"（1）引导词-1\"><a href=\"#（1）引导词-1\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><p>where</p>\n<p>作地点状语的通常都是介词短语，很少是从句。</p>\n<h3 id=\"3-原因状语从句\"><a href=\"#3-原因状语从句\" class=\"headerlink\" title=\"3.原因状语从句\"></a>3.原因状语从句</h3><h4 id=\"（1）引导词-2\"><a href=\"#（1）引导词-2\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>because  “因为”</li>\n<li>since</li>\n<li>in that</li>\n<li>seeing that</li>\n<li>considering that</li>\n<li>now that</li>\n<li>given that</li>\n</ul>\n<h4 id=\"（2）for（连词）\"><a href=\"#（2）for（连词）\" class=\"headerlink\" title=\"（2）for（连词）\"></a>（2）for（连词）</h4><h4 id=\"（3）介词短语\"><a href=\"#（3）介词短语\" class=\"headerlink\" title=\"（3）介词短语\"></a>（3）介词短语</h4><ul>\n<li>because of   “因为”</li>\n<li>due to</li>\n<li>owing to</li>\n<li>thanks to</li>\n<li>for the sake of</li>\n<li>as a result of</li>\n</ul>\n<p>eg1.</p>\n<p>He had a car accident because he was careless.</p>\n<p>He had a car accident for he was careless.</p>\n<p>He had a car accident because of his careless.</p>\n<h3 id=\"4-目的状语从句\"><a href=\"#4-目的状语从句\" class=\"headerlink\" title=\"4.目的状语从句\"></a>4.目的状语从句</h3><h4 id=\"（1）引导词-3\"><a href=\"#（1）引导词-3\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><blockquote>\n<p>动词不定式：</p>\n<p>to</p>\n<p>in order to   + 动词原形</p>\n<p>so as to</p>\n</blockquote>\n<ul>\n<li><p>so that 表示目的放在句末，不放在句首</p>\n</li>\n<li><p>in order that</p>\n</li>\n</ul>\n<p>eg1.（farther物理距离远&#x2F;further抽象远）</p>\n<p>We will ascend higher in order to overlook farther.</p>\n<p>We will ascend higher in order that we overlook farther.</p>\n<h3 id=\"5-结果状语从句\"><a href=\"#5-结果状语从句\" class=\"headerlink\" title=\"5.结果状语从句\"></a>5.结果状语从句</h3><h4 id=\"（1）引导词-4\"><a href=\"#（1）引导词-4\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>so……+形容词&#x2F;副词+….that…..  （替换 very）</li>\n<li>such……+名词+….that……</li>\n</ul>\n<p>eg1.</p>\n<p>It feels so hot today that I wear my dress.</p>\n<p>作文中所有出现形容词和副词的地方都可以用到so  that 句型</p>\n<h3 id=\"6-让步状语从句\"><a href=\"#6-让步状语从句\" class=\"headerlink\" title=\"6.让步状语从句\"></a>6.让步状语从句</h3><h4 id=\"（1）引导词-5\"><a href=\"#（1）引导词-5\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>although</li>\n<li>though</li>\n<li>even though         虽然&#x2F;尽管</li>\n<li>even if</li>\n<li>as</li>\n<li>while       当翻译“虽然&#x2F;尽管”只能放在句首，不能放在句中</li>\n</ul>\n<p>as 引导的让步状语从句，从句的表语可以放在句首引起部分倒装。</p>\n<p>eg1.</p>\n<p>She looks like a beauty，although </p>\n<h3 id=\"7-方式状语从句\"><a href=\"#7-方式状语从句\" class=\"headerlink\" title=\"7.方式状语从句\"></a>7.方式状语从句</h3><h4 id=\"（1）引导词-6\"><a href=\"#（1）引导词-6\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>as</li>\n<li>the way            好像&#x2F;似乎</li>\n<li>as if&#x2F;though</li>\n</ul>\n<h3 id=\"8-条件状语从句\"><a href=\"#8-条件状语从句\" class=\"headerlink\" title=\"8.条件状语从句\"></a>8.条件状语从句</h3><h4 id=\"（1）引导词-7\"><a href=\"#（1）引导词-7\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>suppose that</li>\n<li>supposing that</li>\n<li>if</li>\n<li>unless</li>\n<li>provided that</li>\n<li>as long as</li>\n<li>so long as</li>\n</ul>\n<h3 id=\"9-比较状语从句\"><a href=\"#9-比较状语从句\" class=\"headerlink\" title=\"9.比较状语从句\"></a>9.比较状语从句</h3><h4 id=\"（1）引导词-8\"><a href=\"#（1）引导词-8\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>as …….as………</li>\n<li>比较结构</li>\n</ul>\n<p>eg1.</p>\n<p>You are as beautiful as I.</p>\n<h2 id=\"（四）状语考点分析\"><a href=\"#（四）状语考点分析\" class=\"headerlink\" title=\"（四）状语考点分析\"></a>（四）状语考点分析</h2><h3 id=\"1-写作-3\"><a href=\"#1-写作-3\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><p>作文中任何一句话的旁边都可以加一个状语把句子拉长。</p>\n<p>eg1.</p>\n<p>One can live as if he were a pig. Conversely，he can never be as delighted as a pig.</p>\n<h3 id=\"2-长难句分析-2\"><a href=\"#2-长难句分析-2\" class=\"headerlink\" title=\"2.长难句分析\"></a>2.长难句分析</h3><p>能够识别状语，并通顺的把它翻译出来。</p>\n<p>一句话当中，除了句子主干和定语以外，只要在句子中见到以下东西，就是状语：</p>\n<ul>\n<li>副词</li>\n<li>比较，条件，结果，原因，让步，目的，方式状语从句</li>\n<li>伴随状语</li>\n</ul>\n<p>时间、地点不在名词后，一定是状语。</p>\n<p>名词+时间&#x2F;地点 （容易混淆）</p>\n<p>I love a boy in Zhejiang Universities.</p>\n<p>如果无法确定定语还是状语的时候，定语优先原则。只有翻译成定语不通顺的时候，才翻译成状语。</p>\n<h3 id=\"3-补充as\"><a href=\"#3-补充as\" class=\"headerlink\" title=\"3.补充as\"></a>3.补充as</h3><ul>\n<li>as+名词（“作为”）</li>\n<li>v+…名词….+as  “取决于动词意思”</li>\n<li>as+句子  引导状语从句：“当……时候&#x2F;因为&#x2F;虽然&#x2F;好像”</li>\n</ul>\n<h3 id=\"4-补充than\"><a href=\"#4-补充than\" class=\"headerlink\" title=\"4.补充than\"></a>4.补充than</h3><ul>\n<li>not so much as &#x3D;not even  甚至不&#x2F;没有</li>\n<li>not so much A as B 与其说A不如说B</li>\n<li>more A than B  与其说B不如说A</li>\n<li>more than  （+名词   不仅仅是） （+副词&#x2F;形容词  非常） （+数词 多余）</li>\n</ul>\n<h1 id=\"六、特殊结构\"><a href=\"#六、特殊结构\" class=\"headerlink\" title=\"六、特殊结构\"></a>六、特殊结构</h1><h2 id=\"（一）强调句型\"><a href=\"#（一）强调句型\" class=\"headerlink\" title=\"（一）强调句型\"></a>（一）强调句型</h2><h3 id=\"1-构成\"><a href=\"#1-构成\" class=\"headerlink\" title=\"1.构成\"></a>1.构成</h3><p>It is ……..that………..</p>\n<p>eg1.</p>\n<p>I met my old flame in the street yesterday.</p>\n<p>It was I that met my old flame in the street yesterday.      和过去式有关就用was，其他用is</p>\n<p>It was my old flame that I met in the street yesterday.</p>\n<h2 id=\"（二）倒装\"><a href=\"#（二）倒装\" class=\"headerlink\" title=\"（二）倒装\"></a>（二）倒装</h2><h3 id=\"1-什么是倒装\"><a href=\"#1-什么是倒装\" class=\"headerlink\" title=\"1.什么是倒装\"></a>1.什么是倒装</h3><p>倒装就是把一句话写成一般疑问句的形式，也就是给一句话加个助动词或把be动词放在句首。</p>\n<h3 id=\"2-具体用法\"><a href=\"#2-具体用法\" class=\"headerlink\" title=\"2.具体用法\"></a>2.具体用法</h3><h4 id=\"（1）否定词放在句首用倒装\"><a href=\"#（1）否定词放在句首用倒装\" class=\"headerlink\" title=\"（1）否定词放在句首用倒装\"></a>（1）否定词放在句首用倒装</h4><p>eg1.</p>\n<p>I can hardly speak Japanese.</p>\n<p>Hardly can I speak Japanese.</p>\n<h4 id=\"（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\"><a href=\"#（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\" class=\"headerlink\" title=\"（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\"></a>（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装</h4><h4 id=\"（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\"><a href=\"#（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\" class=\"headerlink\" title=\"（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\"></a>（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装</h4><h4 id=\"（4）only引出的状语位于句首时用倒装\"><a href=\"#（4）only引出的状语位于句首时用倒装\" class=\"headerlink\" title=\"（4）only引出的状语位于句首时用倒装\"></a>（4）only引出的状语位于句首时用倒装</h4><h4 id=\"（5）as引导让步状语从句，从句的表语可以放在句首构成倒装\"><a href=\"#（5）as引导让步状语从句，从句的表语可以放在句首构成倒装\" class=\"headerlink\" title=\"（5）as引导让步状语从句，从句的表语可以放在句首构成倒装\"></a>（5）as引导让步状语从句，从句的表语可以放在句首构成倒装</h4><h4 id=\"（6）省略if的虚拟语气用倒装\"><a href=\"#（6）省略if的虚拟语气用倒装\" class=\"headerlink\" title=\"（6）省略if的虚拟语气用倒装\"></a>（6）省略if的虚拟语气用倒装</h4><h2 id=\"（三）虚拟语气\"><a href=\"#（三）虚拟语气\" class=\"headerlink\" title=\"（三）虚拟语气\"></a>（三）虚拟语气</h2><h3 id=\"1-什么是虚拟语气\"><a href=\"#1-什么是虚拟语气\" class=\"headerlink\" title=\"1.什么是虚拟语气\"></a>1.什么是虚拟语气</h3><p>虚拟语气表示与事实相反或者语气委婉</p>\n<h3 id=\"2-用法\"><a href=\"#2-用法\" class=\"headerlink\" title=\"2.用法\"></a>2.用法</h3><h4 id=\"（1）一般用法\"><a href=\"#（1）一般用法\" class=\"headerlink\" title=\"（1）一般用法\"></a>（1）一般用法</h4><p>if引导的条件状语从句</p>\n<p>eg1.</p>\n<p>If you were a tear in my eyes，I would never shed it.</p>\n<p>If I had been a dog，I could have slept with you.</p>\n<p>写成正常句子后，变成过去时（满分句型）</p>\n<h4 id=\"（2）特殊用法\"><a href=\"#（2）特殊用法\" class=\"headerlink\" title=\"（2）特殊用法\"></a>（2）特殊用法</h4><ul>\n<li>以下情况从句用“should + 动词”表示虚拟，并且should可以省略（自己写不省）。</li>\n</ul>\n<p>以防：incase、lest、for fear that</p>\n<p>命令：order、direct、command</p>\n<p>建议：advise、suggest、propose</p>\n<p>要求：ask、request、demand、require</p>\n<p>用虚拟</p>\n<p>是必要的：It is necessary&#x2F;important that</p>\n<p>eg1.</p>\n<p>Incase that you should develop fetal infections，you had better stay at home.</p>\n<ul>\n<li>以下情况用过去时表示虚拟，</li>\n</ul>\n<p>would rather 和 It is high time that………</p>\n<ul>\n<li>以下情况区别对待：就是把它本来时态写成过去式就行了。</li>\n</ul>\n<p>wish，if only，but for，or&#x2F;otherwise，as if&#x2F;as though等</p>\n<h3 id=\"3-情态动词\"><a href=\"#3-情态动词\" class=\"headerlink\" title=\"3.情态动词\"></a>3.情态动词</h3><p>表名说话人主观态度的词汇（没有动作，不能充当谓语），情态动词相当于助动词+动词原形</p>\n<h4 id=\"（1）表示对现在和将来的推测：情态动词-动词原形\"><a href=\"#（1）表示对现在和将来的推测：情态动词-动词原形\" class=\"headerlink\" title=\"（1）表示对现在和将来的推测：情态动词+动词原形\"></a>（1）表示对现在和将来的推测：情态动词+动词原形</h4><h4 id=\"（2）表示对过去的推测：\"><a href=\"#（2）表示对过去的推测：\" class=\"headerlink\" title=\"（2）表示对过去的推测：\"></a>（2）表示对过去的推测：</h4><p>eg1.</p>\n<p>He must have been self-biased in his university.  一定做过某事must have done</p>\n<p>You need not have shown your love in this way.   本没必要做某事，但是做了need not have done</p>\n<p>I could have become a prominent poet.   本能做某事但却没有做，表示遗憾could have done</p>\n<p>We should have got married if there exists a chance.   本应该做某事但是没有做。should have done</p>\n<p>must的否定&#x3D;can‘t      must not表示禁止</p>\n<h1 id=\"备注：\"><a href=\"#备注：\" class=\"headerlink\" title=\"备注：\"></a>备注：</h1><table>\n<thead>\n<tr>\n<th align=\"center\">单数</th>\n<th align=\"center\">第一人称</th>\n<th align=\"center\">第二人称</th>\n<th align=\"center\">第三人称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">主格（主语）</td>\n<td align=\"center\">I</td>\n<td align=\"center\">you</td>\n<td align=\"center\">he、she、it</td>\n</tr>\n<tr>\n<td align=\"center\">宾格（宾语）</td>\n<td align=\"center\">me</td>\n<td align=\"center\">you</td>\n<td align=\"center\">him、her、it</td>\n</tr>\n<tr>\n<td align=\"center\">物主代词（定语）</td>\n<td align=\"center\">my</td>\n<td align=\"center\">your</td>\n<td align=\"center\">his、her、its</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">复数</th>\n<th align=\"center\">第一人称</th>\n<th align=\"center\">第二人称</th>\n<th align=\"center\">第三人称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">主格（主语）</td>\n<td align=\"center\">we</td>\n<td align=\"center\">you</td>\n<td align=\"center\">they</td>\n</tr>\n<tr>\n<td align=\"center\">宾格（宾语）</td>\n<td align=\"center\">us</td>\n<td align=\"center\">you</td>\n<td align=\"center\">them</td>\n</tr>\n<tr>\n<td align=\"center\">物主代词（定语）</td>\n<td align=\"center\">our</td>\n<td align=\"center\">your</td>\n<td align=\"center\">their</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">过去</th>\n<th align=\"center\">现在</th>\n<th align=\"center\">将来</th>\n<th align=\"center\">过去将来</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">一般</td>\n<td align=\"center\">did</td>\n<td align=\"center\">do&#x2F;does</td>\n<td align=\"center\">will&#x2F;shall do</td>\n<td align=\"center\">would&#x2F;should do</td>\n</tr>\n<tr>\n<td align=\"center\">进行</td>\n<td align=\"center\">was&#x2F;were doing</td>\n<td align=\"center\">am&#x2F;is&#x2F;are doing</td>\n<td align=\"center\">will&#x2F;shall be doing</td>\n<td align=\"center\">would&#x2F;should be doing</td>\n</tr>\n<tr>\n<td align=\"center\">完成</td>\n<td align=\"center\">had done</td>\n<td align=\"center\">has&#x2F;have done</td>\n<td align=\"center\">will&#x2F;shall have done</td>\n<td align=\"center\">would&#x2F;should have done</td>\n</tr>\n<tr>\n<td align=\"center\">完成进行</td>\n<td align=\"center\">had been doing</td>\n<td align=\"center\">has&#x2F;have been doing</td>\n<td align=\"center\">will&#x2F;shall have been doing</td>\n<td align=\"center\">would&#x2F;should have been doing</td>\n</tr>\n</tbody></table>\n","more":"<h1 id=\"英语语法\"><a href=\"#英语语法\" class=\"headerlink\" title=\"英语语法\"></a>英语语法</h1><h1 id=\"一、简单句\"><a href=\"#一、简单句\" class=\"headerlink\" title=\"一、简单句\"></a>一、简单句</h1><h2 id=\"（一）句子的分类\"><a href=\"#（一）句子的分类\" class=\"headerlink\" title=\"（一）句子的分类\"></a>（一）句子的分类</h2><blockquote>\n<p>什么是英语的句子：英语必须具备主谓结构。并且主语一定是谓语动作的发出者，如果有宾语的话，宾语一定是谓语的承受着。</p>\n</blockquote>\n<h3 id=\"1-主谓\"><a href=\"#1-主谓\" class=\"headerlink\" title=\"1.主谓\"></a>1.主谓</h3><h3 id=\"2-主谓宾\"><a href=\"#2-主谓宾\" class=\"headerlink\" title=\"2.主谓宾\"></a>2.主谓宾</h3><p>谓语：实义动词</p>\n<h3 id=\"3-主谓表\"><a href=\"#3-主谓表\" class=\"headerlink\" title=\"3.主谓表\"></a>3.主谓表</h3><p>谓语：系动词</p>\n<ul>\n<li><p>be</p>\n</li>\n<li><p>感官动词：look， smell（n.气味），taste（n.喜爱&#x2F;喜好  have taste for sth 喜爱…..），sound（n.声音），feel</p>\n</li>\n<li><p>变化：become，get，turn，grow，fall</p>\n</li>\n<li><p>保持：keep，stay，remain，stand</p>\n</li>\n<li><p>表象：seem，appear</p>\n</li>\n<li><p>证明：prove</p>\n</li>\n</ul>\n<h3 id=\"4-主谓双宾（少）\"><a href=\"#4-主谓双宾（少）\" class=\"headerlink\" title=\"4.主谓双宾（少）\"></a>4.主谓双宾（少）</h3><h3 id=\"5-主谓宾补（少）\"><a href=\"#5-主谓宾补（少）\" class=\"headerlink\" title=\"5.主谓宾补（少）\"></a>5.主谓宾补（少）</h3><p>只需要在最后两个宾语中间加个be动词，意思通顺就是宾补，否则是双宾</p>\n<h2 id=\"（二）句子的成分（词性的问题）\"><a href=\"#（二）句子的成分（词性的问题）\" class=\"headerlink\" title=\"（二）句子的成分（词性的问题）\"></a>（二）句子的成分（词性的问题）</h2><h3 id=\"1-谓语\"><a href=\"#1-谓语\" class=\"headerlink\" title=\"1.谓语\"></a>1.谓语</h3><h4 id=\"（1）谓语的成分\"><a href=\"#（1）谓语的成分\" class=\"headerlink\" title=\"（1）谓语的成分\"></a>（1）谓语的成分</h4><p>有时态的系动词或实义动词充当谓语</p>\n<h4 id=\"（2）一句话当中动词能不能多（不能）\"><a href=\"#（2）一句话当中动词能不能多（不能）\" class=\"headerlink\" title=\"（2）一句话当中动词能不能多（不能）\"></a>（2）一句话当中动词能不能多（不能）</h4><p>谓语只能是动词</p>\n<p>动词只能做谓语</p>\n<p>把一句话所有不是谓语的动词变成不是动词：</p>\n<ul>\n<li><p>v+ing：主动</p>\n</li>\n<li><p>v+ed：被动</p>\n</li>\n<li><p>to do：目的</p>\n</li>\n</ul>\n<p>一句话当中只能有一个动词存在并且充当谓语，多余的动词全部变成非谓语动词。</p>\n<p>eg1.</p>\n<p>Pandas are the rarest members in bear family，mainly living in the forest of Chinese southwest.</p>\n<p>eg2.</p>\n<p>YangZi River flowing through diverse ecological systems，keeps the home of a sea of endangered species，irrigating one fifth of Chinese land.</p>\n<p>eg3.（独立主格）</p>\n<p>I love you，you loving me.</p>\n<p>eg4.</p>\n<p>Winter approaching，spring will be around the corner.</p>\n<p>eg5.（分词作状语）</p>\n<p>Being a teacher，I have passion for singing songs.</p>\n<h4 id=\"（3）一句话动词能不能少（不能）\"><a href=\"#（3）一句话动词能不能少（不能）\" class=\"headerlink\" title=\"（3）一句话动词能不能少（不能）\"></a>（3）一句话动词能不能少（不能）</h4><p>一句话当中有且只能有一个有时态的实义动词或者系动词的存在，并且充当谓语。</p>\n<h3 id=\"2-主语\"><a href=\"#2-主语\" class=\"headerlink\" title=\"2.主语\"></a>2.主语</h3><h4 id=\"（1）主语的成分\"><a href=\"#（1）主语的成分\" class=\"headerlink\" title=\"（1）主语的成分\"></a>（1）主语的成分</h4><p>名词、代词、非谓语动词、从句（引导词+句子）</p>\n<h4 id=\"（2）一句话主语能不能少（不能）\"><a href=\"#（2）一句话主语能不能少（不能）\" class=\"headerlink\" title=\"（2）一句话主语能不能少（不能）\"></a>（2）一句话主语能不能少（不能）</h4><p>一句没有主语怎么办：</p>\n<ul>\n<li>加it作为主语：必须与天气、温度、时间有关系。</li>\n<li>there be句型，听到“有”的时候使用。</li>\n<li>被动：当听到一句话没有主语或者人称代词作主语，都可以考虑写成被动。</li>\n<li>人称代词作主语：I、you、we</li>\n</ul>\n<p>三种情况没有被动：</p>\n<ul>\n<li>动词后面有介词时</li>\n<li>系动词没有被动</li>\n<li>have表达”有“的意思时</li>\n</ul>\n<p>eg1.</p>\n<p>If there exits a dream，glories are supposed to be achieved.</p>\n<h3 id=\"3-宾语\"><a href=\"#3-宾语\" class=\"headerlink\" title=\"3.宾语\"></a>3.宾语</h3><h4 id=\"（1）宾语的成分\"><a href=\"#（1）宾语的成分\" class=\"headerlink\" title=\"（1）宾语的成分\"></a>（1）宾语的成分</h4><p>名词、代词、非谓语动词，从句</p>\n<h3 id=\"4-表语\"><a href=\"#4-表语\" class=\"headerlink\" title=\"4.表语\"></a>4.表语</h3><h4 id=\"（1）表语的成分\"><a href=\"#（1）表语的成分\" class=\"headerlink\" title=\"（1）表语的成分\"></a>（1）表语的成分</h4><p>名词、代词、非谓语动词、从句、形容词、介词短语</p>\n<h2 id=\"（三）简单句在写作的使用\"><a href=\"#（三）简单句在写作的使用\" class=\"headerlink\" title=\"（三）简单句在写作的使用\"></a>（三）简单句在写作的使用</h2><h3 id=\"1-写作\"><a href=\"#1-写作\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><ul>\n<li>所有写不来的长难句，暂时写成简单句，一定保证语法正确。</li>\n</ul>\n<h3 id=\"2-长难句\"><a href=\"#2-长难句\" class=\"headerlink\" title=\"2.长难句\"></a>2.长难句</h3><ul>\n<li>找这句话的动词，从而找到这句话的主谓宾。</li>\n<li>如果一句话找到多个动词，就确定主句的谓语动词（前面没有引导词的动词）。</li>\n</ul>\n<h1 id=\"二、并列句\"><a href=\"#二、并列句\" class=\"headerlink\" title=\"二、并列句\"></a>二、并列句</h1><h2 id=\"（一）什么是并列句\"><a href=\"#（一）什么是并列句\" class=\"headerlink\" title=\"（一）什么是并列句\"></a>（一）什么是并列句</h2><p>就是用连词连接两个句子。</p>\n<h2 id=\"（二）常见的连词\"><a href=\"#（二）常见的连词\" class=\"headerlink\" title=\"（二）常见的连词\"></a>（二）常见的连词</h2><ul>\n<li>平行：and，not only…but also</li>\n<li>平行关系副词&#x2F;介词短语：similarly，equally，likewise，at the same time（同样的），in the meanwhile</li>\n<li>转折：but，yet，while，whereas</li>\n<li>转折关系副词&#x2F;介词短语：however，nevertheless，on the contrary，conversely（但是），unexpectedly，unfortunately，by contrast</li>\n<li>选择：or</li>\n<li>选择关系副词&#x2F;介词短语：alternatively</li>\n<li>因果：for，so</li>\n<li>因果关系副词&#x2F;介词短语：therefore，thus，consequently，as a result</li>\n<li>递进：then</li>\n<li>递进关系副词&#x2F;介词短语：besides，furthermore，moreover，additionally，subsequently，in addition</li>\n</ul>\n<h2 id=\"（三）并列句的考点分析\"><a href=\"#（三）并列句的考点分析\" class=\"headerlink\" title=\"（三）并列句的考点分析\"></a>（三）并列句的考点分析</h2><h3 id=\"1-写作-1\"><a href=\"#1-写作-1\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><p>写作上下句之间有逻辑关系就一定要用逻辑关系词（连词、副词、介词、介词短语）。</p>\n<p>连词和其他逻辑词区别在于，连词前面有无逗号均可，而其他逻辑关系词前面要么用句号，要么加连词and</p>\n<p>eg1.</p>\n<p>Romance has evaporated，but she still misses the past.</p>\n<p>Romance has evaporated，and on the contrary she still misses the past.</p>\n<p>eg2.</p>\n<p>There remain an army of companies coming from afar，and consequently I feel more than delighted.</p>\n<p>eg3.</p>\n<p>I am claimed changeable like water. By contrast,my clarity keeps consistent.</p>\n<p>eg4.</p>\n<p>Do you still keep that day in mind? I failed to pass CET4，and as result，I shed tears in the rain alone. At the same time，you came up to me and subsequently you beat my shoulder and told me “There exists no destination in life”.</p>\n<h3 id=\"2-长难句分析\"><a href=\"#2-长难句分析\" class=\"headerlink\" title=\"2.长难句分析\"></a>2.长难句分析</h3><p>在分析长难句中，只要有并列连词出现通常都会有省略。</p>\n<p>分析长难句第二步，找连词，但是当连词在连接两个单词的时候，忽略这个连词。</p>\n<p>那么如何查找省略的内容？一句话只要有省略就一定会省略在连词后——&gt;所以连词后面有的成分，连词前面一定有——&gt;连词前面有，而连词后面没有的成分便是省略的内容。</p>\n<h1 id=\"三、名词（短语）和名词性从句\"><a href=\"#三、名词（短语）和名词性从句\" class=\"headerlink\" title=\"三、名词（短语）和名词性从句\"></a>三、名词（短语）和名词性从句</h1><h2 id=\"（一）名词充当的成分\"><a href=\"#（一）名词充当的成分\" class=\"headerlink\" title=\"（一）名词充当的成分\"></a>（一）名词充当的成分</h2><h3 id=\"1-主语\"><a href=\"#1-主语\" class=\"headerlink\" title=\"1.主语\"></a>1.主语</h3><h3 id=\"2-宾语\"><a href=\"#2-宾语\" class=\"headerlink\" title=\"2.宾语\"></a>2.宾语</h3><h3 id=\"3-表语\"><a href=\"#3-表语\" class=\"headerlink\" title=\"3.表语\"></a>3.表语</h3><h3 id=\"4-同位语\"><a href=\"#4-同位语\" class=\"headerlink\" title=\"4.同位语\"></a>4.同位语</h3><p>同样位置的语，用来解释名词的成分就是同位语。</p>\n<p>只要在作文中见到名词，都可以有意识的在后面加同位语，对该名词进行补充说明。（小于2次）</p>\n<p>充当同位语的成分：</p>\n<p>（1）名词</p>\n<p>（2）代词</p>\n<p>（3）非谓语动词</p>\n<p>（4）从句</p>\n<p>eg1.</p>\n<p>The movie looks terrific.</p>\n<p>I admire his mother.</p>\n<p>Gump is a man.</p>\n<p>I enjoy the part，the beginning.</p>\n<p>eg2.(写作满分句型)</p>\n<p>I，a university student， like Eason，a well-known singer from Hong Kong.</p>\n<p>My mother，a typical housewife，enjoy playing mahjong，a Chinese entertainment.</p>\n<p>Persistence，an active mentally，plays a critical role in the glories of all children and adults.</p>\n<h2 id=\"（二）什么是名词性从句\"><a href=\"#（二）什么是名词性从句\" class=\"headerlink\" title=\"（二）什么是名词性从句\"></a>（二）什么是名词性从句</h2><blockquote>\n<p>名词在句子充当的成分，从句都能充当，这就是名词性从句。</p>\n</blockquote>\n<h3 id=\"1-主语从句\"><a href=\"#1-主语从句\" class=\"headerlink\" title=\"1.主语从句\"></a>1.主语从句</h3><h3 id=\"2-宾语从句\"><a href=\"#2-宾语从句\" class=\"headerlink\" title=\"2.宾语从句\"></a>2.宾语从句</h3><h3 id=\"3-表语从句\"><a href=\"#3-表语从句\" class=\"headerlink\" title=\"3.表语从句\"></a>3.表语从句</h3><h3 id=\"4-同位语从句\"><a href=\"#4-同位语从句\" class=\"headerlink\" title=\"4.同位语从句\"></a>4.同位语从句</h3><p>eg1.</p>\n<p>What I saw looks terrific.</p>\n<p>I admire what she said.</p>\n<p>Gump is who we should learn from.</p>\n<p>I enjoy the part that a bird is flying.</p>\n<h2 id=\"（三）名词性从句的引导词\"><a href=\"#（三）名词性从句的引导词\" class=\"headerlink\" title=\"（三）名词性从句的引导词\"></a>（三）名词性从句的引导词</h2><p>名词性从句的引导词是按照从句的类型分的类，一共把引导词分成三类：</p>\n<ul>\n<li>当从句是陈述句时，that没有意思并且在从句中不充当任何成分</li>\n<li>当从句是一般疑问句时，并且whether&#x2F;if在从句中不充当任何成分，意思是是否</li>\n<li>所有的特殊疑问词：当从句是特殊疑问句时。</li>\n<li>并且英语中所有的从句都是陈述句。</li>\n</ul>\n<p>eg1.</p>\n<p>I am wondering whether aliens exist.</p>\n<p>That ladies tend to be right remains common knowledge.</p>\n<p>My meaning seems that supporting the elderly remains a Chinese conventional virtue.</p>\n<p>Someday，one will perceive that career，kinship and friendship prove more indispensable than romance.</p>\n<p>The point seems when wealth will become available for you.</p>\n<h2 id=\"（四）名词性从句考点分析\"><a href=\"#（四）名词性从句考点分析\" class=\"headerlink\" title=\"（四）名词性从句考点分析\"></a>（四）名词性从句考点分析</h2><h3 id=\"1-写作-2\"><a href=\"#1-写作-2\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><h4 id=\"（1）主语从句\"><a href=\"#（1）主语从句\" class=\"headerlink\" title=\"（1）主语从句\"></a>（1）主语从句</h4><p>主语从句的满分表达：</p>\n<ul>\n<li>把主语放在句末，加it作形式主语</li>\n<li>It is apparent that……….</li>\n<li>It looks beyond dispute that…………….（显而易见、众所周知）</li>\n<li>It has been widely accepted that………..</li>\n<li>It is universally acknowledged that…………</li>\n<li>It keeps my argument that………….（我认为….)</li>\n</ul>\n<h4 id=\"（2）同位语从句\"><a href=\"#（2）同位语从句\" class=\"headerlink\" title=\"（2）同位语从句\"></a>（2）同位语从句</h4><p>eg1.</p>\n<p>The matter that he managed to find a girlfriend makes his superiors rejoiced.</p>\n<p>同位语从句即可放在它所解释的词后，也可以放在整句话后</p>\n<p>eg2.</p>\n<p>Nothing can hide the truth that she is getting old.</p>\n<p>eg3.</p>\n<p>The outlook proves wrong that people in HN seem all deceivers.</p>\n<p>eg4.</p>\n<p>The evidence that flowers in the greenhouse fail to undergo storms indicates that kids should by no means be spoiled by the in senior citizens.</p>\n<h3 id=\"2-长难句分析-1\"><a href=\"#2-长难句分析-1\" class=\"headerlink\" title=\"2.长难句分析\"></a>2.长难句分析</h3><p>能够识别各个名词性从句，并且能通顺的翻译出来。</p>\n<h4 id=\"（1）如何识别主语从句\"><a href=\"#（1）如何识别主语从句\" class=\"headerlink\" title=\"（1）如何识别主语从句\"></a>（1）如何识别主语从句</h4><ul>\n<li>只要见到有引导词放在句首，并且从句后没有被逗号隔开，就一定是主语从句，主语从句从句首开始，到主句谓语动词结束。</li>\n<li>除此以外，在分析长难句中，遇到It…….that………，通常都是主语从句，主语从句从that开始到句末结束。</li>\n</ul>\n<h4 id=\"（2）如何识别宾语从句\"><a href=\"#（2）如何识别宾语从句\" class=\"headerlink\" title=\"（2）如何识别宾语从句\"></a>（2）如何识别宾语从句</h4><ul>\n<li>只要实义动词后面有引导词，就暂定是宾语从句。</li>\n</ul>\n<h4 id=\"（3）如何识别表语从句\"><a href=\"#（3）如何识别表语从句\" class=\"headerlink\" title=\"（3）如何识别表语从句\"></a>（3）如何识别表语从句</h4><ul>\n<li>只要系动词后面有引导词就是表语从句</li>\n</ul>\n<h4 id=\"（4）如何识别同位语从句\"><a href=\"#（4）如何识别同位语从句\" class=\"headerlink\" title=\"（4）如何识别同位语从句\"></a>（4）如何识别同位语从句</h4><ul>\n<li>只要名词后面有引导词，就暂定为同位语从句。</li>\n</ul>\n<h1 id=\"四、定语和定语从句\"><a href=\"#四、定语和定语从句\" class=\"headerlink\" title=\"四、定语和定语从句\"></a>四、定语和定语从句</h1><h2 id=\"（一）什么是定语\"><a href=\"#（一）什么是定语\" class=\"headerlink\" title=\"（一）什么是定语\"></a>（一）什么是定语</h2><blockquote>\n<p>定语就是修饰名词的成分。只要听到…..的+名词，….的就是这个名词的定语成分。</p>\n</blockquote>\n<h2 id=\"（二）定语的成分\"><a href=\"#（二）定语的成分\" class=\"headerlink\" title=\"（二）定语的成分\"></a>（二）定语的成分</h2><h3 id=\"1-形容词作定语\"><a href=\"#1-形容词作定语\" class=\"headerlink\" title=\"1.形容词作定语\"></a>1.形容词作定语</h3><p>eg1.</p>\n<p>The innocent nightingale died.</p>\n<p>The nightingale brave and innocent died.</p>\n<h3 id=\"2-名词（短语）作定语\"><a href=\"#2-名词（短语）作定语\" class=\"headerlink\" title=\"2.名词（短语）作定语\"></a>2.名词（短语）作定语</h3><p>eg1.The singing of the nightingale can make the rose bloom.</p>\n<h3 id=\"3-介词短语作定语\"><a href=\"#3-介词短语作定语\" class=\"headerlink\" title=\"3.介词短语作定语\"></a>3.介词短语作定语</h3><p>eg1.The nightingale out of the window heard the sighs of the youngster.</p>\n<h3 id=\"4-非谓语动词作定语\"><a href=\"#4-非谓语动词作定语\" class=\"headerlink\" title=\"4.非谓语动词作定语\"></a>4.非谓语动词作定语</h3><p>eg1.The singing nightingale lost his life.</p>\n<h3 id=\"5-从句作定语\"><a href=\"#5-从句作定语\" class=\"headerlink\" title=\"5.从句作定语\"></a>5.从句作定语</h3><p>eg1.The rose that the nightingale exchanged with his life was discarded.</p>\n<h2 id=\"（三）定语的位置\"><a href=\"#（三）定语的位置\" class=\"headerlink\" title=\"（三）定语的位置\"></a>（三）定语的位置</h2><p>前小后大：当一个单词修饰名词的时候，通常放在名词前；当多个单词修饰名词，通常放在名词后。</p>\n<p>eg1.</p>\n<p>This is a fiction about a nightingale and a rose.</p>\n<p>The youngster grasping romance left the party of the prince.</p>\n<p>The boy rejected looks pitiful. 当过去分词作定语通常放在名词后。</p>\n<p>I have something important to tell you.当形容词修饰不定代词时，即使只有一个单词，通常也放在名词后。</p>\n<h2 id=\"四-定语从句\"><a href=\"#四-定语从句\" class=\"headerlink\" title=\"(四)定语从句\"></a>(四)定语从句</h2><h3 id=\"1-定语从句的构成\"><a href=\"#1-定语从句的构成\" class=\"headerlink\" title=\"1.定语从句的构成\"></a>1.定语从句的构成</h3><p>名词（先行词）+引导词+句子</p>\n<h3 id=\"2-定语从句的引导词\"><a href=\"#2-定语从句的引导词\" class=\"headerlink\" title=\"2.定语从句的引导词\"></a>2.定语从句的引导词</h3><p>引导词按照先行词种类分类：</p>\n<ul>\n<li>人：who，whom，whose</li>\n<li>物：that，which，whose</li>\n<li>时间：that，which，when</li>\n<li>地点：that，which，where</li>\n<li>原因：that，which，why</li>\n</ul>\n<p>到底是谁决定定语从句引导词的用法：</p>\n<ul>\n<li>先行词</li>\n<li>引导词在从句中能够充当的成分</li>\n</ul>\n<p>定语从句引导词新的分类标准，按照引导词本身的词性分类：</p>\n<ul>\n<li>代词（在从句中充当主语或者宾语）：who，whom，that，which</li>\n<li>副词（在从句中不充当成分）：where，when，why</li>\n<li>形容词（在从句中修饰离它最近的名词）：whose</li>\n</ul>\n<h2 id=\"（五）定语从句特殊用法\"><a href=\"#（五）定语从句特殊用法\" class=\"headerlink\" title=\"（五）定语从句特殊用法\"></a>（五）定语从句特殊用法</h2><h3 id=\"1-that作引导词\"><a href=\"#1-that作引导词\" class=\"headerlink\" title=\"1.that作引导词\"></a>1.that作引导词</h3><p>that在引导定语从句时，在从句充当宾语，that可以省略。（自己写作文不要省）</p>\n<p>在分析长难句时，如果见到有两个名词或者代词直接放在一起，中间没有被连词或者标点符号隔开，通常都是省略that的定语从句。</p>\n<p>eg1.I enjoy the book my mother bought for me.</p>\n<h3 id=\"2-区别限制和非限制性定语从句\"><a href=\"#2-区别限制和非限制性定语从句\" class=\"headerlink\" title=\"2.区别限制和非限制性定语从句\"></a>2.区别限制和非限制性定语从句</h3><p>非限制有逗号，限制没有逗号。</p>\n<p>在分析长难句的时候，非限制性定语从句就相当于插入语，可以不看。</p>\n<h3 id=\"3-先行词与引导词之间有介词\"><a href=\"#3-先行词与引导词之间有介词\" class=\"headerlink\" title=\"3.先行词与引导词之间有介词\"></a>3.先行词与引导词之间有介词</h3><ul>\n<li><p>人：whom</p>\n</li>\n<li><p>物：which</p>\n</li>\n</ul>\n<h3 id=\"4-区别the-same…-as；the-same-…-that引导的定语从句\"><a href=\"#4-区别the-same…-as；the-same-…-that引导的定语从句\" class=\"headerlink\" title=\"4.区别the same….as；the same …..that引导的定语从句\"></a>4.区别the same….as；the same …..that引导的定语从句</h3><p>eg1.</p>\n<p>He is the same man as I love.（他就像我爱的男人）</p>\n<p>He is the same man that I love.（他就是我爱的男人）</p>\n<h3 id=\"5-as和which引导的非限制性定语从句\"><a href=\"#5-as和which引导的非限制性定语从句\" class=\"headerlink\" title=\"5.as和which引导的非限制性定语从句\"></a>5.as和which引导的非限制性定语从句</h3><p>which引导的非限制定语从句可以修饰前面整个句子。as也可以，但是which只能放在主句的后面，而as则可前可后。</p>\n<p>eg1.He enjoy talking with young ladies，which drives me mad.</p>\n<h2 id=\"（六）区别定语从句和同位语从句\"><a href=\"#（六）区别定语从句和同位语从句\" class=\"headerlink\" title=\"（六）区别定语从句和同位语从句\"></a>（六）区别定语从句和同位语从句</h2><h3 id=\"1-相同点\"><a href=\"#1-相同点\" class=\"headerlink\" title=\"1.相同点\"></a>1.相同点</h3><p>都是先行词+引导词+句子</p>\n<h3 id=\"2-不同点\"><a href=\"#2-不同点\" class=\"headerlink\" title=\"2.不同点\"></a>2.不同点</h3><ul>\n<li>看从句本身的意思，定语从句是对前面名词的修饰，而同位语从句是对前面句子的解释。</li>\n<li>看引导词that在从句中是否充当成分，如果充当成分就是定语从句，否则就是同位语从句。</li>\n<li>定语从句的先行词可以是所有的名词，而同位语从句只能是抽象名词。</li>\n<li>定语从句引导词共有8个，而同位语引导词一般都是that。</li>\n</ul>\n<h2 id=\"（七）定语从句的难点\"><a href=\"#（七）定语从句的难点\" class=\"headerlink\" title=\"（七）定语从句的难点\"></a>（七）定语从句的难点</h2><blockquote>\n<p>寻找先行词</p>\n</blockquote>\n<ul>\n<li><p>定语从句的先行词就是离它最近的名词。</p>\n</li>\n<li><p>定语从句的先行词是它前面的几个并列的名词。</p>\n</li>\n<li><p>定语从句的先行词是它前面的一个从句。</p>\n</li>\n<li><p>定语从句的先行词是它前面的整个句子。</p>\n</li>\n<li><p>定语从句的先行词和引导词被隔开。</p>\n</li>\n</ul>\n<p>英汉差异对比：</p>\n<ul>\n<li><p>英语意合，汉语形合</p>\n<p>A：句子结构上\tB：逻辑关系词使用上</p>\n</li>\n<li><p>汉语主动，英语被动</p>\n</li>\n<li><p>汉语多短句，英语多长句</p>\n</li>\n</ul>\n<h2 id=\"（八）定语从句的考点\"><a href=\"#（八）定语从句的考点\" class=\"headerlink\" title=\"（八）定语从句的考点\"></a>（八）定语从句的考点</h2><h3 id=\"1-长难句分析\"><a href=\"#1-长难句分析\" class=\"headerlink\" title=\"1.长难句分析\"></a>1.长难句分析</h3><p>能够找到一句话的定语成分，并且把它们通顺的翻译出来。</p>\n<p>找定语的关键是找名词。只要名词后有东西，不是动词，暂定是定语，定语从名词后开始，到主句的谓语动词结束。主句谓语动词在定语前，定语从名词后到句末结束，如果有连词的话，到连词之前结束。</p>\n<h1 id=\"五、状语和状语从句\"><a href=\"#五、状语和状语从句\" class=\"headerlink\" title=\"五、状语和状语从句\"></a>五、状语和状语从句</h1><h2 id=\"（一）形容词、副词的成分\"><a href=\"#（一）形容词、副词的成分\" class=\"headerlink\" title=\"（一）形容词、副词的成分\"></a>（一）形容词、副词的成分</h2><h3 id=\"1-形容词\"><a href=\"#1-形容词\" class=\"headerlink\" title=\"1.形容词\"></a>1.形容词</h3><ul>\n<li>放在系动词后作表语</li>\n<li>放在名词前作定语</li>\n</ul>\n<h3 id=\"2-副词\"><a href=\"#2-副词\" class=\"headerlink\" title=\"2.副词\"></a>2.副词</h3><ul>\n<li>修饰实义动词</li>\n<li>修饰形容词</li>\n<li>修饰副词</li>\n<li>修饰句子</li>\n</ul>\n<p>副词无论在哪都是作状语</p>\n<h2 id=\"（二）什么是状语\"><a href=\"#（二）什么是状语\" class=\"headerlink\" title=\"（二）什么是状语\"></a>（二）什么是状语</h2><h3 id=\"1-状语的含义\"><a href=\"#1-状语的含义\" class=\"headerlink\" title=\"1.状语的含义\"></a>1.状语的含义</h3><p>状语就是在一个句子中，用来修饰实义动词、形容词、副词或者整个句子的成分。</p>\n<p>状语除了名词不能修饰，其他都能修饰。</p>\n<h3 id=\"2-状语的成分\"><a href=\"#2-状语的成分\" class=\"headerlink\" title=\"2.状语的成分\"></a>2.状语的成分</h3><ul>\n<li>副词</li>\n<li>介词短语</li>\n<li>非谓语动词</li>\n<li>从句</li>\n</ul>\n<h3 id=\"3-状语的位置\"><a href=\"#3-状语的位置\" class=\"headerlink\" title=\"3.状语的位置\"></a>3.状语的位置</h3><p>随便放</p>\n<h2 id=\"（三）状语从句\"><a href=\"#（三）状语从句\" class=\"headerlink\" title=\"（三）状语从句\"></a>（三）状语从句</h2><p>状语从句的引导词是以引导词本身的意思分的类，共9类。</p>\n<h3 id=\"1-时间状语从句\"><a href=\"#1-时间状语从句\" class=\"headerlink\" title=\"1.时间状语从句\"></a>1.时间状语从句</h3><h4 id=\"（1）引导词\"><a href=\"#（1）引导词\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>when&#x3D;while&#x3D;as    当while翻译成“当….的时候”，后面要跟进行时态。</li>\n<li>before</li>\n<li>after</li>\n<li>since    “自从”，主句为完成时态</li>\n<li>the moment&#x3D;as soon as  “那一刻”</li>\n<li>by the time</li>\n<li>until   “直到….才”</li>\n<li>not ……..until  “直到….才”</li>\n</ul>\n<h4 id=\"（2）状语从句的时态问题\"><a href=\"#（2）状语从句的时态问题\" class=\"headerlink\" title=\"（2）状语从句的时态问题\"></a>（2）状语从句的时态问题</h4><p>在所有状语从句中，如果主句的动作和从句的动作尚未发生的话，主句用一般将来时，从句用一般现在时表将来。</p>\n<h4 id=\"（3）区别-until-和-not…-until\"><a href=\"#（3）区别-until-和-not…-until\" class=\"headerlink\" title=\"（3）区别 until 和 not….until\"></a>（3）区别 until 和 not….until</h4><p>看主句谓语是延续性动词还是瞬间动词，如果是延续性动词就用until，如果是瞬间动词就用not………until</p>\n<p>eg1.</p>\n<p>I didn’t realize the greatness of mothers  until I grew up.  直到我长大我才意识到母亲的伟大。</p>\n<h4 id=\"（4）when引导的时间状语从句省略的情况\"><a href=\"#（4）when引导的时间状语从句省略的情况\" class=\"headerlink\" title=\"（4）when引导的时间状语从句省略的情况\"></a>（4）when引导的时间状语从句省略的情况</h4><p>eg1.When a kid ，I enjoyed singing songs.</p>\n<p>when引导的时间状语从句，如果主句的主语与从句主语一致，并且从句的谓语中有be动词，此时从句的主语和be动词可以省略。</p>\n<h3 id=\"2-地点状语从句\"><a href=\"#2-地点状语从句\" class=\"headerlink\" title=\"2.地点状语从句\"></a>2.地点状语从句</h3><h4 id=\"（1）引导词-1\"><a href=\"#（1）引导词-1\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><p>where</p>\n<p>作地点状语的通常都是介词短语，很少是从句。</p>\n<h3 id=\"3-原因状语从句\"><a href=\"#3-原因状语从句\" class=\"headerlink\" title=\"3.原因状语从句\"></a>3.原因状语从句</h3><h4 id=\"（1）引导词-2\"><a href=\"#（1）引导词-2\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>because  “因为”</li>\n<li>since</li>\n<li>in that</li>\n<li>seeing that</li>\n<li>considering that</li>\n<li>now that</li>\n<li>given that</li>\n</ul>\n<h4 id=\"（2）for（连词）\"><a href=\"#（2）for（连词）\" class=\"headerlink\" title=\"（2）for（连词）\"></a>（2）for（连词）</h4><h4 id=\"（3）介词短语\"><a href=\"#（3）介词短语\" class=\"headerlink\" title=\"（3）介词短语\"></a>（3）介词短语</h4><ul>\n<li>because of   “因为”</li>\n<li>due to</li>\n<li>owing to</li>\n<li>thanks to</li>\n<li>for the sake of</li>\n<li>as a result of</li>\n</ul>\n<p>eg1.</p>\n<p>He had a car accident because he was careless.</p>\n<p>He had a car accident for he was careless.</p>\n<p>He had a car accident because of his careless.</p>\n<h3 id=\"4-目的状语从句\"><a href=\"#4-目的状语从句\" class=\"headerlink\" title=\"4.目的状语从句\"></a>4.目的状语从句</h3><h4 id=\"（1）引导词-3\"><a href=\"#（1）引导词-3\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><blockquote>\n<p>动词不定式：</p>\n<p>to</p>\n<p>in order to   + 动词原形</p>\n<p>so as to</p>\n</blockquote>\n<ul>\n<li><p>so that 表示目的放在句末，不放在句首</p>\n</li>\n<li><p>in order that</p>\n</li>\n</ul>\n<p>eg1.（farther物理距离远&#x2F;further抽象远）</p>\n<p>We will ascend higher in order to overlook farther.</p>\n<p>We will ascend higher in order that we overlook farther.</p>\n<h3 id=\"5-结果状语从句\"><a href=\"#5-结果状语从句\" class=\"headerlink\" title=\"5.结果状语从句\"></a>5.结果状语从句</h3><h4 id=\"（1）引导词-4\"><a href=\"#（1）引导词-4\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>so……+形容词&#x2F;副词+….that…..  （替换 very）</li>\n<li>such……+名词+….that……</li>\n</ul>\n<p>eg1.</p>\n<p>It feels so hot today that I wear my dress.</p>\n<p>作文中所有出现形容词和副词的地方都可以用到so  that 句型</p>\n<h3 id=\"6-让步状语从句\"><a href=\"#6-让步状语从句\" class=\"headerlink\" title=\"6.让步状语从句\"></a>6.让步状语从句</h3><h4 id=\"（1）引导词-5\"><a href=\"#（1）引导词-5\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>although</li>\n<li>though</li>\n<li>even though         虽然&#x2F;尽管</li>\n<li>even if</li>\n<li>as</li>\n<li>while       当翻译“虽然&#x2F;尽管”只能放在句首，不能放在句中</li>\n</ul>\n<p>as 引导的让步状语从句，从句的表语可以放在句首引起部分倒装。</p>\n<p>eg1.</p>\n<p>She looks like a beauty，although </p>\n<h3 id=\"7-方式状语从句\"><a href=\"#7-方式状语从句\" class=\"headerlink\" title=\"7.方式状语从句\"></a>7.方式状语从句</h3><h4 id=\"（1）引导词-6\"><a href=\"#（1）引导词-6\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>as</li>\n<li>the way            好像&#x2F;似乎</li>\n<li>as if&#x2F;though</li>\n</ul>\n<h3 id=\"8-条件状语从句\"><a href=\"#8-条件状语从句\" class=\"headerlink\" title=\"8.条件状语从句\"></a>8.条件状语从句</h3><h4 id=\"（1）引导词-7\"><a href=\"#（1）引导词-7\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>suppose that</li>\n<li>supposing that</li>\n<li>if</li>\n<li>unless</li>\n<li>provided that</li>\n<li>as long as</li>\n<li>so long as</li>\n</ul>\n<h3 id=\"9-比较状语从句\"><a href=\"#9-比较状语从句\" class=\"headerlink\" title=\"9.比较状语从句\"></a>9.比较状语从句</h3><h4 id=\"（1）引导词-8\"><a href=\"#（1）引导词-8\" class=\"headerlink\" title=\"（1）引导词\"></a>（1）引导词</h4><ul>\n<li>as …….as………</li>\n<li>比较结构</li>\n</ul>\n<p>eg1.</p>\n<p>You are as beautiful as I.</p>\n<h2 id=\"（四）状语考点分析\"><a href=\"#（四）状语考点分析\" class=\"headerlink\" title=\"（四）状语考点分析\"></a>（四）状语考点分析</h2><h3 id=\"1-写作-3\"><a href=\"#1-写作-3\" class=\"headerlink\" title=\"1.写作\"></a>1.写作</h3><p>作文中任何一句话的旁边都可以加一个状语把句子拉长。</p>\n<p>eg1.</p>\n<p>One can live as if he were a pig. Conversely，he can never be as delighted as a pig.</p>\n<h3 id=\"2-长难句分析-2\"><a href=\"#2-长难句分析-2\" class=\"headerlink\" title=\"2.长难句分析\"></a>2.长难句分析</h3><p>能够识别状语，并通顺的把它翻译出来。</p>\n<p>一句话当中，除了句子主干和定语以外，只要在句子中见到以下东西，就是状语：</p>\n<ul>\n<li>副词</li>\n<li>比较，条件，结果，原因，让步，目的，方式状语从句</li>\n<li>伴随状语</li>\n</ul>\n<p>时间、地点不在名词后，一定是状语。</p>\n<p>名词+时间&#x2F;地点 （容易混淆）</p>\n<p>I love a boy in Zhejiang Universities.</p>\n<p>如果无法确定定语还是状语的时候，定语优先原则。只有翻译成定语不通顺的时候，才翻译成状语。</p>\n<h3 id=\"3-补充as\"><a href=\"#3-补充as\" class=\"headerlink\" title=\"3.补充as\"></a>3.补充as</h3><ul>\n<li>as+名词（“作为”）</li>\n<li>v+…名词….+as  “取决于动词意思”</li>\n<li>as+句子  引导状语从句：“当……时候&#x2F;因为&#x2F;虽然&#x2F;好像”</li>\n</ul>\n<h3 id=\"4-补充than\"><a href=\"#4-补充than\" class=\"headerlink\" title=\"4.补充than\"></a>4.补充than</h3><ul>\n<li>not so much as &#x3D;not even  甚至不&#x2F;没有</li>\n<li>not so much A as B 与其说A不如说B</li>\n<li>more A than B  与其说B不如说A</li>\n<li>more than  （+名词   不仅仅是） （+副词&#x2F;形容词  非常） （+数词 多余）</li>\n</ul>\n<h1 id=\"六、特殊结构\"><a href=\"#六、特殊结构\" class=\"headerlink\" title=\"六、特殊结构\"></a>六、特殊结构</h1><h2 id=\"（一）强调句型\"><a href=\"#（一）强调句型\" class=\"headerlink\" title=\"（一）强调句型\"></a>（一）强调句型</h2><h3 id=\"1-构成\"><a href=\"#1-构成\" class=\"headerlink\" title=\"1.构成\"></a>1.构成</h3><p>It is ……..that………..</p>\n<p>eg1.</p>\n<p>I met my old flame in the street yesterday.</p>\n<p>It was I that met my old flame in the street yesterday.      和过去式有关就用was，其他用is</p>\n<p>It was my old flame that I met in the street yesterday.</p>\n<h2 id=\"（二）倒装\"><a href=\"#（二）倒装\" class=\"headerlink\" title=\"（二）倒装\"></a>（二）倒装</h2><h3 id=\"1-什么是倒装\"><a href=\"#1-什么是倒装\" class=\"headerlink\" title=\"1.什么是倒装\"></a>1.什么是倒装</h3><p>倒装就是把一句话写成一般疑问句的形式，也就是给一句话加个助动词或把be动词放在句首。</p>\n<h3 id=\"2-具体用法\"><a href=\"#2-具体用法\" class=\"headerlink\" title=\"2.具体用法\"></a>2.具体用法</h3><h4 id=\"（1）否定词放在句首用倒装\"><a href=\"#（1）否定词放在句首用倒装\" class=\"headerlink\" title=\"（1）否定词放在句首用倒装\"></a>（1）否定词放在句首用倒装</h4><p>eg1.</p>\n<p>I can hardly speak Japanese.</p>\n<p>Hardly can I speak Japanese.</p>\n<h4 id=\"（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\"><a href=\"#（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\" class=\"headerlink\" title=\"（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装\"></a>（2）so、nor、neither位于句首，表明承前句子的肯定或者否定时用倒装</h4><h4 id=\"（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\"><a href=\"#（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\" class=\"headerlink\" title=\"（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装\"></a>（3）含有so………that………结构的句子将so引导的部分置于句首时用倒装</h4><h4 id=\"（4）only引出的状语位于句首时用倒装\"><a href=\"#（4）only引出的状语位于句首时用倒装\" class=\"headerlink\" title=\"（4）only引出的状语位于句首时用倒装\"></a>（4）only引出的状语位于句首时用倒装</h4><h4 id=\"（5）as引导让步状语从句，从句的表语可以放在句首构成倒装\"><a href=\"#（5）as引导让步状语从句，从句的表语可以放在句首构成倒装\" class=\"headerlink\" title=\"（5）as引导让步状语从句，从句的表语可以放在句首构成倒装\"></a>（5）as引导让步状语从句，从句的表语可以放在句首构成倒装</h4><h4 id=\"（6）省略if的虚拟语气用倒装\"><a href=\"#（6）省略if的虚拟语气用倒装\" class=\"headerlink\" title=\"（6）省略if的虚拟语气用倒装\"></a>（6）省略if的虚拟语气用倒装</h4><h2 id=\"（三）虚拟语气\"><a href=\"#（三）虚拟语气\" class=\"headerlink\" title=\"（三）虚拟语气\"></a>（三）虚拟语气</h2><h3 id=\"1-什么是虚拟语气\"><a href=\"#1-什么是虚拟语气\" class=\"headerlink\" title=\"1.什么是虚拟语气\"></a>1.什么是虚拟语气</h3><p>虚拟语气表示与事实相反或者语气委婉</p>\n<h3 id=\"2-用法\"><a href=\"#2-用法\" class=\"headerlink\" title=\"2.用法\"></a>2.用法</h3><h4 id=\"（1）一般用法\"><a href=\"#（1）一般用法\" class=\"headerlink\" title=\"（1）一般用法\"></a>（1）一般用法</h4><p>if引导的条件状语从句</p>\n<p>eg1.</p>\n<p>If you were a tear in my eyes，I would never shed it.</p>\n<p>If I had been a dog，I could have slept with you.</p>\n<p>写成正常句子后，变成过去时（满分句型）</p>\n<h4 id=\"（2）特殊用法\"><a href=\"#（2）特殊用法\" class=\"headerlink\" title=\"（2）特殊用法\"></a>（2）特殊用法</h4><ul>\n<li>以下情况从句用“should + 动词”表示虚拟，并且should可以省略（自己写不省）。</li>\n</ul>\n<p>以防：incase、lest、for fear that</p>\n<p>命令：order、direct、command</p>\n<p>建议：advise、suggest、propose</p>\n<p>要求：ask、request、demand、require</p>\n<p>用虚拟</p>\n<p>是必要的：It is necessary&#x2F;important that</p>\n<p>eg1.</p>\n<p>Incase that you should develop fetal infections，you had better stay at home.</p>\n<ul>\n<li>以下情况用过去时表示虚拟，</li>\n</ul>\n<p>would rather 和 It is high time that………</p>\n<ul>\n<li>以下情况区别对待：就是把它本来时态写成过去式就行了。</li>\n</ul>\n<p>wish，if only，but for，or&#x2F;otherwise，as if&#x2F;as though等</p>\n<h3 id=\"3-情态动词\"><a href=\"#3-情态动词\" class=\"headerlink\" title=\"3.情态动词\"></a>3.情态动词</h3><p>表名说话人主观态度的词汇（没有动作，不能充当谓语），情态动词相当于助动词+动词原形</p>\n<h4 id=\"（1）表示对现在和将来的推测：情态动词-动词原形\"><a href=\"#（1）表示对现在和将来的推测：情态动词-动词原形\" class=\"headerlink\" title=\"（1）表示对现在和将来的推测：情态动词+动词原形\"></a>（1）表示对现在和将来的推测：情态动词+动词原形</h4><h4 id=\"（2）表示对过去的推测：\"><a href=\"#（2）表示对过去的推测：\" class=\"headerlink\" title=\"（2）表示对过去的推测：\"></a>（2）表示对过去的推测：</h4><p>eg1.</p>\n<p>He must have been self-biased in his university.  一定做过某事must have done</p>\n<p>You need not have shown your love in this way.   本没必要做某事，但是做了need not have done</p>\n<p>I could have become a prominent poet.   本能做某事但却没有做，表示遗憾could have done</p>\n<p>We should have got married if there exists a chance.   本应该做某事但是没有做。should have done</p>\n<p>must的否定&#x3D;can‘t      must not表示禁止</p>\n<h1 id=\"备注：\"><a href=\"#备注：\" class=\"headerlink\" title=\"备注：\"></a>备注：</h1><table>\n<thead>\n<tr>\n<th align=\"center\">单数</th>\n<th align=\"center\">第一人称</th>\n<th align=\"center\">第二人称</th>\n<th align=\"center\">第三人称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">主格（主语）</td>\n<td align=\"center\">I</td>\n<td align=\"center\">you</td>\n<td align=\"center\">he、she、it</td>\n</tr>\n<tr>\n<td align=\"center\">宾格（宾语）</td>\n<td align=\"center\">me</td>\n<td align=\"center\">you</td>\n<td align=\"center\">him、her、it</td>\n</tr>\n<tr>\n<td align=\"center\">物主代词（定语）</td>\n<td align=\"center\">my</td>\n<td align=\"center\">your</td>\n<td align=\"center\">his、her、its</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">复数</th>\n<th align=\"center\">第一人称</th>\n<th align=\"center\">第二人称</th>\n<th align=\"center\">第三人称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">主格（主语）</td>\n<td align=\"center\">we</td>\n<td align=\"center\">you</td>\n<td align=\"center\">they</td>\n</tr>\n<tr>\n<td align=\"center\">宾格（宾语）</td>\n<td align=\"center\">us</td>\n<td align=\"center\">you</td>\n<td align=\"center\">them</td>\n</tr>\n<tr>\n<td align=\"center\">物主代词（定语）</td>\n<td align=\"center\">our</td>\n<td align=\"center\">your</td>\n<td align=\"center\">their</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">过去</th>\n<th align=\"center\">现在</th>\n<th align=\"center\">将来</th>\n<th align=\"center\">过去将来</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">一般</td>\n<td align=\"center\">did</td>\n<td align=\"center\">do&#x2F;does</td>\n<td align=\"center\">will&#x2F;shall do</td>\n<td align=\"center\">would&#x2F;should do</td>\n</tr>\n<tr>\n<td align=\"center\">进行</td>\n<td align=\"center\">was&#x2F;were doing</td>\n<td align=\"center\">am&#x2F;is&#x2F;are doing</td>\n<td align=\"center\">will&#x2F;shall be doing</td>\n<td align=\"center\">would&#x2F;should be doing</td>\n</tr>\n<tr>\n<td align=\"center\">完成</td>\n<td align=\"center\">had done</td>\n<td align=\"center\">has&#x2F;have done</td>\n<td align=\"center\">will&#x2F;shall have done</td>\n<td align=\"center\">would&#x2F;should have done</td>\n</tr>\n<tr>\n<td align=\"center\">完成进行</td>\n<td align=\"center\">had been doing</td>\n<td align=\"center\">has&#x2F;have been doing</td>\n<td align=\"center\">will&#x2F;shall have been doing</td>\n<td align=\"center\">would&#x2F;should have been doing</td>\n</tr>\n</tbody></table>\n"},{"title":"Hexo博客教程","date":"2022-04-18T07:57:37.000Z","img":"https://cdn.pixabay.com/photo/2022/03/29/21/04/eggs-7100211_960_720.jpg","excerpt":"在windows下利用Hexo对博客系统的建立，并利用Github进行云托管，并设置了一种主题供参考","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"_content":"\n# Hexo 博客教程\n\n## 一、Windows本地安装Hexo\n\n官网教程：<https://hexo.io/zh-cn/docs/>\n\n首先需要先在电脑上安装[Node.js](https://nodejs.org/zh-cn/)，[Git](https://git-scm.com/)\n\n### 安装Hexo\n\n```bash\n> npm install -g hexo-cli\n```\n\n### 使用Hexo命令\n\n1. `npx hexo  <command>`\n2. 将 Hexo 所在的目录下的` node_modules `添加到环境变量之中即可直接使用`hexo <command>`\n\n### 初始化文件夹\n\n```bash\n> npx hexo init <folder>\n> cd <folder>\n> npm install\n```\n\n**_config.yml**\n网站的 [配置](https://hexo.io/zh-cn/docs/configuration) 信息，您可以在此配置大部分的参数。\n\n**package.json**\n应用程序的信息。\n\n**scaffolds**\n[模版](https://hexo.io/zh-cn/docs/writing) 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n\n**source**\n资源文件夹是存放用户资源的地方。\n\n**themes**\n[主题](https://hexo.io/zh-cn/docs/themes) 文件夹。Hexo 会根据主题来生成静态页面。\n\n### Hexo新建文章\n\n```bash\n> npx hexo new [layout] <title>\n```\n\n新建一篇文章。如果没有设置 `layout` 的话，默认使用 [\\_config.yml](https://hexo.io/zh-cn/docs/configuration) 中的 `default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n```bash\n> npx hexo new \"post title with whitespace\"\n```\n\n| 参数              | 描述                                          |\n| ----------------- | --------------------------------------------- |\n| `-p`, `--path`    | 自定义新文章的路径                            |\n| `-r`, `--replace` | 如果存在同名文章，将其替换                    |\n| `-s`, `--slug`    | 文章的 Slug，作为新文章的文件名和发布后的 URL |\n\n默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 `index.md` 文件。你可以使用 `--path` 参数来覆盖上述行为、自行决定文件的目录：\n\n```bash\n> npx hexo new page --path about/me \"About me\"\n```\n\n以上命令会创建一个 `source/about/me.md` 文件，同时 Front Matter 中的 title 为 `\"About me\"`\n\n注意！title 是必须指定的！如果你这么做并不能达到你的目的：\n\n```bash\n> npx hexo new page --path about/me\n```\n\n此时 Hexo 会创建 `source/_posts/about/me.md`，同时 `me.md` 的 Front Matter 中的 title 为 `\"page\"`。这是因为在上述命令中，hexo-cli 将 `page` 视为指定文章的标题、并采用默认的 `layout`。\n\n### 生成静态文件\n\n```bash\n> npx hexo generate\n```\n\n| 选项                  | 描述                                                                                                                                                                |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `-d`, `--deploy`      | 文件生成后立即部署网站                                                                                                                                              |\n| `-w`, `--watch`       | 监视文件变动                                                                                                                                                        |\n| `-b`, `--bail`        | 生成过程中如果发生任何未处理的异常则抛出异常                                                                                                                        |\n| `-f`, `--force`       | 强制重新生成文件  Hexo 引入了差分机制，如果 `public` 目录存在，那么 `hexo g` 只会重新生成改动的文件。使用该参数的效果接近 `hexo clean && hexo generate` |\n| `-c`, `--concurrency` | 最大同时生成文件的数量，默认无限制                                                                                                                                  |\n\n该命令可以简写为\n\n```bash\n> npx hexo g\n```\n\n### 启动本地服务\n\n```bash\n> npx hexo server\n```\n\n对Hexo的内容进行预览。\n启动服务器。默认情况下，访问网址为： `http://localhost:4000/`。\n\n| 选项             | 描述                           |\n| ---------------- | ------------------------------ |\n| `-p`, `--port`   | 重设端口                       |\n| `-s`, `--static` | 只使用静态文件                 |\n| `-l`, `--log`    | 启动日记记录，使用覆盖记录格式 |\n\n### 将 Hexo 部署到 GitHub Pages\n\n>生成密钥\n\n```bash\n> git config --global user.name \"Name\"\n> git config --global user.email \"Email\"\n```\n\nName与Email为github注册的用户名和邮箱，然后生成密钥\n\n```bash\n> ssh-keygen -t rsa -C \"Email\"\n```\n\n之后全部回车确认到底。然后，在用户文件夹下的`.ssh`文件夹中找到`id_rsa.pub`文件，打开复制里面的全部内容。\n在浏览器中，登录你的github账号打开Settings，在右侧中找到SSH and GPG keys选项并打开，选择New SSH key，填写好标题，把复制的内容全部粘贴上去。\n\n>本地连接github\n\n```bash\n> ssh -T git@github.com\n```\n\n该命令无法连接问题，错误：**ssh: connect to host github.com port 22: Connection refused**\n在用户文件夹中找到`.ssh`文件夹，在里面新建一个`config`文件，里面填写\n\n```bash\nHost github.com  \nUser xxxxx@xx.com   //注册github的邮箱\nHostname ssh.github.com  \nPreferredAuthentications publickey  \nIdentityFile ~/.ssh/id_rsa  //填写你的id_rsa的绝对路径\nPort 443\n```\n\n再一次运行命令，一直确定，得到下面结果就说明连接成功\n\n```bash\nHi ******! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n>修改Hexo配置文件\n\n在初始化的博客系统的根目录下，找到`_config.yml`文件，找到配置的最后一行\n\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n    type: ''\n```\n\n修改为\n\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n    type: git\n    repository: git@github.com:****/****.github.io.git  #你的仓库以ssh格式下载的地址\n    branch: master\n```\n\n### 部署网站\n\n```bash\n> npx hexo deploy\n```\n\n| 参数               | 描述                     |\n| ------------------ | ------------------------ |\n| `-g`, `--generate` | 部署之前预先生成静态文件 |\n\n该命令可以简写为：\n\n```bash\n> npx hexo d\n```\n\n发布失败，错误：**ERROR Deployer not found: git**\n\n```bash\n> npm install --save hexo-deployer-git\n```\n\n安装后继续发布\n\n> 使用自己的域名\n\n在Hexo目录下的public文件夹中，新建CNAME文件,输入你的域名就可以了，否则每次上传发布都需要重新绑定域名。\n\n### 后续维护\n\n> 查看当前hexo版本\n\n```bash\n> npx hexo version\n```\n\n> 升级hexo\n\n```bash\n> npm i hexo-cli -g\n```\n\n升级完成后查看版本，是否更新成功\n\n> 检查系统中的插件是否有升级的\n\n```bash\n> npm install -g npm-check\n> npm-check\n```\n\n> 升级插件\n\n```bash\n> npm install -g npm-upgrade\n> npm-upgrade\n> npm update -g\n> npm update --save\n```\n\n>删除缓存：如果主题没有变化，只有内容有变化可以忽略此步骤\n\n```bash\n> npx hexo clean\n```\n\n> 生成静态网页\n\n```bash\n> npx hexo g\n```\n\n> 上传/发布\n\n```bash\n> npx hexo d\n```\n\n## 二、使用Hexo主题并配置文件\n\n本文安装主题为[hexo-theme-bamboo](https://github.com/yuang01/hexo-theme-bamboo)\n最新文档，请[点击gitee查看](https://yuang01.gitee.io/)\n\n### 主题下载\n\n首先需要安装好 hexo博客系统，进入`themes`文件夹下使用 `Git clone` 命令来下载主题:\n\ngithub安装\n\n```bash\n> git clone https://github.com/yuang01/hexo-theme-bamboo.git\n```\n\ngitee安装\n\n```bash\n> git clone https://gitee.com/yuang01/hexo-theme-bamboo.git\n```\n\n修改hexo本地博客系统文件夹下的配置文件`_config.yml`，把主题改为`hexo-theme-bamboo`，通过主题文件夹下的`config.yml`对主题进行配置。\n\n### 配置文件\n\n下载 完成后，需要修改配置才能启用主题。\n修改根目录下的 `_config.yml` 的 `theme` 的值：`theme: hexo-theme-bamboo`\n\n#### 代码高亮\n\n首先，保证Hexo为最新版。在根目录的配置文件`_config.yml`中，将`highlight`的`enable`设置为false，然后将`prismjs`的`enable`设置为true\n当你使用的是`prismjs`作为代码高亮的话,你还可以在单独的文章中设置代码高亮主题，这样可以实现不同的页面，有不同的代码高亮主题：\n\n```yaml\ntitle: Hexo主题--Bamboo介绍\ndate: 2021-01-5 23:28\nswiper: true\nswiperImg: '/medias/11.jpg'\nimg: '/medias/7.jpg'\ncategories: 前端\ntags: [Hexo, hexo-theme-bamboo]\ntop: true\nprismjs: dark # 设置该篇文章的代码高亮主题为dark\n```\n\n#### 内容搜索\n\n安装[hexo-generator-search](https://github.com/wzpan/hexo-generator-search) 的 Hexo 插件来做内容搜索：\n\n```bash\n> npm install hexo-generator-search --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nsearch:\n  path: search.xml\n  field: post\n```\n\n在主题文件夹下的`_config.yml`文件中设置`search`为true或者false控制显示隐藏\n\n#### 新建分类页面\n\n`categories` 页是用来展示所有分类的页面，也就是导航上的分类页面，如果在你的博客 `source` 目录下还没有 `categories/index.md` 文件，那么你就需要手动或者使用命令新建一个，命令如下：\n\n```bash\n> npx hexo new page \"categories\"\n```\n\n编辑你刚刚新建的页面文件 `/source/categories/index.md`，**至少需要以下内容**：\n\n```yaml\n---\ntitle: categories\ndate: 2020-09-14 15:30:30\ntype: \"categories\"\nlayout: \"categories\"\n---\n```\n\n#### 新建标签页面\n\n`tags` 页是用来展示所有标签的页面，如果在你的博客 `source` 目录下还没有 `tags/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\n> npx hexo new page \"tags\"\n```\n\n编辑你刚刚新建的页面文件 `/source/tags/index.md`，**至少需要以下内容**：\n\n```yaml\n---\ntitle: tags\ndate: 2020-09-14 15:30:30\ntype: \"tags\"\nlayout: \"tags\"\n---\n```\n\n#### 新建关于我页面\n\n`about` 页是用来展示**关于我和我的博客**信息的页面，如果在你的博客 `source` 目录下还没有 `about/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\n> npx hexo new page \"about\"\n```\n\n编辑你刚刚新建的页面文件 `/source/about/index.md`，**至少需要以下内容**：\n\n```yaml\n---\ntitle: about\ndate: 2020-09-14 15:30:30\ntype: \"about\"\nlayout: \"about\"\n---\n```\n\n然后可以在本主题下的`_config.yml`文件下，对关于我页面信息相应的进行更改。\n\n#### 中文链接转拼音\n\n如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 `SEO`，且 `gitment` 评论对中文链接也不支持。我们可以用 [hexo-permalink-pinyin](https://github.com/viko16/hexo-permalink-pinyin) Hexo 插件使在生成文章时生成中文拼音的永久链接。  \n安装命令如下：\n\n```bash\n> npm i hexo-permalink-pinyin --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\npermalink_pinyin:\n  enable: true\n  separator: '-' # default: '-'\n```\n\n#### 添加RSS订阅\n\n本主题中还使用到了 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 的 Hexo 插件来做 `RSS`，安装命令如下：\n\n```bash\n> npm install hexo-generator-feed --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n  hub:\n  content:\n  content_limit: 140\n  content_limit_delim: ' '\n  order_by: -date\n```\n\n#### Front-matter\n\n这个指的是你在你的文章页面里面写的参数，针对的是这一篇文章，例如\n\n```yaml\n---\ntitle: Hexo主题--Bamboo介绍\ndate: 2020-09-14 14:06\nswiper: true # 是否将文章放入轮播图中\nswiperImg: '/medias/1.jpg' # 该文章在轮播图中的图片，可以是本地目录下图片也可以是http://xxx图片\nimg: '/medias/1.jpg' # 该文章图片，可以是本地目录下图片也可以是http://xxx图片\ncategories: 前端\ntags: [Hexo, hexo-theme-bamboo]\ntop: true\n---\n```\n\n`Front-matter` 选项中的所有内容均为**非必填**的。但我仍然建议至少填写 `title` 和 `date` 的值。\n\n| 配置选项        | 默认值                | 描述                                                                                                                                                          |\n| --------------- | --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| title           | `Markdown` 的文件标题 | 文章标题，强烈建议填写此选项                                                                                                                                  |\n| date            | 文件创建时的日期时间  | 发布时间，强烈建议填写此选项，且最好保证全局唯一                                                                                                              |\n| swiper          | false                 | 表示该文章是否需要加入到首页轮播封面中                                                                                                                        |\n| swiperImg       | 无                    | 表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片                                                                                |\n| swiperDesc      | 无                    | 表示该文章在首页轮播封面需要显示的文字描述（摘要），如果没有，则使用`excerpt`，如果`excerpt`也没有，则取文章内容                                              |\n| img             | 无                    | 文章特征图，该文章显示的图片，没有则默认使用文章的特色图片                                                                                                    |\n| excerpt         | 无                    | 文章描述（摘要），该文章在首页的描述文字，如果没有，则取`swiperDesc`,如果`swiperDesc`也没有，则取文章内容（优先取`<!-- more -->`上面的内容）                  |\n| top             | false                 | 将该值设为true，则将该篇文章显示在首页的置顶栏目中                                                                                                            |\n| toc             | true                  | 将该值设为false，则该篇文章不显示右侧目录                                                                                                                     |\n| tocOpen         | true                  | 将该值设为false，则该篇文章右侧目录默认收缩                                                                                                                   |\n| onlyTitle       | false                 | 文章详情页头部是否只显示标题，不显示日期等信息                                                                                                                |\n| comments        | true                  | 将该值设为false，则该篇文章不显示评论                                                                                                                         |\n| share           | true                  | 将该值设为false，则该篇文章不显示分享按钮                                                                                                                     |\n| copyright       | true                  | 将该值设为false，则该篇文章不显示版权声明                                                                                                                     |\n| donate          | true                  | 将该值设为false，则该篇文章不显示打赏按钮                                                                                                                     |\n| bgImg           | \\-                    | 单独为这篇文章设置背景图片或者背景颜色，可以是数组，数组里面放图片链接，可以是字符串，字符串里面是颜色值，空值则背景颜色透明                                  |\n| bgImgTransition | fade                  | 该篇文章的bgImg设置为数组,该值表示背景图片切换的动画, 有三种值（fade, scale, translate-fade）                                                                 |\n| bgImgDelay      | 180000(三分钟)        | 该篇文章的bgImg设置为数组,该值表示背景图片切换的延迟时间,                                                                                                     |\n| categories      | 无                    | 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类                                                                                              |\n| prismjs         | 无                    | 如果使用的是hexo自带的prismjs代码高亮，通过设置该值为该篇文章设置不同的代码高亮主题（default, coy, dark, funky, okaidia, solarizedlight, tomorrow, twilight） |\n| tags            | 无                    | 文章标签，一篇文章可以多个标签                                                                                                                                |\n| mathjax         | false                 | mathjax公式                                                                                                                                                   |\n| imgTop          | true                  | 设置为`false`则文章和自定义页面顶部不要图片                                                                                                                   |\n","source":"_posts/计算机/Hexo博客教程.md","raw":"---\ntitle: Hexo博客教程\ndate: 2022-04-18 15:57:37\nimg: https://cdn.pixabay.com/photo/2022/03/29/21/04/eggs-7100211_960_720.jpg # 该文章图片\nexcerpt: 在windows下利用Hexo对博客系统的建立，并利用Github进行云托管，并设置了一种主题供参考 # 文章描述（摘要）\ntop: false #是否该篇文章显示在首页的置顶栏目中\ntoc: true # 将该值设为false，则该篇文章不显示右侧目录\ntocOpen: true #将该值设为false，则该篇文章右侧目录默认收缩\nonlyTitle: false #文章详情页头部是否只显示标题，不显示日期等信息\ncomments: true #将该值设为false，则该篇文章不显示评论\nshare: true #将该值设为false，则该篇文章不显示分享按钮\ncopyright: true # 将该值设为false，则该篇文章不显示版权声明\ndonate:  false #将该值设为false，则该篇文章不显示打赏按钮\nprismjs: default #default, coy, dark, funky, okaidia, solarizedlight, tomorrow, twilight\ncategories: 计算机\ntags: [Hexo, 博客, 前端] #一篇文章可以多个标签\nmathjax:  true #mathjax公式\n---\n\n# Hexo 博客教程\n\n## 一、Windows本地安装Hexo\n\n官网教程：<https://hexo.io/zh-cn/docs/>\n\n首先需要先在电脑上安装[Node.js](https://nodejs.org/zh-cn/)，[Git](https://git-scm.com/)\n\n### 安装Hexo\n\n```bash\n> npm install -g hexo-cli\n```\n\n### 使用Hexo命令\n\n1. `npx hexo  <command>`\n2. 将 Hexo 所在的目录下的` node_modules `添加到环境变量之中即可直接使用`hexo <command>`\n\n### 初始化文件夹\n\n```bash\n> npx hexo init <folder>\n> cd <folder>\n> npm install\n```\n\n**_config.yml**\n网站的 [配置](https://hexo.io/zh-cn/docs/configuration) 信息，您可以在此配置大部分的参数。\n\n**package.json**\n应用程序的信息。\n\n**scaffolds**\n[模版](https://hexo.io/zh-cn/docs/writing) 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n\n**source**\n资源文件夹是存放用户资源的地方。\n\n**themes**\n[主题](https://hexo.io/zh-cn/docs/themes) 文件夹。Hexo 会根据主题来生成静态页面。\n\n### Hexo新建文章\n\n```bash\n> npx hexo new [layout] <title>\n```\n\n新建一篇文章。如果没有设置 `layout` 的话，默认使用 [\\_config.yml](https://hexo.io/zh-cn/docs/configuration) 中的 `default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n```bash\n> npx hexo new \"post title with whitespace\"\n```\n\n| 参数              | 描述                                          |\n| ----------------- | --------------------------------------------- |\n| `-p`, `--path`    | 自定义新文章的路径                            |\n| `-r`, `--replace` | 如果存在同名文章，将其替换                    |\n| `-s`, `--slug`    | 文章的 Slug，作为新文章的文件名和发布后的 URL |\n\n默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 `index.md` 文件。你可以使用 `--path` 参数来覆盖上述行为、自行决定文件的目录：\n\n```bash\n> npx hexo new page --path about/me \"About me\"\n```\n\n以上命令会创建一个 `source/about/me.md` 文件，同时 Front Matter 中的 title 为 `\"About me\"`\n\n注意！title 是必须指定的！如果你这么做并不能达到你的目的：\n\n```bash\n> npx hexo new page --path about/me\n```\n\n此时 Hexo 会创建 `source/_posts/about/me.md`，同时 `me.md` 的 Front Matter 中的 title 为 `\"page\"`。这是因为在上述命令中，hexo-cli 将 `page` 视为指定文章的标题、并采用默认的 `layout`。\n\n### 生成静态文件\n\n```bash\n> npx hexo generate\n```\n\n| 选项                  | 描述                                                                                                                                                                |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `-d`, `--deploy`      | 文件生成后立即部署网站                                                                                                                                              |\n| `-w`, `--watch`       | 监视文件变动                                                                                                                                                        |\n| `-b`, `--bail`        | 生成过程中如果发生任何未处理的异常则抛出异常                                                                                                                        |\n| `-f`, `--force`       | 强制重新生成文件  Hexo 引入了差分机制，如果 `public` 目录存在，那么 `hexo g` 只会重新生成改动的文件。使用该参数的效果接近 `hexo clean && hexo generate` |\n| `-c`, `--concurrency` | 最大同时生成文件的数量，默认无限制                                                                                                                                  |\n\n该命令可以简写为\n\n```bash\n> npx hexo g\n```\n\n### 启动本地服务\n\n```bash\n> npx hexo server\n```\n\n对Hexo的内容进行预览。\n启动服务器。默认情况下，访问网址为： `http://localhost:4000/`。\n\n| 选项             | 描述                           |\n| ---------------- | ------------------------------ |\n| `-p`, `--port`   | 重设端口                       |\n| `-s`, `--static` | 只使用静态文件                 |\n| `-l`, `--log`    | 启动日记记录，使用覆盖记录格式 |\n\n### 将 Hexo 部署到 GitHub Pages\n\n>生成密钥\n\n```bash\n> git config --global user.name \"Name\"\n> git config --global user.email \"Email\"\n```\n\nName与Email为github注册的用户名和邮箱，然后生成密钥\n\n```bash\n> ssh-keygen -t rsa -C \"Email\"\n```\n\n之后全部回车确认到底。然后，在用户文件夹下的`.ssh`文件夹中找到`id_rsa.pub`文件，打开复制里面的全部内容。\n在浏览器中，登录你的github账号打开Settings，在右侧中找到SSH and GPG keys选项并打开，选择New SSH key，填写好标题，把复制的内容全部粘贴上去。\n\n>本地连接github\n\n```bash\n> ssh -T git@github.com\n```\n\n该命令无法连接问题，错误：**ssh: connect to host github.com port 22: Connection refused**\n在用户文件夹中找到`.ssh`文件夹，在里面新建一个`config`文件，里面填写\n\n```bash\nHost github.com  \nUser xxxxx@xx.com   //注册github的邮箱\nHostname ssh.github.com  \nPreferredAuthentications publickey  \nIdentityFile ~/.ssh/id_rsa  //填写你的id_rsa的绝对路径\nPort 443\n```\n\n再一次运行命令，一直确定，得到下面结果就说明连接成功\n\n```bash\nHi ******! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n>修改Hexo配置文件\n\n在初始化的博客系统的根目录下，找到`_config.yml`文件，找到配置的最后一行\n\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n    type: ''\n```\n\n修改为\n\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n    type: git\n    repository: git@github.com:****/****.github.io.git  #你的仓库以ssh格式下载的地址\n    branch: master\n```\n\n### 部署网站\n\n```bash\n> npx hexo deploy\n```\n\n| 参数               | 描述                     |\n| ------------------ | ------------------------ |\n| `-g`, `--generate` | 部署之前预先生成静态文件 |\n\n该命令可以简写为：\n\n```bash\n> npx hexo d\n```\n\n发布失败，错误：**ERROR Deployer not found: git**\n\n```bash\n> npm install --save hexo-deployer-git\n```\n\n安装后继续发布\n\n> 使用自己的域名\n\n在Hexo目录下的public文件夹中，新建CNAME文件,输入你的域名就可以了，否则每次上传发布都需要重新绑定域名。\n\n### 后续维护\n\n> 查看当前hexo版本\n\n```bash\n> npx hexo version\n```\n\n> 升级hexo\n\n```bash\n> npm i hexo-cli -g\n```\n\n升级完成后查看版本，是否更新成功\n\n> 检查系统中的插件是否有升级的\n\n```bash\n> npm install -g npm-check\n> npm-check\n```\n\n> 升级插件\n\n```bash\n> npm install -g npm-upgrade\n> npm-upgrade\n> npm update -g\n> npm update --save\n```\n\n>删除缓存：如果主题没有变化，只有内容有变化可以忽略此步骤\n\n```bash\n> npx hexo clean\n```\n\n> 生成静态网页\n\n```bash\n> npx hexo g\n```\n\n> 上传/发布\n\n```bash\n> npx hexo d\n```\n\n## 二、使用Hexo主题并配置文件\n\n本文安装主题为[hexo-theme-bamboo](https://github.com/yuang01/hexo-theme-bamboo)\n最新文档，请[点击gitee查看](https://yuang01.gitee.io/)\n\n### 主题下载\n\n首先需要安装好 hexo博客系统，进入`themes`文件夹下使用 `Git clone` 命令来下载主题:\n\ngithub安装\n\n```bash\n> git clone https://github.com/yuang01/hexo-theme-bamboo.git\n```\n\ngitee安装\n\n```bash\n> git clone https://gitee.com/yuang01/hexo-theme-bamboo.git\n```\n\n修改hexo本地博客系统文件夹下的配置文件`_config.yml`，把主题改为`hexo-theme-bamboo`，通过主题文件夹下的`config.yml`对主题进行配置。\n\n### 配置文件\n\n下载 完成后，需要修改配置才能启用主题。\n修改根目录下的 `_config.yml` 的 `theme` 的值：`theme: hexo-theme-bamboo`\n\n#### 代码高亮\n\n首先，保证Hexo为最新版。在根目录的配置文件`_config.yml`中，将`highlight`的`enable`设置为false，然后将`prismjs`的`enable`设置为true\n当你使用的是`prismjs`作为代码高亮的话,你还可以在单独的文章中设置代码高亮主题，这样可以实现不同的页面，有不同的代码高亮主题：\n\n```yaml\ntitle: Hexo主题--Bamboo介绍\ndate: 2021-01-5 23:28\nswiper: true\nswiperImg: '/medias/11.jpg'\nimg: '/medias/7.jpg'\ncategories: 前端\ntags: [Hexo, hexo-theme-bamboo]\ntop: true\nprismjs: dark # 设置该篇文章的代码高亮主题为dark\n```\n\n#### 内容搜索\n\n安装[hexo-generator-search](https://github.com/wzpan/hexo-generator-search) 的 Hexo 插件来做内容搜索：\n\n```bash\n> npm install hexo-generator-search --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nsearch:\n  path: search.xml\n  field: post\n```\n\n在主题文件夹下的`_config.yml`文件中设置`search`为true或者false控制显示隐藏\n\n#### 新建分类页面\n\n`categories` 页是用来展示所有分类的页面，也就是导航上的分类页面，如果在你的博客 `source` 目录下还没有 `categories/index.md` 文件，那么你就需要手动或者使用命令新建一个，命令如下：\n\n```bash\n> npx hexo new page \"categories\"\n```\n\n编辑你刚刚新建的页面文件 `/source/categories/index.md`，**至少需要以下内容**：\n\n```yaml\n---\ntitle: categories\ndate: 2020-09-14 15:30:30\ntype: \"categories\"\nlayout: \"categories\"\n---\n```\n\n#### 新建标签页面\n\n`tags` 页是用来展示所有标签的页面，如果在你的博客 `source` 目录下还没有 `tags/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\n> npx hexo new page \"tags\"\n```\n\n编辑你刚刚新建的页面文件 `/source/tags/index.md`，**至少需要以下内容**：\n\n```yaml\n---\ntitle: tags\ndate: 2020-09-14 15:30:30\ntype: \"tags\"\nlayout: \"tags\"\n---\n```\n\n#### 新建关于我页面\n\n`about` 页是用来展示**关于我和我的博客**信息的页面，如果在你的博客 `source` 目录下还没有 `about/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\n> npx hexo new page \"about\"\n```\n\n编辑你刚刚新建的页面文件 `/source/about/index.md`，**至少需要以下内容**：\n\n```yaml\n---\ntitle: about\ndate: 2020-09-14 15:30:30\ntype: \"about\"\nlayout: \"about\"\n---\n```\n\n然后可以在本主题下的`_config.yml`文件下，对关于我页面信息相应的进行更改。\n\n#### 中文链接转拼音\n\n如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 `SEO`，且 `gitment` 评论对中文链接也不支持。我们可以用 [hexo-permalink-pinyin](https://github.com/viko16/hexo-permalink-pinyin) Hexo 插件使在生成文章时生成中文拼音的永久链接。  \n安装命令如下：\n\n```bash\n> npm i hexo-permalink-pinyin --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\npermalink_pinyin:\n  enable: true\n  separator: '-' # default: '-'\n```\n\n#### 添加RSS订阅\n\n本主题中还使用到了 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 的 Hexo 插件来做 `RSS`，安装命令如下：\n\n```bash\n> npm install hexo-generator-feed --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n  hub:\n  content:\n  content_limit: 140\n  content_limit_delim: ' '\n  order_by: -date\n```\n\n#### Front-matter\n\n这个指的是你在你的文章页面里面写的参数，针对的是这一篇文章，例如\n\n```yaml\n---\ntitle: Hexo主题--Bamboo介绍\ndate: 2020-09-14 14:06\nswiper: true # 是否将文章放入轮播图中\nswiperImg: '/medias/1.jpg' # 该文章在轮播图中的图片，可以是本地目录下图片也可以是http://xxx图片\nimg: '/medias/1.jpg' # 该文章图片，可以是本地目录下图片也可以是http://xxx图片\ncategories: 前端\ntags: [Hexo, hexo-theme-bamboo]\ntop: true\n---\n```\n\n`Front-matter` 选项中的所有内容均为**非必填**的。但我仍然建议至少填写 `title` 和 `date` 的值。\n\n| 配置选项        | 默认值                | 描述                                                                                                                                                          |\n| --------------- | --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| title           | `Markdown` 的文件标题 | 文章标题，强烈建议填写此选项                                                                                                                                  |\n| date            | 文件创建时的日期时间  | 发布时间，强烈建议填写此选项，且最好保证全局唯一                                                                                                              |\n| swiper          | false                 | 表示该文章是否需要加入到首页轮播封面中                                                                                                                        |\n| swiperImg       | 无                    | 表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片                                                                                |\n| swiperDesc      | 无                    | 表示该文章在首页轮播封面需要显示的文字描述（摘要），如果没有，则使用`excerpt`，如果`excerpt`也没有，则取文章内容                                              |\n| img             | 无                    | 文章特征图，该文章显示的图片，没有则默认使用文章的特色图片                                                                                                    |\n| excerpt         | 无                    | 文章描述（摘要），该文章在首页的描述文字，如果没有，则取`swiperDesc`,如果`swiperDesc`也没有，则取文章内容（优先取`<!-- more -->`上面的内容）                  |\n| top             | false                 | 将该值设为true，则将该篇文章显示在首页的置顶栏目中                                                                                                            |\n| toc             | true                  | 将该值设为false，则该篇文章不显示右侧目录                                                                                                                     |\n| tocOpen         | true                  | 将该值设为false，则该篇文章右侧目录默认收缩                                                                                                                   |\n| onlyTitle       | false                 | 文章详情页头部是否只显示标题，不显示日期等信息                                                                                                                |\n| comments        | true                  | 将该值设为false，则该篇文章不显示评论                                                                                                                         |\n| share           | true                  | 将该值设为false，则该篇文章不显示分享按钮                                                                                                                     |\n| copyright       | true                  | 将该值设为false，则该篇文章不显示版权声明                                                                                                                     |\n| donate          | true                  | 将该值设为false，则该篇文章不显示打赏按钮                                                                                                                     |\n| bgImg           | \\-                    | 单独为这篇文章设置背景图片或者背景颜色，可以是数组，数组里面放图片链接，可以是字符串，字符串里面是颜色值，空值则背景颜色透明                                  |\n| bgImgTransition | fade                  | 该篇文章的bgImg设置为数组,该值表示背景图片切换的动画, 有三种值（fade, scale, translate-fade）                                                                 |\n| bgImgDelay      | 180000(三分钟)        | 该篇文章的bgImg设置为数组,该值表示背景图片切换的延迟时间,                                                                                                     |\n| categories      | 无                    | 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类                                                                                              |\n| prismjs         | 无                    | 如果使用的是hexo自带的prismjs代码高亮，通过设置该值为该篇文章设置不同的代码高亮主题（default, coy, dark, funky, okaidia, solarizedlight, tomorrow, twilight） |\n| tags            | 无                    | 文章标签，一篇文章可以多个标签                                                                                                                                |\n| mathjax         | false                 | mathjax公式                                                                                                                                                   |\n| imgTop          | true                  | 设置为`false`则文章和自定义页面顶部不要图片                                                                                                                   |\n","slug":"计算机/Hexo博客教程","published":1,"updated":"2022-05-22T04:24:47.894Z","layout":"post","photos":[],"_id":"cm1z7gipc0007dwvx005rbugc","content":"<h1 id=\"Hexo-博客教程\"><a href=\"#Hexo-博客教程\" class=\"headerlink\" title=\"Hexo 博客教程\"></a>Hexo 博客教程</h1><h2 id=\"一、Windows本地安装Hexo\"><a href=\"#一、Windows本地安装Hexo\" class=\"headerlink\" title=\"一、Windows本地安装Hexo\"></a>一、Windows本地安装Hexo</h2><p>官网教程：<a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></p>\n<p>首先需要先在电脑上安装<a href=\"https://nodejs.org/zh-cn/\">Node.js</a>，<a href=\"https://git-scm.com/\">Git</a></p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Hexo命令\"><a href=\"#使用Hexo命令\" class=\"headerlink\" title=\"使用Hexo命令\"></a>使用Hexo命令</h3><ol>\n<li><code>npx hexo  &lt;command&gt;</code></li>\n<li>将 Hexo 所在的目录下的<code>node_modules</code>添加到环境变量之中即可直接使用<code>hexo &lt;command&gt;</code></li>\n</ol>\n<h3 id=\"初始化文件夹\"><a href=\"#初始化文件夹\" class=\"headerlink\" title=\"初始化文件夹\"></a>初始化文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo init &lt;folder&gt;</span><br><span class=\"line\">&gt; <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">&gt; npm install</span><br></pre></td></tr></table></figure>\n\n<p><strong>_config.yml</strong><br>网站的 <a href=\"https://hexo.io/zh-cn/docs/configuration\">配置</a> 信息，您可以在此配置大部分的参数。</p>\n<p><strong>package.json</strong><br>应用程序的信息。</p>\n<p><strong>scaffolds</strong><br><a href=\"https://hexo.io/zh-cn/docs/writing\">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<p><strong>source</strong><br>资源文件夹是存放用户资源的地方。</p>\n<p><strong>themes</strong><br><a href=\"https://hexo.io/zh-cn/docs/themes\">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p>\n<h3 id=\"Hexo新建文章\"><a href=\"#Hexo新建文章\" class=\"headerlink\" title=\"Hexo新建文章\"></a>Hexo新建文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href=\"https://hexo.io/zh-cn/docs/configuration\">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new <span class=\"string\">&quot;post title with whitespace&quot;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-p</code>, <code>--path</code></td>\n<td>自定义新文章的路径</td>\n</tr>\n<tr>\n<td><code>-r</code>, <code>--replace</code></td>\n<td>如果存在同名文章，将其替换</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--slug</code></td>\n<td>文章的 Slug，作为新文章的文件名和发布后的 URL</td>\n</tr>\n</tbody></table>\n<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page --path about/me <span class=\"string\">&quot;About me&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p>\n<p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page --path about/me</span><br></pre></td></tr></table></figure>\n\n<p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo generate</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>监视文件变动</td>\n</tr>\n<tr>\n<td><code>-b</code>, <code>--bail</code></td>\n<td>生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td><code>-f</code>, <code>--force</code></td>\n<td>强制重新生成文件  Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>\n</tr>\n<tr>\n<td><code>-c</code>, <code>--concurrency</code></td>\n<td>最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<p>该命令可以简写为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动本地服务\"><a href=\"#启动本地服务\" class=\"headerlink\" title=\"启动本地服务\"></a>启动本地服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo server</span><br></pre></td></tr></table></figure>\n\n<p>对Hexo的内容进行预览。<br>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>重设端口</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>只使用静态文件</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody></table>\n<h3 id=\"将-Hexo-部署到-GitHub-Pages\"><a href=\"#将-Hexo-部署到-GitHub-Pages\" class=\"headerlink\" title=\"将 Hexo 部署到 GitHub Pages\"></a>将 Hexo 部署到 GitHub Pages</h3><blockquote>\n<p>生成密钥</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git config --global user.name <span class=\"string\">&quot;Name&quot;</span></span><br><span class=\"line\">&gt; git config --global user.email <span class=\"string\">&quot;Email&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>Name与Email为github注册的用户名和邮箱，然后生成密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ssh-keygen -t rsa -C <span class=\"string\">&quot;Email&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>之后全部回车确认到底。然后，在用户文件夹下的<code>.ssh</code>文件夹中找到<code>id_rsa.pub</code>文件，打开复制里面的全部内容。<br>在浏览器中，登录你的github账号打开Settings，在右侧中找到SSH and GPG keys选项并打开，选择New SSH key，填写好标题，把复制的内容全部粘贴上去。</p>\n<blockquote>\n<p>本地连接github</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>该命令无法连接问题，错误：<strong>ssh: connect to host github.com port 22: Connection refused</strong><br>在用户文件夹中找到<code>.ssh</code>文件夹，在里面新建一个<code>config</code>文件，里面填写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com  </span><br><span class=\"line\">User xxxxx@xx.com   //注册github的邮箱</span><br><span class=\"line\">Hostname ssh.github.com  </span><br><span class=\"line\">PreferredAuthentications publickey  </span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa  //填写你的id_rsa的绝对路径</span><br><span class=\"line\">Port 443</span><br></pre></td></tr></table></figure>\n\n<p>再一次运行命令，一直确定，得到下面结果就说明连接成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hi ******! You<span class=\"string\">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>修改Hexo配置文件</p>\n</blockquote>\n<p>在初始化的博客系统的根目录下，找到<code>_config.yml</code>文件，找到配置的最后一行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    repository: git@github.com:****/****.github.io.git  <span class=\"comment\">#你的仓库以ssh格式下载的地址</span></span><br><span class=\"line\">    branch: master</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"部署网站\"><a href=\"#部署网站\" class=\"headerlink\" title=\"部署网站\"></a>部署网站</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo deploy</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>部署之前预先生成静态文件</td>\n</tr>\n</tbody></table>\n<p>该命令可以简写为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo d</span><br></pre></td></tr></table></figure>\n\n<p>发布失败，错误：<strong>ERROR Deployer not found: git</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n\n<p>安装后继续发布</p>\n<blockquote>\n<p>使用自己的域名</p>\n</blockquote>\n<p>在Hexo目录下的public文件夹中，新建CNAME文件,输入你的域名就可以了，否则每次上传发布都需要重新绑定域名。</p>\n<h3 id=\"后续维护\"><a href=\"#后续维护\" class=\"headerlink\" title=\"后续维护\"></a>后续维护</h3><blockquote>\n<p>查看当前hexo版本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo version</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>升级hexo</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm i hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p>升级完成后查看版本，是否更新成功</p>\n<blockquote>\n<p>检查系统中的插件是否有升级的</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install -g npm-check</span><br><span class=\"line\">&gt; npm-check</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>升级插件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install -g npm-upgrade</span><br><span class=\"line\">&gt; npm-upgrade</span><br><span class=\"line\">&gt; npm update -g</span><br><span class=\"line\">&gt; npm update --save</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除缓存：如果主题没有变化，只有内容有变化可以忽略此步骤</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo clean</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成静态网页</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo g</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>上传&#x2F;发布</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、使用Hexo主题并配置文件\"><a href=\"#二、使用Hexo主题并配置文件\" class=\"headerlink\" title=\"二、使用Hexo主题并配置文件\"></a>二、使用Hexo主题并配置文件</h2><p>本文安装主题为<a href=\"https://github.com/yuang01/hexo-theme-bamboo\">hexo-theme-bamboo</a><br>最新文档，请<a href=\"https://yuang01.gitee.io/\">点击gitee查看</a></p>\n<h3 id=\"主题下载\"><a href=\"#主题下载\" class=\"headerlink\" title=\"主题下载\"></a>主题下载</h3><p>首先需要安装好 hexo博客系统，进入<code>themes</code>文件夹下使用 <code>Git clone</code> 命令来下载主题:</p>\n<p>github安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git <span class=\"built_in\">clone</span> https://github.com/yuang01/hexo-theme-bamboo.git</span><br></pre></td></tr></table></figure>\n\n<p>gitee安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git <span class=\"built_in\">clone</span> https://gitee.com/yuang01/hexo-theme-bamboo.git</span><br></pre></td></tr></table></figure>\n\n<p>修改hexo本地博客系统文件夹下的配置文件<code>_config.yml</code>，把主题改为<code>hexo-theme-bamboo</code>，通过主题文件夹下的<code>config.yml</code>对主题进行配置。</p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>下载 完成后，需要修改配置才能启用主题。<br>修改根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-bamboo</code></p>\n<h4 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h4><p>首先，保证Hexo为最新版。在根目录的配置文件<code>_config.yml</code>中，将<code>highlight</code>的<code>enable</code>设置为false，然后将<code>prismjs</code>的<code>enable</code>设置为true<br>当你使用的是<code>prismjs</code>作为代码高亮的话,你还可以在单独的文章中设置代码高亮主题，这样可以实现不同的页面，有不同的代码高亮主题：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo主题--Bamboo介绍</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2021-01-5</span> <span class=\"number\">23</span><span class=\"string\">:28</span></span><br><span class=\"line\"><span class=\"attr\">swiper:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">swiperImg:</span> <span class=\"string\">&#x27;/medias/11.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">img:</span> <span class=\"string\">&#x27;/medias/7.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">前端</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span> [<span class=\"string\">Hexo</span>, <span class=\"string\">hexo-theme-bamboo</span>]</span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">prismjs:</span> <span class=\"string\">dark</span> <span class=\"comment\"># 设置该篇文章的代码高亮主题为dark</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内容搜索\"><a href=\"#内容搜索\" class=\"headerlink\" title=\"内容搜索\"></a>内容搜索</h4><p>安装<a href=\"https://github.com/wzpan/hexo-generator-search\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br></pre></td></tr></table></figure>\n\n<p>在主题文件夹下的<code>_config.yml</code>文件中设置<code>search</code>为true或者false控制显示隐藏</p>\n<h4 id=\"新建分类页面\"><a href=\"#新建分类页面\" class=\"headerlink\" title=\"新建分类页面\"></a>新建分类页面</h4><p><code>categories</code> 页是用来展示所有分类的页面，也就是导航上的分类页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要手动或者使用命令新建一个，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page <span class=\"string\">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，<strong>至少需要以下内容</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">categories</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 15:30:30</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"新建标签页面\"><a href=\"#新建标签页面\" class=\"headerlink\" title=\"新建标签页面\"></a>新建标签页面</h4><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page <span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，<strong>至少需要以下内容</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">tags</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 15:30:30</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"新建关于我页面\"><a href=\"#新建关于我页面\" class=\"headerlink\" title=\"新建关于我页面\"></a>新建关于我页面</h4><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page <span class=\"string\">&quot;about&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，<strong>至少需要以下内容</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">about</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 15:30:30</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">&quot;about&quot;</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">&quot;about&quot;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p>然后可以在本主题下的<code>_config.yml</code>文件下，对关于我页面信息相应的进行更改。</p>\n<h4 id=\"中文链接转拼音\"><a href=\"#中文链接转拼音\" class=\"headerlink\" title=\"中文链接转拼音\"></a>中文链接转拼音</h4><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href=\"https://github.com/viko16/hexo-permalink-pinyin\">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。<br>安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_pinyin:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">separator:</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"comment\"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"添加RSS订阅\"><a href=\"#添加RSS订阅\" class=\"headerlink\" title=\"添加RSS订阅\"></a>添加RSS订阅</h4><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-feed\">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">feed:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">atom</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">atom.xml</span></span><br><span class=\"line\">  <span class=\"attr\">limit:</span> <span class=\"number\">20</span></span><br><span class=\"line\">  <span class=\"attr\">hub:</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span></span><br><span class=\"line\">  <span class=\"attr\">content_limit:</span> <span class=\"number\">140</span></span><br><span class=\"line\">  <span class=\"attr\">content_limit_delim:</span> <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> <span class=\"string\">-date</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Front-matter\"><a href=\"#Front-matter\" class=\"headerlink\" title=\"Front-matter\"></a>Front-matter</h4><p>这个指的是你在你的文章页面里面写的参数，针对的是这一篇文章，例如</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo主题--Bamboo介绍</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 </span><span class=\"number\">14</span><span class=\"string\">:06</span></span><br><span class=\"line\"><span class=\"attr\">swiper:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 是否将文章放入轮播图中</span></span><br><span class=\"line\"><span class=\"attr\">swiperImg:</span> <span class=\"string\">&#x27;/medias/1.jpg&#x27;</span> <span class=\"comment\"># 该文章在轮播图中的图片，可以是本地目录下图片也可以是http://xxx图片</span></span><br><span class=\"line\"><span class=\"attr\">img:</span> <span class=\"string\">&#x27;/medias/1.jpg&#x27;</span> <span class=\"comment\"># 该文章图片，可以是本地目录下图片也可以是http://xxx图片</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">前端</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span> [<span class=\"string\">Hexo</span>, <span class=\"string\">hexo-theme-bamboo</span>]</span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p>\n<table>\n<thead>\n<tr>\n<th>配置选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td><code>Markdown</code> 的文件标题</td>\n<td>文章标题，强烈建议填写此选项</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件创建时的日期时间</td>\n<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>\n</tr>\n<tr>\n<td>swiper</td>\n<td>false</td>\n<td>表示该文章是否需要加入到首页轮播封面中</td>\n</tr>\n<tr>\n<td>swiperImg</td>\n<td>无</td>\n<td>表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>swiperDesc</td>\n<td>无</td>\n<td>表示该文章在首页轮播封面需要显示的文字描述（摘要），如果没有，则使用<code>excerpt</code>，如果<code>excerpt</code>也没有，则取文章内容</td>\n</tr>\n<tr>\n<td>img</td>\n<td>无</td>\n<td>文章特征图，该文章显示的图片，没有则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>excerpt</td>\n<td>无</td>\n<td>文章描述（摘要），该文章在首页的描述文字，如果没有，则取<code>swiperDesc</code>,如果<code>swiperDesc</code>也没有，则取文章内容（优先取<code>&lt;!-- more --&gt;</code>上面的内容）</td>\n</tr>\n<tr>\n<td>top</td>\n<td>false</td>\n<td>将该值设为true，则将该篇文章显示在首页的置顶栏目中</td>\n</tr>\n<tr>\n<td>toc</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示右侧目录</td>\n</tr>\n<tr>\n<td>tocOpen</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章右侧目录默认收缩</td>\n</tr>\n<tr>\n<td>onlyTitle</td>\n<td>false</td>\n<td>文章详情页头部是否只显示标题，不显示日期等信息</td>\n</tr>\n<tr>\n<td>comments</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示评论</td>\n</tr>\n<tr>\n<td>share</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示分享按钮</td>\n</tr>\n<tr>\n<td>copyright</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示版权声明</td>\n</tr>\n<tr>\n<td>donate</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示打赏按钮</td>\n</tr>\n<tr>\n<td>bgImg</td>\n<td>-</td>\n<td>单独为这篇文章设置背景图片或者背景颜色，可以是数组，数组里面放图片链接，可以是字符串，字符串里面是颜色值，空值则背景颜色透明</td>\n</tr>\n<tr>\n<td>bgImgTransition</td>\n<td>fade</td>\n<td>该篇文章的bgImg设置为数组,该值表示背景图片切换的动画, 有三种值（fade, scale, translate-fade）</td>\n</tr>\n<tr>\n<td>bgImgDelay</td>\n<td>180000(三分钟)</td>\n<td>该篇文章的bgImg设置为数组,该值表示背景图片切换的延迟时间,</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>无</td>\n<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>\n</tr>\n<tr>\n<td>prismjs</td>\n<td>无</td>\n<td>如果使用的是hexo自带的prismjs代码高亮，通过设置该值为该篇文章设置不同的代码高亮主题（default, coy, dark, funky, okaidia, solarizedlight, tomorrow, twilight）</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>无</td>\n<td>文章标签，一篇文章可以多个标签</td>\n</tr>\n<tr>\n<td>mathjax</td>\n<td>false</td>\n<td>mathjax公式</td>\n</tr>\n<tr>\n<td>imgTop</td>\n<td>true</td>\n<td>设置为<code>false</code>则文章和自定义页面顶部不要图片</td>\n</tr>\n</tbody></table>\n","more":"<h1 id=\"Hexo-博客教程\"><a href=\"#Hexo-博客教程\" class=\"headerlink\" title=\"Hexo 博客教程\"></a>Hexo 博客教程</h1><h2 id=\"一、Windows本地安装Hexo\"><a href=\"#一、Windows本地安装Hexo\" class=\"headerlink\" title=\"一、Windows本地安装Hexo\"></a>一、Windows本地安装Hexo</h2><p>官网教程：<a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></p>\n<p>首先需要先在电脑上安装<a href=\"https://nodejs.org/zh-cn/\">Node.js</a>，<a href=\"https://git-scm.com/\">Git</a></p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Hexo命令\"><a href=\"#使用Hexo命令\" class=\"headerlink\" title=\"使用Hexo命令\"></a>使用Hexo命令</h3><ol>\n<li><code>npx hexo  &lt;command&gt;</code></li>\n<li>将 Hexo 所在的目录下的<code>node_modules</code>添加到环境变量之中即可直接使用<code>hexo &lt;command&gt;</code></li>\n</ol>\n<h3 id=\"初始化文件夹\"><a href=\"#初始化文件夹\" class=\"headerlink\" title=\"初始化文件夹\"></a>初始化文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo init &lt;folder&gt;</span><br><span class=\"line\">&gt; <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">&gt; npm install</span><br></pre></td></tr></table></figure>\n\n<p><strong>_config.yml</strong><br>网站的 <a href=\"https://hexo.io/zh-cn/docs/configuration\">配置</a> 信息，您可以在此配置大部分的参数。</p>\n<p><strong>package.json</strong><br>应用程序的信息。</p>\n<p><strong>scaffolds</strong><br><a href=\"https://hexo.io/zh-cn/docs/writing\">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<p><strong>source</strong><br>资源文件夹是存放用户资源的地方。</p>\n<p><strong>themes</strong><br><a href=\"https://hexo.io/zh-cn/docs/themes\">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p>\n<h3 id=\"Hexo新建文章\"><a href=\"#Hexo新建文章\" class=\"headerlink\" title=\"Hexo新建文章\"></a>Hexo新建文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href=\"https://hexo.io/zh-cn/docs/configuration\">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new <span class=\"string\">&quot;post title with whitespace&quot;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-p</code>, <code>--path</code></td>\n<td>自定义新文章的路径</td>\n</tr>\n<tr>\n<td><code>-r</code>, <code>--replace</code></td>\n<td>如果存在同名文章，将其替换</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--slug</code></td>\n<td>文章的 Slug，作为新文章的文件名和发布后的 URL</td>\n</tr>\n</tbody></table>\n<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page --path about/me <span class=\"string\">&quot;About me&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p>\n<p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page --path about/me</span><br></pre></td></tr></table></figure>\n\n<p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo generate</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>监视文件变动</td>\n</tr>\n<tr>\n<td><code>-b</code>, <code>--bail</code></td>\n<td>生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td><code>-f</code>, <code>--force</code></td>\n<td>强制重新生成文件  Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>\n</tr>\n<tr>\n<td><code>-c</code>, <code>--concurrency</code></td>\n<td>最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<p>该命令可以简写为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动本地服务\"><a href=\"#启动本地服务\" class=\"headerlink\" title=\"启动本地服务\"></a>启动本地服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo server</span><br></pre></td></tr></table></figure>\n\n<p>对Hexo的内容进行预览。<br>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>重设端口</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>只使用静态文件</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody></table>\n<h3 id=\"将-Hexo-部署到-GitHub-Pages\"><a href=\"#将-Hexo-部署到-GitHub-Pages\" class=\"headerlink\" title=\"将 Hexo 部署到 GitHub Pages\"></a>将 Hexo 部署到 GitHub Pages</h3><blockquote>\n<p>生成密钥</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git config --global user.name <span class=\"string\">&quot;Name&quot;</span></span><br><span class=\"line\">&gt; git config --global user.email <span class=\"string\">&quot;Email&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>Name与Email为github注册的用户名和邮箱，然后生成密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ssh-keygen -t rsa -C <span class=\"string\">&quot;Email&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>之后全部回车确认到底。然后，在用户文件夹下的<code>.ssh</code>文件夹中找到<code>id_rsa.pub</code>文件，打开复制里面的全部内容。<br>在浏览器中，登录你的github账号打开Settings，在右侧中找到SSH and GPG keys选项并打开，选择New SSH key，填写好标题，把复制的内容全部粘贴上去。</p>\n<blockquote>\n<p>本地连接github</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>该命令无法连接问题，错误：<strong>ssh: connect to host github.com port 22: Connection refused</strong><br>在用户文件夹中找到<code>.ssh</code>文件夹，在里面新建一个<code>config</code>文件，里面填写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com  </span><br><span class=\"line\">User xxxxx@xx.com   //注册github的邮箱</span><br><span class=\"line\">Hostname ssh.github.com  </span><br><span class=\"line\">PreferredAuthentications publickey  </span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa  //填写你的id_rsa的绝对路径</span><br><span class=\"line\">Port 443</span><br></pre></td></tr></table></figure>\n\n<p>再一次运行命令，一直确定，得到下面结果就说明连接成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hi ******! You<span class=\"string\">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>修改Hexo配置文件</p>\n</blockquote>\n<p>在初始化的博客系统的根目录下，找到<code>_config.yml</code>文件，找到配置的最后一行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    repository: git@github.com:****/****.github.io.git  <span class=\"comment\">#你的仓库以ssh格式下载的地址</span></span><br><span class=\"line\">    branch: master</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"部署网站\"><a href=\"#部署网站\" class=\"headerlink\" title=\"部署网站\"></a>部署网站</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo deploy</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>部署之前预先生成静态文件</td>\n</tr>\n</tbody></table>\n<p>该命令可以简写为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo d</span><br></pre></td></tr></table></figure>\n\n<p>发布失败，错误：<strong>ERROR Deployer not found: git</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n\n<p>安装后继续发布</p>\n<blockquote>\n<p>使用自己的域名</p>\n</blockquote>\n<p>在Hexo目录下的public文件夹中，新建CNAME文件,输入你的域名就可以了，否则每次上传发布都需要重新绑定域名。</p>\n<h3 id=\"后续维护\"><a href=\"#后续维护\" class=\"headerlink\" title=\"后续维护\"></a>后续维护</h3><blockquote>\n<p>查看当前hexo版本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo version</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>升级hexo</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm i hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p>升级完成后查看版本，是否更新成功</p>\n<blockquote>\n<p>检查系统中的插件是否有升级的</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install -g npm-check</span><br><span class=\"line\">&gt; npm-check</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>升级插件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install -g npm-upgrade</span><br><span class=\"line\">&gt; npm-upgrade</span><br><span class=\"line\">&gt; npm update -g</span><br><span class=\"line\">&gt; npm update --save</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除缓存：如果主题没有变化，只有内容有变化可以忽略此步骤</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo clean</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成静态网页</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo g</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>上传&#x2F;发布</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、使用Hexo主题并配置文件\"><a href=\"#二、使用Hexo主题并配置文件\" class=\"headerlink\" title=\"二、使用Hexo主题并配置文件\"></a>二、使用Hexo主题并配置文件</h2><p>本文安装主题为<a href=\"https://github.com/yuang01/hexo-theme-bamboo\">hexo-theme-bamboo</a><br>最新文档，请<a href=\"https://yuang01.gitee.io/\">点击gitee查看</a></p>\n<h3 id=\"主题下载\"><a href=\"#主题下载\" class=\"headerlink\" title=\"主题下载\"></a>主题下载</h3><p>首先需要安装好 hexo博客系统，进入<code>themes</code>文件夹下使用 <code>Git clone</code> 命令来下载主题:</p>\n<p>github安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git <span class=\"built_in\">clone</span> https://github.com/yuang01/hexo-theme-bamboo.git</span><br></pre></td></tr></table></figure>\n\n<p>gitee安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git <span class=\"built_in\">clone</span> https://gitee.com/yuang01/hexo-theme-bamboo.git</span><br></pre></td></tr></table></figure>\n\n<p>修改hexo本地博客系统文件夹下的配置文件<code>_config.yml</code>，把主题改为<code>hexo-theme-bamboo</code>，通过主题文件夹下的<code>config.yml</code>对主题进行配置。</p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>下载 完成后，需要修改配置才能启用主题。<br>修改根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-bamboo</code></p>\n<h4 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h4><p>首先，保证Hexo为最新版。在根目录的配置文件<code>_config.yml</code>中，将<code>highlight</code>的<code>enable</code>设置为false，然后将<code>prismjs</code>的<code>enable</code>设置为true<br>当你使用的是<code>prismjs</code>作为代码高亮的话,你还可以在单独的文章中设置代码高亮主题，这样可以实现不同的页面，有不同的代码高亮主题：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo主题--Bamboo介绍</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2021-01-5</span> <span class=\"number\">23</span><span class=\"string\">:28</span></span><br><span class=\"line\"><span class=\"attr\">swiper:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">swiperImg:</span> <span class=\"string\">&#x27;/medias/11.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">img:</span> <span class=\"string\">&#x27;/medias/7.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">前端</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span> [<span class=\"string\">Hexo</span>, <span class=\"string\">hexo-theme-bamboo</span>]</span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">prismjs:</span> <span class=\"string\">dark</span> <span class=\"comment\"># 设置该篇文章的代码高亮主题为dark</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内容搜索\"><a href=\"#内容搜索\" class=\"headerlink\" title=\"内容搜索\"></a>内容搜索</h4><p>安装<a href=\"https://github.com/wzpan/hexo-generator-search\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br></pre></td></tr></table></figure>\n\n<p>在主题文件夹下的<code>_config.yml</code>文件中设置<code>search</code>为true或者false控制显示隐藏</p>\n<h4 id=\"新建分类页面\"><a href=\"#新建分类页面\" class=\"headerlink\" title=\"新建分类页面\"></a>新建分类页面</h4><p><code>categories</code> 页是用来展示所有分类的页面，也就是导航上的分类页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要手动或者使用命令新建一个，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page <span class=\"string\">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，<strong>至少需要以下内容</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">categories</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 15:30:30</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"新建标签页面\"><a href=\"#新建标签页面\" class=\"headerlink\" title=\"新建标签页面\"></a>新建标签页面</h4><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page <span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，<strong>至少需要以下内容</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">tags</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 15:30:30</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"新建关于我页面\"><a href=\"#新建关于我页面\" class=\"headerlink\" title=\"新建关于我页面\"></a>新建关于我页面</h4><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npx hexo new page <span class=\"string\">&quot;about&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，<strong>至少需要以下内容</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">about</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 15:30:30</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">&quot;about&quot;</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">&quot;about&quot;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p>然后可以在本主题下的<code>_config.yml</code>文件下，对关于我页面信息相应的进行更改。</p>\n<h4 id=\"中文链接转拼音\"><a href=\"#中文链接转拼音\" class=\"headerlink\" title=\"中文链接转拼音\"></a>中文链接转拼音</h4><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href=\"https://github.com/viko16/hexo-permalink-pinyin\">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。<br>安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_pinyin:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">separator:</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"comment\"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"添加RSS订阅\"><a href=\"#添加RSS订阅\" class=\"headerlink\" title=\"添加RSS订阅\"></a>添加RSS订阅</h4><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-feed\">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">feed:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">atom</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">atom.xml</span></span><br><span class=\"line\">  <span class=\"attr\">limit:</span> <span class=\"number\">20</span></span><br><span class=\"line\">  <span class=\"attr\">hub:</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span></span><br><span class=\"line\">  <span class=\"attr\">content_limit:</span> <span class=\"number\">140</span></span><br><span class=\"line\">  <span class=\"attr\">content_limit_delim:</span> <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> <span class=\"string\">-date</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Front-matter\"><a href=\"#Front-matter\" class=\"headerlink\" title=\"Front-matter\"></a>Front-matter</h4><p>这个指的是你在你的文章页面里面写的参数，针对的是这一篇文章，例如</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo主题--Bamboo介绍</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-09-14 </span><span class=\"number\">14</span><span class=\"string\">:06</span></span><br><span class=\"line\"><span class=\"attr\">swiper:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 是否将文章放入轮播图中</span></span><br><span class=\"line\"><span class=\"attr\">swiperImg:</span> <span class=\"string\">&#x27;/medias/1.jpg&#x27;</span> <span class=\"comment\"># 该文章在轮播图中的图片，可以是本地目录下图片也可以是http://xxx图片</span></span><br><span class=\"line\"><span class=\"attr\">img:</span> <span class=\"string\">&#x27;/medias/1.jpg&#x27;</span> <span class=\"comment\"># 该文章图片，可以是本地目录下图片也可以是http://xxx图片</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">前端</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span> [<span class=\"string\">Hexo</span>, <span class=\"string\">hexo-theme-bamboo</span>]</span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p>\n<table>\n<thead>\n<tr>\n<th>配置选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td><code>Markdown</code> 的文件标题</td>\n<td>文章标题，强烈建议填写此选项</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件创建时的日期时间</td>\n<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>\n</tr>\n<tr>\n<td>swiper</td>\n<td>false</td>\n<td>表示该文章是否需要加入到首页轮播封面中</td>\n</tr>\n<tr>\n<td>swiperImg</td>\n<td>无</td>\n<td>表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>swiperDesc</td>\n<td>无</td>\n<td>表示该文章在首页轮播封面需要显示的文字描述（摘要），如果没有，则使用<code>excerpt</code>，如果<code>excerpt</code>也没有，则取文章内容</td>\n</tr>\n<tr>\n<td>img</td>\n<td>无</td>\n<td>文章特征图，该文章显示的图片，没有则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>excerpt</td>\n<td>无</td>\n<td>文章描述（摘要），该文章在首页的描述文字，如果没有，则取<code>swiperDesc</code>,如果<code>swiperDesc</code>也没有，则取文章内容（优先取<code>&lt;!-- more --&gt;</code>上面的内容）</td>\n</tr>\n<tr>\n<td>top</td>\n<td>false</td>\n<td>将该值设为true，则将该篇文章显示在首页的置顶栏目中</td>\n</tr>\n<tr>\n<td>toc</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示右侧目录</td>\n</tr>\n<tr>\n<td>tocOpen</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章右侧目录默认收缩</td>\n</tr>\n<tr>\n<td>onlyTitle</td>\n<td>false</td>\n<td>文章详情页头部是否只显示标题，不显示日期等信息</td>\n</tr>\n<tr>\n<td>comments</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示评论</td>\n</tr>\n<tr>\n<td>share</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示分享按钮</td>\n</tr>\n<tr>\n<td>copyright</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示版权声明</td>\n</tr>\n<tr>\n<td>donate</td>\n<td>true</td>\n<td>将该值设为false，则该篇文章不显示打赏按钮</td>\n</tr>\n<tr>\n<td>bgImg</td>\n<td>-</td>\n<td>单独为这篇文章设置背景图片或者背景颜色，可以是数组，数组里面放图片链接，可以是字符串，字符串里面是颜色值，空值则背景颜色透明</td>\n</tr>\n<tr>\n<td>bgImgTransition</td>\n<td>fade</td>\n<td>该篇文章的bgImg设置为数组,该值表示背景图片切换的动画, 有三种值（fade, scale, translate-fade）</td>\n</tr>\n<tr>\n<td>bgImgDelay</td>\n<td>180000(三分钟)</td>\n<td>该篇文章的bgImg设置为数组,该值表示背景图片切换的延迟时间,</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>无</td>\n<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>\n</tr>\n<tr>\n<td>prismjs</td>\n<td>无</td>\n<td>如果使用的是hexo自带的prismjs代码高亮，通过设置该值为该篇文章设置不同的代码高亮主题（default, coy, dark, funky, okaidia, solarizedlight, tomorrow, twilight）</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>无</td>\n<td>文章标签，一篇文章可以多个标签</td>\n</tr>\n<tr>\n<td>mathjax</td>\n<td>false</td>\n<td>mathjax公式</td>\n</tr>\n<tr>\n<td>imgTop</td>\n<td>true</td>\n<td>设置为<code>false</code>则文章和自定义页面顶部不要图片</td>\n</tr>\n</tbody></table>\n"},{"title":"命令行进度条的实现","img":"https://cdn.pixabay.com/photo/2019/04/18/19/41/animal-4137865_960_720.jpg","excerpt":"以Linux系统下的shell加载/下载程序过程为启发，仿照写一个matlab的命令行进度条","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-18T13:16:40.000Z","_content":"\n\n# 一、Linux的shell的程序运行命令行进度条的实现\n\n## 1.简单的单行进度条\n\n```bash\n#!/bin/bash\n \nnum=0\nstr=''\nmax=100\npostfix=('|' '/' '-' '\\')\nwhile [ $num -le $max ]\ndo\n\tlet index=num%4\n\tprintf \"[%-50s %-2d%% %c]\\r\" \"$str\" \"$num\" \"${postfix[$index]}\"\n\tlet num++\n\tsleep 0.1\n\tif (($num % 2 == 0)); then\n\t\tstr+='#'\n\tfi\ndone\nprintf \"\\n\"\n```\n\n　　在windows中运行该文件，新建文本文件，输入文本后保存为001.sh，需要下载git并安装好，打开git bash，输入命令\n\n```bash\nsource 001.sh\n```\n\n\n\n## 2带输出内容的单行进度条\n\n```bash\n#!/bin/bash\n \nnum=0\nstr=''\nmax=100\npostfix=('|' '/' '-' '\\')\nwhile [ $num -le $max ]\ndo\n\tlet index=num%4\n\tshellwidth=`stty size | awk '{print $2}'`\n\tshellwidthstr=\"%-\"$shellwidth\"s\\n\"\n\tfmt_str=\"now \"$num\" shell tty width \"$shellwidth\n\tprintf \"$shellwidthstr\" \"$fmt_str\"\n\tprintf \"[%-50s %-2d%% %c]\\r\" \"$str\" \"$num\" \"${postfix[$index]}\"\n\tlet num++\n\tsleep 0.1\n\tif (($num % 2 == 0)); then\n\t\tstr+='#'\n\tfi\ndone\nprintf \"\\n\"\n```\n\n# 二、matlab实现命令行窗口的进度条\n\n　　        一般matlab的进度条都是用waitbar函数来实现，但是这个命令会创建一个新的进度条窗口，虽然很美观，但是有时候还是会出现一些问题。例如，一般进度条程序都是嵌入在程序里面，当你不小心删除了进度条窗口后，程序就会报错退出，这样我们花大把时间算的就功亏一篑了，实在难受。所以就想到了，做一个类似Linux的命令行加载的进度条，在matlab的命令行窗口输出。这样就不会出现上述问题了。\n\n## 1.单行进度条的实现\n\n```matlab\nfunction SingleLineProgressBar\nnum=0;\nstr='';\nMyDataLength=100;     %设置为你的总的数据量\nBarMaxLength=70;      %设置为你的命令行窗口最大的输出#的个数\npostfix=['|' '/' '-' '\\'];\nfor i=1:MyDataLength\n    fprintf(repmat('\\b',1,num)); %删除前面num个字符\n    num=fprintf('[%s %.2f%% %c ]',str,(i/MyDataLength)*100,postfix(mod(i,4)+1));\n    if (i/MyDataLength)>(strlength(str)/BarMaxLength)\n        str=str+\"#\";\n    end\n    pause(0.1);   %防止跑的太快了，进行了暂停，实际运行的时候去掉\nend\nfprintf(\"\\n\");\nend\n```\n\n　　仿照了Linux写的一个脚本程序，看效果：\n\n![](https://s2.loli.net/2022/04/18/xREcdjlNHzg9vPW.gif)\n\n　　总体感觉还行，但是由于不知道如何获取当前命令行窗口的长度和当前文本格式下字符串的长度，所以无法做到自适应，只能认为测量一下大概的长度，然后提前设定BarMaxLength的值。\n\n　　\n\n## 2.带输出内容的单行进度条实现\n\n```matlab\nfunction SingleLineProgressBar\ndisp(\"程序开始执行\")\ndisp(\"数据计算中.........\")\npause(1);   %暂停一下为了能看清\nnum=0;\nstr='';\nMyDataLength=100;   %设置为你的总的数据量\nBarMaxLength=70;      %设置为你的命令行窗口最大的输出#的个数\npostfix=['|' '/' '-' '\\'];\nfor i=1:MyDataLength\n    fprintf(repmat('\\b',1,num));   %删除前面num个字符\n    fprintf(\"当前数据执行第%d个，总体共%d个\\n\",i,MyDataLength);\n    num=fprintf('[%s %.2f%% %c ]',str,(i/MyDataLength)*100,postfix(mod(i,4)+1));\n    if (i/MyDataLength)>(strlength(str)/BarMaxLength)\n        str=str+\"#\";\n    end\n    pause(0.1);   %防止跑的太快了，进行了暂停，实际运行的时候去掉\nend\nfprintf(\"\\n\");\nend\n```\n\n　　这个只是加了一点点，在进度条输出前输出你想输出的内容就行了，还是比较简单的，看一下效果：\n![](https://s2.loli.net/2022/04/18/iZuNht3vCo7KMTD.gif)","source":"_posts/计算机/命令行进度条的实现.md","raw":"---\ntitle: 命令行进度条的实现\nimg: https://cdn.pixabay.com/photo/2019/04/18/19/41/animal-4137865_960_720.jpg\nexcerpt: 以Linux系统下的shell加载/下载程序过程为启发，仿照写一个matlab的命令行进度条\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [matlab,编程语言,Linux,shell,进度条]\nmathjax: true\ndate: 2022-04-18 21:16:40\n---\n\n\n# 一、Linux的shell的程序运行命令行进度条的实现\n\n## 1.简单的单行进度条\n\n```bash\n#!/bin/bash\n \nnum=0\nstr=''\nmax=100\npostfix=('|' '/' '-' '\\')\nwhile [ $num -le $max ]\ndo\n\tlet index=num%4\n\tprintf \"[%-50s %-2d%% %c]\\r\" \"$str\" \"$num\" \"${postfix[$index]}\"\n\tlet num++\n\tsleep 0.1\n\tif (($num % 2 == 0)); then\n\t\tstr+='#'\n\tfi\ndone\nprintf \"\\n\"\n```\n\n　　在windows中运行该文件，新建文本文件，输入文本后保存为001.sh，需要下载git并安装好，打开git bash，输入命令\n\n```bash\nsource 001.sh\n```\n\n\n\n## 2带输出内容的单行进度条\n\n```bash\n#!/bin/bash\n \nnum=0\nstr=''\nmax=100\npostfix=('|' '/' '-' '\\')\nwhile [ $num -le $max ]\ndo\n\tlet index=num%4\n\tshellwidth=`stty size | awk '{print $2}'`\n\tshellwidthstr=\"%-\"$shellwidth\"s\\n\"\n\tfmt_str=\"now \"$num\" shell tty width \"$shellwidth\n\tprintf \"$shellwidthstr\" \"$fmt_str\"\n\tprintf \"[%-50s %-2d%% %c]\\r\" \"$str\" \"$num\" \"${postfix[$index]}\"\n\tlet num++\n\tsleep 0.1\n\tif (($num % 2 == 0)); then\n\t\tstr+='#'\n\tfi\ndone\nprintf \"\\n\"\n```\n\n# 二、matlab实现命令行窗口的进度条\n\n　　        一般matlab的进度条都是用waitbar函数来实现，但是这个命令会创建一个新的进度条窗口，虽然很美观，但是有时候还是会出现一些问题。例如，一般进度条程序都是嵌入在程序里面，当你不小心删除了进度条窗口后，程序就会报错退出，这样我们花大把时间算的就功亏一篑了，实在难受。所以就想到了，做一个类似Linux的命令行加载的进度条，在matlab的命令行窗口输出。这样就不会出现上述问题了。\n\n## 1.单行进度条的实现\n\n```matlab\nfunction SingleLineProgressBar\nnum=0;\nstr='';\nMyDataLength=100;     %设置为你的总的数据量\nBarMaxLength=70;      %设置为你的命令行窗口最大的输出#的个数\npostfix=['|' '/' '-' '\\'];\nfor i=1:MyDataLength\n    fprintf(repmat('\\b',1,num)); %删除前面num个字符\n    num=fprintf('[%s %.2f%% %c ]',str,(i/MyDataLength)*100,postfix(mod(i,4)+1));\n    if (i/MyDataLength)>(strlength(str)/BarMaxLength)\n        str=str+\"#\";\n    end\n    pause(0.1);   %防止跑的太快了，进行了暂停，实际运行的时候去掉\nend\nfprintf(\"\\n\");\nend\n```\n\n　　仿照了Linux写的一个脚本程序，看效果：\n\n![](https://s2.loli.net/2022/04/18/xREcdjlNHzg9vPW.gif)\n\n　　总体感觉还行，但是由于不知道如何获取当前命令行窗口的长度和当前文本格式下字符串的长度，所以无法做到自适应，只能认为测量一下大概的长度，然后提前设定BarMaxLength的值。\n\n　　\n\n## 2.带输出内容的单行进度条实现\n\n```matlab\nfunction SingleLineProgressBar\ndisp(\"程序开始执行\")\ndisp(\"数据计算中.........\")\npause(1);   %暂停一下为了能看清\nnum=0;\nstr='';\nMyDataLength=100;   %设置为你的总的数据量\nBarMaxLength=70;      %设置为你的命令行窗口最大的输出#的个数\npostfix=['|' '/' '-' '\\'];\nfor i=1:MyDataLength\n    fprintf(repmat('\\b',1,num));   %删除前面num个字符\n    fprintf(\"当前数据执行第%d个，总体共%d个\\n\",i,MyDataLength);\n    num=fprintf('[%s %.2f%% %c ]',str,(i/MyDataLength)*100,postfix(mod(i,4)+1));\n    if (i/MyDataLength)>(strlength(str)/BarMaxLength)\n        str=str+\"#\";\n    end\n    pause(0.1);   %防止跑的太快了，进行了暂停，实际运行的时候去掉\nend\nfprintf(\"\\n\");\nend\n```\n\n　　这个只是加了一点点，在进度条输出前输出你想输出的内容就行了，还是比较简单的，看一下效果：\n![](https://s2.loli.net/2022/04/18/iZuNht3vCo7KMTD.gif)","slug":"计算机/命令行进度条的实现","published":1,"updated":"2022-04-18T14:50:20.335Z","layout":"post","photos":[],"_id":"cm1z7gipd0009dwvxdxxl8ob1","content":"<h1 id=\"一、Linux的shell的程序运行命令行进度条的实现\"><a href=\"#一、Linux的shell的程序运行命令行进度条的实现\" class=\"headerlink\" title=\"一、Linux的shell的程序运行命令行进度条的实现\"></a>一、Linux的shell的程序运行命令行进度条的实现</h1><h2 id=\"1-简单的单行进度条\"><a href=\"#1-简单的单行进度条\" class=\"headerlink\" title=\"1.简单的单行进度条\"></a>1.简单的单行进度条</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"> </span><br><span class=\"line\">num=0</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">max=100</span><br><span class=\"line\">postfix=(<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> [ <span class=\"variable\">$num</span> -le <span class=\"variable\">$max</span> ]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> index=num%4</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">&quot;[%-50s %-2d%% %c]\\r&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$str</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$num</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;postfix[$index]&#125;</span>&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> num++</span><br><span class=\"line\">\t<span class=\"built_in\">sleep</span> 0.1</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ((<span class=\"variable\">$num</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>)); <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tstr+=<span class=\"string\">&#x27;#&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>　　在windows中运行该文件，新建文本文件，输入文本后保存为001.sh，需要下载git并安装好，打开git bash，输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> 001.sh</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2带输出内容的单行进度条\"><a href=\"#2带输出内容的单行进度条\" class=\"headerlink\" title=\"2带输出内容的单行进度条\"></a>2带输出内容的单行进度条</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"> </span><br><span class=\"line\">num=0</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">max=100</span><br><span class=\"line\">postfix=(<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> [ <span class=\"variable\">$num</span> -le <span class=\"variable\">$max</span> ]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> index=num%4</span><br><span class=\"line\">\tshellwidth=`<span class=\"built_in\">stty</span> size | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\">\tshellwidthstr=<span class=\"string\">&quot;%-&quot;</span><span class=\"variable\">$shellwidth</span><span class=\"string\">&quot;s\\n&quot;</span></span><br><span class=\"line\">\tfmt_str=<span class=\"string\">&quot;now &quot;</span><span class=\"variable\">$num</span><span class=\"string\">&quot; shell tty width &quot;</span><span class=\"variable\">$shellwidth</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">&quot;<span class=\"variable\">$shellwidthstr</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$fmt_str</span>&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">&quot;[%-50s %-2d%% %c]\\r&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$str</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$num</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;postfix[$index]&#125;</span>&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> num++</span><br><span class=\"line\">\t<span class=\"built_in\">sleep</span> 0.1</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ((<span class=\"variable\">$num</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>)); <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tstr+=<span class=\"string\">&#x27;#&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"二、matlab实现命令行窗口的进度条\"><a href=\"#二、matlab实现命令行窗口的进度条\" class=\"headerlink\" title=\"二、matlab实现命令行窗口的进度条\"></a>二、matlab实现命令行窗口的进度条</h1><p>　　        一般matlab的进度条都是用waitbar函数来实现，但是这个命令会创建一个新的进度条窗口，虽然很美观，但是有时候还是会出现一些问题。例如，一般进度条程序都是嵌入在程序里面，当你不小心删除了进度条窗口后，程序就会报错退出，这样我们花大把时间算的就功亏一篑了，实在难受。所以就想到了，做一个类似Linux的命令行加载的进度条，在matlab的命令行窗口输出。这样就不会出现上述问题了。</p>\n<h2 id=\"1-单行进度条的实现\"><a href=\"#1-单行进度条的实现\" class=\"headerlink\" title=\"1.单行进度条的实现\"></a>1.单行进度条的实现</h2><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SingleLineProgressBar</span></span></span><br><span class=\"line\">num=<span class=\"number\">0</span>;</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">MyDataLength=<span class=\"number\">100</span>;     <span class=\"comment\">%设置为你的总的数据量</span></span><br><span class=\"line\">BarMaxLength=<span class=\"number\">70</span>;      <span class=\"comment\">%设置为你的命令行窗口最大的输出#的个数</span></span><br><span class=\"line\">postfix=[<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:MyDataLength</span><br><span class=\"line\">    fprintf(<span class=\"built_in\">repmat</span>(<span class=\"string\">&#x27;\\b&#x27;</span>,<span class=\"number\">1</span>,num)); <span class=\"comment\">%删除前面num个字符</span></span><br><span class=\"line\">    num=fprintf(<span class=\"string\">&#x27;[%s %.2f%% %c ]&#x27;</span>,str,(<span class=\"built_in\">i</span>/MyDataLength)*<span class=\"number\">100</span>,postfix(<span class=\"built_in\">mod</span>(<span class=\"built_in\">i</span>,<span class=\"number\">4</span>)+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">i</span>/MyDataLength)&gt;(strlength(str)/BarMaxLength)</span><br><span class=\"line\">        str=str+<span class=\"string\">&quot;#&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    pause(<span class=\"number\">0.1</span>);   <span class=\"comment\">%防止跑的太快了，进行了暂停，实际运行的时候去掉</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">fprintf(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>　　仿照了Linux写的一个脚本程序，看效果：</p>\n<p><img src=\"https://s2.loli.net/2022/04/18/xREcdjlNHzg9vPW.gif\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/xREcdjlNHzg9vPW.gif\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p>　　总体感觉还行，但是由于不知道如何获取当前命令行窗口的长度和当前文本格式下字符串的长度，所以无法做到自适应，只能认为测量一下大概的长度，然后提前设定BarMaxLength的值。</p>\n<p>　　</p>\n<h2 id=\"2-带输出内容的单行进度条实现\"><a href=\"#2-带输出内容的单行进度条实现\" class=\"headerlink\" title=\"2.带输出内容的单行进度条实现\"></a>2.带输出内容的单行进度条实现</h2><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SingleLineProgressBar</span></span></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&quot;程序开始执行&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&quot;数据计算中.........&quot;</span>)</span><br><span class=\"line\">pause(<span class=\"number\">1</span>);   <span class=\"comment\">%暂停一下为了能看清</span></span><br><span class=\"line\">num=<span class=\"number\">0</span>;</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">MyDataLength=<span class=\"number\">100</span>;   <span class=\"comment\">%设置为你的总的数据量</span></span><br><span class=\"line\">BarMaxLength=<span class=\"number\">70</span>;      <span class=\"comment\">%设置为你的命令行窗口最大的输出#的个数</span></span><br><span class=\"line\">postfix=[<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:MyDataLength</span><br><span class=\"line\">    fprintf(<span class=\"built_in\">repmat</span>(<span class=\"string\">&#x27;\\b&#x27;</span>,<span class=\"number\">1</span>,num));   <span class=\"comment\">%删除前面num个字符</span></span><br><span class=\"line\">    fprintf(<span class=\"string\">&quot;当前数据执行第%d个，总体共%d个\\n&quot;</span>,<span class=\"built_in\">i</span>,MyDataLength);</span><br><span class=\"line\">    num=fprintf(<span class=\"string\">&#x27;[%s %.2f%% %c ]&#x27;</span>,str,(<span class=\"built_in\">i</span>/MyDataLength)*<span class=\"number\">100</span>,postfix(<span class=\"built_in\">mod</span>(<span class=\"built_in\">i</span>,<span class=\"number\">4</span>)+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">i</span>/MyDataLength)&gt;(strlength(str)/BarMaxLength)</span><br><span class=\"line\">        str=str+<span class=\"string\">&quot;#&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    pause(<span class=\"number\">0.1</span>);   <span class=\"comment\">%防止跑的太快了，进行了暂停，实际运行的时候去掉</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">fprintf(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>　　这个只是加了一点点，在进度条输出前输出你想输出的内容就行了，还是比较简单的，看一下效果：<br><img src=\"https://s2.loli.net/2022/04/18/iZuNht3vCo7KMTD.gif\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/iZuNht3vCo7KMTD.gif\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n","more":"<h1 id=\"一、Linux的shell的程序运行命令行进度条的实现\"><a href=\"#一、Linux的shell的程序运行命令行进度条的实现\" class=\"headerlink\" title=\"一、Linux的shell的程序运行命令行进度条的实现\"></a>一、Linux的shell的程序运行命令行进度条的实现</h1><h2 id=\"1-简单的单行进度条\"><a href=\"#1-简单的单行进度条\" class=\"headerlink\" title=\"1.简单的单行进度条\"></a>1.简单的单行进度条</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"> </span><br><span class=\"line\">num=0</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">max=100</span><br><span class=\"line\">postfix=(<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> [ <span class=\"variable\">$num</span> -le <span class=\"variable\">$max</span> ]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> index=num%4</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">&quot;[%-50s %-2d%% %c]\\r&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$str</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$num</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;postfix[$index]&#125;</span>&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> num++</span><br><span class=\"line\">\t<span class=\"built_in\">sleep</span> 0.1</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ((<span class=\"variable\">$num</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>)); <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tstr+=<span class=\"string\">&#x27;#&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>　　在windows中运行该文件，新建文本文件，输入文本后保存为001.sh，需要下载git并安装好，打开git bash，输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> 001.sh</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2带输出内容的单行进度条\"><a href=\"#2带输出内容的单行进度条\" class=\"headerlink\" title=\"2带输出内容的单行进度条\"></a>2带输出内容的单行进度条</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"> </span><br><span class=\"line\">num=0</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">max=100</span><br><span class=\"line\">postfix=(<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> [ <span class=\"variable\">$num</span> -le <span class=\"variable\">$max</span> ]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> index=num%4</span><br><span class=\"line\">\tshellwidth=`<span class=\"built_in\">stty</span> size | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\">\tshellwidthstr=<span class=\"string\">&quot;%-&quot;</span><span class=\"variable\">$shellwidth</span><span class=\"string\">&quot;s\\n&quot;</span></span><br><span class=\"line\">\tfmt_str=<span class=\"string\">&quot;now &quot;</span><span class=\"variable\">$num</span><span class=\"string\">&quot; shell tty width &quot;</span><span class=\"variable\">$shellwidth</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">&quot;<span class=\"variable\">$shellwidthstr</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$fmt_str</span>&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">&quot;[%-50s %-2d%% %c]\\r&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$str</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$num</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;postfix[$index]&#125;</span>&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">let</span> num++</span><br><span class=\"line\">\t<span class=\"built_in\">sleep</span> 0.1</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ((<span class=\"variable\">$num</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>)); <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tstr+=<span class=\"string\">&#x27;#&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"二、matlab实现命令行窗口的进度条\"><a href=\"#二、matlab实现命令行窗口的进度条\" class=\"headerlink\" title=\"二、matlab实现命令行窗口的进度条\"></a>二、matlab实现命令行窗口的进度条</h1><p>　　        一般matlab的进度条都是用waitbar函数来实现，但是这个命令会创建一个新的进度条窗口，虽然很美观，但是有时候还是会出现一些问题。例如，一般进度条程序都是嵌入在程序里面，当你不小心删除了进度条窗口后，程序就会报错退出，这样我们花大把时间算的就功亏一篑了，实在难受。所以就想到了，做一个类似Linux的命令行加载的进度条，在matlab的命令行窗口输出。这样就不会出现上述问题了。</p>\n<h2 id=\"1-单行进度条的实现\"><a href=\"#1-单行进度条的实现\" class=\"headerlink\" title=\"1.单行进度条的实现\"></a>1.单行进度条的实现</h2><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SingleLineProgressBar</span></span></span><br><span class=\"line\">num=<span class=\"number\">0</span>;</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">MyDataLength=<span class=\"number\">100</span>;     <span class=\"comment\">%设置为你的总的数据量</span></span><br><span class=\"line\">BarMaxLength=<span class=\"number\">70</span>;      <span class=\"comment\">%设置为你的命令行窗口最大的输出#的个数</span></span><br><span class=\"line\">postfix=[<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:MyDataLength</span><br><span class=\"line\">    fprintf(<span class=\"built_in\">repmat</span>(<span class=\"string\">&#x27;\\b&#x27;</span>,<span class=\"number\">1</span>,num)); <span class=\"comment\">%删除前面num个字符</span></span><br><span class=\"line\">    num=fprintf(<span class=\"string\">&#x27;[%s %.2f%% %c ]&#x27;</span>,str,(<span class=\"built_in\">i</span>/MyDataLength)*<span class=\"number\">100</span>,postfix(<span class=\"built_in\">mod</span>(<span class=\"built_in\">i</span>,<span class=\"number\">4</span>)+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">i</span>/MyDataLength)&gt;(strlength(str)/BarMaxLength)</span><br><span class=\"line\">        str=str+<span class=\"string\">&quot;#&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    pause(<span class=\"number\">0.1</span>);   <span class=\"comment\">%防止跑的太快了，进行了暂停，实际运行的时候去掉</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">fprintf(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>　　仿照了Linux写的一个脚本程序，看效果：</p>\n<p><img src=\"https://s2.loli.net/2022/04/18/xREcdjlNHzg9vPW.gif\"></p>\n<p>　　总体感觉还行，但是由于不知道如何获取当前命令行窗口的长度和当前文本格式下字符串的长度，所以无法做到自适应，只能认为测量一下大概的长度，然后提前设定BarMaxLength的值。</p>\n<p>　　</p>\n<h2 id=\"2-带输出内容的单行进度条实现\"><a href=\"#2-带输出内容的单行进度条实现\" class=\"headerlink\" title=\"2.带输出内容的单行进度条实现\"></a>2.带输出内容的单行进度条实现</h2><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SingleLineProgressBar</span></span></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&quot;程序开始执行&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&quot;数据计算中.........&quot;</span>)</span><br><span class=\"line\">pause(<span class=\"number\">1</span>);   <span class=\"comment\">%暂停一下为了能看清</span></span><br><span class=\"line\">num=<span class=\"number\">0</span>;</span><br><span class=\"line\">str=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">MyDataLength=<span class=\"number\">100</span>;   <span class=\"comment\">%设置为你的总的数据量</span></span><br><span class=\"line\">BarMaxLength=<span class=\"number\">70</span>;      <span class=\"comment\">%设置为你的命令行窗口最大的输出#的个数</span></span><br><span class=\"line\">postfix=[<span class=\"string\">&#x27;|&#x27;</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"string\">&#x27;\\&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:MyDataLength</span><br><span class=\"line\">    fprintf(<span class=\"built_in\">repmat</span>(<span class=\"string\">&#x27;\\b&#x27;</span>,<span class=\"number\">1</span>,num));   <span class=\"comment\">%删除前面num个字符</span></span><br><span class=\"line\">    fprintf(<span class=\"string\">&quot;当前数据执行第%d个，总体共%d个\\n&quot;</span>,<span class=\"built_in\">i</span>,MyDataLength);</span><br><span class=\"line\">    num=fprintf(<span class=\"string\">&#x27;[%s %.2f%% %c ]&#x27;</span>,str,(<span class=\"built_in\">i</span>/MyDataLength)*<span class=\"number\">100</span>,postfix(<span class=\"built_in\">mod</span>(<span class=\"built_in\">i</span>,<span class=\"number\">4</span>)+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">i</span>/MyDataLength)&gt;(strlength(str)/BarMaxLength)</span><br><span class=\"line\">        str=str+<span class=\"string\">&quot;#&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    pause(<span class=\"number\">0.1</span>);   <span class=\"comment\">%防止跑的太快了，进行了暂停，实际运行的时候去掉</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">fprintf(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>　　这个只是加了一点点，在进度条输出前输出你想输出的内容就行了，还是比较简单的，看一下效果：<br><img src=\"https://s2.loli.net/2022/04/18/iZuNht3vCo7KMTD.gif\"></p>\n"},{"title":"MathType7无限试用","img":"https://cdn.pixabay.com/photo/2019/04/14/19/08/flowers-4127514_960_720.jpg","excerpt":"让MathType7大大延长试用时间","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-18T12:54:13.000Z","_content":"\n# MathType7无限试用\n\n\n\nMathType7下载：https://www.mathtype.cn/\n\n下载安装完成后，新建文本，写入下面代码\n\n```\nWindows Registry Editor Version 5.00\n \n[-HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]\n[HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]\n\"/Cv/E/C81+j/Rw/U/E6ws/Znt/Os/K/Q==\"=\"11/M/P/Ir/Y/B/S/P/Pr/Q/L/Ny/T9s4/Iw==\"\n\"/Mz/Bhef/D/Q/Hs30/U6/F/Pdl/R/Xsg==\"=\"/S/Zd8c/Ai/Z/A83028s6/Kn/Gf/M/Q==\"\n\"vi/L/M7/K/Hb/C/O/A/K/X9uuis/O1/J/A==\"=\"/S/Zd8c/Ai/Z/A80\\/O/S/C/Vgp\\0/P/Q==\"\n\"wm/U/C/Y/T/Nz5/Tw=\"=\"/Wna/F/W3q/I/Yp/V\\lj/Dedai56/Ur/Wpf/P/Kpl/Soh/A/Z/Qe\\6hit3ym\\6m5sp/B/B/Q==\"\n\"x/W/Yrj/M/Db/Bds=\"=\"104z/W8rbqpw5\\/Qz0/C/Q/Opu/Dj/B5b/Dwsy77\"\n```\n\n保存后，更改文件名为 Mathtype 7.reg，再双击打开该文件。\n\n\n\n> WPS中使用MathType\n\n打开wps的word文档，菜单栏选择插入，选择对象，\n\n![](https://s2.loli.net/2022/04/18/6HpodWBCQ4N5SUn.png)\n\n找到上面，可以看到MathType 7.0 Equation，选择确定，可以看到成功了。\n\n![](https://s2.loli.net/2022/04/18/2uX7cz8AhaYFUNv.png)\n\n\n\n","source":"_posts/软件/MathType7无限试用.md","raw":"---\ntitle: MathType7无限试用\nimg: https://cdn.pixabay.com/photo/2019/04/14/19/08/flowers-4127514_960_720.jpg\nexcerpt: 让MathType7大大延长试用时间\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [软件破解,MathType,数学软件]\nmathjax: true\ndate: 2022-04-18 20:54:13\n---\n\n# MathType7无限试用\n\n\n\nMathType7下载：https://www.mathtype.cn/\n\n下载安装完成后，新建文本，写入下面代码\n\n```\nWindows Registry Editor Version 5.00\n \n[-HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]\n[HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]\n\"/Cv/E/C81+j/Rw/U/E6ws/Znt/Os/K/Q==\"=\"11/M/P/Ir/Y/B/S/P/Pr/Q/L/Ny/T9s4/Iw==\"\n\"/Mz/Bhef/D/Q/Hs30/U6/F/Pdl/R/Xsg==\"=\"/S/Zd8c/Ai/Z/A83028s6/Kn/Gf/M/Q==\"\n\"vi/L/M7/K/Hb/C/O/A/K/X9uuis/O1/J/A==\"=\"/S/Zd8c/Ai/Z/A80\\/O/S/C/Vgp\\0/P/Q==\"\n\"wm/U/C/Y/T/Nz5/Tw=\"=\"/Wna/F/W3q/I/Yp/V\\lj/Dedai56/Ur/Wpf/P/Kpl/Soh/A/Z/Qe\\6hit3ym\\6m5sp/B/B/Q==\"\n\"x/W/Yrj/M/Db/Bds=\"=\"104z/W8rbqpw5\\/Qz0/C/Q/Opu/Dj/B5b/Dwsy77\"\n```\n\n保存后，更改文件名为 Mathtype 7.reg，再双击打开该文件。\n\n\n\n> WPS中使用MathType\n\n打开wps的word文档，菜单栏选择插入，选择对象，\n\n![](https://s2.loli.net/2022/04/18/6HpodWBCQ4N5SUn.png)\n\n找到上面，可以看到MathType 7.0 Equation，选择确定，可以看到成功了。\n\n![](https://s2.loli.net/2022/04/18/2uX7cz8AhaYFUNv.png)\n\n\n\n","slug":"软件/MathType7无限试用","published":1,"updated":"2022-04-18T14:46:11.752Z","layout":"post","photos":[],"_id":"cm1z7gipe000adwvxau9ce15l","content":"<h1 id=\"MathType7无限试用\"><a href=\"#MathType7无限试用\" class=\"headerlink\" title=\"MathType7无限试用\"></a>MathType7无限试用</h1><p>MathType7下载：<a href=\"https://www.mathtype.cn/\">https://www.mathtype.cn/</a></p>\n<p>下载安装完成后，新建文本，写入下面代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"> </span><br><span class=\"line\">[-HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]</span><br><span class=\"line\">[HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]</span><br><span class=\"line\">&quot;/Cv/E/C81+j/Rw/U/E6ws/Znt/Os/K/Q==&quot;=&quot;11/M/P/Ir/Y/B/S/P/Pr/Q/L/Ny/T9s4/Iw==&quot;</span><br><span class=\"line\">&quot;/Mz/Bhef/D/Q/Hs30/U6/F/Pdl/R/Xsg==&quot;=&quot;/S/Zd8c/Ai/Z/A83028s6/Kn/Gf/M/Q==&quot;</span><br><span class=\"line\">&quot;vi/L/M7/K/Hb/C/O/A/K/X9uuis/O1/J/A==&quot;=&quot;/S/Zd8c/Ai/Z/A80\\/O/S/C/Vgp\\0/P/Q==&quot;</span><br><span class=\"line\">&quot;wm/U/C/Y/T/Nz5/Tw=&quot;=&quot;/Wna/F/W3q/I/Yp/V\\lj/Dedai56/Ur/Wpf/P/Kpl/Soh/A/Z/Qe\\6hit3ym\\6m5sp/B/B/Q==&quot;</span><br><span class=\"line\">&quot;x/W/Yrj/M/Db/Bds=&quot;=&quot;104z/W8rbqpw5\\/Qz0/C/Q/Opu/Dj/B5b/Dwsy77&quot;</span><br></pre></td></tr></table></figure>\n\n<p>保存后，更改文件名为 Mathtype 7.reg，再双击打开该文件。</p>\n<blockquote>\n<p>WPS中使用MathType</p>\n</blockquote>\n<p>打开wps的word文档，菜单栏选择插入，选择对象，</p>\n<p><img src=\"https://s2.loli.net/2022/04/18/6HpodWBCQ4N5SUn.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/6HpodWBCQ4N5SUn.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p>找到上面，可以看到MathType 7.0 Equation，选择确定，可以看到成功了。</p>\n<p><img src=\"https://s2.loli.net/2022/04/18/2uX7cz8AhaYFUNv.png\" class=\"lazyload placeholder\" data-srcset=\"https://s2.loli.net/2022/04/18/2uX7cz8AhaYFUNv.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n","more":"<h1 id=\"MathType7无限试用\"><a href=\"#MathType7无限试用\" class=\"headerlink\" title=\"MathType7无限试用\"></a>MathType7无限试用</h1><p>MathType7下载：<a href=\"https://www.mathtype.cn/\">https://www.mathtype.cn/</a></p>\n<p>下载安装完成后，新建文本，写入下面代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"> </span><br><span class=\"line\">[-HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]</span><br><span class=\"line\">[HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\com\\wiris\\editor\\license\\]</span><br><span class=\"line\">&quot;/Cv/E/C81+j/Rw/U/E6ws/Znt/Os/K/Q==&quot;=&quot;11/M/P/Ir/Y/B/S/P/Pr/Q/L/Ny/T9s4/Iw==&quot;</span><br><span class=\"line\">&quot;/Mz/Bhef/D/Q/Hs30/U6/F/Pdl/R/Xsg==&quot;=&quot;/S/Zd8c/Ai/Z/A83028s6/Kn/Gf/M/Q==&quot;</span><br><span class=\"line\">&quot;vi/L/M7/K/Hb/C/O/A/K/X9uuis/O1/J/A==&quot;=&quot;/S/Zd8c/Ai/Z/A80\\/O/S/C/Vgp\\0/P/Q==&quot;</span><br><span class=\"line\">&quot;wm/U/C/Y/T/Nz5/Tw=&quot;=&quot;/Wna/F/W3q/I/Yp/V\\lj/Dedai56/Ur/Wpf/P/Kpl/Soh/A/Z/Qe\\6hit3ym\\6m5sp/B/B/Q==&quot;</span><br><span class=\"line\">&quot;x/W/Yrj/M/Db/Bds=&quot;=&quot;104z/W8rbqpw5\\/Qz0/C/Q/Opu/Dj/B5b/Dwsy77&quot;</span><br></pre></td></tr></table></figure>\n\n<p>保存后，更改文件名为 Mathtype 7.reg，再双击打开该文件。</p>\n<blockquote>\n<p>WPS中使用MathType</p>\n</blockquote>\n<p>打开wps的word文档，菜单栏选择插入，选择对象，</p>\n<p><img src=\"https://s2.loli.net/2022/04/18/6HpodWBCQ4N5SUn.png\"></p>\n<p>找到上面，可以看到MathType 7.0 Equation，选择确定，可以看到成功了。</p>\n<p><img src=\"https://s2.loli.net/2022/04/18/2uX7cz8AhaYFUNv.png\"></p>\n"},{"title":"树莓派接收MTI数据","img":"https://cdn.pixabay.com/photo/2022/03/28/18/41/spring-7098130_960_720.jpg","excerpt":"在树莓派中安装ubuntu系统和ros系统来采集MTI的数据，在windows下利用MTI的官方软件来接收数据","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-18T12:41:54.000Z","_content":"\n# 树莓派接收传感器MTI-G-710数据\n\n## 一、树莓派系统安装\n\n### 1.系统选择\n\n官方系统下载：https://www.raspberrypi.org/software/operating-systems/\n\n官方OS中分别有桌面和一些常用软件的版本，只有桌面的版本，没有桌面的Lite版本，所以只要安装第二个只带桌面版就可以了，树莓派的官方OS自带ros系统，安装方式与其他系统不一样，比较麻烦，所以我们安装第三方系统。\n\nUbuntu的第三方系统：https://ubuntu.com/download/raspberry-pi\n\nUbuntu mate的第三方系统:https://ubuntu-mate.org/download/\n\nUbuntu的老版本系统：https://old-releases.ubuntu.com/releases/18.04.4/\n\n由于我们的树莓派版本是3B+，在Ubuntu系统中，建议安装18.04的版本，ros系统安装Melodic版本，与MTI的SDK文档要求的ros系统版本一致。为了减轻树莓派负担，从Ubuntu的老版本系统选择`ubuntu-18.04.4-preinstalled-server-arm64+raspi3.img.xz`文件下载，解压。选择arm64的版本原因：arm64可以修改内部的网络配置文件，armhf的不行。\n\n### 2.系统安装\n\n由于下载的好的系统文件是img文件，不同于iso文件，需要特别的软件写入读卡器，软件名为Win32DiskImager，可以上网搜索安装下来使用，还有格式化系统所需要的配套软件SD Card Formatter。打开system-boot盘，找到network-config文件，修改后面的文件。\n\n```\nwifis:\n  wlan0:\n    dhcp4: true\n    dhcp6: true\n    optional: true\n    access-points:\n      \"填上你的WIFI名称\":\n        password: \"WIFI密码\"\n```\n\nUbuntu系统的默认用户是ubuntu，密码是ubuntu。树莓派官方系统的默认用户pi，密码raspberry。在文件盘符新建文件ssh无后缀，用手机开热点让树莓派连接，查看到IP后，之后再用远程软件登陆（putty或者Xshell）。树莓派连接不上wifi，就断开电源，重新启动一下。\n\n对Ubuntu系统换源（把默认的国外下载源换成国内下载源），用下面命令打开文件：\n\n```\n$ sudo nano /etc/apt/sources.list\n```\n\narm64与armhf的源不一样，注意区分，下面是arm64的国内清华源：\n\n```\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe\n```\n把`sources.list`里面存在的文件用#号注释掉，添加上面的文件。\n\n`ctrl+o`写入，回车， `ctrl+x`离开。\n\n> 源文件内容描述\n\n- ubuntu-ports:表示arm版本的源\n\n- bionic:是ubuntu18.04的发行版本\n\n- security：仅修复漏洞，并且尽可能少的改变软件包的行为。低风险。\n\n- backports：backports的团队则认为最好的更新策略是security 策略加上新版本的软件（包括候选版本的）。但不会由Ubuntu security team审查和更新。\n\n- updates：修复严重但不影响系统安全运行的漏洞，这类补丁在经过QA人员记录和验证后才提供，和security那类一样低风险。\n\n- proposed：update类的测试部分，仅建议提供测试和反馈的人进行安装。\n- main：完全的自由软件。\n- muitiverse：非自由软件，完全不提供支持和补丁。\n- restricted：不完全的自由软件。\n- universe：ubuntu官方不提供支持与补丁，全靠社区支持。\n\n\n\n## 二、xsens官方驱动使用\n\n### 1.官方软件下载和介绍\n\nLinux xsens驱动地址：https://content.xsens.com/download-mt-software-suite\n\n电脑选择linux版本下载好之后得到文件`MT_Software_Suite_linux-x64_2020.0.2.tar.gz`，解压后，可以得到文件`mtsdk_linux-x64_2020.0.2.sh`，利用命令从本地上传到树莓派服务器。\n\n树莓派安装lrzsz\n\n```\n$ sudo apt install lrzsz\n```\n\n输入rz上传文件到服务器当前目录\n\n```\n$ rz\n```\n\n输入sz下载文件到本地\n\n```\n$ sz ./****.txt\n```\n\n把文件下载到用户目录下后安装mti的sdk\n\n```\n$ sudo ./mtsdk_linux-x64_2020.0.2.sh\n```\n\n可能会提示确实某某文件，安装文件之后再运行，如果点运行报错，可能是没有运行权限，可以增加权限或者使用bash/sh命令\n\n```\n$ sudo bash ./mtsdk_linux-x64_2020.0.2.sh\n```\n\n默认的安装位置`[/usr/local/xsens]`，可以选择更改到用户目录下`/home/ubuntu/xsens`\n\n\n\n### 2.驱动文件使用介绍\n\n驱动文件就是`mtsdk_linux-x64_2020.0.2.sh`文件，由于官方软件无法在树莓派中适配，所以我们要在官方驱动中使用现成的API，具体可以参考这个文档：https://base.xsens.com/knowledgebase/s/article/Interfacing-MTi-devices-with-the-Raspberry-Pi\n\n官方问答区：https://base.xsens.com/knowledgebase/s/\n\n我们进入到`xsens`文件目录下，可以看到文件\n\n- doc \t \n- lib\t\n- python\t\n- examples\t\n- MTSDK.README\t\n- `xsens_ros_mti_driver`\t\n- include\n- public        \n- Xsens Technologies MT SS License Agreement.rtf\n\n我们进入`example`文件夹中，再进入`mtsdk`文件夹中，可以看到文件\n\n- awindamonitor_cpp\t\n- Makefile\t\n- xda_public_cpp\t\n- embedded_examples\t\n- xda_cpp\t\n- xda_python\n\n然后进入到`xda_public_cpp`文件夹中，可以看到文件\n\n- example_mti_parse_logfile.cpp\t\n- Makefile\t\n- xspublic\t\n- example_mti_receive_data.cpp   \n- xda_public_cpp.sln\n\n`xspublic`文件包含很多需要使用的前置文件，`example_mti_receive_data.cpp`是接收数据的，可以自动检测是否已经连接MTI传感器， 收集数据产生`logfile.mtb`文件，`example_mti_parse_logfile.cpp`可以把数据文件`logfile.mtb`数据提取转化为`exportfile.txt`文件，每一行为一次收集的数据。\n\n在使用前需要对cpp文件进行编译，第一次可能时间会长一点，在当前目录下，打开终端输入，必须安装ros系统才能编译\n\n```\n$ sudo make\n```\n\n产生一系列`.o`文件和无后缀文件，那些无后缀就是可执行文件，在终端输入\n\n```\n$ sudo ./example_mti_receive_data\n```\n\n开始接收数据并会输出到终端中，如果无法检测到MTI传感器，在终端输入命令查到MTI的串口位置并提高串口权限\n\n```\n$ dmesg | grep tty\n[    0.570241] printk: console [tty0] enabled\n[    2.799819] 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A\n[ 5373.377442] usb 2-2.1: xsens_mt converter now attached to ttyUSB0\n$ sudo chmod 777 /dev/ttyUSB0\n```\n\n可以看到`xsens_mt`的位置在 `ttyUSB0`，所以需要提升`ttyUSB0`的权限\n\n产生`logfile.mtb`文件文件后，在终端输入\n\n```\n$ sudo ./example_mti_parse_logfile\n```\n\n`产生exportfile.txt`文件\n\n\n\n### 3.程序更改部分\n\n跳转到用户目录下的`xda_public_cpp`文件夹中，打开`example_mti_receive_data.cpp`文件，可以看到\n\n```c++\n\t// Important for Public XDA!\n\t// Call this function if you want to record a mtb file:\n\tdevice->readEmtsAndDeviceConfiguration();\n\n\tXsOutputConfigurationArray configArray;\n\tconfigArray.push_back(XsOutputConfiguration(XDI_PacketCounter, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_SampleTimeFine, 0));\n\tif (device->deviceId().isImu())\n\t{\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_Acceleration, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_RateOfTurn, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_MagneticField, 0));\n\t}\n\telse if (device->deviceId().isVru() || device->deviceId().isAhrs())\n\t{\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_Quaternion, 0));\n\t}\n\telse if (device->deviceId().isGnss())\n\t{\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_Quaternion, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_LatLon, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_AltitudeEllipsoid, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_VelocityXYZ, 0));\n\t}\n\telse\n\t{\n\t\treturn handleError(\"Unknown device while configuring. Aborting.\");\n\t}\n```\n\n可以看到根据传感器的型号来取什么值并不能取到全部的值，改为下面可以采取各个值，\n\n```c++\n  // Important for Public XDA!\n\t// Call this function if you want to record a mtb file:\n\tdevice->readEmtsAndDeviceConfiguration();\n\n\tXsOutputConfigurationArray configArray;\n\t//TimeStamp\n\tconfigArray.push_back(XsOutputConfiguration(XDI_PacketCounter, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_SampleTimeFine, 0));\n  configArray.push_back(XsOutputConfiguration(XDI_SampleTimeCoarse, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_UtcTime, 0));\n\t//Quaternion\n\tconfigArray.push_back(XsOutputConfiguration(XDI_Quaternion, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_RotationMatrix, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_EulerAngles, 0));\n\t//Inertial Data\n\tconfigArray.push_back(XsOutputConfiguration(XDI_Acceleration, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_FreeAcceleration, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_RateOfTurn, 0));\n\t//Magnetic Field\n\tconfigArray.push_back(XsOutputConfiguration(XDI_MagneticField, 0));\n\t//Temperature\n\tconfigArray.push_back(XsOutputConfiguration(XDI_Temperature, 0));\n\t//Pressure\n\tconfigArray.push_back(XsOutputConfiguration(XDI_BaroPressure, 0));\n\t//High-Rate Data\n\tconfigArray.push_back(XsOutputConfiguration(XDI_AccelerationHR, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_RateOfTurnHR, 0));\n\t//Status\n\tconfigArray.push_back(XsOutputConfiguration(XDI_StatusWord, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_StatusByte, 0));\n\t//Position and Velocity\n\tconfigArray.push_back(XsOutputConfiguration(XDI_LatLon, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_AltitudeEllipsoid, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_VelocityXYZ, 0));\n\t//GNSS Data\n\tconfigArray.push_back(XsOutputConfiguration(XDI_GnssPvtData, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_GnssSatInfo, 0));\n```\n\n根据定义，可以看到各个参数为枚举类型，枚举类定义文档如下：\n\n```c++\n//AUTO namespace xstypes {\n/*!\t\\enum XsDataIdentifier\n\t\\brief Defines the data identifiers\n\n\tThe list of standard data identifiers is shown below.\n\tThe last positions in the data identifier depends on the configuration of the data.\n\tFor example 0x4020 is 3D acceleration in single precision float format,\n\twhere 0x4022 is 3D acceleration in fixed point 16.32 format.\n\n\tRefer to the Low Level Communication Protocol for more details.\n*/\nenum XsDataIdentifier\n{\n\tXDI_None\t\t\t\t\t= 0x0000,\t//!< Empty datatype\n\tXDI_TypeMask\t\t\t\t= 0xFE00,\t//!< Mask for checking the group which a dataidentifier belongs to, Eg. XDI_TimestampGroup or XDI_OrientationGroup\n\tXDI_FullTypeMask\t\t\t= 0xFFF0,\t//!< Mask to get the type of data, without the data format\n\tXDI_FullMask\t\t\t\t= 0xFFFF,\t//!< Complete mask to get entire data identifier\n\tXDI_FormatMask\t\t\t\t= 0x01FF,\t//!< Mask for getting the data id without checking the group\n\tXDI_DataFormatMask\t\t\t= 0x000F,\t//!< Mask for extracting just the data format /sa XDI_SubFormat\n\n\tXDI_SubFormatMask\t\t\t= 0x0003,\t//!< Determines, float, fp12.20, fp16.32, double output... (where applicable)\n\tXDI_SubFormatFloat\t\t\t= 0x0000,\t//!< Floating point format\n\tXDI_SubFormatFp1220\t\t\t= 0x0001,\t//!< Fixed point 12.20\n\tXDI_SubFormatFp1632\t\t\t= 0x0002,\t//!< Fixed point 16.32\n\tXDI_SubFormatDouble\t\t\t= 0x0003,\t//!< Double format\n\n\tXDI_SubFormatLeft\t\t\t= 0x0000,\t//!< Left side data (ie XDI_GloveData for the left hand)\n\tXDI_SubFormatRight\t\t\t= 0x0001,\t//!< Right side data (ie XDI_GloveData for the right hand)\n\n\tXDI_TemperatureGroup\t\t= 0x0800,\t//!< Group for temperature outputs\n\tXDI_Temperature\t\t\t\t= 0x0810,\t//!< Temperature\n\n\tXDI_TimestampGroup\t\t\t= 0x1000,\t//!< Group for time stamp related outputs\n\tXDI_UtcTime\t\t\t\t\t= 0x1010,\t//!< Utc time from the GNSS receiver\n\tXDI_PacketCounter\t\t\t= 0x1020,\t//!< Packet counter, increments every packet\n\tXDI_Itow\t\t\t\t\t= 0x1030,\t//!< Itow. Time Of Week from the GNSS receiver\n\tXDI_GnssAge\t\t\t\t\t= 0x1040,\t//!< Gnss age from the GNSS receiver\n\tXDI_PressureAge\t\t\t\t= 0x1050,\t//!< Age of a pressure sample, in packet counts\n\tXDI_SampleTimeFine\t\t\t= 0x1060,\t//!< Sample Time Fine\n\tXDI_SampleTimeCoarse\t\t= 0x1070,\t//!< Sample Time Coarse\n\tXDI_FrameRange\t\t\t\t= 0x1080,\t//!< Reserved \\internal add for MTw (if needed)\n\tXDI_PacketCounter8\t\t\t= 0x1090,\t//!< 8 bit packet counter, wraps at 256\n\tXDI_SampleTime64\t\t\t= 0x10A0,\t//!< 64 bit sample time\n\n\tXDI_OrientationGroup\t\t= 0x2000,\t//!< Group for orientation related outputs\n\tXDI_CoordSysMask\t\t\t= 0x000C,\t//!< Mask for the coordinate system part of the orientation data identifier\n\tXDI_CoordSysEnu\t\t\t\t= 0x0000,\t//!< East North Up orientation output\n\tXDI_CoordSysNed\t\t\t\t= 0x0004,\t//!< North East Down orientation output\n\tXDI_CoordSysNwu\t\t\t\t= 0x0008,\t//!< North West Up orientation output\n\tXDI_Quaternion\t\t\t\t= 0x2010,\t//!< Orientation in quaternion format\n\tXDI_RotationMatrix\t\t\t= 0x2020,\t//!< Orientation in rotation matrix format\n\tXDI_EulerAngles\t\t\t\t= 0x2030,\t//!< Orientation in euler angles format\n\n\tXDI_PressureGroup\t\t\t= 0x3000,\t//!< Group for pressure related outputs\n\tXDI_BaroPressure\t\t\t= 0x3010,\t//!< Pressure output recorded from the barometer\n\n\tXDI_AccelerationGroup\t\t= 0x4000,\t//!< Group for acceleration related outputs\n\tXDI_DeltaV\t\t\t\t\t= 0x4010,\t//!< DeltaV SDI data output\n\tXDI_Acceleration\t\t\t= 0x4020,\t//!< Acceleration output in m/s2\n\tXDI_FreeAcceleration\t\t= 0x4030,\t//!< Free acceleration output in m/s2\n\tXDI_AccelerationHR\t\t\t= 0x4040,\t//!< AccelerationHR output\n\n\tXDI_IndicationGroup\t\t\t= 0x4800,\t//!< 0100.1000 -> bit reverse = 0001.0010 -> type 18\n\tXDI_TriggerIn1\t\t\t\t= 0x4810,\t//!< Trigger in 1 indication\n\tXDI_TriggerIn2\t\t\t\t= 0x4820,\t//!< Trigger in 2 indication\n\tXDI_TriggerIn3\t\t\t\t= 0x4830,\t//!< Trigger in 3 indication\n\n\tXDI_PositionGroup\t\t\t= 0x5000,\t//!< Group for position related outputs\n\tXDI_AltitudeMsl\t\t\t\t= 0x5010,\t//!< Altitude at Mean Sea Level\n\tXDI_AltitudeEllipsoid\t\t= 0x5020,\t//!< Altitude at ellipsoid\n\tXDI_PositionEcef\t\t\t= 0x5030,\t//!< Position in earth-centered, earth-fixed format\n\tXDI_LatLon\t\t\t\t\t= 0x5040,\t//!< Position in latitude, longitude\n\n\tXDI_GnssGroup\t\t\t\t= 0x7000,\t//!< Group for Gnss related outputs\n\tXDI_GnssPvtData\t\t\t\t= 0x7010,\t//!< Gnss position, velocity and time data\n\tXDI_GnssSatInfo\t\t\t\t= 0x7020,\t//!< Gnss satellite information\n\tXDI_GnssPvtPulse\t\t\t= 0x7030,\t//!< Time of the PVT timepulse (4Hz upsampled from the 1PPS)\n\n\tXDI_AngularVelocityGroup\t= 0x8000,\t//!< Group for angular velocity related outputs\n\tXDI_RateOfTurn\t\t\t\t= 0x8020,\t//!< Rate of turn data in rad/sec\n\tXDI_DeltaQ\t\t\t\t\t= 0x8030,\t//!< DeltaQ SDI data\n\tXDI_RateOfTurnHR\t\t\t= 0x8040,\t//!< Rate of turn HR data\n\n\tXDI_RawSensorGroup\t\t\t= 0xA000,\t//!< Group for raw sensor data related outputs\n\tXDI_RawUnsigned\t\t\t\t= 0x0000,\t//!< Tracker produces unsigned raw values, usually fixed behavior\n\tXDI_RawSigned\t\t\t\t= 0x0001,\t//!< Tracker produces signed raw values, usually fixed behavior\n\tXDI_RawAccGyrMagTemp\t\t= 0xA010,\t//!< Raw acceleration, gyroscope, magnetometer and temperature data\n\tXDI_RawGyroTemp\t\t\t\t= 0xA020,\t//!< Raw gyroscope and temperature data\n\tXDI_RawAcc\t\t\t\t\t= 0xA030,\t//!< Raw acceleration data\n\tXDI_RawGyr\t\t\t\t\t= 0xA040,\t//!< Raw gyroscope data\n\tXDI_RawMag\t\t\t\t\t= 0xA050,\t//!< Raw magnetometer data\n\tXDI_RawDeltaQ\t\t\t\t= 0xA060,\t//!< Raw deltaQ SDI data\n\tXDI_RawDeltaV\t\t\t\t= 0xA070,\t//!< Raw deltaV SDI data\n\tXDI_RawBlob\t\t\t\t\t= 0xA080,\t//!< Raw blob data\n\n\tXDI_AnalogInGroup\t\t\t= 0xB000,\t//!< Group for analog in related outputs\n\tXDI_AnalogIn1\t\t\t\t= 0xB010,\t//!< Data containing adc data from analog in 1 line (if present)\n\tXDI_AnalogIn2\t\t\t\t= 0xB020,\t//!< Data containing adc data from analog in 2 line (if present)\n\n\tXDI_MagneticGroup\t\t\t= 0xC000,\t//!< Group for magnetometer related outputs\n\tXDI_MagneticField\t\t\t= 0xC020,\t//!< Magnetic field data in a.u.\n\tXDI_MagneticFieldCorrected\t= 0xC030,\t//!< Corrected Magnetic field data in a.u. (ICC result)\n\n\tXDI_SnapshotGroup\t\t\t= 0xC800,\t//!< Group for snapshot related outputs\n\tXDI_RetransmissionMask\t\t= 0x0001,\t//!< Mask for the retransmission bit in the snapshot data\n\tXDI_RetransmissionFlag\t\t= 0x0001,\t//!< Bit indicating if the snapshot if from a retransmission\n\tXDI_AwindaSnapshot\t\t\t= 0xC810,\t//!< Awinda type snapshot\n\tXDI_FullSnapshot\t\t\t= 0xC820,\t//!< Full snapshot\n\tXDI_GloveSnapshotLeft\t\t= 0xC830, \t//!< Glove Snapshot for Left Hand\n\tXDI_GloveSnapshotRight\t\t= 0xC840, \t//!< Glove Snapshot for Right Hand\n\n\t// The numbers of the GloveData items should match the GloveSnapshot items, but in the CA range\n\tXDI_GloveDataGroup\t\t\t= 0xCA00,\t//!< Group for usable glove data\n\tXDI_GloveDataLeft\t\t\t= 0xCA30, \t//!< Glove Data for Left Hand\n\tXDI_GloveDataRight\t\t\t= 0xCA40, \t//!< Glove Data for Right Hand\n\n\tXDI_VelocityGroup\t\t\t= 0xD000,\t//!< Group for velocity related outputs\n\tXDI_VelocityXYZ\t\t\t\t= 0xD010,\t//!< Velocity in XYZ coordinate frame\n\n\tXDI_StatusGroup\t\t\t\t= 0xE000,\t//!< Group for status related outputs\n\tXDI_StatusByte\t\t\t\t= 0xE010,\t//!< Status byte\n\tXDI_StatusWord\t\t\t\t= 0xE020,\t//!< Status word\n\tXDI_Rssi\t\t\t\t\t= 0xE040,\t//!< Rssi information\n\tXDI_DeviceId\t\t\t\t= 0xE080,\t//!< DeviceId output\n\tXDI_LocationId\t\t\t\t= 0xE090,\t//!< LocationId output\n};\n/*! @} */\n```\n\n根据自己需要采集的数据来设定参数\n\n\n\n## 三、ros系统的安装与使用\n\n### 1.环境配置\n\n可以根据官网的教程安装ros系统http://wiki.ros.org/melodic/Installation/Ubuntu\n\n>  配置资源表\n\n```\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n```\n\n> 设置密钥\n\n```\nsudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n```\n\n>  安装ros基础版没有桌面工具\n\n```\nsudo apt update\nsudo apt install ros-melodic-ros-base\n```\n\n>  环境配置\n\n```\necho \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc\nsource ~/.bashrc\n```\n\n> 初始化ros\n\n```\nsudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential\nsudo rosdep init\nrosdep update\n```\n\n>  运行ros\n\n```\nroscore\n```\n\n------\n\n常见错误：\n\n> ERROR: cannot download default sources list from:\n>\n> https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list\n>\n> Website may be down.\n\n网速慢，修改hosts，提前设置好IP\n\n```\n$ sudo nano /etc/hosts\n```\n\n添加以下内容保存即可\n\n```\n185.199.108.133 raw.githubusercontent.com\n185.199.109.133 raw.githubusercontent.com\n185.199.110.133 raw.githubusercontent.com\n185.199.111.133 raw.githubusercontent.com\n```\n\n> ERROR: default sources list file already exists:\n>\n> /etc/ros/rosdep/sources.list.d/20-default.list\n>\n> Please delete if you wish to re-initialize\n\n表示已经存在了文件，删除文件后，重新运行`sudo rosdep init`\n\n```\n$ sudo rm /etc/ros/rosdep/sources.list.d/20-default.list\n```\n\n------\n\n`rosdep update` 超时，最经常发生的问题\n\n方法一：使用手机热点，多试几次，移动，联通网都试一试\n\n方法二：使用延长加载时间\n\n在下面的文件中，有`DEFAULT_TIME_OUT=15.0`，改为180，再试一次\n\n```\n/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py\n/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py \n/usr/lib/python2.7/dist-packages/rosdep2/rep3.py\n```\n\n方法三：使用代理\n\n再文件夹`/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py`中，找到下面函数并修改`url`的赋值语句\n\n```python\ndef download_rosdep_data(url):\n  \n  try:\n    url=\"https://ghproxy.com/\"+url\n```\n\n然后在下面文件夹中找到类似这样的全局变量，修改为下面这样\n\n```python\nDEFAULT_INDEX_URL = 'https://ghproxy.com/https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml'\n```\n\n```\n/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py\n/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py \n/usr/lib/python2.7/dist-packages/rosdep2/rep3.py\n```\n\n再试一次，应该就可以了\n\n方法四：下载文件到本地\n\n在本地下载好后，修改各个文件，加载目标文件，详情见：https://blog.csdn.net/sinat_25923849/article/details/107976434\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n​\t\t\t\t\t\t\t\t\t\t\t\t\t下面部分，作为研究查看\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n### 2.连接MTI\n\n我们的MTI型号：`MTi-G-710-2A8G4`，查看xsens_driver可支持ros版本，详情见官网：http://wiki.ros.org/xsens_driver\n\n可以看到xsens_driver只支持melodic和 kinetic的ros系统，ros系统支持的系统见官网：http://wiki.ros.org/ROS/Installation\n\n所以我们选择melodic的版本，要下载xsens_driver需要看到下面的Source对应的链接：https://github.com/ethz-asl/ethzasl_xsens_driver\n\n除了 这个驱动之外，还有一个驱动就在我们下载官方的软件包中，安装完mtsdk后，在xsens文件夹下，可以看到`xsens_ros_mti_driver`\n\n> xsens_driver驱动安装\n\n```\nsudo apt-get install ros-melodic-xsens-driver\nroscore\nrosstack profile\nrospack profile\n```\n\n> 修改访问MTI设备的权限，ttyUSB0换成你的设备号\n\n```\nsudo chmod 777 /dev/ttyUSB0\n```\n\n> 启动MTI\n\n```\nroslaunch xsens_driver xsens_driver.launch\nrostopic list\nrostopic echo /imu/data\n```\n\n出现数据说明OK了，连接成功\n\n------\n\n> **Tips：**\n>\n> 所有关于节点的操作都要在运行`xsens_driver.launch`的前提下\n>\n> ubuntu 查看USB对应的串口:\n>\n> ```\n> dmesg | grep tty\n> ```\n>\n> 第三方插件安装命令\n>\n> ```\n> sudo apt-get install ros-melodic-**\n> ```\n>\n> 可视化查看节点之间的关系\n>\n> ```\n> rqt_graph\n> ```\n>\n> 查看驱动节点的信息\n>\n> ```\n> rosnode info /xsens_driver\n> ```\n>\n> 话题列表\n>\n> ```\n> rostopic list\n> ```\n\n### 3.xsens_driver节点简述\n\nMTI数据传输是通过`xsens_driver`这个节点以话题订阅的方式进行的，`xsens_driver`节点不停发布数据所以要想获取数据必须要订阅话题\n\n我们先查看`xsens_driver`节点有用的信息\n\n```\n$ rosnode info /xsens_driver\n\nNode [/xsens_driver]\nPublications: \n * /imu/data [sensor_msgs/Imu]\n * /imu_data_str [std_msgs/String]\n * /rosout [rosgraph_msgs/Log]\n * /time_reference [sensor_msgs/TimeReference]\n\nSubscriptions: None\n\nServices: \n * /xsens_driver/get_loggers\n * /xsens_driver/set_logger_level\n```\n\n可以看到它有有4个话题发布，没有订阅，两个服务，通过不同时间不同时候话题发布的也不同。实际话题发布比较少，是因为只有在有要发布的数据时才会公布主题，没有数据就不会发布。接下来，我们可以查看其中一个的数据结构，上面的`/rosout`是ros 系统自带的，不属于它自己的。\n\n> 查看驱动`/xsens_driver`节点发布`/imu/data`话题的消息[sensor_msgs/Imu]结构：\n\n```\n$ rosmsg show sensor_msgs/Imu\n\nstd_msgs/Header header\n  uint32 seq\n  time stamp\n  string frame_id\ngeometry_msgs/Quaternion orientation\n  float64 x\n  float64 y\n  float64 z\n  float64 w\nfloat64[9] orientation_covariance\ngeometry_msgs/Vector3 angular_velocity\n  float64 x\n  float64 y\n  float64 z\nfloat64[9] angular_velocity_covariance\ngeometry_msgs/Vector3 linear_acceleration\n  float64 x\n  float64 y\n  float64 z\nfloat64[9] linear_acceleration_covariance\n```\n\n实际上可以通过查看`xsens_driver`驱动的ros官网查看所有可以产生的话题，列出以下表格：\n\n|                     话题                     |                    数据                    |\n| :------------------------------------------: | :----------------------------------------: |\n|         `imu/data (sensor_msgs/Imu)`         |            方位角速度和线加速度            |\n|        `fix (sensor_msgs/NavSatFix)`         | 经度、纬度和海拔（来自GPS，仅适用于MTi-G） |\n|   `velocity (geometry_msgs/TwistStamped)`    |        速度信息（仅来自GPS的线性）         |\n|    `imu/mag (sensor_msgs/MagneticField)`     |                  磁场信息                  |\n|   `temperature (sensor_msgs/Temperature)`    |                 传感器温度                 |\n|    `pressure (sensor_msgs/FluidPressure)`    |                  压力信息                  |\n|        `analog_in1 (std_msgs/UInt16)`        |               第一个模拟输入               |\n|        `analog_in2 (std_msgs/UInt16)`        |               第二个模拟输入               |\n|     `ecef (geometry_msgs/PointStamped)`      |      ECEF位置（仅适用于带GPS的设备）       |\n| `time_reference (sensor_msgs/TimeReference)` |             来自设备的时间信息             |\n|       `imu_data_str (std_msgs/String)`       |      从IMU解析的所有数据的字符串版本       |\n\n所以，我们只要用程序订阅`/xsens_driver`节点发出的数据并存储就行了。\n\n\n\n### 4.用c++程序来订阅话题数据示例\n\n首先要创建工作空间(`worksapce`)是存放工程相关文件的文件夹，分为以下四个文件夹\n\n- `src`：代码空间\n- `build`：编译空间\n- `devel`：开发空间\n- `install`：安装空间\n\n> 创建`catkin_ws`工作空间\n\n```\n$ mkdir -p ~/catkin_ws/src\n$ cd ~/catkin_ws/src\n$ catkin_init_worksapce\n```\n\n> 编译工作空间\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n```\n\n> 设置环境变量\n\n```\n$ source devel/setup.bash\n```\n\n> 检查环境变量设置是否正确\n\n```\n$ echo $ROS_PACKAGE_PATH\n```\n\n> 创建`test_pkgstd_msgs`功能包，并添加 `rospy`和`roscpp`依赖，一个针对python编程，一个针对c++编程\n\n```\n$ cd ~/catkin_ws/src\n$ catkin_create_pkg test_pkgstd_msgs rospy roscpp\n```\n\n> 编译功能包\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n$ source ~/catkin_ws/devel/setup.bash\n```\n\n*注意：同一个工作空间下，不允许同名的功能包；不同工作空间下，允许同名的功能包*；\n\n------\n\n所有的程序都要写在功能包里面，要先创建空的功能包，再编译空的功能包，再打开功能包可以看到有`src`文件夹，在`src`文件夹里面写程序\n\n以海龟仿真器为例子，通过订阅`/turtle1/pose`话题来接收位置信息\n\n```c++\n// 订阅/turtle/pose话题，消息类型为turtlesim::Pose\n\n#include <ros/ros.h>\n#include \"turtlesim/Pose.h\"\n\n//接收订阅消息后，会进入消息回调函数，在数据进来时会类似中断，执行完成后才执行下一个数据，不会嵌套\nvoid poseCallback(const turtlesim::Pose::ConstPtr& msg){\n    //将接受到的消息打印出来\n    ROS_INFO(\"Turtle Pose: x:%0.6f, y:%0.6f\",msg->x,msg->y);\n}\nint main(int argc,char **argv){\n    //初始化Ros节点,pose_subscriber是该程序文件的名字\n    ros::init(argc,argv,\"pose_subscriber\");\n    \n    //创建节点句柄\n    ros::NodeHandle n;\n    \n    //创建一个Subscriber,订阅名为/turtle/pose的topic，注册回调函数poseCallback,10为话题订阅的队列长度就是缓冲区\n    ros::Subscriber pose_sub = n.subscriber(\"/turtle/pose\",10,poseCallback);\n    \n    //循环等待回调函数\n    ros::spin();\n        \n    return 0\n}\n```\n\n程序写好后，在功能包目录下，打开 `CMakeLists.txt`文本文件，找到如下的文本，添加上面一句话，保存\n\n```\nadd_executable(pose_subscriber src/pose_subscriber.cpp)\ntarget_link_libraries(pose_subscriber ${catkin_LIBRARIES})\n\n##############\n## Install \t##\n##############\n```\n\n> 编译功能包\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n```\n\n> 运行程序\n\n```\n$ rosrun test_pkgstd_msgs pose_subscriber\n```\n\n------\n\n\n\n### 5.ros系统其他一些功能简述\n\n#### （1）参数使用\n\n> 参数就类似全局字典，所有节点都可以访问，在运行`xsens_driver.launch`文件下\n>\n> 查看所有参数\n\n```\n$ rosparam list\n\n/rosdistro\n/roslaunch/uris/host_pi_virtual_machine__32831\n/rosversion\n/run_id\n/xsens_driver/angular_velocity_covariance_diagonal\n/xsens_driver/baudrate\n/xsens_driver/device\n/xsens_driver/frame_id\n/xsens_driver/frame_local\n/xsens_driver/initial_wait\n/xsens_driver/linear_acceleration_covariance_diagonal\n/xsens_driver/no_rotation_duration\n/xsens_driver/orientation_covariance_diagonal\n/xsens_driver/timeout\n```\n\n> 显示某个参数的值\n\n```\n$ rosparam get /xsens_driver/baudrate\n0\n```\n\n> 设置某个参数的值\n\n```\n$ rosparam set /xsens_driver/baudrate 115200\n```\n\n> 保存参数到当前目录下文件\n\n```\n$ rosparam dump xsens_driver_param\n```\n\n> 打开`xsens_driver_param`文件\n\n```\n\n```\n\n*可以在上面修改数值，就可以统一修改参数*\n\n> 从文件读取参数\n\n```\n$ rosparam load xsens_driver_param\n```\n\n> 删除参数\n\n```\n$ rosparam delete /xsens_driver/baudrate\n```\n\n------\n\n以小海龟仿真程序为例，用c++程序读取和设置参数\n\n> 创建功能包\n\n```\n$ cd ~/catkin_ws/src\n$ catkin_create_pkg learning_parameter roscs\n```\n\n> 配置 `CMakeLists.txt`文本文件的编译规则\n\n```\nadd_executable(parameter_config src/parameter_config.cpp)\ntarget_link_libraries(parameter_config ${catkin_LIBRARIES})\n\n##############\n## Install \t##\n##############\n```\n\n> 编译运行\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n$ source devel/setup.bash\n$ roscore\n$ rosrun turtlesim turtlesim_node\n$ rosrun learning_parameter parameter_config\n```\n\n------\n\n\n\n#### （2）launch文件使用简述\n\n当订阅多个话题时或者需要其他操作，那么需要运行多个程序而且每次都要启动ros系统，所以我们可以把这些操作全部封装在`.launch`文件中，之后运行程序就和驱动程序一样运行`.launch`文件就行了。\n\n> launch文件部分语法：xml\n\n```xml\n<launch>\n    //启动节点\n    <node pkg=\"package-name\" type=\"executable-name\" name=\"node-name\"/>\n</launch>\n```\n\n- `pkg`：节点所在的功能包名称\n- `type`：节点可执行文件名称\n- `name`：节点运行时名称\n- `output`、 `respawn`、`ns`、`args`、`required`\n\n```xml\n<launch>\n    //设置ros系统运行中的参数，存储在服务器中\n    <param name=\"output_frame\" value=\"odom\"/>\n    //加载参数文件的多个参数\n    <rosparam file=\"param.yaml\" command=\"load\" ns=\"params\"/>\n    //launch文件内部的局部变量\n    <arg name=\"arg-name\" default=\"arg-value\"/>\n</launch>\n```\n\n- name：参数名\n- value：参数值\n\n```xml\n<launch>\n    //包含其他launch文件，file为launch文件路径\n    <include file=\"$(dirname)/other.launch\"/>\n</launch>\n```\n\n还有等等其他标签，可以在里面设置参数，而且默认启动ros，不用手动设置了，详情见：http://wiki.ros.org/roslaunch\n\n要想使用launch文件需要先在工作空间中建立功能包\n\n```\n$ catkin_create_pkg learning_launch\n```\n\n在功能包建立launch文件夹存储launch文件，在添加新的launch文件时要对工作空间重新编译，然后运行`example.launch`文件\n\n```\nroslaunch learning_launch example.launch\n```\n\n\n\n## 四、总结\n\n### 1.连接树莓派\n\n可以直接用手机开热点，修改wifi名或者密码到上面，也可以修改network-config文件，更改wifi，可能连接不上，多试几次给树莓派断电。在手机上可以直接查看到树莓派IP，其他地方的话使用Advanced IP Scanner软件查看树莓派IP，得到IP地址后，利用putty或者Xshell连接树莓派。\n\n\n\n### 2.跳转到可执行文件的目录\n\n在putty或者Xshell终端上使用命令，跳转到目录里面\n\n```\ncd xsens/examples/mtsdk/xda_public_cpp\n```\n\n\n\n### 3.数据采集\n\n输入命令，开始采集\n\n```\nsudo ./example_mti_receive_data\n```\n\n该cpp文件被修改过，需要输入采集时间（单位：s）。如果不需要那么多数据，可以修改`example_mti_receive_data.cpp`文件，然后注释掉某些命令。\n\n\n\n### 4.数据解析\n\n源文件有解析数据的，但是不好用，下载到本地（Windows电脑上），利用命令\n\n```\nsz logfile.mtb\n```\n\n下载Windows电脑的MTI的软件，官网地址：https://content.xsens.com/download-mt-software-suite，选择Windows版本的。\n\n找到`MT Manager`文件夹打开，运行`mtmanager64.exe`程序，打开桌面端。\n\n打开程序后，选择菜单栏的File->Open File，选择`logfile.mtb`文件，加载数据。\n\n菜单栏File->Export导出数据。\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/计算机/树莓派接收MTI数据.md","raw":"---\ntitle: 树莓派接收MTI数据\nimg: https://cdn.pixabay.com/photo/2022/03/28/18/41/spring-7098130_960_720.jpg\nexcerpt: 在树莓派中安装ubuntu系统和ros系统来采集MTI的数据，在windows下利用MTI的官方软件来接收数据\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [树莓派,MTI,ubuntu,ros]\nmathjax: true\ndate: 2022-04-18 20:41:54\n---\n\n# 树莓派接收传感器MTI-G-710数据\n\n## 一、树莓派系统安装\n\n### 1.系统选择\n\n官方系统下载：https://www.raspberrypi.org/software/operating-systems/\n\n官方OS中分别有桌面和一些常用软件的版本，只有桌面的版本，没有桌面的Lite版本，所以只要安装第二个只带桌面版就可以了，树莓派的官方OS自带ros系统，安装方式与其他系统不一样，比较麻烦，所以我们安装第三方系统。\n\nUbuntu的第三方系统：https://ubuntu.com/download/raspberry-pi\n\nUbuntu mate的第三方系统:https://ubuntu-mate.org/download/\n\nUbuntu的老版本系统：https://old-releases.ubuntu.com/releases/18.04.4/\n\n由于我们的树莓派版本是3B+，在Ubuntu系统中，建议安装18.04的版本，ros系统安装Melodic版本，与MTI的SDK文档要求的ros系统版本一致。为了减轻树莓派负担，从Ubuntu的老版本系统选择`ubuntu-18.04.4-preinstalled-server-arm64+raspi3.img.xz`文件下载，解压。选择arm64的版本原因：arm64可以修改内部的网络配置文件，armhf的不行。\n\n### 2.系统安装\n\n由于下载的好的系统文件是img文件，不同于iso文件，需要特别的软件写入读卡器，软件名为Win32DiskImager，可以上网搜索安装下来使用，还有格式化系统所需要的配套软件SD Card Formatter。打开system-boot盘，找到network-config文件，修改后面的文件。\n\n```\nwifis:\n  wlan0:\n    dhcp4: true\n    dhcp6: true\n    optional: true\n    access-points:\n      \"填上你的WIFI名称\":\n        password: \"WIFI密码\"\n```\n\nUbuntu系统的默认用户是ubuntu，密码是ubuntu。树莓派官方系统的默认用户pi，密码raspberry。在文件盘符新建文件ssh无后缀，用手机开热点让树莓派连接，查看到IP后，之后再用远程软件登陆（putty或者Xshell）。树莓派连接不上wifi，就断开电源，重新启动一下。\n\n对Ubuntu系统换源（把默认的国外下载源换成国内下载源），用下面命令打开文件：\n\n```\n$ sudo nano /etc/apt/sources.list\n```\n\narm64与armhf的源不一样，注意区分，下面是arm64的国内清华源：\n\n```\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe\n```\n把`sources.list`里面存在的文件用#号注释掉，添加上面的文件。\n\n`ctrl+o`写入，回车， `ctrl+x`离开。\n\n> 源文件内容描述\n\n- ubuntu-ports:表示arm版本的源\n\n- bionic:是ubuntu18.04的发行版本\n\n- security：仅修复漏洞，并且尽可能少的改变软件包的行为。低风险。\n\n- backports：backports的团队则认为最好的更新策略是security 策略加上新版本的软件（包括候选版本的）。但不会由Ubuntu security team审查和更新。\n\n- updates：修复严重但不影响系统安全运行的漏洞，这类补丁在经过QA人员记录和验证后才提供，和security那类一样低风险。\n\n- proposed：update类的测试部分，仅建议提供测试和反馈的人进行安装。\n- main：完全的自由软件。\n- muitiverse：非自由软件，完全不提供支持和补丁。\n- restricted：不完全的自由软件。\n- universe：ubuntu官方不提供支持与补丁，全靠社区支持。\n\n\n\n## 二、xsens官方驱动使用\n\n### 1.官方软件下载和介绍\n\nLinux xsens驱动地址：https://content.xsens.com/download-mt-software-suite\n\n电脑选择linux版本下载好之后得到文件`MT_Software_Suite_linux-x64_2020.0.2.tar.gz`，解压后，可以得到文件`mtsdk_linux-x64_2020.0.2.sh`，利用命令从本地上传到树莓派服务器。\n\n树莓派安装lrzsz\n\n```\n$ sudo apt install lrzsz\n```\n\n输入rz上传文件到服务器当前目录\n\n```\n$ rz\n```\n\n输入sz下载文件到本地\n\n```\n$ sz ./****.txt\n```\n\n把文件下载到用户目录下后安装mti的sdk\n\n```\n$ sudo ./mtsdk_linux-x64_2020.0.2.sh\n```\n\n可能会提示确实某某文件，安装文件之后再运行，如果点运行报错，可能是没有运行权限，可以增加权限或者使用bash/sh命令\n\n```\n$ sudo bash ./mtsdk_linux-x64_2020.0.2.sh\n```\n\n默认的安装位置`[/usr/local/xsens]`，可以选择更改到用户目录下`/home/ubuntu/xsens`\n\n\n\n### 2.驱动文件使用介绍\n\n驱动文件就是`mtsdk_linux-x64_2020.0.2.sh`文件，由于官方软件无法在树莓派中适配，所以我们要在官方驱动中使用现成的API，具体可以参考这个文档：https://base.xsens.com/knowledgebase/s/article/Interfacing-MTi-devices-with-the-Raspberry-Pi\n\n官方问答区：https://base.xsens.com/knowledgebase/s/\n\n我们进入到`xsens`文件目录下，可以看到文件\n\n- doc \t \n- lib\t\n- python\t\n- examples\t\n- MTSDK.README\t\n- `xsens_ros_mti_driver`\t\n- include\n- public        \n- Xsens Technologies MT SS License Agreement.rtf\n\n我们进入`example`文件夹中，再进入`mtsdk`文件夹中，可以看到文件\n\n- awindamonitor_cpp\t\n- Makefile\t\n- xda_public_cpp\t\n- embedded_examples\t\n- xda_cpp\t\n- xda_python\n\n然后进入到`xda_public_cpp`文件夹中，可以看到文件\n\n- example_mti_parse_logfile.cpp\t\n- Makefile\t\n- xspublic\t\n- example_mti_receive_data.cpp   \n- xda_public_cpp.sln\n\n`xspublic`文件包含很多需要使用的前置文件，`example_mti_receive_data.cpp`是接收数据的，可以自动检测是否已经连接MTI传感器， 收集数据产生`logfile.mtb`文件，`example_mti_parse_logfile.cpp`可以把数据文件`logfile.mtb`数据提取转化为`exportfile.txt`文件，每一行为一次收集的数据。\n\n在使用前需要对cpp文件进行编译，第一次可能时间会长一点，在当前目录下，打开终端输入，必须安装ros系统才能编译\n\n```\n$ sudo make\n```\n\n产生一系列`.o`文件和无后缀文件，那些无后缀就是可执行文件，在终端输入\n\n```\n$ sudo ./example_mti_receive_data\n```\n\n开始接收数据并会输出到终端中，如果无法检测到MTI传感器，在终端输入命令查到MTI的串口位置并提高串口权限\n\n```\n$ dmesg | grep tty\n[    0.570241] printk: console [tty0] enabled\n[    2.799819] 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A\n[ 5373.377442] usb 2-2.1: xsens_mt converter now attached to ttyUSB0\n$ sudo chmod 777 /dev/ttyUSB0\n```\n\n可以看到`xsens_mt`的位置在 `ttyUSB0`，所以需要提升`ttyUSB0`的权限\n\n产生`logfile.mtb`文件文件后，在终端输入\n\n```\n$ sudo ./example_mti_parse_logfile\n```\n\n`产生exportfile.txt`文件\n\n\n\n### 3.程序更改部分\n\n跳转到用户目录下的`xda_public_cpp`文件夹中，打开`example_mti_receive_data.cpp`文件，可以看到\n\n```c++\n\t// Important for Public XDA!\n\t// Call this function if you want to record a mtb file:\n\tdevice->readEmtsAndDeviceConfiguration();\n\n\tXsOutputConfigurationArray configArray;\n\tconfigArray.push_back(XsOutputConfiguration(XDI_PacketCounter, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_SampleTimeFine, 0));\n\tif (device->deviceId().isImu())\n\t{\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_Acceleration, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_RateOfTurn, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_MagneticField, 0));\n\t}\n\telse if (device->deviceId().isVru() || device->deviceId().isAhrs())\n\t{\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_Quaternion, 0));\n\t}\n\telse if (device->deviceId().isGnss())\n\t{\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_Quaternion, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_LatLon, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_AltitudeEllipsoid, 0));\n\t\tconfigArray.push_back(XsOutputConfiguration(XDI_VelocityXYZ, 0));\n\t}\n\telse\n\t{\n\t\treturn handleError(\"Unknown device while configuring. Aborting.\");\n\t}\n```\n\n可以看到根据传感器的型号来取什么值并不能取到全部的值，改为下面可以采取各个值，\n\n```c++\n  // Important for Public XDA!\n\t// Call this function if you want to record a mtb file:\n\tdevice->readEmtsAndDeviceConfiguration();\n\n\tXsOutputConfigurationArray configArray;\n\t//TimeStamp\n\tconfigArray.push_back(XsOutputConfiguration(XDI_PacketCounter, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_SampleTimeFine, 0));\n  configArray.push_back(XsOutputConfiguration(XDI_SampleTimeCoarse, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_UtcTime, 0));\n\t//Quaternion\n\tconfigArray.push_back(XsOutputConfiguration(XDI_Quaternion, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_RotationMatrix, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_EulerAngles, 0));\n\t//Inertial Data\n\tconfigArray.push_back(XsOutputConfiguration(XDI_Acceleration, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_FreeAcceleration, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_RateOfTurn, 0));\n\t//Magnetic Field\n\tconfigArray.push_back(XsOutputConfiguration(XDI_MagneticField, 0));\n\t//Temperature\n\tconfigArray.push_back(XsOutputConfiguration(XDI_Temperature, 0));\n\t//Pressure\n\tconfigArray.push_back(XsOutputConfiguration(XDI_BaroPressure, 0));\n\t//High-Rate Data\n\tconfigArray.push_back(XsOutputConfiguration(XDI_AccelerationHR, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_RateOfTurnHR, 0));\n\t//Status\n\tconfigArray.push_back(XsOutputConfiguration(XDI_StatusWord, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_StatusByte, 0));\n\t//Position and Velocity\n\tconfigArray.push_back(XsOutputConfiguration(XDI_LatLon, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_AltitudeEllipsoid, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_VelocityXYZ, 0));\n\t//GNSS Data\n\tconfigArray.push_back(XsOutputConfiguration(XDI_GnssPvtData, 0));\n\tconfigArray.push_back(XsOutputConfiguration(XDI_GnssSatInfo, 0));\n```\n\n根据定义，可以看到各个参数为枚举类型，枚举类定义文档如下：\n\n```c++\n//AUTO namespace xstypes {\n/*!\t\\enum XsDataIdentifier\n\t\\brief Defines the data identifiers\n\n\tThe list of standard data identifiers is shown below.\n\tThe last positions in the data identifier depends on the configuration of the data.\n\tFor example 0x4020 is 3D acceleration in single precision float format,\n\twhere 0x4022 is 3D acceleration in fixed point 16.32 format.\n\n\tRefer to the Low Level Communication Protocol for more details.\n*/\nenum XsDataIdentifier\n{\n\tXDI_None\t\t\t\t\t= 0x0000,\t//!< Empty datatype\n\tXDI_TypeMask\t\t\t\t= 0xFE00,\t//!< Mask for checking the group which a dataidentifier belongs to, Eg. XDI_TimestampGroup or XDI_OrientationGroup\n\tXDI_FullTypeMask\t\t\t= 0xFFF0,\t//!< Mask to get the type of data, without the data format\n\tXDI_FullMask\t\t\t\t= 0xFFFF,\t//!< Complete mask to get entire data identifier\n\tXDI_FormatMask\t\t\t\t= 0x01FF,\t//!< Mask for getting the data id without checking the group\n\tXDI_DataFormatMask\t\t\t= 0x000F,\t//!< Mask for extracting just the data format /sa XDI_SubFormat\n\n\tXDI_SubFormatMask\t\t\t= 0x0003,\t//!< Determines, float, fp12.20, fp16.32, double output... (where applicable)\n\tXDI_SubFormatFloat\t\t\t= 0x0000,\t//!< Floating point format\n\tXDI_SubFormatFp1220\t\t\t= 0x0001,\t//!< Fixed point 12.20\n\tXDI_SubFormatFp1632\t\t\t= 0x0002,\t//!< Fixed point 16.32\n\tXDI_SubFormatDouble\t\t\t= 0x0003,\t//!< Double format\n\n\tXDI_SubFormatLeft\t\t\t= 0x0000,\t//!< Left side data (ie XDI_GloveData for the left hand)\n\tXDI_SubFormatRight\t\t\t= 0x0001,\t//!< Right side data (ie XDI_GloveData for the right hand)\n\n\tXDI_TemperatureGroup\t\t= 0x0800,\t//!< Group for temperature outputs\n\tXDI_Temperature\t\t\t\t= 0x0810,\t//!< Temperature\n\n\tXDI_TimestampGroup\t\t\t= 0x1000,\t//!< Group for time stamp related outputs\n\tXDI_UtcTime\t\t\t\t\t= 0x1010,\t//!< Utc time from the GNSS receiver\n\tXDI_PacketCounter\t\t\t= 0x1020,\t//!< Packet counter, increments every packet\n\tXDI_Itow\t\t\t\t\t= 0x1030,\t//!< Itow. Time Of Week from the GNSS receiver\n\tXDI_GnssAge\t\t\t\t\t= 0x1040,\t//!< Gnss age from the GNSS receiver\n\tXDI_PressureAge\t\t\t\t= 0x1050,\t//!< Age of a pressure sample, in packet counts\n\tXDI_SampleTimeFine\t\t\t= 0x1060,\t//!< Sample Time Fine\n\tXDI_SampleTimeCoarse\t\t= 0x1070,\t//!< Sample Time Coarse\n\tXDI_FrameRange\t\t\t\t= 0x1080,\t//!< Reserved \\internal add for MTw (if needed)\n\tXDI_PacketCounter8\t\t\t= 0x1090,\t//!< 8 bit packet counter, wraps at 256\n\tXDI_SampleTime64\t\t\t= 0x10A0,\t//!< 64 bit sample time\n\n\tXDI_OrientationGroup\t\t= 0x2000,\t//!< Group for orientation related outputs\n\tXDI_CoordSysMask\t\t\t= 0x000C,\t//!< Mask for the coordinate system part of the orientation data identifier\n\tXDI_CoordSysEnu\t\t\t\t= 0x0000,\t//!< East North Up orientation output\n\tXDI_CoordSysNed\t\t\t\t= 0x0004,\t//!< North East Down orientation output\n\tXDI_CoordSysNwu\t\t\t\t= 0x0008,\t//!< North West Up orientation output\n\tXDI_Quaternion\t\t\t\t= 0x2010,\t//!< Orientation in quaternion format\n\tXDI_RotationMatrix\t\t\t= 0x2020,\t//!< Orientation in rotation matrix format\n\tXDI_EulerAngles\t\t\t\t= 0x2030,\t//!< Orientation in euler angles format\n\n\tXDI_PressureGroup\t\t\t= 0x3000,\t//!< Group for pressure related outputs\n\tXDI_BaroPressure\t\t\t= 0x3010,\t//!< Pressure output recorded from the barometer\n\n\tXDI_AccelerationGroup\t\t= 0x4000,\t//!< Group for acceleration related outputs\n\tXDI_DeltaV\t\t\t\t\t= 0x4010,\t//!< DeltaV SDI data output\n\tXDI_Acceleration\t\t\t= 0x4020,\t//!< Acceleration output in m/s2\n\tXDI_FreeAcceleration\t\t= 0x4030,\t//!< Free acceleration output in m/s2\n\tXDI_AccelerationHR\t\t\t= 0x4040,\t//!< AccelerationHR output\n\n\tXDI_IndicationGroup\t\t\t= 0x4800,\t//!< 0100.1000 -> bit reverse = 0001.0010 -> type 18\n\tXDI_TriggerIn1\t\t\t\t= 0x4810,\t//!< Trigger in 1 indication\n\tXDI_TriggerIn2\t\t\t\t= 0x4820,\t//!< Trigger in 2 indication\n\tXDI_TriggerIn3\t\t\t\t= 0x4830,\t//!< Trigger in 3 indication\n\n\tXDI_PositionGroup\t\t\t= 0x5000,\t//!< Group for position related outputs\n\tXDI_AltitudeMsl\t\t\t\t= 0x5010,\t//!< Altitude at Mean Sea Level\n\tXDI_AltitudeEllipsoid\t\t= 0x5020,\t//!< Altitude at ellipsoid\n\tXDI_PositionEcef\t\t\t= 0x5030,\t//!< Position in earth-centered, earth-fixed format\n\tXDI_LatLon\t\t\t\t\t= 0x5040,\t//!< Position in latitude, longitude\n\n\tXDI_GnssGroup\t\t\t\t= 0x7000,\t//!< Group for Gnss related outputs\n\tXDI_GnssPvtData\t\t\t\t= 0x7010,\t//!< Gnss position, velocity and time data\n\tXDI_GnssSatInfo\t\t\t\t= 0x7020,\t//!< Gnss satellite information\n\tXDI_GnssPvtPulse\t\t\t= 0x7030,\t//!< Time of the PVT timepulse (4Hz upsampled from the 1PPS)\n\n\tXDI_AngularVelocityGroup\t= 0x8000,\t//!< Group for angular velocity related outputs\n\tXDI_RateOfTurn\t\t\t\t= 0x8020,\t//!< Rate of turn data in rad/sec\n\tXDI_DeltaQ\t\t\t\t\t= 0x8030,\t//!< DeltaQ SDI data\n\tXDI_RateOfTurnHR\t\t\t= 0x8040,\t//!< Rate of turn HR data\n\n\tXDI_RawSensorGroup\t\t\t= 0xA000,\t//!< Group for raw sensor data related outputs\n\tXDI_RawUnsigned\t\t\t\t= 0x0000,\t//!< Tracker produces unsigned raw values, usually fixed behavior\n\tXDI_RawSigned\t\t\t\t= 0x0001,\t//!< Tracker produces signed raw values, usually fixed behavior\n\tXDI_RawAccGyrMagTemp\t\t= 0xA010,\t//!< Raw acceleration, gyroscope, magnetometer and temperature data\n\tXDI_RawGyroTemp\t\t\t\t= 0xA020,\t//!< Raw gyroscope and temperature data\n\tXDI_RawAcc\t\t\t\t\t= 0xA030,\t//!< Raw acceleration data\n\tXDI_RawGyr\t\t\t\t\t= 0xA040,\t//!< Raw gyroscope data\n\tXDI_RawMag\t\t\t\t\t= 0xA050,\t//!< Raw magnetometer data\n\tXDI_RawDeltaQ\t\t\t\t= 0xA060,\t//!< Raw deltaQ SDI data\n\tXDI_RawDeltaV\t\t\t\t= 0xA070,\t//!< Raw deltaV SDI data\n\tXDI_RawBlob\t\t\t\t\t= 0xA080,\t//!< Raw blob data\n\n\tXDI_AnalogInGroup\t\t\t= 0xB000,\t//!< Group for analog in related outputs\n\tXDI_AnalogIn1\t\t\t\t= 0xB010,\t//!< Data containing adc data from analog in 1 line (if present)\n\tXDI_AnalogIn2\t\t\t\t= 0xB020,\t//!< Data containing adc data from analog in 2 line (if present)\n\n\tXDI_MagneticGroup\t\t\t= 0xC000,\t//!< Group for magnetometer related outputs\n\tXDI_MagneticField\t\t\t= 0xC020,\t//!< Magnetic field data in a.u.\n\tXDI_MagneticFieldCorrected\t= 0xC030,\t//!< Corrected Magnetic field data in a.u. (ICC result)\n\n\tXDI_SnapshotGroup\t\t\t= 0xC800,\t//!< Group for snapshot related outputs\n\tXDI_RetransmissionMask\t\t= 0x0001,\t//!< Mask for the retransmission bit in the snapshot data\n\tXDI_RetransmissionFlag\t\t= 0x0001,\t//!< Bit indicating if the snapshot if from a retransmission\n\tXDI_AwindaSnapshot\t\t\t= 0xC810,\t//!< Awinda type snapshot\n\tXDI_FullSnapshot\t\t\t= 0xC820,\t//!< Full snapshot\n\tXDI_GloveSnapshotLeft\t\t= 0xC830, \t//!< Glove Snapshot for Left Hand\n\tXDI_GloveSnapshotRight\t\t= 0xC840, \t//!< Glove Snapshot for Right Hand\n\n\t// The numbers of the GloveData items should match the GloveSnapshot items, but in the CA range\n\tXDI_GloveDataGroup\t\t\t= 0xCA00,\t//!< Group for usable glove data\n\tXDI_GloveDataLeft\t\t\t= 0xCA30, \t//!< Glove Data for Left Hand\n\tXDI_GloveDataRight\t\t\t= 0xCA40, \t//!< Glove Data for Right Hand\n\n\tXDI_VelocityGroup\t\t\t= 0xD000,\t//!< Group for velocity related outputs\n\tXDI_VelocityXYZ\t\t\t\t= 0xD010,\t//!< Velocity in XYZ coordinate frame\n\n\tXDI_StatusGroup\t\t\t\t= 0xE000,\t//!< Group for status related outputs\n\tXDI_StatusByte\t\t\t\t= 0xE010,\t//!< Status byte\n\tXDI_StatusWord\t\t\t\t= 0xE020,\t//!< Status word\n\tXDI_Rssi\t\t\t\t\t= 0xE040,\t//!< Rssi information\n\tXDI_DeviceId\t\t\t\t= 0xE080,\t//!< DeviceId output\n\tXDI_LocationId\t\t\t\t= 0xE090,\t//!< LocationId output\n};\n/*! @} */\n```\n\n根据自己需要采集的数据来设定参数\n\n\n\n## 三、ros系统的安装与使用\n\n### 1.环境配置\n\n可以根据官网的教程安装ros系统http://wiki.ros.org/melodic/Installation/Ubuntu\n\n>  配置资源表\n\n```\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n```\n\n> 设置密钥\n\n```\nsudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n```\n\n>  安装ros基础版没有桌面工具\n\n```\nsudo apt update\nsudo apt install ros-melodic-ros-base\n```\n\n>  环境配置\n\n```\necho \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc\nsource ~/.bashrc\n```\n\n> 初始化ros\n\n```\nsudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential\nsudo rosdep init\nrosdep update\n```\n\n>  运行ros\n\n```\nroscore\n```\n\n------\n\n常见错误：\n\n> ERROR: cannot download default sources list from:\n>\n> https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list\n>\n> Website may be down.\n\n网速慢，修改hosts，提前设置好IP\n\n```\n$ sudo nano /etc/hosts\n```\n\n添加以下内容保存即可\n\n```\n185.199.108.133 raw.githubusercontent.com\n185.199.109.133 raw.githubusercontent.com\n185.199.110.133 raw.githubusercontent.com\n185.199.111.133 raw.githubusercontent.com\n```\n\n> ERROR: default sources list file already exists:\n>\n> /etc/ros/rosdep/sources.list.d/20-default.list\n>\n> Please delete if you wish to re-initialize\n\n表示已经存在了文件，删除文件后，重新运行`sudo rosdep init`\n\n```\n$ sudo rm /etc/ros/rosdep/sources.list.d/20-default.list\n```\n\n------\n\n`rosdep update` 超时，最经常发生的问题\n\n方法一：使用手机热点，多试几次，移动，联通网都试一试\n\n方法二：使用延长加载时间\n\n在下面的文件中，有`DEFAULT_TIME_OUT=15.0`，改为180，再试一次\n\n```\n/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py\n/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py \n/usr/lib/python2.7/dist-packages/rosdep2/rep3.py\n```\n\n方法三：使用代理\n\n再文件夹`/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py`中，找到下面函数并修改`url`的赋值语句\n\n```python\ndef download_rosdep_data(url):\n  \n  try:\n    url=\"https://ghproxy.com/\"+url\n```\n\n然后在下面文件夹中找到类似这样的全局变量，修改为下面这样\n\n```python\nDEFAULT_INDEX_URL = 'https://ghproxy.com/https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml'\n```\n\n```\n/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py\n/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py \n/usr/lib/python2.7/dist-packages/rosdep2/rep3.py\n```\n\n再试一次，应该就可以了\n\n方法四：下载文件到本地\n\n在本地下载好后，修改各个文件，加载目标文件，详情见：https://blog.csdn.net/sinat_25923849/article/details/107976434\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n​\t\t\t\t\t\t\t\t\t\t\t\t\t下面部分，作为研究查看\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n### 2.连接MTI\n\n我们的MTI型号：`MTi-G-710-2A8G4`，查看xsens_driver可支持ros版本，详情见官网：http://wiki.ros.org/xsens_driver\n\n可以看到xsens_driver只支持melodic和 kinetic的ros系统，ros系统支持的系统见官网：http://wiki.ros.org/ROS/Installation\n\n所以我们选择melodic的版本，要下载xsens_driver需要看到下面的Source对应的链接：https://github.com/ethz-asl/ethzasl_xsens_driver\n\n除了 这个驱动之外，还有一个驱动就在我们下载官方的软件包中，安装完mtsdk后，在xsens文件夹下，可以看到`xsens_ros_mti_driver`\n\n> xsens_driver驱动安装\n\n```\nsudo apt-get install ros-melodic-xsens-driver\nroscore\nrosstack profile\nrospack profile\n```\n\n> 修改访问MTI设备的权限，ttyUSB0换成你的设备号\n\n```\nsudo chmod 777 /dev/ttyUSB0\n```\n\n> 启动MTI\n\n```\nroslaunch xsens_driver xsens_driver.launch\nrostopic list\nrostopic echo /imu/data\n```\n\n出现数据说明OK了，连接成功\n\n------\n\n> **Tips：**\n>\n> 所有关于节点的操作都要在运行`xsens_driver.launch`的前提下\n>\n> ubuntu 查看USB对应的串口:\n>\n> ```\n> dmesg | grep tty\n> ```\n>\n> 第三方插件安装命令\n>\n> ```\n> sudo apt-get install ros-melodic-**\n> ```\n>\n> 可视化查看节点之间的关系\n>\n> ```\n> rqt_graph\n> ```\n>\n> 查看驱动节点的信息\n>\n> ```\n> rosnode info /xsens_driver\n> ```\n>\n> 话题列表\n>\n> ```\n> rostopic list\n> ```\n\n### 3.xsens_driver节点简述\n\nMTI数据传输是通过`xsens_driver`这个节点以话题订阅的方式进行的，`xsens_driver`节点不停发布数据所以要想获取数据必须要订阅话题\n\n我们先查看`xsens_driver`节点有用的信息\n\n```\n$ rosnode info /xsens_driver\n\nNode [/xsens_driver]\nPublications: \n * /imu/data [sensor_msgs/Imu]\n * /imu_data_str [std_msgs/String]\n * /rosout [rosgraph_msgs/Log]\n * /time_reference [sensor_msgs/TimeReference]\n\nSubscriptions: None\n\nServices: \n * /xsens_driver/get_loggers\n * /xsens_driver/set_logger_level\n```\n\n可以看到它有有4个话题发布，没有订阅，两个服务，通过不同时间不同时候话题发布的也不同。实际话题发布比较少，是因为只有在有要发布的数据时才会公布主题，没有数据就不会发布。接下来，我们可以查看其中一个的数据结构，上面的`/rosout`是ros 系统自带的，不属于它自己的。\n\n> 查看驱动`/xsens_driver`节点发布`/imu/data`话题的消息[sensor_msgs/Imu]结构：\n\n```\n$ rosmsg show sensor_msgs/Imu\n\nstd_msgs/Header header\n  uint32 seq\n  time stamp\n  string frame_id\ngeometry_msgs/Quaternion orientation\n  float64 x\n  float64 y\n  float64 z\n  float64 w\nfloat64[9] orientation_covariance\ngeometry_msgs/Vector3 angular_velocity\n  float64 x\n  float64 y\n  float64 z\nfloat64[9] angular_velocity_covariance\ngeometry_msgs/Vector3 linear_acceleration\n  float64 x\n  float64 y\n  float64 z\nfloat64[9] linear_acceleration_covariance\n```\n\n实际上可以通过查看`xsens_driver`驱动的ros官网查看所有可以产生的话题，列出以下表格：\n\n|                     话题                     |                    数据                    |\n| :------------------------------------------: | :----------------------------------------: |\n|         `imu/data (sensor_msgs/Imu)`         |            方位角速度和线加速度            |\n|        `fix (sensor_msgs/NavSatFix)`         | 经度、纬度和海拔（来自GPS，仅适用于MTi-G） |\n|   `velocity (geometry_msgs/TwistStamped)`    |        速度信息（仅来自GPS的线性）         |\n|    `imu/mag (sensor_msgs/MagneticField)`     |                  磁场信息                  |\n|   `temperature (sensor_msgs/Temperature)`    |                 传感器温度                 |\n|    `pressure (sensor_msgs/FluidPressure)`    |                  压力信息                  |\n|        `analog_in1 (std_msgs/UInt16)`        |               第一个模拟输入               |\n|        `analog_in2 (std_msgs/UInt16)`        |               第二个模拟输入               |\n|     `ecef (geometry_msgs/PointStamped)`      |      ECEF位置（仅适用于带GPS的设备）       |\n| `time_reference (sensor_msgs/TimeReference)` |             来自设备的时间信息             |\n|       `imu_data_str (std_msgs/String)`       |      从IMU解析的所有数据的字符串版本       |\n\n所以，我们只要用程序订阅`/xsens_driver`节点发出的数据并存储就行了。\n\n\n\n### 4.用c++程序来订阅话题数据示例\n\n首先要创建工作空间(`worksapce`)是存放工程相关文件的文件夹，分为以下四个文件夹\n\n- `src`：代码空间\n- `build`：编译空间\n- `devel`：开发空间\n- `install`：安装空间\n\n> 创建`catkin_ws`工作空间\n\n```\n$ mkdir -p ~/catkin_ws/src\n$ cd ~/catkin_ws/src\n$ catkin_init_worksapce\n```\n\n> 编译工作空间\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n```\n\n> 设置环境变量\n\n```\n$ source devel/setup.bash\n```\n\n> 检查环境变量设置是否正确\n\n```\n$ echo $ROS_PACKAGE_PATH\n```\n\n> 创建`test_pkgstd_msgs`功能包，并添加 `rospy`和`roscpp`依赖，一个针对python编程，一个针对c++编程\n\n```\n$ cd ~/catkin_ws/src\n$ catkin_create_pkg test_pkgstd_msgs rospy roscpp\n```\n\n> 编译功能包\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n$ source ~/catkin_ws/devel/setup.bash\n```\n\n*注意：同一个工作空间下，不允许同名的功能包；不同工作空间下，允许同名的功能包*；\n\n------\n\n所有的程序都要写在功能包里面，要先创建空的功能包，再编译空的功能包，再打开功能包可以看到有`src`文件夹，在`src`文件夹里面写程序\n\n以海龟仿真器为例子，通过订阅`/turtle1/pose`话题来接收位置信息\n\n```c++\n// 订阅/turtle/pose话题，消息类型为turtlesim::Pose\n\n#include <ros/ros.h>\n#include \"turtlesim/Pose.h\"\n\n//接收订阅消息后，会进入消息回调函数，在数据进来时会类似中断，执行完成后才执行下一个数据，不会嵌套\nvoid poseCallback(const turtlesim::Pose::ConstPtr& msg){\n    //将接受到的消息打印出来\n    ROS_INFO(\"Turtle Pose: x:%0.6f, y:%0.6f\",msg->x,msg->y);\n}\nint main(int argc,char **argv){\n    //初始化Ros节点,pose_subscriber是该程序文件的名字\n    ros::init(argc,argv,\"pose_subscriber\");\n    \n    //创建节点句柄\n    ros::NodeHandle n;\n    \n    //创建一个Subscriber,订阅名为/turtle/pose的topic，注册回调函数poseCallback,10为话题订阅的队列长度就是缓冲区\n    ros::Subscriber pose_sub = n.subscriber(\"/turtle/pose\",10,poseCallback);\n    \n    //循环等待回调函数\n    ros::spin();\n        \n    return 0\n}\n```\n\n程序写好后，在功能包目录下，打开 `CMakeLists.txt`文本文件，找到如下的文本，添加上面一句话，保存\n\n```\nadd_executable(pose_subscriber src/pose_subscriber.cpp)\ntarget_link_libraries(pose_subscriber ${catkin_LIBRARIES})\n\n##############\n## Install \t##\n##############\n```\n\n> 编译功能包\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n```\n\n> 运行程序\n\n```\n$ rosrun test_pkgstd_msgs pose_subscriber\n```\n\n------\n\n\n\n### 5.ros系统其他一些功能简述\n\n#### （1）参数使用\n\n> 参数就类似全局字典，所有节点都可以访问，在运行`xsens_driver.launch`文件下\n>\n> 查看所有参数\n\n```\n$ rosparam list\n\n/rosdistro\n/roslaunch/uris/host_pi_virtual_machine__32831\n/rosversion\n/run_id\n/xsens_driver/angular_velocity_covariance_diagonal\n/xsens_driver/baudrate\n/xsens_driver/device\n/xsens_driver/frame_id\n/xsens_driver/frame_local\n/xsens_driver/initial_wait\n/xsens_driver/linear_acceleration_covariance_diagonal\n/xsens_driver/no_rotation_duration\n/xsens_driver/orientation_covariance_diagonal\n/xsens_driver/timeout\n```\n\n> 显示某个参数的值\n\n```\n$ rosparam get /xsens_driver/baudrate\n0\n```\n\n> 设置某个参数的值\n\n```\n$ rosparam set /xsens_driver/baudrate 115200\n```\n\n> 保存参数到当前目录下文件\n\n```\n$ rosparam dump xsens_driver_param\n```\n\n> 打开`xsens_driver_param`文件\n\n```\n\n```\n\n*可以在上面修改数值，就可以统一修改参数*\n\n> 从文件读取参数\n\n```\n$ rosparam load xsens_driver_param\n```\n\n> 删除参数\n\n```\n$ rosparam delete /xsens_driver/baudrate\n```\n\n------\n\n以小海龟仿真程序为例，用c++程序读取和设置参数\n\n> 创建功能包\n\n```\n$ cd ~/catkin_ws/src\n$ catkin_create_pkg learning_parameter roscs\n```\n\n> 配置 `CMakeLists.txt`文本文件的编译规则\n\n```\nadd_executable(parameter_config src/parameter_config.cpp)\ntarget_link_libraries(parameter_config ${catkin_LIBRARIES})\n\n##############\n## Install \t##\n##############\n```\n\n> 编译运行\n\n```\n$ cd ~/catkin_ws\n$ catkin_make\n$ source devel/setup.bash\n$ roscore\n$ rosrun turtlesim turtlesim_node\n$ rosrun learning_parameter parameter_config\n```\n\n------\n\n\n\n#### （2）launch文件使用简述\n\n当订阅多个话题时或者需要其他操作，那么需要运行多个程序而且每次都要启动ros系统，所以我们可以把这些操作全部封装在`.launch`文件中，之后运行程序就和驱动程序一样运行`.launch`文件就行了。\n\n> launch文件部分语法：xml\n\n```xml\n<launch>\n    //启动节点\n    <node pkg=\"package-name\" type=\"executable-name\" name=\"node-name\"/>\n</launch>\n```\n\n- `pkg`：节点所在的功能包名称\n- `type`：节点可执行文件名称\n- `name`：节点运行时名称\n- `output`、 `respawn`、`ns`、`args`、`required`\n\n```xml\n<launch>\n    //设置ros系统运行中的参数，存储在服务器中\n    <param name=\"output_frame\" value=\"odom\"/>\n    //加载参数文件的多个参数\n    <rosparam file=\"param.yaml\" command=\"load\" ns=\"params\"/>\n    //launch文件内部的局部变量\n    <arg name=\"arg-name\" default=\"arg-value\"/>\n</launch>\n```\n\n- name：参数名\n- value：参数值\n\n```xml\n<launch>\n    //包含其他launch文件，file为launch文件路径\n    <include file=\"$(dirname)/other.launch\"/>\n</launch>\n```\n\n还有等等其他标签，可以在里面设置参数，而且默认启动ros，不用手动设置了，详情见：http://wiki.ros.org/roslaunch\n\n要想使用launch文件需要先在工作空间中建立功能包\n\n```\n$ catkin_create_pkg learning_launch\n```\n\n在功能包建立launch文件夹存储launch文件，在添加新的launch文件时要对工作空间重新编译，然后运行`example.launch`文件\n\n```\nroslaunch learning_launch example.launch\n```\n\n\n\n## 四、总结\n\n### 1.连接树莓派\n\n可以直接用手机开热点，修改wifi名或者密码到上面，也可以修改network-config文件，更改wifi，可能连接不上，多试几次给树莓派断电。在手机上可以直接查看到树莓派IP，其他地方的话使用Advanced IP Scanner软件查看树莓派IP，得到IP地址后，利用putty或者Xshell连接树莓派。\n\n\n\n### 2.跳转到可执行文件的目录\n\n在putty或者Xshell终端上使用命令，跳转到目录里面\n\n```\ncd xsens/examples/mtsdk/xda_public_cpp\n```\n\n\n\n### 3.数据采集\n\n输入命令，开始采集\n\n```\nsudo ./example_mti_receive_data\n```\n\n该cpp文件被修改过，需要输入采集时间（单位：s）。如果不需要那么多数据，可以修改`example_mti_receive_data.cpp`文件，然后注释掉某些命令。\n\n\n\n### 4.数据解析\n\n源文件有解析数据的，但是不好用，下载到本地（Windows电脑上），利用命令\n\n```\nsz logfile.mtb\n```\n\n下载Windows电脑的MTI的软件，官网地址：https://content.xsens.com/download-mt-software-suite，选择Windows版本的。\n\n找到`MT Manager`文件夹打开，运行`mtmanager64.exe`程序，打开桌面端。\n\n打开程序后，选择菜单栏的File->Open File，选择`logfile.mtb`文件，加载数据。\n\n菜单栏File->Export导出数据。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"计算机/树莓派接收MTI数据","published":1,"updated":"2022-04-18T12:47:14.641Z","layout":"post","photos":[],"_id":"cm1z7gipg000ddwvx738o8txq","content":"<h1 id=\"树莓派接收传感器MTI-G-710数据\"><a href=\"#树莓派接收传感器MTI-G-710数据\" class=\"headerlink\" title=\"树莓派接收传感器MTI-G-710数据\"></a>树莓派接收传感器MTI-G-710数据</h1><h2 id=\"一、树莓派系统安装\"><a href=\"#一、树莓派系统安装\" class=\"headerlink\" title=\"一、树莓派系统安装\"></a>一、树莓派系统安装</h2><h3 id=\"1-系统选择\"><a href=\"#1-系统选择\" class=\"headerlink\" title=\"1.系统选择\"></a>1.系统选择</h3><p>官方系统下载：<a href=\"https://www.raspberrypi.org/software/operating-systems/\">https://www.raspberrypi.org/software/operating-systems/</a></p>\n<p>官方OS中分别有桌面和一些常用软件的版本，只有桌面的版本，没有桌面的Lite版本，所以只要安装第二个只带桌面版就可以了，树莓派的官方OS自带ros系统，安装方式与其他系统不一样，比较麻烦，所以我们安装第三方系统。</p>\n<p>Ubuntu的第三方系统：<a href=\"https://ubuntu.com/download/raspberry-pi\">https://ubuntu.com/download/raspberry-pi</a></p>\n<p>Ubuntu mate的第三方系统:<a href=\"https://ubuntu-mate.org/download/\">https://ubuntu-mate.org/download/</a></p>\n<p>Ubuntu的老版本系统：<a href=\"https://old-releases.ubuntu.com/releases/18.04.4/\">https://old-releases.ubuntu.com/releases/18.04.4/</a></p>\n<p>由于我们的树莓派版本是3B+，在Ubuntu系统中，建议安装18.04的版本，ros系统安装Melodic版本，与MTI的SDK文档要求的ros系统版本一致。为了减轻树莓派负担，从Ubuntu的老版本系统选择<code>ubuntu-18.04.4-preinstalled-server-arm64+raspi3.img.xz</code>文件下载，解压。选择arm64的版本原因：arm64可以修改内部的网络配置文件，armhf的不行。</p>\n<h3 id=\"2-系统安装\"><a href=\"#2-系统安装\" class=\"headerlink\" title=\"2.系统安装\"></a>2.系统安装</h3><p>由于下载的好的系统文件是img文件，不同于iso文件，需要特别的软件写入读卡器，软件名为Win32DiskImager，可以上网搜索安装下来使用，还有格式化系统所需要的配套软件SD Card Formatter。打开system-boot盘，找到network-config文件，修改后面的文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wifis:</span><br><span class=\"line\">  wlan0:</span><br><span class=\"line\">    dhcp4: true</span><br><span class=\"line\">    dhcp6: true</span><br><span class=\"line\">    optional: true</span><br><span class=\"line\">    access-points:</span><br><span class=\"line\">      &quot;填上你的WIFI名称&quot;:</span><br><span class=\"line\">        password: &quot;WIFI密码&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Ubuntu系统的默认用户是ubuntu，密码是ubuntu。树莓派官方系统的默认用户pi，密码raspberry。在文件盘符新建文件ssh无后缀，用手机开热点让树莓派连接，查看到IP后，之后再用远程软件登陆（putty或者Xshell）。树莓派连接不上wifi，就断开电源，重新启动一下。</p>\n<p>对Ubuntu系统换源（把默认的国外下载源换成国内下载源），用下面命令打开文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n<p>arm64与armhf的源不一样，注意区分，下面是arm64的国内清华源：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe</span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe</span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe</span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe</span><br></pre></td></tr></table></figure>\n<p>把<code>sources.list</code>里面存在的文件用#号注释掉，添加上面的文件。</p>\n<p><code>ctrl+o</code>写入，回车， <code>ctrl+x</code>离开。</p>\n<blockquote>\n<p>源文件内容描述</p>\n</blockquote>\n<ul>\n<li><p>ubuntu-ports:表示arm版本的源</p>\n</li>\n<li><p>bionic:是ubuntu18.04的发行版本</p>\n</li>\n<li><p>security：仅修复漏洞，并且尽可能少的改变软件包的行为。低风险。</p>\n</li>\n<li><p>backports：backports的团队则认为最好的更新策略是security 策略加上新版本的软件（包括候选版本的）。但不会由Ubuntu security team审查和更新。</p>\n</li>\n<li><p>updates：修复严重但不影响系统安全运行的漏洞，这类补丁在经过QA人员记录和验证后才提供，和security那类一样低风险。</p>\n</li>\n<li><p>proposed：update类的测试部分，仅建议提供测试和反馈的人进行安装。</p>\n</li>\n<li><p>main：完全的自由软件。</p>\n</li>\n<li><p>muitiverse：非自由软件，完全不提供支持和补丁。</p>\n</li>\n<li><p>restricted：不完全的自由软件。</p>\n</li>\n<li><p>universe：ubuntu官方不提供支持与补丁，全靠社区支持。</p>\n</li>\n</ul>\n<h2 id=\"二、xsens官方驱动使用\"><a href=\"#二、xsens官方驱动使用\" class=\"headerlink\" title=\"二、xsens官方驱动使用\"></a>二、xsens官方驱动使用</h2><h3 id=\"1-官方软件下载和介绍\"><a href=\"#1-官方软件下载和介绍\" class=\"headerlink\" title=\"1.官方软件下载和介绍\"></a>1.官方软件下载和介绍</h3><p>Linux xsens驱动地址：<a href=\"https://content.xsens.com/download-mt-software-suite\">https://content.xsens.com/download-mt-software-suite</a></p>\n<p>电脑选择linux版本下载好之后得到文件<code>MT_Software_Suite_linux-x64_2020.0.2.tar.gz</code>，解压后，可以得到文件<code>mtsdk_linux-x64_2020.0.2.sh</code>，利用命令从本地上传到树莓派服务器。</p>\n<p>树莓派安装lrzsz</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install lrzsz</span><br></pre></td></tr></table></figure>\n\n<p>输入rz上传文件到服务器当前目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rz</span><br></pre></td></tr></table></figure>\n\n<p>输入sz下载文件到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sz ./****.txt</span><br></pre></td></tr></table></figure>\n\n<p>把文件下载到用户目录下后安装mti的sdk</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo ./mtsdk_linux-x64_2020.0.2.sh</span><br></pre></td></tr></table></figure>\n\n<p>可能会提示确实某某文件，安装文件之后再运行，如果点运行报错，可能是没有运行权限，可以增加权限或者使用bash&#x2F;sh命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo bash ./mtsdk_linux-x64_2020.0.2.sh</span><br></pre></td></tr></table></figure>\n\n<p>默认的安装位置<code>[/usr/local/xsens]</code>，可以选择更改到用户目录下<code>/home/ubuntu/xsens</code></p>\n<h3 id=\"2-驱动文件使用介绍\"><a href=\"#2-驱动文件使用介绍\" class=\"headerlink\" title=\"2.驱动文件使用介绍\"></a>2.驱动文件使用介绍</h3><p>驱动文件就是<code>mtsdk_linux-x64_2020.0.2.sh</code>文件，由于官方软件无法在树莓派中适配，所以我们要在官方驱动中使用现成的API，具体可以参考这个文档：<a href=\"https://base.xsens.com/knowledgebase/s/article/Interfacing-MTi-devices-with-the-Raspberry-Pi\">https://base.xsens.com/knowledgebase/s/article/Interfacing-MTi-devices-with-the-Raspberry-Pi</a></p>\n<p>官方问答区：<a href=\"https://base.xsens.com/knowledgebase/s/\">https://base.xsens.com/knowledgebase/s/</a></p>\n<p>我们进入到<code>xsens</code>文件目录下，可以看到文件</p>\n<ul>\n<li>doc \t </li>\n<li>lib\t</li>\n<li>python\t</li>\n<li>examples\t</li>\n<li>MTSDK.README\t</li>\n<li><code>xsens_ros_mti_driver</code>\t</li>\n<li>include</li>\n<li>public        </li>\n<li>Xsens Technologies MT SS License Agreement.rtf</li>\n</ul>\n<p>我们进入<code>example</code>文件夹中，再进入<code>mtsdk</code>文件夹中，可以看到文件</p>\n<ul>\n<li>awindamonitor_cpp\t</li>\n<li>Makefile\t</li>\n<li>xda_public_cpp\t</li>\n<li>embedded_examples\t</li>\n<li>xda_cpp\t</li>\n<li>xda_python</li>\n</ul>\n<p>然后进入到<code>xda_public_cpp</code>文件夹中，可以看到文件</p>\n<ul>\n<li>example_mti_parse_logfile.cpp\t</li>\n<li>Makefile\t</li>\n<li>xspublic\t</li>\n<li>example_mti_receive_data.cpp   </li>\n<li>xda_public_cpp.sln</li>\n</ul>\n<p><code>xspublic</code>文件包含很多需要使用的前置文件，<code>example_mti_receive_data.cpp</code>是接收数据的，可以自动检测是否已经连接MTI传感器， 收集数据产生<code>logfile.mtb</code>文件，<code>example_mti_parse_logfile.cpp</code>可以把数据文件<code>logfile.mtb</code>数据提取转化为<code>exportfile.txt</code>文件，每一行为一次收集的数据。</p>\n<p>在使用前需要对cpp文件进行编译，第一次可能时间会长一点，在当前目录下，打开终端输入，必须安装ros系统才能编译</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo make</span><br></pre></td></tr></table></figure>\n\n<p>产生一系列<code>.o</code>文件和无后缀文件，那些无后缀就是可执行文件，在终端输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo ./example_mti_receive_data</span><br></pre></td></tr></table></figure>\n\n<p>开始接收数据并会输出到终端中，如果无法检测到MTI传感器，在终端输入命令查到MTI的串口位置并提高串口权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ dmesg | grep tty</span><br><span class=\"line\">[    0.570241] printk: console [tty0] enabled</span><br><span class=\"line\">[    2.799819] 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A</span><br><span class=\"line\">[ 5373.377442] usb 2-2.1: xsens_mt converter now attached to ttyUSB0</span><br><span class=\"line\">$ sudo chmod 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure>\n\n<p>可以看到<code>xsens_mt</code>的位置在 <code>ttyUSB0</code>，所以需要提升<code>ttyUSB0</code>的权限</p>\n<p>产生<code>logfile.mtb</code>文件文件后，在终端输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo ./example_mti_parse_logfile</span><br></pre></td></tr></table></figure>\n\n<p><code>产生exportfile.txt</code>文件</p>\n<h3 id=\"3-程序更改部分\"><a href=\"#3-程序更改部分\" class=\"headerlink\" title=\"3.程序更改部分\"></a>3.程序更改部分</h3><p>跳转到用户目录下的<code>xda_public_cpp</code>文件夹中，打开<code>example_mti_receive_data.cpp</code>文件，可以看到</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Important for Public XDA!</span></span><br><span class=\"line\"><span class=\"comment\">// Call this function if you want to record a mtb file:</span></span><br><span class=\"line\">device-&gt;<span class=\"built_in\">readEmtsAndDeviceConfiguration</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">XsOutputConfigurationArray configArray;</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_PacketCounter, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_SampleTimeFine, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"keyword\">if</span> (device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isImu</span>())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Acceleration, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RateOfTurn, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_MagneticField, <span class=\"number\">0</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isVru</span>() || device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isAhrs</span>())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Quaternion, <span class=\"number\">0</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isGnss</span>())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Quaternion, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_LatLon, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_AltitudeEllipsoid, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_VelocityXYZ, <span class=\"number\">0</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">handleError</span>(<span class=\"string\">&quot;Unknown device while configuring. Aborting.&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以看到根据传感器的型号来取什么值并不能取到全部的值，改为下面可以采取各个值，</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// Important for Public XDA!</span></span><br><span class=\"line\"><span class=\"comment\">// Call this function if you want to record a mtb file:</span></span><br><span class=\"line\">device-&gt;<span class=\"built_in\">readEmtsAndDeviceConfiguration</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">XsOutputConfigurationArray configArray;</span><br><span class=\"line\"><span class=\"comment\">//TimeStamp</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_PacketCounter, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_SampleTimeFine, <span class=\"number\">0</span>));</span><br><span class=\"line\"> configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_SampleTimeCoarse, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_UtcTime, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Quaternion</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Quaternion, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RotationMatrix, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_EulerAngles, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Inertial Data</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Acceleration, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_FreeAcceleration, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RateOfTurn, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Magnetic Field</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_MagneticField, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Temperature</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Temperature, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Pressure</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_BaroPressure, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//High-Rate Data</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_AccelerationHR, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RateOfTurnHR, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Status</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_StatusWord, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_StatusByte, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Position and Velocity</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_LatLon, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_AltitudeEllipsoid, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_VelocityXYZ, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//GNSS Data</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_GnssPvtData, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_GnssSatInfo, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n\n<p>根据定义，可以看到各个参数为枚举类型，枚举类定义文档如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//AUTO namespace xstypes &#123;</span></span><br><span class=\"line\"><span class=\"comment\">/*!\t\\enum XsDataIdentifier</span></span><br><span class=\"line\"><span class=\"comment\">\t\\brief Defines the data identifiers</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tThe list of standard data identifiers is shown below.</span></span><br><span class=\"line\"><span class=\"comment\">\tThe last positions in the data identifier depends on the configuration of the data.</span></span><br><span class=\"line\"><span class=\"comment\">\tFor example 0x4020 is 3D acceleration in single precision float format,</span></span><br><span class=\"line\"><span class=\"comment\">\twhere 0x4022 is 3D acceleration in fixed point 16.32 format.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tRefer to the Low Level Communication Protocol for more details.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">XsDataIdentifier</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tXDI_None\t\t\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Empty datatype</span></span><br><span class=\"line\">\tXDI_TypeMask\t\t\t\t= <span class=\"number\">0xFE00</span>,\t<span class=\"comment\">//!&lt; Mask for checking the group which a dataidentifier belongs to, Eg. XDI_TimestampGroup or XDI_OrientationGroup</span></span><br><span class=\"line\">\tXDI_FullTypeMask\t\t\t= <span class=\"number\">0xFFF0</span>,\t<span class=\"comment\">//!&lt; Mask to get the type of data, without the data format</span></span><br><span class=\"line\">\tXDI_FullMask\t\t\t\t= <span class=\"number\">0xFFFF</span>,\t<span class=\"comment\">//!&lt; Complete mask to get entire data identifier</span></span><br><span class=\"line\">\tXDI_FormatMask\t\t\t\t= <span class=\"number\">0x01FF</span>,\t<span class=\"comment\">//!&lt; Mask for getting the data id without checking the group</span></span><br><span class=\"line\">\tXDI_DataFormatMask\t\t\t= <span class=\"number\">0x000F</span>,\t<span class=\"comment\">//!&lt; Mask for extracting just the data format /sa XDI_SubFormat</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_SubFormatMask\t\t\t= <span class=\"number\">0x0003</span>,\t<span class=\"comment\">//!&lt; Determines, float, fp12.20, fp16.32, double output... (where applicable)</span></span><br><span class=\"line\">\tXDI_SubFormatFloat\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Floating point format</span></span><br><span class=\"line\">\tXDI_SubFormatFp1220\t\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Fixed point 12.20</span></span><br><span class=\"line\">\tXDI_SubFormatFp1632\t\t\t= <span class=\"number\">0x0002</span>,\t<span class=\"comment\">//!&lt; Fixed point 16.32</span></span><br><span class=\"line\">\tXDI_SubFormatDouble\t\t\t= <span class=\"number\">0x0003</span>,\t<span class=\"comment\">//!&lt; Double format</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_SubFormatLeft\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Left side data (ie XDI_GloveData for the left hand)</span></span><br><span class=\"line\">\tXDI_SubFormatRight\t\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Right side data (ie XDI_GloveData for the right hand)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_TemperatureGroup\t\t= <span class=\"number\">0x0800</span>,\t<span class=\"comment\">//!&lt; Group for temperature outputs</span></span><br><span class=\"line\">\tXDI_Temperature\t\t\t\t= <span class=\"number\">0x0810</span>,\t<span class=\"comment\">//!&lt; Temperature</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_TimestampGroup\t\t\t= <span class=\"number\">0x1000</span>,\t<span class=\"comment\">//!&lt; Group for time stamp related outputs</span></span><br><span class=\"line\">\tXDI_UtcTime\t\t\t\t\t= <span class=\"number\">0x1010</span>,\t<span class=\"comment\">//!&lt; Utc time from the GNSS receiver</span></span><br><span class=\"line\">\tXDI_PacketCounter\t\t\t= <span class=\"number\">0x1020</span>,\t<span class=\"comment\">//!&lt; Packet counter, increments every packet</span></span><br><span class=\"line\">\tXDI_Itow\t\t\t\t\t= <span class=\"number\">0x1030</span>,\t<span class=\"comment\">//!&lt; Itow. Time Of Week from the GNSS receiver</span></span><br><span class=\"line\">\tXDI_GnssAge\t\t\t\t\t= <span class=\"number\">0x1040</span>,\t<span class=\"comment\">//!&lt; Gnss age from the GNSS receiver</span></span><br><span class=\"line\">\tXDI_PressureAge\t\t\t\t= <span class=\"number\">0x1050</span>,\t<span class=\"comment\">//!&lt; Age of a pressure sample, in packet counts</span></span><br><span class=\"line\">\tXDI_SampleTimeFine\t\t\t= <span class=\"number\">0x1060</span>,\t<span class=\"comment\">//!&lt; Sample Time Fine</span></span><br><span class=\"line\">\tXDI_SampleTimeCoarse\t\t= <span class=\"number\">0x1070</span>,\t<span class=\"comment\">//!&lt; Sample Time Coarse</span></span><br><span class=\"line\">\tXDI_FrameRange\t\t\t\t= <span class=\"number\">0x1080</span>,\t<span class=\"comment\">//!&lt; Reserved \\internal add for MTw (if needed)</span></span><br><span class=\"line\">\tXDI_PacketCounter8\t\t\t= <span class=\"number\">0x1090</span>,\t<span class=\"comment\">//!&lt; 8 bit packet counter, wraps at 256</span></span><br><span class=\"line\">\tXDI_SampleTime64\t\t\t= <span class=\"number\">0x10A0</span>,\t<span class=\"comment\">//!&lt; 64 bit sample time</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_OrientationGroup\t\t= <span class=\"number\">0x2000</span>,\t<span class=\"comment\">//!&lt; Group for orientation related outputs</span></span><br><span class=\"line\">\tXDI_CoordSysMask\t\t\t= <span class=\"number\">0x000C</span>,\t<span class=\"comment\">//!&lt; Mask for the coordinate system part of the orientation data identifier</span></span><br><span class=\"line\">\tXDI_CoordSysEnu\t\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; East North Up orientation output</span></span><br><span class=\"line\">\tXDI_CoordSysNed\t\t\t\t= <span class=\"number\">0x0004</span>,\t<span class=\"comment\">//!&lt; North East Down orientation output</span></span><br><span class=\"line\">\tXDI_CoordSysNwu\t\t\t\t= <span class=\"number\">0x0008</span>,\t<span class=\"comment\">//!&lt; North West Up orientation output</span></span><br><span class=\"line\">\tXDI_Quaternion\t\t\t\t= <span class=\"number\">0x2010</span>,\t<span class=\"comment\">//!&lt; Orientation in quaternion format</span></span><br><span class=\"line\">\tXDI_RotationMatrix\t\t\t= <span class=\"number\">0x2020</span>,\t<span class=\"comment\">//!&lt; Orientation in rotation matrix format</span></span><br><span class=\"line\">\tXDI_EulerAngles\t\t\t\t= <span class=\"number\">0x2030</span>,\t<span class=\"comment\">//!&lt; Orientation in euler angles format</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_PressureGroup\t\t\t= <span class=\"number\">0x3000</span>,\t<span class=\"comment\">//!&lt; Group for pressure related outputs</span></span><br><span class=\"line\">\tXDI_BaroPressure\t\t\t= <span class=\"number\">0x3010</span>,\t<span class=\"comment\">//!&lt; Pressure output recorded from the barometer</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_AccelerationGroup\t\t= <span class=\"number\">0x4000</span>,\t<span class=\"comment\">//!&lt; Group for acceleration related outputs</span></span><br><span class=\"line\">\tXDI_DeltaV\t\t\t\t\t= <span class=\"number\">0x4010</span>,\t<span class=\"comment\">//!&lt; DeltaV SDI data output</span></span><br><span class=\"line\">\tXDI_Acceleration\t\t\t= <span class=\"number\">0x4020</span>,\t<span class=\"comment\">//!&lt; Acceleration output in m/s2</span></span><br><span class=\"line\">\tXDI_FreeAcceleration\t\t= <span class=\"number\">0x4030</span>,\t<span class=\"comment\">//!&lt; Free acceleration output in m/s2</span></span><br><span class=\"line\">\tXDI_AccelerationHR\t\t\t= <span class=\"number\">0x4040</span>,\t<span class=\"comment\">//!&lt; AccelerationHR output</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_IndicationGroup\t\t\t= <span class=\"number\">0x4800</span>,\t<span class=\"comment\">//!&lt; 0100.1000 -&gt; bit reverse = 0001.0010 -&gt; type 18</span></span><br><span class=\"line\">\tXDI_TriggerIn1\t\t\t\t= <span class=\"number\">0x4810</span>,\t<span class=\"comment\">//!&lt; Trigger in 1 indication</span></span><br><span class=\"line\">\tXDI_TriggerIn2\t\t\t\t= <span class=\"number\">0x4820</span>,\t<span class=\"comment\">//!&lt; Trigger in 2 indication</span></span><br><span class=\"line\">\tXDI_TriggerIn3\t\t\t\t= <span class=\"number\">0x4830</span>,\t<span class=\"comment\">//!&lt; Trigger in 3 indication</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_PositionGroup\t\t\t= <span class=\"number\">0x5000</span>,\t<span class=\"comment\">//!&lt; Group for position related outputs</span></span><br><span class=\"line\">\tXDI_AltitudeMsl\t\t\t\t= <span class=\"number\">0x5010</span>,\t<span class=\"comment\">//!&lt; Altitude at Mean Sea Level</span></span><br><span class=\"line\">\tXDI_AltitudeEllipsoid\t\t= <span class=\"number\">0x5020</span>,\t<span class=\"comment\">//!&lt; Altitude at ellipsoid</span></span><br><span class=\"line\">\tXDI_PositionEcef\t\t\t= <span class=\"number\">0x5030</span>,\t<span class=\"comment\">//!&lt; Position in earth-centered, earth-fixed format</span></span><br><span class=\"line\">\tXDI_LatLon\t\t\t\t\t= <span class=\"number\">0x5040</span>,\t<span class=\"comment\">//!&lt; Position in latitude, longitude</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_GnssGroup\t\t\t\t= <span class=\"number\">0x7000</span>,\t<span class=\"comment\">//!&lt; Group for Gnss related outputs</span></span><br><span class=\"line\">\tXDI_GnssPvtData\t\t\t\t= <span class=\"number\">0x7010</span>,\t<span class=\"comment\">//!&lt; Gnss position, velocity and time data</span></span><br><span class=\"line\">\tXDI_GnssSatInfo\t\t\t\t= <span class=\"number\">0x7020</span>,\t<span class=\"comment\">//!&lt; Gnss satellite information</span></span><br><span class=\"line\">\tXDI_GnssPvtPulse\t\t\t= <span class=\"number\">0x7030</span>,\t<span class=\"comment\">//!&lt; Time of the PVT timepulse (4Hz upsampled from the 1PPS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_AngularVelocityGroup\t= <span class=\"number\">0x8000</span>,\t<span class=\"comment\">//!&lt; Group for angular velocity related outputs</span></span><br><span class=\"line\">\tXDI_RateOfTurn\t\t\t\t= <span class=\"number\">0x8020</span>,\t<span class=\"comment\">//!&lt; Rate of turn data in rad/sec</span></span><br><span class=\"line\">\tXDI_DeltaQ\t\t\t\t\t= <span class=\"number\">0x8030</span>,\t<span class=\"comment\">//!&lt; DeltaQ SDI data</span></span><br><span class=\"line\">\tXDI_RateOfTurnHR\t\t\t= <span class=\"number\">0x8040</span>,\t<span class=\"comment\">//!&lt; Rate of turn HR data</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_RawSensorGroup\t\t\t= <span class=\"number\">0xA000</span>,\t<span class=\"comment\">//!&lt; Group for raw sensor data related outputs</span></span><br><span class=\"line\">\tXDI_RawUnsigned\t\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Tracker produces unsigned raw values, usually fixed behavior</span></span><br><span class=\"line\">\tXDI_RawSigned\t\t\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Tracker produces signed raw values, usually fixed behavior</span></span><br><span class=\"line\">\tXDI_RawAccGyrMagTemp\t\t= <span class=\"number\">0xA010</span>,\t<span class=\"comment\">//!&lt; Raw acceleration, gyroscope, magnetometer and temperature data</span></span><br><span class=\"line\">\tXDI_RawGyroTemp\t\t\t\t= <span class=\"number\">0xA020</span>,\t<span class=\"comment\">//!&lt; Raw gyroscope and temperature data</span></span><br><span class=\"line\">\tXDI_RawAcc\t\t\t\t\t= <span class=\"number\">0xA030</span>,\t<span class=\"comment\">//!&lt; Raw acceleration data</span></span><br><span class=\"line\">\tXDI_RawGyr\t\t\t\t\t= <span class=\"number\">0xA040</span>,\t<span class=\"comment\">//!&lt; Raw gyroscope data</span></span><br><span class=\"line\">\tXDI_RawMag\t\t\t\t\t= <span class=\"number\">0xA050</span>,\t<span class=\"comment\">//!&lt; Raw magnetometer data</span></span><br><span class=\"line\">\tXDI_RawDeltaQ\t\t\t\t= <span class=\"number\">0xA060</span>,\t<span class=\"comment\">//!&lt; Raw deltaQ SDI data</span></span><br><span class=\"line\">\tXDI_RawDeltaV\t\t\t\t= <span class=\"number\">0xA070</span>,\t<span class=\"comment\">//!&lt; Raw deltaV SDI data</span></span><br><span class=\"line\">\tXDI_RawBlob\t\t\t\t\t= <span class=\"number\">0xA080</span>,\t<span class=\"comment\">//!&lt; Raw blob data</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_AnalogInGroup\t\t\t= <span class=\"number\">0xB000</span>,\t<span class=\"comment\">//!&lt; Group for analog in related outputs</span></span><br><span class=\"line\">\tXDI_AnalogIn1\t\t\t\t= <span class=\"number\">0xB010</span>,\t<span class=\"comment\">//!&lt; Data containing adc data from analog in 1 line (if present)</span></span><br><span class=\"line\">\tXDI_AnalogIn2\t\t\t\t= <span class=\"number\">0xB020</span>,\t<span class=\"comment\">//!&lt; Data containing adc data from analog in 2 line (if present)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_MagneticGroup\t\t\t= <span class=\"number\">0xC000</span>,\t<span class=\"comment\">//!&lt; Group for magnetometer related outputs</span></span><br><span class=\"line\">\tXDI_MagneticField\t\t\t= <span class=\"number\">0xC020</span>,\t<span class=\"comment\">//!&lt; Magnetic field data in a.u.</span></span><br><span class=\"line\">\tXDI_MagneticFieldCorrected\t= <span class=\"number\">0xC030</span>,\t<span class=\"comment\">//!&lt; Corrected Magnetic field data in a.u. (ICC result)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_SnapshotGroup\t\t\t= <span class=\"number\">0xC800</span>,\t<span class=\"comment\">//!&lt; Group for snapshot related outputs</span></span><br><span class=\"line\">\tXDI_RetransmissionMask\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Mask for the retransmission bit in the snapshot data</span></span><br><span class=\"line\">\tXDI_RetransmissionFlag\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Bit indicating if the snapshot if from a retransmission</span></span><br><span class=\"line\">\tXDI_AwindaSnapshot\t\t\t= <span class=\"number\">0xC810</span>,\t<span class=\"comment\">//!&lt; Awinda type snapshot</span></span><br><span class=\"line\">\tXDI_FullSnapshot\t\t\t= <span class=\"number\">0xC820</span>,\t<span class=\"comment\">//!&lt; Full snapshot</span></span><br><span class=\"line\">\tXDI_GloveSnapshotLeft\t\t= <span class=\"number\">0xC830</span>, \t<span class=\"comment\">//!&lt; Glove Snapshot for Left Hand</span></span><br><span class=\"line\">\tXDI_GloveSnapshotRight\t\t= <span class=\"number\">0xC840</span>, \t<span class=\"comment\">//!&lt; Glove Snapshot for Right Hand</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// The numbers of the GloveData items should match the GloveSnapshot items, but in the CA range</span></span><br><span class=\"line\">\tXDI_GloveDataGroup\t\t\t= <span class=\"number\">0xCA00</span>,\t<span class=\"comment\">//!&lt; Group for usable glove data</span></span><br><span class=\"line\">\tXDI_GloveDataLeft\t\t\t= <span class=\"number\">0xCA30</span>, \t<span class=\"comment\">//!&lt; Glove Data for Left Hand</span></span><br><span class=\"line\">\tXDI_GloveDataRight\t\t\t= <span class=\"number\">0xCA40</span>, \t<span class=\"comment\">//!&lt; Glove Data for Right Hand</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_VelocityGroup\t\t\t= <span class=\"number\">0xD000</span>,\t<span class=\"comment\">//!&lt; Group for velocity related outputs</span></span><br><span class=\"line\">\tXDI_VelocityXYZ\t\t\t\t= <span class=\"number\">0xD010</span>,\t<span class=\"comment\">//!&lt; Velocity in XYZ coordinate frame</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_StatusGroup\t\t\t\t= <span class=\"number\">0xE000</span>,\t<span class=\"comment\">//!&lt; Group for status related outputs</span></span><br><span class=\"line\">\tXDI_StatusByte\t\t\t\t= <span class=\"number\">0xE010</span>,\t<span class=\"comment\">//!&lt; Status byte</span></span><br><span class=\"line\">\tXDI_StatusWord\t\t\t\t= <span class=\"number\">0xE020</span>,\t<span class=\"comment\">//!&lt; Status word</span></span><br><span class=\"line\">\tXDI_Rssi\t\t\t\t\t= <span class=\"number\">0xE040</span>,\t<span class=\"comment\">//!&lt; Rssi information</span></span><br><span class=\"line\">\tXDI_DeviceId\t\t\t\t= <span class=\"number\">0xE080</span>,\t<span class=\"comment\">//!&lt; DeviceId output</span></span><br><span class=\"line\">\tXDI_LocationId\t\t\t\t= <span class=\"number\">0xE090</span>,\t<span class=\"comment\">//!&lt; LocationId output</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">/*! @&#125; */</span></span><br></pre></td></tr></table></figure>\n\n<p>根据自己需要采集的数据来设定参数</p>\n<h2 id=\"三、ros系统的安装与使用\"><a href=\"#三、ros系统的安装与使用\" class=\"headerlink\" title=\"三、ros系统的安装与使用\"></a>三、ros系统的安装与使用</h2><h3 id=\"1-环境配置\"><a href=\"#1-环境配置\" class=\"headerlink\" title=\"1.环境配置\"></a>1.环境配置</h3><p>可以根据官网的教程安装ros系统<a href=\"http://wiki.ros.org/melodic/Installation/Ubuntu\">http://wiki.ros.org/melodic/Installation/Ubuntu</a></p>\n<blockquote>\n<p> 配置资源表</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sh -c &#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置密钥</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --keyserver &#x27;hkp://keyserver.ubuntu.com:80&#x27; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 安装ros基础版没有桌面工具</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install ros-melodic-ros-base</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 环境配置</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>初始化ros</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br><span class=\"line\">sudo rosdep init</span><br><span class=\"line\">rosdep update</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 运行ros</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">roscore</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>常见错误：</p>\n<blockquote>\n<p>ERROR: cannot download default sources list from:</p>\n<p><a href=\"https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list\">https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list</a></p>\n<p>Website may be down.</p>\n</blockquote>\n<p>网速慢，修改hosts，提前设置好IP</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo nano /etc/hosts</span><br></pre></td></tr></table></figure>\n\n<p>添加以下内容保存即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">185.199.108.133 raw.githubusercontent.com</span><br><span class=\"line\">185.199.109.133 raw.githubusercontent.com</span><br><span class=\"line\">185.199.110.133 raw.githubusercontent.com</span><br><span class=\"line\">185.199.111.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ERROR: default sources list file already exists:</p>\n<p>&#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.list</p>\n<p>Please delete if you wish to re-initialize</p>\n</blockquote>\n<p>表示已经存在了文件，删除文件后，重新运行<code>sudo rosdep init</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo rm /etc/ros/rosdep/sources.list.d/20-default.list</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><code>rosdep update</code> 超时，最经常发生的问题</p>\n<p>方法一：使用手机热点，多试几次，移动，联通网都试一试</p>\n<p>方法二：使用延长加载时间</p>\n<p>在下面的文件中，有<code>DEFAULT_TIME_OUT=15.0</code>，改为180，再试一次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py</span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py </span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/rep3.py</span><br></pre></td></tr></table></figure>\n\n<p>方法三：使用代理</p>\n<p>再文件夹<code>/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py</code>中，找到下面函数并修改<code>url</code>的赋值语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">download_rosdep_data</span>(<span class=\"params\">url</span>):</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">try</span>:</span><br><span class=\"line\">    url=<span class=\"string\">&quot;https://ghproxy.com/&quot;</span>+url</span><br></pre></td></tr></table></figure>\n\n<p>然后在下面文件夹中找到类似这样的全局变量，修改为下面这样</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEFAULT_INDEX_URL = <span class=\"string\">&#x27;https://ghproxy.com/https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py</span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py </span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/rep3.py</span><br></pre></td></tr></table></figure>\n\n<p>再试一次，应该就可以了</p>\n<p>方法四：下载文件到本地</p>\n<p>在本地下载好后，修改各个文件，加载目标文件，详情见：<a href=\"https://blog.csdn.net/sinat_25923849/article/details/107976434\">https://blog.csdn.net/sinat_25923849/article/details/107976434</a></p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t下面部分，作为研究查看</p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<h3 id=\"2-连接MTI\"><a href=\"#2-连接MTI\" class=\"headerlink\" title=\"2.连接MTI\"></a>2.连接MTI</h3><p>我们的MTI型号：<code>MTi-G-710-2A8G4</code>，查看xsens_driver可支持ros版本，详情见官网：<a href=\"http://wiki.ros.org/xsens_driver\">http://wiki.ros.org/xsens_driver</a></p>\n<p>可以看到xsens_driver只支持melodic和 kinetic的ros系统，ros系统支持的系统见官网：<a href=\"http://wiki.ros.org/ROS/Installation\">http://wiki.ros.org/ROS/Installation</a></p>\n<p>所以我们选择melodic的版本，要下载xsens_driver需要看到下面的Source对应的链接：<a href=\"https://github.com/ethz-asl/ethzasl_xsens_driver\">https://github.com/ethz-asl/ethzasl_xsens_driver</a></p>\n<p>除了 这个驱动之外，还有一个驱动就在我们下载官方的软件包中，安装完mtsdk后，在xsens文件夹下，可以看到<code>xsens_ros_mti_driver</code></p>\n<blockquote>\n<p>xsens_driver驱动安装</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ros-melodic-xsens-driver</span><br><span class=\"line\">roscore</span><br><span class=\"line\">rosstack profile</span><br><span class=\"line\">rospack profile</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>修改访问MTI设备的权限，ttyUSB0换成你的设备号</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>启动MTI</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">roslaunch xsens_driver xsens_driver.launch</span><br><span class=\"line\">rostopic list</span><br><span class=\"line\">rostopic echo /imu/data</span><br></pre></td></tr></table></figure>\n\n<p>出现数据说明OK了，连接成功</p>\n<hr>\n<blockquote>\n<p><strong>Tips：</strong></p>\n<p>所有关于节点的操作都要在运行<code>xsens_driver.launch</code>的前提下</p>\n<p>ubuntu 查看USB对应的串口:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dmesg | grep tty</span><br></pre></td></tr></table></figure>\n\n<p>第三方插件安装命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ros-melodic-**</span><br></pre></td></tr></table></figure>\n\n<p>可视化查看节点之间的关系</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rqt_graph</span><br></pre></td></tr></table></figure>\n\n<p>查看驱动节点的信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rosnode info /xsens_driver</span><br></pre></td></tr></table></figure>\n\n<p>话题列表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rostopic list</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"3-xsens-driver节点简述\"><a href=\"#3-xsens-driver节点简述\" class=\"headerlink\" title=\"3.xsens_driver节点简述\"></a>3.xsens_driver节点简述</h3><p>MTI数据传输是通过<code>xsens_driver</code>这个节点以话题订阅的方式进行的，<code>xsens_driver</code>节点不停发布数据所以要想获取数据必须要订阅话题</p>\n<p>我们先查看<code>xsens_driver</code>节点有用的信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosnode info /xsens_driver</span><br><span class=\"line\"></span><br><span class=\"line\">Node [/xsens_driver]</span><br><span class=\"line\">Publications: </span><br><span class=\"line\"> * /imu/data [sensor_msgs/Imu]</span><br><span class=\"line\"> * /imu_data_str [std_msgs/String]</span><br><span class=\"line\"> * /rosout [rosgraph_msgs/Log]</span><br><span class=\"line\"> * /time_reference [sensor_msgs/TimeReference]</span><br><span class=\"line\"></span><br><span class=\"line\">Subscriptions: None</span><br><span class=\"line\"></span><br><span class=\"line\">Services: </span><br><span class=\"line\"> * /xsens_driver/get_loggers</span><br><span class=\"line\"> * /xsens_driver/set_logger_level</span><br></pre></td></tr></table></figure>\n\n<p>可以看到它有有4个话题发布，没有订阅，两个服务，通过不同时间不同时候话题发布的也不同。实际话题发布比较少，是因为只有在有要发布的数据时才会公布主题，没有数据就不会发布。接下来，我们可以查看其中一个的数据结构，上面的<code>/rosout</code>是ros 系统自带的，不属于它自己的。</p>\n<blockquote>\n<p>查看驱动<code>/xsens_driver</code>节点发布<code>/imu/data</code>话题的消息[sensor_msgs&#x2F;Imu]结构：</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosmsg show sensor_msgs/Imu</span><br><span class=\"line\"></span><br><span class=\"line\">std_msgs/Header header</span><br><span class=\"line\">  uint32 seq</span><br><span class=\"line\">  time stamp</span><br><span class=\"line\">  string frame_id</span><br><span class=\"line\">geometry_msgs/Quaternion orientation</span><br><span class=\"line\">  float64 x</span><br><span class=\"line\">  float64 y</span><br><span class=\"line\">  float64 z</span><br><span class=\"line\">  float64 w</span><br><span class=\"line\">float64[9] orientation_covariance</span><br><span class=\"line\">geometry_msgs/Vector3 angular_velocity</span><br><span class=\"line\">  float64 x</span><br><span class=\"line\">  float64 y</span><br><span class=\"line\">  float64 z</span><br><span class=\"line\">float64[9] angular_velocity_covariance</span><br><span class=\"line\">geometry_msgs/Vector3 linear_acceleration</span><br><span class=\"line\">  float64 x</span><br><span class=\"line\">  float64 y</span><br><span class=\"line\">  float64 z</span><br><span class=\"line\">float64[9] linear_acceleration_covariance</span><br></pre></td></tr></table></figure>\n\n<p>实际上可以通过查看<code>xsens_driver</code>驱动的ros官网查看所有可以产生的话题，列出以下表格：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">话题</th>\n<th align=\"center\">数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>imu/data (sensor_msgs/Imu)</code></td>\n<td align=\"center\">方位角速度和线加速度</td>\n</tr>\n<tr>\n<td align=\"center\"><code>fix (sensor_msgs/NavSatFix)</code></td>\n<td align=\"center\">经度、纬度和海拔（来自GPS，仅适用于MTi-G）</td>\n</tr>\n<tr>\n<td align=\"center\"><code>velocity (geometry_msgs/TwistStamped)</code></td>\n<td align=\"center\">速度信息（仅来自GPS的线性）</td>\n</tr>\n<tr>\n<td align=\"center\"><code>imu/mag (sensor_msgs/MagneticField)</code></td>\n<td align=\"center\">磁场信息</td>\n</tr>\n<tr>\n<td align=\"center\"><code>temperature (sensor_msgs/Temperature)</code></td>\n<td align=\"center\">传感器温度</td>\n</tr>\n<tr>\n<td align=\"center\"><code>pressure (sensor_msgs/FluidPressure)</code></td>\n<td align=\"center\">压力信息</td>\n</tr>\n<tr>\n<td align=\"center\"><code>analog_in1 (std_msgs/UInt16)</code></td>\n<td align=\"center\">第一个模拟输入</td>\n</tr>\n<tr>\n<td align=\"center\"><code>analog_in2 (std_msgs/UInt16)</code></td>\n<td align=\"center\">第二个模拟输入</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ecef (geometry_msgs/PointStamped)</code></td>\n<td align=\"center\">ECEF位置（仅适用于带GPS的设备）</td>\n</tr>\n<tr>\n<td align=\"center\"><code>time_reference (sensor_msgs/TimeReference)</code></td>\n<td align=\"center\">来自设备的时间信息</td>\n</tr>\n<tr>\n<td align=\"center\"><code>imu_data_str (std_msgs/String)</code></td>\n<td align=\"center\">从IMU解析的所有数据的字符串版本</td>\n</tr>\n</tbody></table>\n<p>所以，我们只要用程序订阅<code>/xsens_driver</code>节点发出的数据并存储就行了。</p>\n<h3 id=\"4-用c-程序来订阅话题数据示例\"><a href=\"#4-用c-程序来订阅话题数据示例\" class=\"headerlink\" title=\"4.用c++程序来订阅话题数据示例\"></a>4.用c++程序来订阅话题数据示例</h3><p>首先要创建工作空间(<code>worksapce</code>)是存放工程相关文件的文件夹，分为以下四个文件夹</p>\n<ul>\n<li><code>src</code>：代码空间</li>\n<li><code>build</code>：编译空间</li>\n<li><code>devel</code>：开发空间</li>\n<li><code>install</code>：安装空间</li>\n</ul>\n<blockquote>\n<p>创建<code>catkin_ws</code>工作空间</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p ~/catkin_ws/src</span><br><span class=\"line\">$ cd ~/catkin_ws/src</span><br><span class=\"line\">$ catkin_init_worksapce</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译工作空间</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置环境变量</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ source devel/setup.bash</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>检查环境变量设置是否正确</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo $ROS_PACKAGE_PATH</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建<code>test_pkgstd_msgs</code>功能包，并添加 <code>rospy</code>和<code>roscpp</code>依赖，一个针对python编程，一个针对c++编程</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws/src</span><br><span class=\"line\">$ catkin_create_pkg test_pkgstd_msgs rospy roscpp</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译功能包</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br><span class=\"line\">$ source ~/catkin_ws/devel/setup.bash</span><br></pre></td></tr></table></figure>\n\n<p><em>注意：同一个工作空间下，不允许同名的功能包；不同工作空间下，允许同名的功能包</em>；</p>\n<hr>\n<p>所有的程序都要写在功能包里面，要先创建空的功能包，再编译空的功能包，再打开功能包可以看到有<code>src</code>文件夹，在<code>src</code>文件夹里面写程序</p>\n<p>以海龟仿真器为例子，通过订阅<code>/turtle1/pose</code>话题来接收位置信息</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 订阅/turtle/pose话题，消息类型为turtlesim::Pose</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ros/ros.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;turtlesim/Pose.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//接收订阅消息后，会进入消息回调函数，在数据进来时会类似中断，执行完成后才执行下一个数据，不会嵌套</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">poseCallback</span><span class=\"params\">(<span class=\"type\">const</span> turtlesim::Pose::ConstPtr&amp; msg)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//将接受到的消息打印出来</span></span><br><span class=\"line\">    <span class=\"built_in\">ROS_INFO</span>(<span class=\"string\">&quot;Turtle Pose: x:%0.6f, y:%0.6f&quot;</span>,msg-&gt;x,msg-&gt;y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc,<span class=\"type\">char</span> **argv)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//初始化Ros节点,pose_subscriber是该程序文件的名字</span></span><br><span class=\"line\">    ros::<span class=\"built_in\">init</span>(argc,argv,<span class=\"string\">&quot;pose_subscriber&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//创建节点句柄</span></span><br><span class=\"line\">    ros::NodeHandle n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//创建一个Subscriber,订阅名为/turtle/pose的topic，注册回调函数poseCallback,10为话题订阅的队列长度就是缓冲区</span></span><br><span class=\"line\">    ros::Subscriber pose_sub = n.<span class=\"built_in\">subscriber</span>(<span class=\"string\">&quot;/turtle/pose&quot;</span>,<span class=\"number\">10</span>,poseCallback);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//循环等待回调函数</span></span><br><span class=\"line\">    ros::<span class=\"built_in\">spin</span>();</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>程序写好后，在功能包目录下，打开 <code>CMakeLists.txt</code>文本文件，找到如下的文本，添加上面一句话，保存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_executable(pose_subscriber src/pose_subscriber.cpp)</span><br><span class=\"line\">target_link_libraries(pose_subscriber $&#123;catkin_LIBRARIES&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">##############</span><br><span class=\"line\">## Install \t##</span><br><span class=\"line\">##############</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译功能包</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行程序</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosrun test_pkgstd_msgs pose_subscriber</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"5-ros系统其他一些功能简述\"><a href=\"#5-ros系统其他一些功能简述\" class=\"headerlink\" title=\"5.ros系统其他一些功能简述\"></a>5.ros系统其他一些功能简述</h3><h4 id=\"（1）参数使用\"><a href=\"#（1）参数使用\" class=\"headerlink\" title=\"（1）参数使用\"></a>（1）参数使用</h4><blockquote>\n<p>参数就类似全局字典，所有节点都可以访问，在运行<code>xsens_driver.launch</code>文件下</p>\n<p>查看所有参数</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam list</span><br><span class=\"line\"></span><br><span class=\"line\">/rosdistro</span><br><span class=\"line\">/roslaunch/uris/host_pi_virtual_machine__32831</span><br><span class=\"line\">/rosversion</span><br><span class=\"line\">/run_id</span><br><span class=\"line\">/xsens_driver/angular_velocity_covariance_diagonal</span><br><span class=\"line\">/xsens_driver/baudrate</span><br><span class=\"line\">/xsens_driver/device</span><br><span class=\"line\">/xsens_driver/frame_id</span><br><span class=\"line\">/xsens_driver/frame_local</span><br><span class=\"line\">/xsens_driver/initial_wait</span><br><span class=\"line\">/xsens_driver/linear_acceleration_covariance_diagonal</span><br><span class=\"line\">/xsens_driver/no_rotation_duration</span><br><span class=\"line\">/xsens_driver/orientation_covariance_diagonal</span><br><span class=\"line\">/xsens_driver/timeout</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>显示某个参数的值</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam get /xsens_driver/baudrate</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置某个参数的值</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam set /xsens_driver/baudrate 115200</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>保存参数到当前目录下文件</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam dump xsens_driver_param</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>打开<code>xsens_driver_param</code>文件</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><em>可以在上面修改数值，就可以统一修改参数</em></p>\n<blockquote>\n<p>从文件读取参数</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam load xsens_driver_param</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除参数</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam delete /xsens_driver/baudrate</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>以小海龟仿真程序为例，用c++程序读取和设置参数</p>\n<blockquote>\n<p>创建功能包</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws/src</span><br><span class=\"line\">$ catkin_create_pkg learning_parameter roscs</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>配置 <code>CMakeLists.txt</code>文本文件的编译规则</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_executable(parameter_config src/parameter_config.cpp)</span><br><span class=\"line\">target_link_libraries(parameter_config $&#123;catkin_LIBRARIES&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">##############</span><br><span class=\"line\">## Install \t##</span><br><span class=\"line\">##############</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译运行</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br><span class=\"line\">$ source devel/setup.bash</span><br><span class=\"line\">$ roscore</span><br><span class=\"line\">$ rosrun turtlesim turtlesim_node</span><br><span class=\"line\">$ rosrun learning_parameter parameter_config</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"（2）launch文件使用简述\"><a href=\"#（2）launch文件使用简述\" class=\"headerlink\" title=\"（2）launch文件使用简述\"></a>（2）launch文件使用简述</h4><p>当订阅多个话题时或者需要其他操作，那么需要运行多个程序而且每次都要启动ros系统，所以我们可以把这些操作全部封装在<code>.launch</code>文件中，之后运行程序就和驱动程序一样运行<code>.launch</code>文件就行了。</p>\n<blockquote>\n<p>launch文件部分语法：xml</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">launch</span>&gt;</span></span><br><span class=\"line\">    //启动节点</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">node</span> <span class=\"attr\">pkg</span>=<span class=\"string\">&quot;package-name&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;executable-name&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;node-name&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>pkg</code>：节点所在的功能包名称</li>\n<li><code>type</code>：节点可执行文件名称</li>\n<li><code>name</code>：节点运行时名称</li>\n<li><code>output</code>、 <code>respawn</code>、<code>ns</code>、<code>args</code>、<code>required</code></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">launch</span>&gt;</span></span><br><span class=\"line\">    //设置ros系统运行中的参数，存储在服务器中</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;output_frame&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;odom&quot;</span>/&gt;</span></span><br><span class=\"line\">    //加载参数文件的多个参数</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rosparam</span> <span class=\"attr\">file</span>=<span class=\"string\">&quot;param.yaml&quot;</span> <span class=\"attr\">command</span>=<span class=\"string\">&quot;load&quot;</span> <span class=\"attr\">ns</span>=<span class=\"string\">&quot;params&quot;</span>/&gt;</span></span><br><span class=\"line\">    //launch文件内部的局部变量</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;arg-name&quot;</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;arg-value&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>name：参数名</li>\n<li>value：参数值</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">launch</span>&gt;</span></span><br><span class=\"line\">    //包含其他launch文件，file为launch文件路径</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">file</span>=<span class=\"string\">&quot;$(dirname)/other.launch&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>还有等等其他标签，可以在里面设置参数，而且默认启动ros，不用手动设置了，详情见：<a href=\"http://wiki.ros.org/roslaunch\">http://wiki.ros.org/roslaunch</a></p>\n<p>要想使用launch文件需要先在工作空间中建立功能包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ catkin_create_pkg learning_launch</span><br></pre></td></tr></table></figure>\n\n<p>在功能包建立launch文件夹存储launch文件，在添加新的launch文件时要对工作空间重新编译，然后运行<code>example.launch</code>文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">roslaunch learning_launch example.launch</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h2><h3 id=\"1-连接树莓派\"><a href=\"#1-连接树莓派\" class=\"headerlink\" title=\"1.连接树莓派\"></a>1.连接树莓派</h3><p>可以直接用手机开热点，修改wifi名或者密码到上面，也可以修改network-config文件，更改wifi，可能连接不上，多试几次给树莓派断电。在手机上可以直接查看到树莓派IP，其他地方的话使用Advanced IP Scanner软件查看树莓派IP，得到IP地址后，利用putty或者Xshell连接树莓派。</p>\n<h3 id=\"2-跳转到可执行文件的目录\"><a href=\"#2-跳转到可执行文件的目录\" class=\"headerlink\" title=\"2.跳转到可执行文件的目录\"></a>2.跳转到可执行文件的目录</h3><p>在putty或者Xshell终端上使用命令，跳转到目录里面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd xsens/examples/mtsdk/xda_public_cpp</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-数据采集\"><a href=\"#3-数据采集\" class=\"headerlink\" title=\"3.数据采集\"></a>3.数据采集</h3><p>输入命令，开始采集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ./example_mti_receive_data</span><br></pre></td></tr></table></figure>\n\n<p>该cpp文件被修改过，需要输入采集时间（单位：s）。如果不需要那么多数据，可以修改<code>example_mti_receive_data.cpp</code>文件，然后注释掉某些命令。</p>\n<h3 id=\"4-数据解析\"><a href=\"#4-数据解析\" class=\"headerlink\" title=\"4.数据解析\"></a>4.数据解析</h3><p>源文件有解析数据的，但是不好用，下载到本地（Windows电脑上），利用命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sz logfile.mtb</span><br></pre></td></tr></table></figure>\n\n<p>下载Windows电脑的MTI的软件，官网地址：<a href=\"https://content.xsens.com/download-mt-software-suite%EF%BC%8C%E9%80%89%E6%8B%A9Windows%E7%89%88%E6%9C%AC%E7%9A%84%E3%80%82\">https://content.xsens.com/download-mt-software-suite，选择Windows版本的。</a></p>\n<p>找到<code>MT Manager</code>文件夹打开，运行<code>mtmanager64.exe</code>程序，打开桌面端。</p>\n<p>打开程序后，选择菜单栏的File-&gt;Open File，选择<code>logfile.mtb</code>文件，加载数据。</p>\n<p>菜单栏File-&gt;Export导出数据。</p>\n","more":"<h1 id=\"树莓派接收传感器MTI-G-710数据\"><a href=\"#树莓派接收传感器MTI-G-710数据\" class=\"headerlink\" title=\"树莓派接收传感器MTI-G-710数据\"></a>树莓派接收传感器MTI-G-710数据</h1><h2 id=\"一、树莓派系统安装\"><a href=\"#一、树莓派系统安装\" class=\"headerlink\" title=\"一、树莓派系统安装\"></a>一、树莓派系统安装</h2><h3 id=\"1-系统选择\"><a href=\"#1-系统选择\" class=\"headerlink\" title=\"1.系统选择\"></a>1.系统选择</h3><p>官方系统下载：<a href=\"https://www.raspberrypi.org/software/operating-systems/\">https://www.raspberrypi.org/software/operating-systems/</a></p>\n<p>官方OS中分别有桌面和一些常用软件的版本，只有桌面的版本，没有桌面的Lite版本，所以只要安装第二个只带桌面版就可以了，树莓派的官方OS自带ros系统，安装方式与其他系统不一样，比较麻烦，所以我们安装第三方系统。</p>\n<p>Ubuntu的第三方系统：<a href=\"https://ubuntu.com/download/raspberry-pi\">https://ubuntu.com/download/raspberry-pi</a></p>\n<p>Ubuntu mate的第三方系统:<a href=\"https://ubuntu-mate.org/download/\">https://ubuntu-mate.org/download/</a></p>\n<p>Ubuntu的老版本系统：<a href=\"https://old-releases.ubuntu.com/releases/18.04.4/\">https://old-releases.ubuntu.com/releases/18.04.4/</a></p>\n<p>由于我们的树莓派版本是3B+，在Ubuntu系统中，建议安装18.04的版本，ros系统安装Melodic版本，与MTI的SDK文档要求的ros系统版本一致。为了减轻树莓派负担，从Ubuntu的老版本系统选择<code>ubuntu-18.04.4-preinstalled-server-arm64+raspi3.img.xz</code>文件下载，解压。选择arm64的版本原因：arm64可以修改内部的网络配置文件，armhf的不行。</p>\n<h3 id=\"2-系统安装\"><a href=\"#2-系统安装\" class=\"headerlink\" title=\"2.系统安装\"></a>2.系统安装</h3><p>由于下载的好的系统文件是img文件，不同于iso文件，需要特别的软件写入读卡器，软件名为Win32DiskImager，可以上网搜索安装下来使用，还有格式化系统所需要的配套软件SD Card Formatter。打开system-boot盘，找到network-config文件，修改后面的文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wifis:</span><br><span class=\"line\">  wlan0:</span><br><span class=\"line\">    dhcp4: true</span><br><span class=\"line\">    dhcp6: true</span><br><span class=\"line\">    optional: true</span><br><span class=\"line\">    access-points:</span><br><span class=\"line\">      &quot;填上你的WIFI名称&quot;:</span><br><span class=\"line\">        password: &quot;WIFI密码&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Ubuntu系统的默认用户是ubuntu，密码是ubuntu。树莓派官方系统的默认用户pi，密码raspberry。在文件盘符新建文件ssh无后缀，用手机开热点让树莓派连接，查看到IP后，之后再用远程软件登陆（putty或者Xshell）。树莓派连接不上wifi，就断开电源，重新启动一下。</p>\n<p>对Ubuntu系统换源（把默认的国外下载源换成国内下载源），用下面命令打开文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n<p>arm64与armhf的源不一样，注意区分，下面是arm64的国内清华源：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe</span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe</span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe</span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe</span><br><span class=\"line\">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe</span><br></pre></td></tr></table></figure>\n<p>把<code>sources.list</code>里面存在的文件用#号注释掉，添加上面的文件。</p>\n<p><code>ctrl+o</code>写入，回车， <code>ctrl+x</code>离开。</p>\n<blockquote>\n<p>源文件内容描述</p>\n</blockquote>\n<ul>\n<li><p>ubuntu-ports:表示arm版本的源</p>\n</li>\n<li><p>bionic:是ubuntu18.04的发行版本</p>\n</li>\n<li><p>security：仅修复漏洞，并且尽可能少的改变软件包的行为。低风险。</p>\n</li>\n<li><p>backports：backports的团队则认为最好的更新策略是security 策略加上新版本的软件（包括候选版本的）。但不会由Ubuntu security team审查和更新。</p>\n</li>\n<li><p>updates：修复严重但不影响系统安全运行的漏洞，这类补丁在经过QA人员记录和验证后才提供，和security那类一样低风险。</p>\n</li>\n<li><p>proposed：update类的测试部分，仅建议提供测试和反馈的人进行安装。</p>\n</li>\n<li><p>main：完全的自由软件。</p>\n</li>\n<li><p>muitiverse：非自由软件，完全不提供支持和补丁。</p>\n</li>\n<li><p>restricted：不完全的自由软件。</p>\n</li>\n<li><p>universe：ubuntu官方不提供支持与补丁，全靠社区支持。</p>\n</li>\n</ul>\n<h2 id=\"二、xsens官方驱动使用\"><a href=\"#二、xsens官方驱动使用\" class=\"headerlink\" title=\"二、xsens官方驱动使用\"></a>二、xsens官方驱动使用</h2><h3 id=\"1-官方软件下载和介绍\"><a href=\"#1-官方软件下载和介绍\" class=\"headerlink\" title=\"1.官方软件下载和介绍\"></a>1.官方软件下载和介绍</h3><p>Linux xsens驱动地址：<a href=\"https://content.xsens.com/download-mt-software-suite\">https://content.xsens.com/download-mt-software-suite</a></p>\n<p>电脑选择linux版本下载好之后得到文件<code>MT_Software_Suite_linux-x64_2020.0.2.tar.gz</code>，解压后，可以得到文件<code>mtsdk_linux-x64_2020.0.2.sh</code>，利用命令从本地上传到树莓派服务器。</p>\n<p>树莓派安装lrzsz</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install lrzsz</span><br></pre></td></tr></table></figure>\n\n<p>输入rz上传文件到服务器当前目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rz</span><br></pre></td></tr></table></figure>\n\n<p>输入sz下载文件到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sz ./****.txt</span><br></pre></td></tr></table></figure>\n\n<p>把文件下载到用户目录下后安装mti的sdk</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo ./mtsdk_linux-x64_2020.0.2.sh</span><br></pre></td></tr></table></figure>\n\n<p>可能会提示确实某某文件，安装文件之后再运行，如果点运行报错，可能是没有运行权限，可以增加权限或者使用bash&#x2F;sh命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo bash ./mtsdk_linux-x64_2020.0.2.sh</span><br></pre></td></tr></table></figure>\n\n<p>默认的安装位置<code>[/usr/local/xsens]</code>，可以选择更改到用户目录下<code>/home/ubuntu/xsens</code></p>\n<h3 id=\"2-驱动文件使用介绍\"><a href=\"#2-驱动文件使用介绍\" class=\"headerlink\" title=\"2.驱动文件使用介绍\"></a>2.驱动文件使用介绍</h3><p>驱动文件就是<code>mtsdk_linux-x64_2020.0.2.sh</code>文件，由于官方软件无法在树莓派中适配，所以我们要在官方驱动中使用现成的API，具体可以参考这个文档：<a href=\"https://base.xsens.com/knowledgebase/s/article/Interfacing-MTi-devices-with-the-Raspberry-Pi\">https://base.xsens.com/knowledgebase/s/article/Interfacing-MTi-devices-with-the-Raspberry-Pi</a></p>\n<p>官方问答区：<a href=\"https://base.xsens.com/knowledgebase/s/\">https://base.xsens.com/knowledgebase/s/</a></p>\n<p>我们进入到<code>xsens</code>文件目录下，可以看到文件</p>\n<ul>\n<li>doc \t </li>\n<li>lib\t</li>\n<li>python\t</li>\n<li>examples\t</li>\n<li>MTSDK.README\t</li>\n<li><code>xsens_ros_mti_driver</code>\t</li>\n<li>include</li>\n<li>public        </li>\n<li>Xsens Technologies MT SS License Agreement.rtf</li>\n</ul>\n<p>我们进入<code>example</code>文件夹中，再进入<code>mtsdk</code>文件夹中，可以看到文件</p>\n<ul>\n<li>awindamonitor_cpp\t</li>\n<li>Makefile\t</li>\n<li>xda_public_cpp\t</li>\n<li>embedded_examples\t</li>\n<li>xda_cpp\t</li>\n<li>xda_python</li>\n</ul>\n<p>然后进入到<code>xda_public_cpp</code>文件夹中，可以看到文件</p>\n<ul>\n<li>example_mti_parse_logfile.cpp\t</li>\n<li>Makefile\t</li>\n<li>xspublic\t</li>\n<li>example_mti_receive_data.cpp   </li>\n<li>xda_public_cpp.sln</li>\n</ul>\n<p><code>xspublic</code>文件包含很多需要使用的前置文件，<code>example_mti_receive_data.cpp</code>是接收数据的，可以自动检测是否已经连接MTI传感器， 收集数据产生<code>logfile.mtb</code>文件，<code>example_mti_parse_logfile.cpp</code>可以把数据文件<code>logfile.mtb</code>数据提取转化为<code>exportfile.txt</code>文件，每一行为一次收集的数据。</p>\n<p>在使用前需要对cpp文件进行编译，第一次可能时间会长一点，在当前目录下，打开终端输入，必须安装ros系统才能编译</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo make</span><br></pre></td></tr></table></figure>\n\n<p>产生一系列<code>.o</code>文件和无后缀文件，那些无后缀就是可执行文件，在终端输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo ./example_mti_receive_data</span><br></pre></td></tr></table></figure>\n\n<p>开始接收数据并会输出到终端中，如果无法检测到MTI传感器，在终端输入命令查到MTI的串口位置并提高串口权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ dmesg | grep tty</span><br><span class=\"line\">[    0.570241] printk: console [tty0] enabled</span><br><span class=\"line\">[    2.799819] 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A</span><br><span class=\"line\">[ 5373.377442] usb 2-2.1: xsens_mt converter now attached to ttyUSB0</span><br><span class=\"line\">$ sudo chmod 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure>\n\n<p>可以看到<code>xsens_mt</code>的位置在 <code>ttyUSB0</code>，所以需要提升<code>ttyUSB0</code>的权限</p>\n<p>产生<code>logfile.mtb</code>文件文件后，在终端输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo ./example_mti_parse_logfile</span><br></pre></td></tr></table></figure>\n\n<p><code>产生exportfile.txt</code>文件</p>\n<h3 id=\"3-程序更改部分\"><a href=\"#3-程序更改部分\" class=\"headerlink\" title=\"3.程序更改部分\"></a>3.程序更改部分</h3><p>跳转到用户目录下的<code>xda_public_cpp</code>文件夹中，打开<code>example_mti_receive_data.cpp</code>文件，可以看到</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Important for Public XDA!</span></span><br><span class=\"line\"><span class=\"comment\">// Call this function if you want to record a mtb file:</span></span><br><span class=\"line\">device-&gt;<span class=\"built_in\">readEmtsAndDeviceConfiguration</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">XsOutputConfigurationArray configArray;</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_PacketCounter, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_SampleTimeFine, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"keyword\">if</span> (device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isImu</span>())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Acceleration, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RateOfTurn, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_MagneticField, <span class=\"number\">0</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isVru</span>() || device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isAhrs</span>())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Quaternion, <span class=\"number\">0</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (device-&gt;<span class=\"built_in\">deviceId</span>().<span class=\"built_in\">isGnss</span>())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Quaternion, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_LatLon, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_AltitudeEllipsoid, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tconfigArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_VelocityXYZ, <span class=\"number\">0</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">handleError</span>(<span class=\"string\">&quot;Unknown device while configuring. Aborting.&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以看到根据传感器的型号来取什么值并不能取到全部的值，改为下面可以采取各个值，</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// Important for Public XDA!</span></span><br><span class=\"line\"><span class=\"comment\">// Call this function if you want to record a mtb file:</span></span><br><span class=\"line\">device-&gt;<span class=\"built_in\">readEmtsAndDeviceConfiguration</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">XsOutputConfigurationArray configArray;</span><br><span class=\"line\"><span class=\"comment\">//TimeStamp</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_PacketCounter, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_SampleTimeFine, <span class=\"number\">0</span>));</span><br><span class=\"line\"> configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_SampleTimeCoarse, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_UtcTime, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Quaternion</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Quaternion, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RotationMatrix, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_EulerAngles, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Inertial Data</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Acceleration, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_FreeAcceleration, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RateOfTurn, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Magnetic Field</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_MagneticField, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Temperature</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_Temperature, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Pressure</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_BaroPressure, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//High-Rate Data</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_AccelerationHR, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_RateOfTurnHR, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Status</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_StatusWord, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_StatusByte, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//Position and Velocity</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_LatLon, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_AltitudeEllipsoid, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_VelocityXYZ, <span class=\"number\">0</span>));</span><br><span class=\"line\"><span class=\"comment\">//GNSS Data</span></span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_GnssPvtData, <span class=\"number\">0</span>));</span><br><span class=\"line\">configArray.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">XsOutputConfiguration</span>(XDI_GnssSatInfo, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n\n<p>根据定义，可以看到各个参数为枚举类型，枚举类定义文档如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//AUTO namespace xstypes &#123;</span></span><br><span class=\"line\"><span class=\"comment\">/*!\t\\enum XsDataIdentifier</span></span><br><span class=\"line\"><span class=\"comment\">\t\\brief Defines the data identifiers</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tThe list of standard data identifiers is shown below.</span></span><br><span class=\"line\"><span class=\"comment\">\tThe last positions in the data identifier depends on the configuration of the data.</span></span><br><span class=\"line\"><span class=\"comment\">\tFor example 0x4020 is 3D acceleration in single precision float format,</span></span><br><span class=\"line\"><span class=\"comment\">\twhere 0x4022 is 3D acceleration in fixed point 16.32 format.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tRefer to the Low Level Communication Protocol for more details.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">XsDataIdentifier</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tXDI_None\t\t\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Empty datatype</span></span><br><span class=\"line\">\tXDI_TypeMask\t\t\t\t= <span class=\"number\">0xFE00</span>,\t<span class=\"comment\">//!&lt; Mask for checking the group which a dataidentifier belongs to, Eg. XDI_TimestampGroup or XDI_OrientationGroup</span></span><br><span class=\"line\">\tXDI_FullTypeMask\t\t\t= <span class=\"number\">0xFFF0</span>,\t<span class=\"comment\">//!&lt; Mask to get the type of data, without the data format</span></span><br><span class=\"line\">\tXDI_FullMask\t\t\t\t= <span class=\"number\">0xFFFF</span>,\t<span class=\"comment\">//!&lt; Complete mask to get entire data identifier</span></span><br><span class=\"line\">\tXDI_FormatMask\t\t\t\t= <span class=\"number\">0x01FF</span>,\t<span class=\"comment\">//!&lt; Mask for getting the data id without checking the group</span></span><br><span class=\"line\">\tXDI_DataFormatMask\t\t\t= <span class=\"number\">0x000F</span>,\t<span class=\"comment\">//!&lt; Mask for extracting just the data format /sa XDI_SubFormat</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_SubFormatMask\t\t\t= <span class=\"number\">0x0003</span>,\t<span class=\"comment\">//!&lt; Determines, float, fp12.20, fp16.32, double output... (where applicable)</span></span><br><span class=\"line\">\tXDI_SubFormatFloat\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Floating point format</span></span><br><span class=\"line\">\tXDI_SubFormatFp1220\t\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Fixed point 12.20</span></span><br><span class=\"line\">\tXDI_SubFormatFp1632\t\t\t= <span class=\"number\">0x0002</span>,\t<span class=\"comment\">//!&lt; Fixed point 16.32</span></span><br><span class=\"line\">\tXDI_SubFormatDouble\t\t\t= <span class=\"number\">0x0003</span>,\t<span class=\"comment\">//!&lt; Double format</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_SubFormatLeft\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Left side data (ie XDI_GloveData for the left hand)</span></span><br><span class=\"line\">\tXDI_SubFormatRight\t\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Right side data (ie XDI_GloveData for the right hand)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_TemperatureGroup\t\t= <span class=\"number\">0x0800</span>,\t<span class=\"comment\">//!&lt; Group for temperature outputs</span></span><br><span class=\"line\">\tXDI_Temperature\t\t\t\t= <span class=\"number\">0x0810</span>,\t<span class=\"comment\">//!&lt; Temperature</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_TimestampGroup\t\t\t= <span class=\"number\">0x1000</span>,\t<span class=\"comment\">//!&lt; Group for time stamp related outputs</span></span><br><span class=\"line\">\tXDI_UtcTime\t\t\t\t\t= <span class=\"number\">0x1010</span>,\t<span class=\"comment\">//!&lt; Utc time from the GNSS receiver</span></span><br><span class=\"line\">\tXDI_PacketCounter\t\t\t= <span class=\"number\">0x1020</span>,\t<span class=\"comment\">//!&lt; Packet counter, increments every packet</span></span><br><span class=\"line\">\tXDI_Itow\t\t\t\t\t= <span class=\"number\">0x1030</span>,\t<span class=\"comment\">//!&lt; Itow. Time Of Week from the GNSS receiver</span></span><br><span class=\"line\">\tXDI_GnssAge\t\t\t\t\t= <span class=\"number\">0x1040</span>,\t<span class=\"comment\">//!&lt; Gnss age from the GNSS receiver</span></span><br><span class=\"line\">\tXDI_PressureAge\t\t\t\t= <span class=\"number\">0x1050</span>,\t<span class=\"comment\">//!&lt; Age of a pressure sample, in packet counts</span></span><br><span class=\"line\">\tXDI_SampleTimeFine\t\t\t= <span class=\"number\">0x1060</span>,\t<span class=\"comment\">//!&lt; Sample Time Fine</span></span><br><span class=\"line\">\tXDI_SampleTimeCoarse\t\t= <span class=\"number\">0x1070</span>,\t<span class=\"comment\">//!&lt; Sample Time Coarse</span></span><br><span class=\"line\">\tXDI_FrameRange\t\t\t\t= <span class=\"number\">0x1080</span>,\t<span class=\"comment\">//!&lt; Reserved \\internal add for MTw (if needed)</span></span><br><span class=\"line\">\tXDI_PacketCounter8\t\t\t= <span class=\"number\">0x1090</span>,\t<span class=\"comment\">//!&lt; 8 bit packet counter, wraps at 256</span></span><br><span class=\"line\">\tXDI_SampleTime64\t\t\t= <span class=\"number\">0x10A0</span>,\t<span class=\"comment\">//!&lt; 64 bit sample time</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_OrientationGroup\t\t= <span class=\"number\">0x2000</span>,\t<span class=\"comment\">//!&lt; Group for orientation related outputs</span></span><br><span class=\"line\">\tXDI_CoordSysMask\t\t\t= <span class=\"number\">0x000C</span>,\t<span class=\"comment\">//!&lt; Mask for the coordinate system part of the orientation data identifier</span></span><br><span class=\"line\">\tXDI_CoordSysEnu\t\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; East North Up orientation output</span></span><br><span class=\"line\">\tXDI_CoordSysNed\t\t\t\t= <span class=\"number\">0x0004</span>,\t<span class=\"comment\">//!&lt; North East Down orientation output</span></span><br><span class=\"line\">\tXDI_CoordSysNwu\t\t\t\t= <span class=\"number\">0x0008</span>,\t<span class=\"comment\">//!&lt; North West Up orientation output</span></span><br><span class=\"line\">\tXDI_Quaternion\t\t\t\t= <span class=\"number\">0x2010</span>,\t<span class=\"comment\">//!&lt; Orientation in quaternion format</span></span><br><span class=\"line\">\tXDI_RotationMatrix\t\t\t= <span class=\"number\">0x2020</span>,\t<span class=\"comment\">//!&lt; Orientation in rotation matrix format</span></span><br><span class=\"line\">\tXDI_EulerAngles\t\t\t\t= <span class=\"number\">0x2030</span>,\t<span class=\"comment\">//!&lt; Orientation in euler angles format</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_PressureGroup\t\t\t= <span class=\"number\">0x3000</span>,\t<span class=\"comment\">//!&lt; Group for pressure related outputs</span></span><br><span class=\"line\">\tXDI_BaroPressure\t\t\t= <span class=\"number\">0x3010</span>,\t<span class=\"comment\">//!&lt; Pressure output recorded from the barometer</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_AccelerationGroup\t\t= <span class=\"number\">0x4000</span>,\t<span class=\"comment\">//!&lt; Group for acceleration related outputs</span></span><br><span class=\"line\">\tXDI_DeltaV\t\t\t\t\t= <span class=\"number\">0x4010</span>,\t<span class=\"comment\">//!&lt; DeltaV SDI data output</span></span><br><span class=\"line\">\tXDI_Acceleration\t\t\t= <span class=\"number\">0x4020</span>,\t<span class=\"comment\">//!&lt; Acceleration output in m/s2</span></span><br><span class=\"line\">\tXDI_FreeAcceleration\t\t= <span class=\"number\">0x4030</span>,\t<span class=\"comment\">//!&lt; Free acceleration output in m/s2</span></span><br><span class=\"line\">\tXDI_AccelerationHR\t\t\t= <span class=\"number\">0x4040</span>,\t<span class=\"comment\">//!&lt; AccelerationHR output</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_IndicationGroup\t\t\t= <span class=\"number\">0x4800</span>,\t<span class=\"comment\">//!&lt; 0100.1000 -&gt; bit reverse = 0001.0010 -&gt; type 18</span></span><br><span class=\"line\">\tXDI_TriggerIn1\t\t\t\t= <span class=\"number\">0x4810</span>,\t<span class=\"comment\">//!&lt; Trigger in 1 indication</span></span><br><span class=\"line\">\tXDI_TriggerIn2\t\t\t\t= <span class=\"number\">0x4820</span>,\t<span class=\"comment\">//!&lt; Trigger in 2 indication</span></span><br><span class=\"line\">\tXDI_TriggerIn3\t\t\t\t= <span class=\"number\">0x4830</span>,\t<span class=\"comment\">//!&lt; Trigger in 3 indication</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_PositionGroup\t\t\t= <span class=\"number\">0x5000</span>,\t<span class=\"comment\">//!&lt; Group for position related outputs</span></span><br><span class=\"line\">\tXDI_AltitudeMsl\t\t\t\t= <span class=\"number\">0x5010</span>,\t<span class=\"comment\">//!&lt; Altitude at Mean Sea Level</span></span><br><span class=\"line\">\tXDI_AltitudeEllipsoid\t\t= <span class=\"number\">0x5020</span>,\t<span class=\"comment\">//!&lt; Altitude at ellipsoid</span></span><br><span class=\"line\">\tXDI_PositionEcef\t\t\t= <span class=\"number\">0x5030</span>,\t<span class=\"comment\">//!&lt; Position in earth-centered, earth-fixed format</span></span><br><span class=\"line\">\tXDI_LatLon\t\t\t\t\t= <span class=\"number\">0x5040</span>,\t<span class=\"comment\">//!&lt; Position in latitude, longitude</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_GnssGroup\t\t\t\t= <span class=\"number\">0x7000</span>,\t<span class=\"comment\">//!&lt; Group for Gnss related outputs</span></span><br><span class=\"line\">\tXDI_GnssPvtData\t\t\t\t= <span class=\"number\">0x7010</span>,\t<span class=\"comment\">//!&lt; Gnss position, velocity and time data</span></span><br><span class=\"line\">\tXDI_GnssSatInfo\t\t\t\t= <span class=\"number\">0x7020</span>,\t<span class=\"comment\">//!&lt; Gnss satellite information</span></span><br><span class=\"line\">\tXDI_GnssPvtPulse\t\t\t= <span class=\"number\">0x7030</span>,\t<span class=\"comment\">//!&lt; Time of the PVT timepulse (4Hz upsampled from the 1PPS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_AngularVelocityGroup\t= <span class=\"number\">0x8000</span>,\t<span class=\"comment\">//!&lt; Group for angular velocity related outputs</span></span><br><span class=\"line\">\tXDI_RateOfTurn\t\t\t\t= <span class=\"number\">0x8020</span>,\t<span class=\"comment\">//!&lt; Rate of turn data in rad/sec</span></span><br><span class=\"line\">\tXDI_DeltaQ\t\t\t\t\t= <span class=\"number\">0x8030</span>,\t<span class=\"comment\">//!&lt; DeltaQ SDI data</span></span><br><span class=\"line\">\tXDI_RateOfTurnHR\t\t\t= <span class=\"number\">0x8040</span>,\t<span class=\"comment\">//!&lt; Rate of turn HR data</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_RawSensorGroup\t\t\t= <span class=\"number\">0xA000</span>,\t<span class=\"comment\">//!&lt; Group for raw sensor data related outputs</span></span><br><span class=\"line\">\tXDI_RawUnsigned\t\t\t\t= <span class=\"number\">0x0000</span>,\t<span class=\"comment\">//!&lt; Tracker produces unsigned raw values, usually fixed behavior</span></span><br><span class=\"line\">\tXDI_RawSigned\t\t\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Tracker produces signed raw values, usually fixed behavior</span></span><br><span class=\"line\">\tXDI_RawAccGyrMagTemp\t\t= <span class=\"number\">0xA010</span>,\t<span class=\"comment\">//!&lt; Raw acceleration, gyroscope, magnetometer and temperature data</span></span><br><span class=\"line\">\tXDI_RawGyroTemp\t\t\t\t= <span class=\"number\">0xA020</span>,\t<span class=\"comment\">//!&lt; Raw gyroscope and temperature data</span></span><br><span class=\"line\">\tXDI_RawAcc\t\t\t\t\t= <span class=\"number\">0xA030</span>,\t<span class=\"comment\">//!&lt; Raw acceleration data</span></span><br><span class=\"line\">\tXDI_RawGyr\t\t\t\t\t= <span class=\"number\">0xA040</span>,\t<span class=\"comment\">//!&lt; Raw gyroscope data</span></span><br><span class=\"line\">\tXDI_RawMag\t\t\t\t\t= <span class=\"number\">0xA050</span>,\t<span class=\"comment\">//!&lt; Raw magnetometer data</span></span><br><span class=\"line\">\tXDI_RawDeltaQ\t\t\t\t= <span class=\"number\">0xA060</span>,\t<span class=\"comment\">//!&lt; Raw deltaQ SDI data</span></span><br><span class=\"line\">\tXDI_RawDeltaV\t\t\t\t= <span class=\"number\">0xA070</span>,\t<span class=\"comment\">//!&lt; Raw deltaV SDI data</span></span><br><span class=\"line\">\tXDI_RawBlob\t\t\t\t\t= <span class=\"number\">0xA080</span>,\t<span class=\"comment\">//!&lt; Raw blob data</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_AnalogInGroup\t\t\t= <span class=\"number\">0xB000</span>,\t<span class=\"comment\">//!&lt; Group for analog in related outputs</span></span><br><span class=\"line\">\tXDI_AnalogIn1\t\t\t\t= <span class=\"number\">0xB010</span>,\t<span class=\"comment\">//!&lt; Data containing adc data from analog in 1 line (if present)</span></span><br><span class=\"line\">\tXDI_AnalogIn2\t\t\t\t= <span class=\"number\">0xB020</span>,\t<span class=\"comment\">//!&lt; Data containing adc data from analog in 2 line (if present)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_MagneticGroup\t\t\t= <span class=\"number\">0xC000</span>,\t<span class=\"comment\">//!&lt; Group for magnetometer related outputs</span></span><br><span class=\"line\">\tXDI_MagneticField\t\t\t= <span class=\"number\">0xC020</span>,\t<span class=\"comment\">//!&lt; Magnetic field data in a.u.</span></span><br><span class=\"line\">\tXDI_MagneticFieldCorrected\t= <span class=\"number\">0xC030</span>,\t<span class=\"comment\">//!&lt; Corrected Magnetic field data in a.u. (ICC result)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_SnapshotGroup\t\t\t= <span class=\"number\">0xC800</span>,\t<span class=\"comment\">//!&lt; Group for snapshot related outputs</span></span><br><span class=\"line\">\tXDI_RetransmissionMask\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Mask for the retransmission bit in the snapshot data</span></span><br><span class=\"line\">\tXDI_RetransmissionFlag\t\t= <span class=\"number\">0x0001</span>,\t<span class=\"comment\">//!&lt; Bit indicating if the snapshot if from a retransmission</span></span><br><span class=\"line\">\tXDI_AwindaSnapshot\t\t\t= <span class=\"number\">0xC810</span>,\t<span class=\"comment\">//!&lt; Awinda type snapshot</span></span><br><span class=\"line\">\tXDI_FullSnapshot\t\t\t= <span class=\"number\">0xC820</span>,\t<span class=\"comment\">//!&lt; Full snapshot</span></span><br><span class=\"line\">\tXDI_GloveSnapshotLeft\t\t= <span class=\"number\">0xC830</span>, \t<span class=\"comment\">//!&lt; Glove Snapshot for Left Hand</span></span><br><span class=\"line\">\tXDI_GloveSnapshotRight\t\t= <span class=\"number\">0xC840</span>, \t<span class=\"comment\">//!&lt; Glove Snapshot for Right Hand</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// The numbers of the GloveData items should match the GloveSnapshot items, but in the CA range</span></span><br><span class=\"line\">\tXDI_GloveDataGroup\t\t\t= <span class=\"number\">0xCA00</span>,\t<span class=\"comment\">//!&lt; Group for usable glove data</span></span><br><span class=\"line\">\tXDI_GloveDataLeft\t\t\t= <span class=\"number\">0xCA30</span>, \t<span class=\"comment\">//!&lt; Glove Data for Left Hand</span></span><br><span class=\"line\">\tXDI_GloveDataRight\t\t\t= <span class=\"number\">0xCA40</span>, \t<span class=\"comment\">//!&lt; Glove Data for Right Hand</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_VelocityGroup\t\t\t= <span class=\"number\">0xD000</span>,\t<span class=\"comment\">//!&lt; Group for velocity related outputs</span></span><br><span class=\"line\">\tXDI_VelocityXYZ\t\t\t\t= <span class=\"number\">0xD010</span>,\t<span class=\"comment\">//!&lt; Velocity in XYZ coordinate frame</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tXDI_StatusGroup\t\t\t\t= <span class=\"number\">0xE000</span>,\t<span class=\"comment\">//!&lt; Group for status related outputs</span></span><br><span class=\"line\">\tXDI_StatusByte\t\t\t\t= <span class=\"number\">0xE010</span>,\t<span class=\"comment\">//!&lt; Status byte</span></span><br><span class=\"line\">\tXDI_StatusWord\t\t\t\t= <span class=\"number\">0xE020</span>,\t<span class=\"comment\">//!&lt; Status word</span></span><br><span class=\"line\">\tXDI_Rssi\t\t\t\t\t= <span class=\"number\">0xE040</span>,\t<span class=\"comment\">//!&lt; Rssi information</span></span><br><span class=\"line\">\tXDI_DeviceId\t\t\t\t= <span class=\"number\">0xE080</span>,\t<span class=\"comment\">//!&lt; DeviceId output</span></span><br><span class=\"line\">\tXDI_LocationId\t\t\t\t= <span class=\"number\">0xE090</span>,\t<span class=\"comment\">//!&lt; LocationId output</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">/*! @&#125; */</span></span><br></pre></td></tr></table></figure>\n\n<p>根据自己需要采集的数据来设定参数</p>\n<h2 id=\"三、ros系统的安装与使用\"><a href=\"#三、ros系统的安装与使用\" class=\"headerlink\" title=\"三、ros系统的安装与使用\"></a>三、ros系统的安装与使用</h2><h3 id=\"1-环境配置\"><a href=\"#1-环境配置\" class=\"headerlink\" title=\"1.环境配置\"></a>1.环境配置</h3><p>可以根据官网的教程安装ros系统<a href=\"http://wiki.ros.org/melodic/Installation/Ubuntu\">http://wiki.ros.org/melodic/Installation/Ubuntu</a></p>\n<blockquote>\n<p> 配置资源表</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sh -c &#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置密钥</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --keyserver &#x27;hkp://keyserver.ubuntu.com:80&#x27; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 安装ros基础版没有桌面工具</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install ros-melodic-ros-base</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 环境配置</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>初始化ros</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br><span class=\"line\">sudo rosdep init</span><br><span class=\"line\">rosdep update</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 运行ros</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">roscore</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>常见错误：</p>\n<blockquote>\n<p>ERROR: cannot download default sources list from:</p>\n<p><a href=\"https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list\">https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list</a></p>\n<p>Website may be down.</p>\n</blockquote>\n<p>网速慢，修改hosts，提前设置好IP</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo nano /etc/hosts</span><br></pre></td></tr></table></figure>\n\n<p>添加以下内容保存即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">185.199.108.133 raw.githubusercontent.com</span><br><span class=\"line\">185.199.109.133 raw.githubusercontent.com</span><br><span class=\"line\">185.199.110.133 raw.githubusercontent.com</span><br><span class=\"line\">185.199.111.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ERROR: default sources list file already exists:</p>\n<p>&#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.list</p>\n<p>Please delete if you wish to re-initialize</p>\n</blockquote>\n<p>表示已经存在了文件，删除文件后，重新运行<code>sudo rosdep init</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo rm /etc/ros/rosdep/sources.list.d/20-default.list</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><code>rosdep update</code> 超时，最经常发生的问题</p>\n<p>方法一：使用手机热点，多试几次，移动，联通网都试一试</p>\n<p>方法二：使用延长加载时间</p>\n<p>在下面的文件中，有<code>DEFAULT_TIME_OUT=15.0</code>，改为180，再试一次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py</span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py </span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/rep3.py</span><br></pre></td></tr></table></figure>\n\n<p>方法三：使用代理</p>\n<p>再文件夹<code>/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py</code>中，找到下面函数并修改<code>url</code>的赋值语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">download_rosdep_data</span>(<span class=\"params\">url</span>):</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">try</span>:</span><br><span class=\"line\">    url=<span class=\"string\">&quot;https://ghproxy.com/&quot;</span>+url</span><br></pre></td></tr></table></figure>\n\n<p>然后在下面文件夹中找到类似这样的全局变量，修改为下面这样</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEFAULT_INDEX_URL = <span class=\"string\">&#x27;https://ghproxy.com/https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py</span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/sources_list.py </span><br><span class=\"line\">/usr/lib/python2.7/dist-packages/rosdep2/rep3.py</span><br></pre></td></tr></table></figure>\n\n<p>再试一次，应该就可以了</p>\n<p>方法四：下载文件到本地</p>\n<p>在本地下载好后，修改各个文件，加载目标文件，详情见：<a href=\"https://blog.csdn.net/sinat_25923849/article/details/107976434\">https://blog.csdn.net/sinat_25923849/article/details/107976434</a></p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t下面部分，作为研究查看</p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<h3 id=\"2-连接MTI\"><a href=\"#2-连接MTI\" class=\"headerlink\" title=\"2.连接MTI\"></a>2.连接MTI</h3><p>我们的MTI型号：<code>MTi-G-710-2A8G4</code>，查看xsens_driver可支持ros版本，详情见官网：<a href=\"http://wiki.ros.org/xsens_driver\">http://wiki.ros.org/xsens_driver</a></p>\n<p>可以看到xsens_driver只支持melodic和 kinetic的ros系统，ros系统支持的系统见官网：<a href=\"http://wiki.ros.org/ROS/Installation\">http://wiki.ros.org/ROS/Installation</a></p>\n<p>所以我们选择melodic的版本，要下载xsens_driver需要看到下面的Source对应的链接：<a href=\"https://github.com/ethz-asl/ethzasl_xsens_driver\">https://github.com/ethz-asl/ethzasl_xsens_driver</a></p>\n<p>除了 这个驱动之外，还有一个驱动就在我们下载官方的软件包中，安装完mtsdk后，在xsens文件夹下，可以看到<code>xsens_ros_mti_driver</code></p>\n<blockquote>\n<p>xsens_driver驱动安装</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ros-melodic-xsens-driver</span><br><span class=\"line\">roscore</span><br><span class=\"line\">rosstack profile</span><br><span class=\"line\">rospack profile</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>修改访问MTI设备的权限，ttyUSB0换成你的设备号</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>启动MTI</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">roslaunch xsens_driver xsens_driver.launch</span><br><span class=\"line\">rostopic list</span><br><span class=\"line\">rostopic echo /imu/data</span><br></pre></td></tr></table></figure>\n\n<p>出现数据说明OK了，连接成功</p>\n<hr>\n<blockquote>\n<p><strong>Tips：</strong></p>\n<p>所有关于节点的操作都要在运行<code>xsens_driver.launch</code>的前提下</p>\n<p>ubuntu 查看USB对应的串口:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dmesg | grep tty</span><br></pre></td></tr></table></figure>\n\n<p>第三方插件安装命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ros-melodic-**</span><br></pre></td></tr></table></figure>\n\n<p>可视化查看节点之间的关系</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rqt_graph</span><br></pre></td></tr></table></figure>\n\n<p>查看驱动节点的信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rosnode info /xsens_driver</span><br></pre></td></tr></table></figure>\n\n<p>话题列表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rostopic list</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"3-xsens-driver节点简述\"><a href=\"#3-xsens-driver节点简述\" class=\"headerlink\" title=\"3.xsens_driver节点简述\"></a>3.xsens_driver节点简述</h3><p>MTI数据传输是通过<code>xsens_driver</code>这个节点以话题订阅的方式进行的，<code>xsens_driver</code>节点不停发布数据所以要想获取数据必须要订阅话题</p>\n<p>我们先查看<code>xsens_driver</code>节点有用的信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosnode info /xsens_driver</span><br><span class=\"line\"></span><br><span class=\"line\">Node [/xsens_driver]</span><br><span class=\"line\">Publications: </span><br><span class=\"line\"> * /imu/data [sensor_msgs/Imu]</span><br><span class=\"line\"> * /imu_data_str [std_msgs/String]</span><br><span class=\"line\"> * /rosout [rosgraph_msgs/Log]</span><br><span class=\"line\"> * /time_reference [sensor_msgs/TimeReference]</span><br><span class=\"line\"></span><br><span class=\"line\">Subscriptions: None</span><br><span class=\"line\"></span><br><span class=\"line\">Services: </span><br><span class=\"line\"> * /xsens_driver/get_loggers</span><br><span class=\"line\"> * /xsens_driver/set_logger_level</span><br></pre></td></tr></table></figure>\n\n<p>可以看到它有有4个话题发布，没有订阅，两个服务，通过不同时间不同时候话题发布的也不同。实际话题发布比较少，是因为只有在有要发布的数据时才会公布主题，没有数据就不会发布。接下来，我们可以查看其中一个的数据结构，上面的<code>/rosout</code>是ros 系统自带的，不属于它自己的。</p>\n<blockquote>\n<p>查看驱动<code>/xsens_driver</code>节点发布<code>/imu/data</code>话题的消息[sensor_msgs&#x2F;Imu]结构：</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosmsg show sensor_msgs/Imu</span><br><span class=\"line\"></span><br><span class=\"line\">std_msgs/Header header</span><br><span class=\"line\">  uint32 seq</span><br><span class=\"line\">  time stamp</span><br><span class=\"line\">  string frame_id</span><br><span class=\"line\">geometry_msgs/Quaternion orientation</span><br><span class=\"line\">  float64 x</span><br><span class=\"line\">  float64 y</span><br><span class=\"line\">  float64 z</span><br><span class=\"line\">  float64 w</span><br><span class=\"line\">float64[9] orientation_covariance</span><br><span class=\"line\">geometry_msgs/Vector3 angular_velocity</span><br><span class=\"line\">  float64 x</span><br><span class=\"line\">  float64 y</span><br><span class=\"line\">  float64 z</span><br><span class=\"line\">float64[9] angular_velocity_covariance</span><br><span class=\"line\">geometry_msgs/Vector3 linear_acceleration</span><br><span class=\"line\">  float64 x</span><br><span class=\"line\">  float64 y</span><br><span class=\"line\">  float64 z</span><br><span class=\"line\">float64[9] linear_acceleration_covariance</span><br></pre></td></tr></table></figure>\n\n<p>实际上可以通过查看<code>xsens_driver</code>驱动的ros官网查看所有可以产生的话题，列出以下表格：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">话题</th>\n<th align=\"center\">数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>imu/data (sensor_msgs/Imu)</code></td>\n<td align=\"center\">方位角速度和线加速度</td>\n</tr>\n<tr>\n<td align=\"center\"><code>fix (sensor_msgs/NavSatFix)</code></td>\n<td align=\"center\">经度、纬度和海拔（来自GPS，仅适用于MTi-G）</td>\n</tr>\n<tr>\n<td align=\"center\"><code>velocity (geometry_msgs/TwistStamped)</code></td>\n<td align=\"center\">速度信息（仅来自GPS的线性）</td>\n</tr>\n<tr>\n<td align=\"center\"><code>imu/mag (sensor_msgs/MagneticField)</code></td>\n<td align=\"center\">磁场信息</td>\n</tr>\n<tr>\n<td align=\"center\"><code>temperature (sensor_msgs/Temperature)</code></td>\n<td align=\"center\">传感器温度</td>\n</tr>\n<tr>\n<td align=\"center\"><code>pressure (sensor_msgs/FluidPressure)</code></td>\n<td align=\"center\">压力信息</td>\n</tr>\n<tr>\n<td align=\"center\"><code>analog_in1 (std_msgs/UInt16)</code></td>\n<td align=\"center\">第一个模拟输入</td>\n</tr>\n<tr>\n<td align=\"center\"><code>analog_in2 (std_msgs/UInt16)</code></td>\n<td align=\"center\">第二个模拟输入</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ecef (geometry_msgs/PointStamped)</code></td>\n<td align=\"center\">ECEF位置（仅适用于带GPS的设备）</td>\n</tr>\n<tr>\n<td align=\"center\"><code>time_reference (sensor_msgs/TimeReference)</code></td>\n<td align=\"center\">来自设备的时间信息</td>\n</tr>\n<tr>\n<td align=\"center\"><code>imu_data_str (std_msgs/String)</code></td>\n<td align=\"center\">从IMU解析的所有数据的字符串版本</td>\n</tr>\n</tbody></table>\n<p>所以，我们只要用程序订阅<code>/xsens_driver</code>节点发出的数据并存储就行了。</p>\n<h3 id=\"4-用c-程序来订阅话题数据示例\"><a href=\"#4-用c-程序来订阅话题数据示例\" class=\"headerlink\" title=\"4.用c++程序来订阅话题数据示例\"></a>4.用c++程序来订阅话题数据示例</h3><p>首先要创建工作空间(<code>worksapce</code>)是存放工程相关文件的文件夹，分为以下四个文件夹</p>\n<ul>\n<li><code>src</code>：代码空间</li>\n<li><code>build</code>：编译空间</li>\n<li><code>devel</code>：开发空间</li>\n<li><code>install</code>：安装空间</li>\n</ul>\n<blockquote>\n<p>创建<code>catkin_ws</code>工作空间</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p ~/catkin_ws/src</span><br><span class=\"line\">$ cd ~/catkin_ws/src</span><br><span class=\"line\">$ catkin_init_worksapce</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译工作空间</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置环境变量</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ source devel/setup.bash</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>检查环境变量设置是否正确</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo $ROS_PACKAGE_PATH</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建<code>test_pkgstd_msgs</code>功能包，并添加 <code>rospy</code>和<code>roscpp</code>依赖，一个针对python编程，一个针对c++编程</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws/src</span><br><span class=\"line\">$ catkin_create_pkg test_pkgstd_msgs rospy roscpp</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译功能包</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br><span class=\"line\">$ source ~/catkin_ws/devel/setup.bash</span><br></pre></td></tr></table></figure>\n\n<p><em>注意：同一个工作空间下，不允许同名的功能包；不同工作空间下，允许同名的功能包</em>；</p>\n<hr>\n<p>所有的程序都要写在功能包里面，要先创建空的功能包，再编译空的功能包，再打开功能包可以看到有<code>src</code>文件夹，在<code>src</code>文件夹里面写程序</p>\n<p>以海龟仿真器为例子，通过订阅<code>/turtle1/pose</code>话题来接收位置信息</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 订阅/turtle/pose话题，消息类型为turtlesim::Pose</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ros/ros.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;turtlesim/Pose.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//接收订阅消息后，会进入消息回调函数，在数据进来时会类似中断，执行完成后才执行下一个数据，不会嵌套</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">poseCallback</span><span class=\"params\">(<span class=\"type\">const</span> turtlesim::Pose::ConstPtr&amp; msg)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//将接受到的消息打印出来</span></span><br><span class=\"line\">    <span class=\"built_in\">ROS_INFO</span>(<span class=\"string\">&quot;Turtle Pose: x:%0.6f, y:%0.6f&quot;</span>,msg-&gt;x,msg-&gt;y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc,<span class=\"type\">char</span> **argv)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//初始化Ros节点,pose_subscriber是该程序文件的名字</span></span><br><span class=\"line\">    ros::<span class=\"built_in\">init</span>(argc,argv,<span class=\"string\">&quot;pose_subscriber&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//创建节点句柄</span></span><br><span class=\"line\">    ros::NodeHandle n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//创建一个Subscriber,订阅名为/turtle/pose的topic，注册回调函数poseCallback,10为话题订阅的队列长度就是缓冲区</span></span><br><span class=\"line\">    ros::Subscriber pose_sub = n.<span class=\"built_in\">subscriber</span>(<span class=\"string\">&quot;/turtle/pose&quot;</span>,<span class=\"number\">10</span>,poseCallback);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//循环等待回调函数</span></span><br><span class=\"line\">    ros::<span class=\"built_in\">spin</span>();</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>程序写好后，在功能包目录下，打开 <code>CMakeLists.txt</code>文本文件，找到如下的文本，添加上面一句话，保存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_executable(pose_subscriber src/pose_subscriber.cpp)</span><br><span class=\"line\">target_link_libraries(pose_subscriber $&#123;catkin_LIBRARIES&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">##############</span><br><span class=\"line\">## Install \t##</span><br><span class=\"line\">##############</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译功能包</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行程序</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosrun test_pkgstd_msgs pose_subscriber</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"5-ros系统其他一些功能简述\"><a href=\"#5-ros系统其他一些功能简述\" class=\"headerlink\" title=\"5.ros系统其他一些功能简述\"></a>5.ros系统其他一些功能简述</h3><h4 id=\"（1）参数使用\"><a href=\"#（1）参数使用\" class=\"headerlink\" title=\"（1）参数使用\"></a>（1）参数使用</h4><blockquote>\n<p>参数就类似全局字典，所有节点都可以访问，在运行<code>xsens_driver.launch</code>文件下</p>\n<p>查看所有参数</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam list</span><br><span class=\"line\"></span><br><span class=\"line\">/rosdistro</span><br><span class=\"line\">/roslaunch/uris/host_pi_virtual_machine__32831</span><br><span class=\"line\">/rosversion</span><br><span class=\"line\">/run_id</span><br><span class=\"line\">/xsens_driver/angular_velocity_covariance_diagonal</span><br><span class=\"line\">/xsens_driver/baudrate</span><br><span class=\"line\">/xsens_driver/device</span><br><span class=\"line\">/xsens_driver/frame_id</span><br><span class=\"line\">/xsens_driver/frame_local</span><br><span class=\"line\">/xsens_driver/initial_wait</span><br><span class=\"line\">/xsens_driver/linear_acceleration_covariance_diagonal</span><br><span class=\"line\">/xsens_driver/no_rotation_duration</span><br><span class=\"line\">/xsens_driver/orientation_covariance_diagonal</span><br><span class=\"line\">/xsens_driver/timeout</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>显示某个参数的值</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam get /xsens_driver/baudrate</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置某个参数的值</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam set /xsens_driver/baudrate 115200</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>保存参数到当前目录下文件</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam dump xsens_driver_param</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>打开<code>xsens_driver_param</code>文件</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><em>可以在上面修改数值，就可以统一修改参数</em></p>\n<blockquote>\n<p>从文件读取参数</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam load xsens_driver_param</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除参数</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rosparam delete /xsens_driver/baudrate</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>以小海龟仿真程序为例，用c++程序读取和设置参数</p>\n<blockquote>\n<p>创建功能包</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws/src</span><br><span class=\"line\">$ catkin_create_pkg learning_parameter roscs</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>配置 <code>CMakeLists.txt</code>文本文件的编译规则</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_executable(parameter_config src/parameter_config.cpp)</span><br><span class=\"line\">target_link_libraries(parameter_config $&#123;catkin_LIBRARIES&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">##############</span><br><span class=\"line\">## Install \t##</span><br><span class=\"line\">##############</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>编译运行</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/catkin_ws</span><br><span class=\"line\">$ catkin_make</span><br><span class=\"line\">$ source devel/setup.bash</span><br><span class=\"line\">$ roscore</span><br><span class=\"line\">$ rosrun turtlesim turtlesim_node</span><br><span class=\"line\">$ rosrun learning_parameter parameter_config</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"（2）launch文件使用简述\"><a href=\"#（2）launch文件使用简述\" class=\"headerlink\" title=\"（2）launch文件使用简述\"></a>（2）launch文件使用简述</h4><p>当订阅多个话题时或者需要其他操作，那么需要运行多个程序而且每次都要启动ros系统，所以我们可以把这些操作全部封装在<code>.launch</code>文件中，之后运行程序就和驱动程序一样运行<code>.launch</code>文件就行了。</p>\n<blockquote>\n<p>launch文件部分语法：xml</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">launch</span>&gt;</span></span><br><span class=\"line\">    //启动节点</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">node</span> <span class=\"attr\">pkg</span>=<span class=\"string\">&quot;package-name&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;executable-name&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;node-name&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>pkg</code>：节点所在的功能包名称</li>\n<li><code>type</code>：节点可执行文件名称</li>\n<li><code>name</code>：节点运行时名称</li>\n<li><code>output</code>、 <code>respawn</code>、<code>ns</code>、<code>args</code>、<code>required</code></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">launch</span>&gt;</span></span><br><span class=\"line\">    //设置ros系统运行中的参数，存储在服务器中</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;output_frame&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;odom&quot;</span>/&gt;</span></span><br><span class=\"line\">    //加载参数文件的多个参数</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rosparam</span> <span class=\"attr\">file</span>=<span class=\"string\">&quot;param.yaml&quot;</span> <span class=\"attr\">command</span>=<span class=\"string\">&quot;load&quot;</span> <span class=\"attr\">ns</span>=<span class=\"string\">&quot;params&quot;</span>/&gt;</span></span><br><span class=\"line\">    //launch文件内部的局部变量</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;arg-name&quot;</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;arg-value&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>name：参数名</li>\n<li>value：参数值</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">launch</span>&gt;</span></span><br><span class=\"line\">    //包含其他launch文件，file为launch文件路径</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">file</span>=<span class=\"string\">&quot;$(dirname)/other.launch&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>还有等等其他标签，可以在里面设置参数，而且默认启动ros，不用手动设置了，详情见：<a href=\"http://wiki.ros.org/roslaunch\">http://wiki.ros.org/roslaunch</a></p>\n<p>要想使用launch文件需要先在工作空间中建立功能包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ catkin_create_pkg learning_launch</span><br></pre></td></tr></table></figure>\n\n<p>在功能包建立launch文件夹存储launch文件，在添加新的launch文件时要对工作空间重新编译，然后运行<code>example.launch</code>文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">roslaunch learning_launch example.launch</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h2><h3 id=\"1-连接树莓派\"><a href=\"#1-连接树莓派\" class=\"headerlink\" title=\"1.连接树莓派\"></a>1.连接树莓派</h3><p>可以直接用手机开热点，修改wifi名或者密码到上面，也可以修改network-config文件，更改wifi，可能连接不上，多试几次给树莓派断电。在手机上可以直接查看到树莓派IP，其他地方的话使用Advanced IP Scanner软件查看树莓派IP，得到IP地址后，利用putty或者Xshell连接树莓派。</p>\n<h3 id=\"2-跳转到可执行文件的目录\"><a href=\"#2-跳转到可执行文件的目录\" class=\"headerlink\" title=\"2.跳转到可执行文件的目录\"></a>2.跳转到可执行文件的目录</h3><p>在putty或者Xshell终端上使用命令，跳转到目录里面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd xsens/examples/mtsdk/xda_public_cpp</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-数据采集\"><a href=\"#3-数据采集\" class=\"headerlink\" title=\"3.数据采集\"></a>3.数据采集</h3><p>输入命令，开始采集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ./example_mti_receive_data</span><br></pre></td></tr></table></figure>\n\n<p>该cpp文件被修改过，需要输入采集时间（单位：s）。如果不需要那么多数据，可以修改<code>example_mti_receive_data.cpp</code>文件，然后注释掉某些命令。</p>\n<h3 id=\"4-数据解析\"><a href=\"#4-数据解析\" class=\"headerlink\" title=\"4.数据解析\"></a>4.数据解析</h3><p>源文件有解析数据的，但是不好用，下载到本地（Windows电脑上），利用命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sz logfile.mtb</span><br></pre></td></tr></table></figure>\n\n<p>下载Windows电脑的MTI的软件，官网地址：<a href=\"https://content.xsens.com/download-mt-software-suite%EF%BC%8C%E9%80%89%E6%8B%A9Windows%E7%89%88%E6%9C%AC%E7%9A%84%E3%80%82\">https://content.xsens.com/download-mt-software-suite，选择Windows版本的。</a></p>\n<p>找到<code>MT Manager</code>文件夹打开，运行<code>mtmanager64.exe</code>程序，打开桌面端。</p>\n<p>打开程序后，选择菜单栏的File-&gt;Open File，选择<code>logfile.mtb</code>文件，加载数据。</p>\n<p>菜单栏File-&gt;Export导出数据。</p>\n"},{"title":"Python快速入门语法","date":"2022-05-22T04:27:12.000Z","swiper":false,"swiperImg":null,"swiperDesc":null,"img":"https://cdn.pixabay.com/photo/2023/08/02/09/17/brown-bear-8164838_1280.png","excerpt":"Python入门语法","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"bgImg":null,"bgImgTransition":null,"bgImgDelay":null,"prismjs":"default","mathjax":true,"imgTop":true,"_content":"\n# Python快速入门语法\n\n## 一、基础语法\n\n### 1.前言\n\n#### 1.1 Python 源程序的基本概念\n\n1. Python 源程序就是一个特殊格式的文本文件，可以使用任意文本编辑软件做 Python 的开发\n2. Python 程序的 文件扩展名 通常都是 .py\n\n#### 1.2 演练步骤\n\n* 在桌面下，新建 认识Python 目录\n* 在 认识Python 目录下新建 `01-HelloPython.py` 文件\n* 使用 gedit 编辑 `01-HelloPython.py` 并且输入以下内容：\n  `python print(\"hello python\") print(\"hello world\")`\n* 在终端中输入以下命令执行 `01-HelloPython.py`\n  `bash $ python 01-HelloPython.py`\n\n> print 是 python 中我们学习的第一个 函数\n> print 函数的作用，可以把 \"\" 内部的内容，输出到屏幕上\n\n#### 1.3 执行 Python 程序的方式\n\n1. 解释器 python / python3\n  **Python 的解释器**\n  ` ```bash `\n  **使用 python 2.x 解释器**\n  `$ python xxx.py`\n  **使用 python 3.x 解释器**\n  `$ python3 xxx.py`\n  **其他解释器（知道）**\n  **Python 的解释器** 如今有多个语言的实现，包括：\n   * `CPython` —— 官方版本的 C 语言实现\n   * `Jython` —— 可以运行在 Java 平台\n   * `IronPython` —— 可以运行在 .NET 和 Mono 平台\n   * `PyPy` —— Python 实现的，支持 JIT 即时编译\n2. 交互式运行 Python 程序\n   * 直接在终端中运行解释器，而不输入要执行的文件名\n   * 在 Python 的 `Shell` 中直接输入 Python 的代码，会立即看到程序执行结果\n   1. 交互式运行 Python 的优缺点\n     **优点**\n     适合于学习/验证 Python 语法或者局部代码\n     **缺点**\n     代码不能保存\n     不适合运行太大的程序\n   2. 退出 官方的解释器\n      1. 直接输入`exit()`\n      2. 使用热键退出\n      在 python 解释器中，按热键 ctrl + d 可以退出解释器\n\n### 2.基础语法\n\n#### 2.1 注释\n\n* 单行注释（行注释）\n  * 以`#`开头，`#`右边的所有东西都被当做说明文字，而不是真正要执行的程序，只起到辅助说明作用\n* 多行注释（块注释）\n  * 要在 Python 程序中使用多行注释，可以用 一对 连续的 三个 引号(单引号和双引号都可以)\n  \n  ```py\n  # 单行注释\n  \"\"\"\n    多行注释\n  \"\"\"\n  ```\n\n#### 2.2 算数运算符\n\n* 算数运算符是 运算符的一种\n* 是完成基本的算术运算使用的符号，用来处理四则运算\n\n  | 运算符 |  描述  | 实例                                       |\n  | :----: | :----: | ------------------------------------------ |\n  |   +    |   加   | 10 + 20 = 30                               |\n  |   -    |   减   | 10 - 20 = -10                              |\n  |   *    |   乘   | 10 * 20 = 200                              |\n  |   /    |   除   | 10 / 20 = 0.5                              |\n  |   //   | 取整除 | 返回除法的整数部分（商） 9 // 2 输出结果 4 |\n  |   %    | 取余数 | 返回除法的余数 9 % 2 = 1                   |\n  |   **   |   幂   | 又称次方、乘方，2 ** 3 = 8                 |\n\n* 在 Python 中 `*` 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果\n`python In [1]: \"-\" * 50 Out[1]: '----------------------------------------'`\n* 算数运算符的优先级\n  * 先乘除后加减\n  * 同级运算符是 从左至右 计算\n  * 可以使用 () 调整计算的优先级\n  \n  | 运算符   | 描述                   |\n  | -------- | ---------------------- |\n  | **       | 幂 (最高优先级)        |\n  | * / % // | 乘、除、取余数、取整除 |\n  | + -      | 加法、减法             |\n\n#### 2.3 变量的基本使用\n\n**变量定义**：\n\n* 在 Python 中，每个变量 在使用前都必须赋值，变量 赋值以后 该变量 才会被创建\n* 等号（=）用来给变量赋值\n  * `=` 左边是一个变量名\n  * `=` 右边是存储在变量中的值\n  * `变量名 = 值`\n\n**变量的类型**:\n\n* 在 Python 中定义变量是 不需要指定类型（在其他很多高级语言中都需要）\n* 数据类型可以分为 数字型 和 非数字型\n* 数字型\n  * 整型 (int)\n  * 浮点型（float）\n  * 布尔型（bool）\n  * 真 True 非 0 数 —— 非零即真\n  * 假 False 0\n  * 复数型 (complex)\n    * 主要用于科学计算，例如：平面场问题、波动问题、电感电容等问题\n* 非数字型\n  * 字符串\n  * 列表\n  * 元组\n  * 字典\n* 使用 type 函数可以查看一个变量的类型\n  * `type(name)`\n\n**变量的输入**:\n\n| 函数     | 说明              |\n| -------- | ----------------- |\n| print(x) | 将 x 输出到控制台 |\n| type(x)  | 查看 x 的变量类型 |\n\ninput 函数实现键盘输入\n\n* 在 Python 中可以使用 input 函数从键盘等待用户的输入\n* 用户输入的 任何内容 Python 都认为是一个 字符串\n* 语法如下：\n    `字符串变量 = input(\"提示信息：\")`\n\n**类型转换函数**:\n\n| 函数     | 说明                  |\n| -------- | --------------------- |\n| int(x)   | 将 x 转换为一个整数   |\n| float(x) | 将 x 转换到一个浮点数 |\n\n**变量的格式化输出**:\n\n* 在 Python 中可以使用`print`函数将信息输出到控制台\n* 如果希望输出文字信息的同时，一起输出数据，就需要使用到格式化操作符\n* `%`被称为**格式化操作符**，专门用于处理字符串中的格式\n  * 包含 `%` 的字符串，被称为格式化字符串\n  * `%` 和不同的字符连用，不同类型的数据需要使用不同的格式化字符\n\n| 格式化字符 | 含义                                                                 |\n| ---------- | -------------------------------------------------------------------- |\n| %s         | 字符串                                                               |\n| %d         | 有符号十进制整数，%06d 表示输出的整数显示位数，不足的地方使用 0 补全 |\n| %f         | 浮点数，%.2f 表示小数点后只显示两位                                  |\n| %%         | 输出 %                                                               |\n\n```py\na = \"hello\"\nprint(\"格式化字符串%s\" %a)\n```\n\n**变量的命名**:\n\n* 标识符\n  * 标示符可以由 字母、下划线 和 数字 组成\n  * 不能以数字开头\n  * 不能与关键字重名\n* 关键字\n  * 关键字就是在 Python 内部已经使用的标识符\n  * 关键字具有特殊的功能和含义\n  * 开发者不允许定义和关键字相同的名字的标示符\n\n#### 2.4 运算符\n\n* 算数运算符\n\n  | 运算符 |  描述  | 实例                                       |\n  | :----: | :----: | ------------------------------------------ |\n  |   +    |   加   | 10 + 20 = 30                               |\n  |   -    |   减   | 10 - 20 = -10                              |\n  |   *    |   乘   | 10 * 20 = 200                              |\n  |   /    |   除   | 10 / 20 = 0.5                              |\n  |   //   | 取整除 | 返回除法的整数部分（商） 9 // 2 输出结果 4 |\n  |   %    | 取余数 | 返回除法的余数 9 % 2 = 1                   |\n  |   **   |   幂   | 又称次方、乘方，2 ** 3 = 8                 |\n* 比较（关系）运算符\n\n  | 运算符 | 描述                                                                        |\n  | ------ | --------------------------------------------------------------------------- |\n  | ==     | 检查两个操作数的值是否 相等，如果是，则条件成立，返回 True                  |\n  | !=     | 检查两个操作数的值是否 不相等，如果是，则条件成立，返回 True                |\n  | >      | 检查左操作数的值是否 大于 右操作数的值，如果是，则条件成立，返回 True       |\n  | <      | 检查左操作数的值是否 小于 右操作数的值，如果是，则条件成立，返回 True       |\n  | >=     | 检查左操作数的值是否 大于或等于 右操作数的值，如果是，则条件成立，返回 True |\n  | <=     | 检查左操作数的值是否 小于或等于 右操作数的值，如果是，则条件成立，返回 True |\n* 逻辑运算符\n\n  | 运算符 | 逻辑表达式 | 描述                                                                                     |\n  | ------ | ---------- | ---------------------------------------------------------------------------------------- |\n  | and    | x and y    | 只有 x 和 y 的值都为 True，才会返回 True否则只要 x 或者 y 有一个值为 False，就返回 False |\n  | or     | x or y     | 只要 x 或者 y 有一个值为 True，就返回 True只有 x 和 y 的值都为 False，才会返回 False     |\n  | not    | not x      | 如果 x 为 True，返回 False如果 x 为 False，返回 True                                     |\n* 赋值运算符\n  \n  | 运算符 | 描述                   | 实例                                  |\n  | ------ | ---------------------- | ------------------------------------- |\n  | =      | 简单的赋值运算符       | c = a + b 将 a + b 的运算结果赋值为 c |\n  | +=     | 加法赋值运算符         | c += a 等效于 c = c + a               |\n  | -=     | 减法赋值运算符         | c -= a 等效于 c = c - a               |\n  | *=     | 乘法赋值运算符         | c *= a 等效于 c = c * a               |\n  | /=     | 除法赋值运算符         | c /= a 等效于 c = c / a               |\n  | //=    | 取整除赋值运算符       | c //= a 等效于 c = c // a             |\n  | %=     | 取 模 (余数)赋值运算符 | c %= a 等效于 c = c % a               |\n  | **=    | 幂赋值运算符           | c **= a 等效于 c = c ** a             |\n* 运算符的优先级\n\n  | 运算符                   | 描述                   |\n  | ------------------------ | ---------------------- |\n  | **                       | 幂 (最高优先级)        |\n  | * / % //                 | 乘、除、取余数、取整除 |\n  | + -                      | 加法、减法             |\n  | <= < > >=                | 比较运算符             |\n  | == !=                    | 等于运算符             |\n  | = %= /= //= -= += *= **= | 赋值运算符             |\n  | not or and               | 逻辑运算符             |\n\n#### 2.5 条件语句\n\n```py\nif 要判断的条件: \n  条件成立时，要做的事情 ……\n\nif 要判断的条件: \n  条件成立时，要做的事情 …… \nelse: \n  条件不成立时，要做的事情 ……\n\nif 条件1: \n  条件1满足执行的代码 …… \nelif 条件2: \n  条件2满足时，执行的代码 …… \nelif 条件3: \n  条件3满足时，执行的代码 …… \nelse: \n  以上条件都不满足时，执行的代码 ……\n```\n\n**逻辑运算**:\n\n* 在程序开发中，通常在判断条件时，会需要同时判断多个条件\n* 只有多个条件都满足，才能够执行后续代码，这个时候需要使用到逻辑运算符\n* 逻辑运算符 可以把多个条件按照逻辑进行连接，变成更复杂的条件\n* Python 中的 逻辑运算符 包括：`与 and`、`或 or`、`非 not` 三种\n\n#### 2.6 循环语句\n\n```py\nwhile 条件: \n  条件满足时，做的事情....\n\nwhile 条件: \n  条件满足时，做的事情....\nelse:\n  正常循环结束执行的代码\n```\n\n* `break` ，退出循环\n* `continue`，退出当前循环，执行下一次循环\n\n**字符串中的转义字符**:\n| 转义字符 | 描述       |\n| :------: | ---------- |\n|   `\\\\`   | 反斜杠符号 |\n|   `\\'`   | 单引号     |\n|   `\\\"`   | 双引号     |\n|   `\\n`   | 换行       |\n|   `\\t`   | 横向制表符 |\n|   `\\r`   | 回车       |\n\n```py\ni = 1\nprint(\"九九乘法表：\")\nwhile i < 10:\n  j = 1\n  while j <= i:\n    print(\"%d*%d=%d\\t\" % (j, i, i*j), end=\"\")\n    j = j + 1\n  print()\n  i += 1\n```\n\n#### 2.7 函数基础\n\n**函数的定义**:\n\n```py\ndef 函数名():\n```\n\n1. def 是英文 define 的缩写\n2. 函数名称应该能够表达函数封装代码的功能，方便后续的调用\n3. 函数名称的命名应该 符合标识符的命名规则\n   1. 可以由字母、下划线和数字组成\n   2. 不能以数字开头\n   3. 不能与关键字重名\n4. 调用函数很简单的，通过`函数名()`即可完成对函数的调用\n\n**函数的文档注释**:\n\n1. 在开发中，如果希望给函数添加注释，应该在 定义函数 的下方，使用 连续的三对引号\n2. 在连续的三对引号 之间编写对函数的说明文字\n3. 在函数调用 位置，使用快捷键 `CTRL + Q` 可以查看函数的说明信息\n\n```py\ndef sum(num1, num2):\n  \"\"\"对两个数字的求和\"\"\"\n  return num1+num2\n```\n\n#### 2.8 高级变量类型\n\n* **列表**\n  * 列表的定义\n    * List（列表）是 Python 中使用最频繁的数据类型，在其他语言中通常叫做 数组\n    * 专门用于存储一串信息\n    * 列表用 `[]` 定义，数据之间使用 `,` 分隔\n    * 列表的索引从 0 开始\n      * 索引就是数据在列表中的位置编号，索引又可以被称为下标\n  * 列表常用操作\n  \n  | 序号 | 分类 | 关键字 / 函数 / 方法    | 说明                     |\n  | ---- | ---- | ----------------------- | ------------------------ |\n  | 1    | 增加 | 列表.insert(索引, 数据) | 在指定位置插入数据       |\n  |      |      | 列表.append(数据)       | 在末尾追加数据           |\n  |      |      | 列表.extend(列表2)      | 将列表2 的数据追加到列表 |\n  | 2    | 修改 | 列表[索引] = 数据       | 修改指定索引的数据       |\n  | 3    | 删除 | del 列表[索引]          | 删除指定索引的数据       |\n  |      |      | 列表.remove[数据]       | 删除第一个出现的指定数据 |\n  |      |      | 列表.pop                | 删除末尾数据             |\n  |      |      | 列表.pop(索引)          | 删除指定索引数据         |\n  |      |      | 列表.clear              | 清空列表                 |\n  | 4    | 统计 | len(列表)               | 列表长度                 |\n  |      |      | 列表.count(数据)        | 数据在列表中出现的次数   |\n  | 5    | 排序 | 列表.sort()             | 升序排序                 |\n  |      |      | 列表.sort(reverse=True) | 降序排序                 |\n  |      |      | 列表.reverse()          | 逆序、反转               |\n  * del 关键字\n    * 使用 del 关键字(delete) 同样可以删除列表中元素\n    * del 关键字本质上是用来 将一个变量从内存中删除的\n    * 如果使用 del 关键字将变量从内存中删除，后续的代码就不能再使用这个变量了\n  * 循环遍历\n    * 遍历就是从头到尾依次从列表中获取数据\n\n    ```py\n    for 循环内部使用的变量 in 列表:\n      循环体\n    ```\n\n* **元组**\n  * Tuple（元组）与列表类似，不同之处在于元组的元素不能修改\n  * 用于存储一串信息，数据之间使用` , `分隔\n  * 元组用`()` 定义\n  * 元组的索引 从 0 开始\n  * 常用操作与循环遍历与列表相同\n* **字典**\n  * dictionary（字典）是除列表以外 Python 之中 最灵活的数据类型\n  * 和列表的区别\n    * **列表** 是 **有序** 的对象集合\n    * **字典** 是 **无序** 的对象集合\n  * 字典用 `{}` 定义\n  * 字典使用 键值对存储数据，键值对之间使用 `,` 分隔\n    * **键** `key` 是索引\n    * **值** `value` 是数据\n    * **键** 和 **值** 之间使用 `:` 分隔\n    * **键**必须是唯一的\n    * **值** 可以取任何数据类型，但 **键** 只能使用 **字符串**、**数字**或 **元组**\n  * 常用操作\n  \n  | 序号 | 分类 | 关键字 / 函数 / 方法       | 说明                      |\n  | ---- | ---- | -------------------------- | ------------------------- |\n  | 1    | 增加 | 字典[key] = value          | 新增键值对                |\n  |      |      | 字典.setdefault(key,value) | 新增键值对                |\n  |      |      | 字典.update(字典2)         | 将字典2的数据合并到字典中 |\n  | 2    | 修改 | 字典[key] = value          | 修改指定key的数据         |\n  | 3    | 删除 | del 字典[key]              | 删除指定键值对的数据      |\n  |      |      | 字典.popitem()             | 随机删除一个键值对        |\n  |      |      | 字典.pop(key)              | 删除指定键值对数据        |\n  |      |      | 字典.clear()               | 清空字典                  |\n  | 4    | 统计 | len(字典)                  | 字典的键值对数量          |\n  | 5    | 查询 | 字典.keys()                | 所有key列表               |\n  |      |      | 字典.values()              | 所有value列表             |\n  |      |      | 字典.items()               | 所有(key,value)元组列表   |\n  |      |      | 字典[key]                  | 获取key对应的值           |\n  |      |      | 字典.get(key)              | 获取key对应的值           |\n  * 循环遍历\n  \n  ```py\n  for key in 字典:\n    循环体\n  \n  for key,value in 字典:\n    循环体\n  ```\n\n* **集合**\n  * 创建集合\n    * `a = {1,2,3}`\n    * `a = set{}`\n  * 是乱序的\n  * 数据具有唯一性，有去重的功能\n  \n  | 序号 | 分类 | 关键字 / 函数 / 方法 | 说明                     |\n  | ---- | ---- | -------------------- | ------------------------ |\n  | 1    | 增加 | 集合.add(value)      | 新增数据                 |\n  |      |      | 集合.update(列表)    | 将列表的数据合并到集合中 |\n  | 2    | 删除 | 集合.discard()       | 删除指定数据             |\n  |      |      | 集合.pop()           | 随机删除一个数据         |\n  |      |      | 集合.remove()        | 删除指定数据             |\n  | 3    | 查询 | value in 集合        | 判断数据是否在集合序列   |\n  |      |      | value not in 集合    | 判断数据是否不在集合序列 |\n* **字符串**\n  * 字符串的定义\n    * 字符串 就是 一串字符，是编程语言中表示文本的数据类型\n    * 在 `Python` 中可以使用 一对双引号` \" `或者 一对单引号` ' `定义一个字符串\n    * 可以使用 索引 获取一个字符串中 指定位置的字符，索引计数从 0 开始\n    * 也可以使用 `for` 循环遍历 字符串中每一个字符\n  * 字符串的常用操作\n    * 判断类型\n  \n    | 方法               | 说明                                                                                            |\n    | ------------------ | ----------------------------------------------------------------------------------------------- |\n    | string.isspace()   | 如果 string 中只包含空格，则返回 True                                                           |\n    | string.isalnum()   | 如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True                                 |\n    | string.isalpha()   | 如果 string 至少有一个字符并且所有字符都是字母则返回 True                                       |\n    | string.isdecimal() | 如果 string 只包含数字则返回 True，全角数字                                                     |\n    | string.isdigit()   | 如果 string 只包含数字则返回 True，全角数字、⑴、\\u00b2                                          |\n    | string.isnumeric() | 如果 string 只包含数字则返回 True，全角数字，汉字数字                                           |\n    | string.istitle()   | 如果 string 是标题化的(每个单词的首字母大写)则返回 True                                         |\n    | string.islower()   | 如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True |\n    | string.isupper()   | 如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True |\n    * 查找和替换\n\n    | 方法                                                  | 说明                                                                                                                       |\n    | ----------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n    | string.startswith(str)                                | 检查字符串是否是以 str 开头，是则返回 True                                                                                 |\n    | string.endswith(str)                                  | 检查字符串是否是以 str 结束，是则返回 True                                                                                 |\n    | string.find(str, start=0, end=len(string))            | 检测 str 是否包含在 string 中，如果 start 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回 -1 |\n    | string.rfind(str, start=0, end=len(string))           | 类似于 find()，不过是从右边开始查找                                                                                        |\n    | string.index(str, start=0, end=len(string))           | 跟 find() 方法类似，不过如果 str 不在 string 会报错                                                                        |\n    | string.rindex(str, start=0, end=len(string))          | 类似于 index()，不过是从右边开始                                                                                           |\n    | string.replace(oldstr, newstr, num=string.count(old)) | 把 string 中的 oldstr 替换成 newstr，如果 num 指定，则替换不超过 num 次                                                    |\n    * 大小写转换\n\n    | 方法                | 说明                             |\n    | ------------------- | -------------------------------- |\n    | string.capitalize() | 把字符串的第一个字符大写         |\n    | string.title()      | 把字符串的每个单词首字母大写     |\n    | string.lower()      | 转换 string 中所有大写字符为小写 |\n    | string.upper()      | 转换 string 中的小写字母为大写   |\n    | string.swapcase()   | 翻转 string 中的大小写           |\n    * 文本对齐\n\n    | 方法                 | 说明                                                          |\n    | -------------------- | ------------------------------------------------------------- |\n    | string.ljust(width)  | 返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串 |\n    | string.rjust(width)  | 返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串 |\n    | string.center(width) | 返回一个原字符串居中，并使用空格填充至长度 width 的新字符串   |\n    * 去除空白字符\n  \n    | 方法            | 说明                               |\n    | --------------- | ---------------------------------- |\n    | string.lstrip() | 截掉 string 左边（开始）的空白字符 |\n    | string.rstrip() | 截掉 string 右边（末尾）的空白字符 |\n    | string.strip()  | 截掉 string 左右两边的空白字符     |\n    * 拆分和连接\n\n    | 方法                      | 说明                                                                                                             |\n    | ------------------------- | ---------------------------------------------------------------------------------------------------------------- |\n    | string.partition(str)     | 把字符串 string 分成一个 3 元素的元组 (str前面, str, str后面)                                                    |\n    | string.rpartition(str)    | 类似于 partition() 方法，不过是从右边开始查找                                                                    |\n    | string.split(str=\"\", num) | 以 str 为分隔符拆分 string，如果 num 有指定值，则仅分隔 num + 1 个子字符串，str 默认包含 '\\r', '\\t', '\\n' 和空格 |\n    | string.splitlines()       | 按照行('\\r', '\\n', '\\r\\n')分隔，返回一个包含各行作为元素的列表                                                   |\n    | string.join(seq)          | 以 string 作为分隔符，将 seq 中所有的元素（的字符串表示）合并为一个新的字符串                                    |\n* **字符串的切片**\n  * 切片 方法适用于 字符串、列表、元组\n    * 切片 使用 索引值 来限定范围，从一个大的 字符串 中 切出 小的 字符串\n    * 列表 和 元组 都是 有序 的集合，都能够 通过索引值 获取到对应的数据\n    * 字典 是一个 无序 的集合，是使用 键值对 保存数据\n  * 语法： `字符串[开始索引:结束索引:步长]`\n  * 在 Python 中不仅支持 顺序索引，同时还支持 倒序索引\n    * 所谓倒序索引就是 从右向左 计算索引\n    * 最右边的索引值是 -1，依次递减\n\n#### 2.9 公共方法\n\n**Python 包含了以下内置函数**：\n| 函数              | 描述                              | 备注                        |\n| ----------------- | --------------------------------- | --------------------------- |\n| len(item)         | 计算容器中元素个数                |                             |\n| del(item)         | 删除变量                          | del 有两种方式              |\n| max(item)         | 返回容器中元素最大值              | 如果是字典，只针对 key 比较 |\n| min(item)         | 返回容器中元素最小值              | 如果是字典，只针对 key 比较 |\n| cmp(item1, item2) | 比较两个值，-1 小于/0 相等/1 大于 | Python 3.x 取消了 cmp 函数  |\n\n**切片**:\n| 描述  | Python 表达式 | 结果 | 支持的数据类型 |\n| :---: | ------------- | ---- | -------------- |\n| 切片  | \"0123456789\"[::-2] | \"97531\" | 字符串、列表、元组 |\n\n**运算符**:\n|    运算符    | Python 表达式         | 结果                         | 描述           | 支持的数据类型           |\n| :----------: | --------------------- | ---------------------------- | -------------- | ------------------------ |\n|      +       | [1, 2] + [3, 4]       | [1, 2, 3, 4]                 | 合并           | 字符串、列表、元组       |\n|      *       | [\"Hi!\"] * 4           | ['Hi!', 'Hi!', 'Hi!', 'Hi!'] | 重复           | 字符串、列表、元组       |\n|      in      | 3 in (1, 2, 3)        | True                         | 元素是否存在   | 字符串、列表、元组、字典 |\n|    not in    | 4 not in (1, 2, 3)    | True                         | 元素是否不存在 | 字符串、列表、元组、字典 |\n| > >= == < <= | (1, 2, 3) < (2, 2, 3) | True                         | 元素比较       | 字符串、列表、元组       |\n\n**成员运算符**:\n| 运算符 | 描述                                                  | 实例                          |\n| ------ | ----------------------------------------------------- | ----------------------------- |\n| in     | 如果在指定的序列中找到值返回 True，否则返回 False     | 3 in (1, 2, 3) 返回 True      |\n| not in | 如果在指定的序列中没有找到值返回 True，否则返回 False | 3 not in (1, 2, 3) 返回 False |\n\n**for 循环语法**:\n\n```py\nfor 变量 in 集合:\n  循环体代码\nelse: \n  没有通过 break 退出循环，循环结束后，会执行的代码\n```\n\n#### 2.10 变量进阶\n\n**变量的引用**:\n\n* 变量 和 数据 都是保存在 内存 中的\n* 在 Python 中 **函数** 的 **参数** 传递以及 **返回值** 都是靠 **引用** 传递的\n* 变量 和 数据 是分开存储的\n* 数据 保存在内存中的一个位置\n* 变量 中保存着数据在内存中的地址\n* 变量 中 记录数据的地址，就叫做 引用\n* 使用`id()`函数可以查看变量中保存数据所在的**内存地址**\n\n**可变和不可变类型**:\n\n* 不可变类型，内存中的数据不允许被修改：\n  * 数字类型 `int`, `bool`, `float`, `complex`, `long(2.x)`\n  * 字符串 `str`\n  * 元组 `tuple`\n* 可变类型，内存中的数据可以被修改：\n  * 列表 `list`\n  * 字典 `dict`\n* 注意\n  * 可变类型的数据变化，是通过 方法 来实现的\n  * 如果给一个可变类型的变量，赋值了一个新的数据，引用会修改\n    * 变量 不再 对之前的数据引用\n    * 变量 改为 对新赋值的数据引用\n\n**哈希**：\n\n* Python 中内置有一个名字叫做 `hash(o)` 的函数\n  * 接收一个 不可变类型 的数据作为 参数\n  * 返回 结果是一个 整数\n* 哈希 是一种 算法，其作用就是提取数据的 特征码（指纹）\n  * 相同的内容 得到 相同的结果\n  * 不同的内容 得到 不同的结果\n* 在 Python 中，设置字典的 键值对 时，会首先对 key 进行 hash 已决定如何在内存中保存字典的数据，以方便 后续 对字典的操作：增、删、改、查\n  * 键值对的 key 必须是不可变类型数据\n  * 键值对的 value 可以是任意类型的数据\n\n#### 2.11 函数进阶\n\n局部变量：函数内部定义的，只能在函数内部使用\n全局变量：函数外部定义的，所有函数都能使用\n\n* 函数返回值\n  * 利用元组返回多个值 `return (a,b)`\n  * 利用数组解构接收多值 `a,b = fun()`\n* 缺省参数\n  * 指定一个参数有默认值`fun(a,b=1)`\n* 多值参数\n  * 参数名前添加`*`可以接收元组\n  * 参数名前添加`**`可以接收字典\n  * 参数名前添加`*`可以对元组拆包\n  * 参数名前添加`**`可以对字典拆包\n* Lambda表达式\n  * `参数 = lambda 参数列表: 表达式`\n  * 无参数    `fn = lambda: 100`\n  * 一个参数  `fn = lambda a: a`\n  * 默认参数  `fn = lambda a,b=1: a+b`\n  * 可变参数  `fn = lambda *args: args`\n* 高阶函数\n  * 把函数作为参数传入\n* 内置高阶函数\n  * `map(func,list)`\n    * 将传入的函数func作用于list的每一个元素，并将结果组成迭代器返回\n    * 使用`list(res)`将结果转化为列表\n  * `reduce(func,list)`\n    * 定义func函数必须有两个参数\n    * 让func函数计算结果与list下一个元素作累计运算\n    * 需要导入`functools`模块\n  * `filter(func,list)`\n    * 根据func过滤不符合条件的元素，返回一个filter对象\n    * 使用`list(res)`将结果转化为列表\n\n#### 2.12 文件操作\n\n* 打开文件\n  * `f = open(name, mode)`\n  * 打开一个已经存在的文件或者创建一个新文件\n  * `name`文件名，`mode`表示打开文件方式：只读`w`、只写`r`、追加`a`\n* 写入文件\n  * `f.write(内容)`\n* 读取文件\n  * `f.read(num)`\n    * num表示要读取的长度（字节）\n  * `f.readlines()`\n    * 读取全部文件，返回一个列表，每一行为一个元素\n  * `f.readline()`\n    * 读取一行内容\n  * `f.seek(偏移量,起始位置)`\n    * 移动文件指针位置，起始位置：0：文件开头，1：当前位置，2：文件结尾\n* 关闭文件\n  * `f.close()`\n* 文件重命名\n  * 导入 `os` 模块\n  * `os.rename(原文件名,新文件名)`\n* 删除文件\n  * `os.remove(文件名)`\n* 创建文件夹\n  * `os.mkdir(文件名)`\n* 删除文件夹\n  * `os.rmdir(文件名)`\n* 获取当前目录\n  * `os.getcwd()`\n* 改变默认目录\n  * `os.chdir(目录)`\n* 获取目录列表\n  * `os.listdir(目录)`\n\n### 3.进阶语法\n\n#### 3.1 类\n\n```py\n# 定义类\nclass 类名:\n\n  # 类属性，可以被实例对象和类对象访问\n  # 仅占用一份内存，节省空间\n  # 不能通过实例对象修改，只能通过类对象修改\n  age = 18\n\n  def __init__(self):\n    # 初始化方法\n\n  def __str__(self):\n    return \"类的说明，由print函数触发该方法\"\n\n  def __del__(self):\n    # 对象删除后调用此方法\n\n  def mode(self):\n    # 定义方法\n  \n  def __mode(self):\n    # 定义私有方法\n    self.__name = \"z\" # 私有属性\n  \n  @classmethod\n  def mode1(cls):\n    # 类方法\n    # 需要用装饰器表示 @classmethod\n    # 第一个参数必须为类对象，用来访问类属性\n  \n  @staticmethod\n  def mode2():\n    # 静态方法\n    # 没有必须参数的方法\n    # 可以被实例对象和类对象访问\n\n\n# 创建对象\n对象名 = 类名()\n\n# 类外面添加属性\n对象名.属性名 = 值\n\n# 类里面获取属性\nself.属性名\n```\n\n#### 3.2 继承\n\n子类可以继承父类所有属性和方法：\n\n```py\nclass Father:\n  def mode:\n    pass\n\nclass Chidren(Father):\n\nclass Son(Father,Chidren):\n  # 多继承，当由同名属性和方法时，优先使用第一个\n  def __init__(self):\n    # 调用父类方法\n    super().mode()\n```\n\n#### 3.3 多态\n\n是一种对象使用方法，通过多个子类继承相同父类并分别重写父类的方法，再通过统一调用父类方法来产生不同的结果\n\n#### 3.4 异常\n\n```py\ntry:\n  # 可能发生错误的代码\nexcept 异常类型:\n  # 捕获异常的处理代码\n\ntry:\n  # 可能发生错误的代码\nexcept (异常类型1,异常类型2):\n  # 捕获多个异常的处理代码\n\ntry:\n  # 可能发生错误的代码\nexcept (异常类型1,异常类型2) as result:\n  # 捕获异常描述信息result\n\ntry:\n  # 可能发生错误的代码\nexcept Exception as result:\n  # 捕获所有异常信息result\nelse:\n  # 没有异常执行的代码\nfinally:\n  # 无论有没有异常都会执行的代码\n\nclass InputError(Exception):\n  # 自定义异常类\n\n# 抛出异常\nraise InputError()\n```\n\n#### 3.5 模块与包\n\n* 导入模块的方法\n  * import 模块名,模块名2\n  * from 模块名 import 功能名，功能名2\n  * from 模块名 import *\n  * import 模块名 as 别名\n  * from 模块名 import 功能名 as 别名\n* 制作模块\n  * 每一个文件都是一个模块，模块名就是文件名\n  * `__all__`\n    * 在模块文件中存在变量 `__all__ = ['mode1']`\n    * 该模块只能被调用放在改变量里面的函数\n* 包\n  * 在文件夹下有`__init__.py`文件，该文件夹称为包\n  * 导入包\n    * import 包名.模块名.功能名\n    * 在`__init__.py`文件，写`__all__ = ['mode1']`开表示导出的模块\n\n#### 3.6 迭代器与生成器\n\n迭代器从对象的第一个元素开始访问，直到对象的所有元素被访问完结束\n迭代器有两个基本的方法：iter() 和 next()\n字符串，列表或元组对象都可用于创建迭代器\n\n```py\nlist=[1,2,3,4]\nit = iter(list)    # 创建迭代器对象\nnext(it)           # 输出迭代器的下一个元素\n```\n\n把一个类作为一个迭代器使用需要在类中实现两个方法`__iter__()` 与 `__next__()`\n`__iter__()` 方法返回一个特殊的迭代器对象， 这个迭代器对象实现了 `__next__()` 方法并通过抛出 `StopIteration` 异常标识迭代的完成。\n\n```py\nclass MyNumbers:\n  def __iter__(self):\n    self.a = 1\n    return self\n \n  def __next__(self):\n    if self.a <= 20:\n      x = self.a\n      self.a += 1\n      return x\n    else:\n      raise StopIteration\n```\n\n生成器是一个返回迭代器的函数，只能用于迭代操作\n在调用生成器运行的过程中，每次遇到 `yield` 时函数会暂停并保存当前所有的运行信息，返回 `yield` 的值, 并在下一次执行 `next()` 方法时从当前位置继续运行\n\n```py\nclass MyNumber:\n  '''利用生成器产生斐波那契数列'''\n  def __init__(self,count):\n    self.a = 0\n    self.b = 1\n    self.count = 0\n    self.max = count\n  \n  def __iter__(self):\n    while True:\n      if self.count < self.max:\n        yield self.a\n        self.a, self.b = self.b, self.a + self.b\n        self.count += 1\n      else:\n        raise StopIteration\n  \nif __name__ == '__main__':\n  for i in MyNumber(10):\n    print(i)\n```\n\n#### 3.7 装饰器\n\n给函数无修改的情况下添加新功能\n\n```py\ndef Medthod(fun):\n  print(\"This is a decorator\")\n  fun()\n\n@Medthod\ndef Fun():\n  print(\"This is a function\")\n  \nif __name__ == '__main__':\n  Fun()\n```\n\n### 4.常用库的使用\n\n#### 4.1 Matplotlib\n\n作用：数据可视化\n\n```py\nimport matplotlib.pyplot as plt\n\nplt.figure()\nplt.plot([1, 2, 3, 4], [1, 4, 9, 16])\nplt.show()\n```\n\nMatplotlib三层结构\n\n1. 容器层\n   1. (Canvas)画板层，最底层\n   2. (Figure)画布层，建立在画板之上\n   3. (Axes)绘图区/坐标系，建立在画布之上，一个画布有多个绘图区\n2. 辅助显示层\n3. 图像层：坐标轴(axis)、图例(legend)建立在绘图区上\n\n**Matplotlib模块**:\n\n* Matplotlib.pyplot\n  * figure() 创建默认画布\n  * figure(figsize=(),dpi=) 创建指定画布\n    * figsize，指定图的长宽\n    * dpi：图像的清晰度\n  * savefig(\"图像路径\")，保存图像\n  * plot(x,y) x轴数据，y轴数据\n    * plot(x,y1,label='y1',color='red',linestyle='--',marker='o')\n  * show() 显示图像\n  * xticks(x,**kwargs), x为要显示的刻度\n  * yticks(y,**kwargs), y为要显示的刻度\n  * 中文显示问题\n    * `matplotlib.matplotlib_fname()`方法找到配置文件，添加下面文字\n    * font.sans-serif: Microsoft YaHei\n    * 从本地的字体库中找到`C:\\Windows\\Fonts\\Microsoft YaHei UI`字体\n    * 复制到`matplotlib\\mpl-data\\fonts\\ttf`文件夹中\n  * grid(True,linestyle='--',color='gray',linewidth=1,alpha=0.5) 坐标图的网格线\n  * xlabel x坐标轴信息\n  * ylabel y坐标轴信息\n  * title 标题\n  * 多个图画在一起\n    * 多次使用plot(x,y)进行画图就行了\n  * 多个图组合一起\n    * subplot(2,1,1) 两行一列第一个图，后面写全部的画图代码\n    * subplot(2,1,2) 两行一列第二个图，后面写全部的画图代码\n  * 折线图 plot()\n  * 散点图 scatter()\n  * 柱状图 bar()\n  * 直方图 histogram()\n  * 饼图 pie()\n\n```py\nfrom matplotlib.pyplot import *\n\nx= range(1,11)\ny1= [i*i for i in x]\ny2= [i*i*i for i in x]\nfigure(figsize=(10,10),dpi=100)\nsubplot(2,1,1)\nplot(x,y1,label='y1',color='red',linestyle='--',marker='o')\nxticks(x)\nyticks(range(0,1000,100))\ngrid(True,linestyle='--',color='gray',linewidth=1,alpha=0.5)\nsubplot(2,1,2)\nplot(x,y2,label='y2',color='green',linestyle='-.',marker='*')\nxticks(x)\nyticks(range(0,1000,100))\ngrid(True,linestyle='--',color='gray',linewidth=1,alpha=0.5)\nshow()\n```\n\n#### 4.2 Numpy\n\n数值计算库，用于快速处理数组\n\n```py\nimport numpy as np\n\na = np.array([[1, 2, 3],\n          [4, 5, 6]])\n\ntype(a)\n# =========\n# numpy.ndarray\n```\n\n* numpy\n  * 数组里面的数据都是相同的数据类型\n  * 支持向量化运算\n  * ndarray\n    * 属性\n    * shape 数组维度的元组  (行数,列数)\n    * ndim 数组维度\n    * size 数组中元素的数量\n    * itemsize 一个数组元素的长度\n    * dtype 数组元素类型\n  * 生成数组的方法\n    * 生成0和1\n      * `zeros(shape=[行,列],dtype=\"float32\")`\n      * `ones(shape=[行,列],dtype=\"float32\")`\n    * 从现有数组生成\n      * `array([1,2,3])`\n      * `asarray(a)` 浅拷贝\n      * `copy(a)` 深拷贝\n    * 生成固定范围的数组\n      * `linspace(0,100,1000)` 左闭右闭的数据\n      * `arange(0，100，0.1)` 左闭右开\n    * 生成随机数组\n      * 均匀分布 `random.uniform(low = -1,high = 1,size = 1000)`\n      * 正态分布 `random.randn(loc = 0,scale = 1,size = (2,8))`\n  * 索引数据\n    * `a[1,2]`\n  * 修改数据\n    * `reshape((行，列))` 可以把任意行列的数组，转化为需要的行列，返回新的数组\n    * `resize((行，列))` 修改效果与上面一样，但是会修改原数组\n    * `T` 对数组进行转置操作\n  * 类型修改\n    * `astype(新类型)`\n  * 序列化\n    * `tostring()`\n  * 去重\n    * `set(数组)` 无法转化一维以上数据\n    * `unique(数组)` 全部转化为一维\n  * 运算\n    * 逻辑运算\n      * `数组[数组 > 1]`\n      * `all(布尔值)` 只要有一个False返回False\n      * `any(布尔值)` 只要有一个True返回True\n      * `where(三元运算符)`  `where(布尔值，True操作，False操作)`\n    * 统计运算\n      * 统计指标函数\n        * min 最小值 `min(axis=0)` 按列求最小值 `min(axis=1)` 按列求最大值\n        * max 最大值\n        * mean 平均值\n        * median 中位数\n        * var 方差\n        * std 标准差\n      * `argmax(数组,axis=0)`\n      * `argmin(数组,axis=1)`\n    * 数组运算\n      * 数组可以直接与数进行运算\n      * 不同形状的数组需要满足广播机制，不同形状的其中一个是1\n    * 矩阵运算\n      * 矩阵乘法\n        * `matmul(矩阵1，矩阵2)` 普通乘\n        * `dot(矩阵1，矩阵2)` 点乘\n  * 合并与分割\n    * `hstack((矩阵1,矩阵2,...))` 水平拼接\n    * `vstack((矩阵1,矩阵2,...))` 垂直拼接\n    * `concatenate((矩阵1，矩阵2,...),axis=0)` 根据axis判断水平还是垂直拼接\n    * `split(矩阵,[索引1,索引2,...])` 根据索引作为终点来依次分割矩阵\n  * IO操作与数据处理\n    * 读取\n      * `genfromtxt(文件路径,delimiter=\",\")` 根据分隔符的规则读取文件数据，非数字和缺失值会显示`nan`\n\n#### 4.3 Pandas\n\n读取文件方便，封装了Numpy、Matplotlib\n\n* 核心数据结构\n  * `DataFrame(数组)`\n    * 具有行索引和列索引的二维数组，让数组更直观的表现\n    * `DataFrame(数组，index=行索引矩阵，columns=列索引矩阵)` 给数据表添加行表头和列表头\n    * 属性\n      * shape  行数和列数元组\n      * index  行表头\n      * columns 列表头\n      * values 中间的有效数据\n      * T 转置\n    * 方法\n      * head(n) 返回前n行数据\n      * tail(n) 返回后n行数据\n    * 修改行列表头\n      * 利用属性index进行修改，只能统一修改不能单独修改\n  * `MultiIndex`\n    * 多级或分层索引对象，三维数据表示\n    * 属性\n      * `index`\n        * `names`   levels的名称\n        * `levels`  每个level的元组值\n  * `Series`\n    * 带索引的一维数组\n    * 只有行索引\n    * 属性\n      * index\n      * values\n* 数据操作\n  * 索引操作\n    * drop(行/列索引矩阵,axis=0/1) 删除部分行/列数据\n    * 直接索引\n    * 按名字索引\n    * 按数字索引\n    * 组合索引\n  * 赋值操作\n  * 排序\n","source":"_posts/计算机/python/Python快速入门语法.md","raw":"---\ntitle: Python快速入门语法\ndate: 2022-05-22 12:27:12\nswiper: false\nswiperImg:\nswiperDesc:\nimg: https://cdn.pixabay.com/photo/2023/08/02/09/17/brown-bear-8164838_1280.png\nexcerpt: Python入门语法\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nbgImg:\nbgImgTransition:\nbgImgDelay:\ncategories: 计算机\nprismjs: default\ntags: [Python,编程语言,编程语法]\nmathjax: true\nimgTop: true\n---\n\n# Python快速入门语法\n\n## 一、基础语法\n\n### 1.前言\n\n#### 1.1 Python 源程序的基本概念\n\n1. Python 源程序就是一个特殊格式的文本文件，可以使用任意文本编辑软件做 Python 的开发\n2. Python 程序的 文件扩展名 通常都是 .py\n\n#### 1.2 演练步骤\n\n* 在桌面下，新建 认识Python 目录\n* 在 认识Python 目录下新建 `01-HelloPython.py` 文件\n* 使用 gedit 编辑 `01-HelloPython.py` 并且输入以下内容：\n  `python print(\"hello python\") print(\"hello world\")`\n* 在终端中输入以下命令执行 `01-HelloPython.py`\n  `bash $ python 01-HelloPython.py`\n\n> print 是 python 中我们学习的第一个 函数\n> print 函数的作用，可以把 \"\" 内部的内容，输出到屏幕上\n\n#### 1.3 执行 Python 程序的方式\n\n1. 解释器 python / python3\n  **Python 的解释器**\n  ` ```bash `\n  **使用 python 2.x 解释器**\n  `$ python xxx.py`\n  **使用 python 3.x 解释器**\n  `$ python3 xxx.py`\n  **其他解释器（知道）**\n  **Python 的解释器** 如今有多个语言的实现，包括：\n   * `CPython` —— 官方版本的 C 语言实现\n   * `Jython` —— 可以运行在 Java 平台\n   * `IronPython` —— 可以运行在 .NET 和 Mono 平台\n   * `PyPy` —— Python 实现的，支持 JIT 即时编译\n2. 交互式运行 Python 程序\n   * 直接在终端中运行解释器，而不输入要执行的文件名\n   * 在 Python 的 `Shell` 中直接输入 Python 的代码，会立即看到程序执行结果\n   1. 交互式运行 Python 的优缺点\n     **优点**\n     适合于学习/验证 Python 语法或者局部代码\n     **缺点**\n     代码不能保存\n     不适合运行太大的程序\n   2. 退出 官方的解释器\n      1. 直接输入`exit()`\n      2. 使用热键退出\n      在 python 解释器中，按热键 ctrl + d 可以退出解释器\n\n### 2.基础语法\n\n#### 2.1 注释\n\n* 单行注释（行注释）\n  * 以`#`开头，`#`右边的所有东西都被当做说明文字，而不是真正要执行的程序，只起到辅助说明作用\n* 多行注释（块注释）\n  * 要在 Python 程序中使用多行注释，可以用 一对 连续的 三个 引号(单引号和双引号都可以)\n  \n  ```py\n  # 单行注释\n  \"\"\"\n    多行注释\n  \"\"\"\n  ```\n\n#### 2.2 算数运算符\n\n* 算数运算符是 运算符的一种\n* 是完成基本的算术运算使用的符号，用来处理四则运算\n\n  | 运算符 |  描述  | 实例                                       |\n  | :----: | :----: | ------------------------------------------ |\n  |   +    |   加   | 10 + 20 = 30                               |\n  |   -    |   减   | 10 - 20 = -10                              |\n  |   *    |   乘   | 10 * 20 = 200                              |\n  |   /    |   除   | 10 / 20 = 0.5                              |\n  |   //   | 取整除 | 返回除法的整数部分（商） 9 // 2 输出结果 4 |\n  |   %    | 取余数 | 返回除法的余数 9 % 2 = 1                   |\n  |   **   |   幂   | 又称次方、乘方，2 ** 3 = 8                 |\n\n* 在 Python 中 `*` 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果\n`python In [1]: \"-\" * 50 Out[1]: '----------------------------------------'`\n* 算数运算符的优先级\n  * 先乘除后加减\n  * 同级运算符是 从左至右 计算\n  * 可以使用 () 调整计算的优先级\n  \n  | 运算符   | 描述                   |\n  | -------- | ---------------------- |\n  | **       | 幂 (最高优先级)        |\n  | * / % // | 乘、除、取余数、取整除 |\n  | + -      | 加法、减法             |\n\n#### 2.3 变量的基本使用\n\n**变量定义**：\n\n* 在 Python 中，每个变量 在使用前都必须赋值，变量 赋值以后 该变量 才会被创建\n* 等号（=）用来给变量赋值\n  * `=` 左边是一个变量名\n  * `=` 右边是存储在变量中的值\n  * `变量名 = 值`\n\n**变量的类型**:\n\n* 在 Python 中定义变量是 不需要指定类型（在其他很多高级语言中都需要）\n* 数据类型可以分为 数字型 和 非数字型\n* 数字型\n  * 整型 (int)\n  * 浮点型（float）\n  * 布尔型（bool）\n  * 真 True 非 0 数 —— 非零即真\n  * 假 False 0\n  * 复数型 (complex)\n    * 主要用于科学计算，例如：平面场问题、波动问题、电感电容等问题\n* 非数字型\n  * 字符串\n  * 列表\n  * 元组\n  * 字典\n* 使用 type 函数可以查看一个变量的类型\n  * `type(name)`\n\n**变量的输入**:\n\n| 函数     | 说明              |\n| -------- | ----------------- |\n| print(x) | 将 x 输出到控制台 |\n| type(x)  | 查看 x 的变量类型 |\n\ninput 函数实现键盘输入\n\n* 在 Python 中可以使用 input 函数从键盘等待用户的输入\n* 用户输入的 任何内容 Python 都认为是一个 字符串\n* 语法如下：\n    `字符串变量 = input(\"提示信息：\")`\n\n**类型转换函数**:\n\n| 函数     | 说明                  |\n| -------- | --------------------- |\n| int(x)   | 将 x 转换为一个整数   |\n| float(x) | 将 x 转换到一个浮点数 |\n\n**变量的格式化输出**:\n\n* 在 Python 中可以使用`print`函数将信息输出到控制台\n* 如果希望输出文字信息的同时，一起输出数据，就需要使用到格式化操作符\n* `%`被称为**格式化操作符**，专门用于处理字符串中的格式\n  * 包含 `%` 的字符串，被称为格式化字符串\n  * `%` 和不同的字符连用，不同类型的数据需要使用不同的格式化字符\n\n| 格式化字符 | 含义                                                                 |\n| ---------- | -------------------------------------------------------------------- |\n| %s         | 字符串                                                               |\n| %d         | 有符号十进制整数，%06d 表示输出的整数显示位数，不足的地方使用 0 补全 |\n| %f         | 浮点数，%.2f 表示小数点后只显示两位                                  |\n| %%         | 输出 %                                                               |\n\n```py\na = \"hello\"\nprint(\"格式化字符串%s\" %a)\n```\n\n**变量的命名**:\n\n* 标识符\n  * 标示符可以由 字母、下划线 和 数字 组成\n  * 不能以数字开头\n  * 不能与关键字重名\n* 关键字\n  * 关键字就是在 Python 内部已经使用的标识符\n  * 关键字具有特殊的功能和含义\n  * 开发者不允许定义和关键字相同的名字的标示符\n\n#### 2.4 运算符\n\n* 算数运算符\n\n  | 运算符 |  描述  | 实例                                       |\n  | :----: | :----: | ------------------------------------------ |\n  |   +    |   加   | 10 + 20 = 30                               |\n  |   -    |   减   | 10 - 20 = -10                              |\n  |   *    |   乘   | 10 * 20 = 200                              |\n  |   /    |   除   | 10 / 20 = 0.5                              |\n  |   //   | 取整除 | 返回除法的整数部分（商） 9 // 2 输出结果 4 |\n  |   %    | 取余数 | 返回除法的余数 9 % 2 = 1                   |\n  |   **   |   幂   | 又称次方、乘方，2 ** 3 = 8                 |\n* 比较（关系）运算符\n\n  | 运算符 | 描述                                                                        |\n  | ------ | --------------------------------------------------------------------------- |\n  | ==     | 检查两个操作数的值是否 相等，如果是，则条件成立，返回 True                  |\n  | !=     | 检查两个操作数的值是否 不相等，如果是，则条件成立，返回 True                |\n  | >      | 检查左操作数的值是否 大于 右操作数的值，如果是，则条件成立，返回 True       |\n  | <      | 检查左操作数的值是否 小于 右操作数的值，如果是，则条件成立，返回 True       |\n  | >=     | 检查左操作数的值是否 大于或等于 右操作数的值，如果是，则条件成立，返回 True |\n  | <=     | 检查左操作数的值是否 小于或等于 右操作数的值，如果是，则条件成立，返回 True |\n* 逻辑运算符\n\n  | 运算符 | 逻辑表达式 | 描述                                                                                     |\n  | ------ | ---------- | ---------------------------------------------------------------------------------------- |\n  | and    | x and y    | 只有 x 和 y 的值都为 True，才会返回 True否则只要 x 或者 y 有一个值为 False，就返回 False |\n  | or     | x or y     | 只要 x 或者 y 有一个值为 True，就返回 True只有 x 和 y 的值都为 False，才会返回 False     |\n  | not    | not x      | 如果 x 为 True，返回 False如果 x 为 False，返回 True                                     |\n* 赋值运算符\n  \n  | 运算符 | 描述                   | 实例                                  |\n  | ------ | ---------------------- | ------------------------------------- |\n  | =      | 简单的赋值运算符       | c = a + b 将 a + b 的运算结果赋值为 c |\n  | +=     | 加法赋值运算符         | c += a 等效于 c = c + a               |\n  | -=     | 减法赋值运算符         | c -= a 等效于 c = c - a               |\n  | *=     | 乘法赋值运算符         | c *= a 等效于 c = c * a               |\n  | /=     | 除法赋值运算符         | c /= a 等效于 c = c / a               |\n  | //=    | 取整除赋值运算符       | c //= a 等效于 c = c // a             |\n  | %=     | 取 模 (余数)赋值运算符 | c %= a 等效于 c = c % a               |\n  | **=    | 幂赋值运算符           | c **= a 等效于 c = c ** a             |\n* 运算符的优先级\n\n  | 运算符                   | 描述                   |\n  | ------------------------ | ---------------------- |\n  | **                       | 幂 (最高优先级)        |\n  | * / % //                 | 乘、除、取余数、取整除 |\n  | + -                      | 加法、减法             |\n  | <= < > >=                | 比较运算符             |\n  | == !=                    | 等于运算符             |\n  | = %= /= //= -= += *= **= | 赋值运算符             |\n  | not or and               | 逻辑运算符             |\n\n#### 2.5 条件语句\n\n```py\nif 要判断的条件: \n  条件成立时，要做的事情 ……\n\nif 要判断的条件: \n  条件成立时，要做的事情 …… \nelse: \n  条件不成立时，要做的事情 ……\n\nif 条件1: \n  条件1满足执行的代码 …… \nelif 条件2: \n  条件2满足时，执行的代码 …… \nelif 条件3: \n  条件3满足时，执行的代码 …… \nelse: \n  以上条件都不满足时，执行的代码 ……\n```\n\n**逻辑运算**:\n\n* 在程序开发中，通常在判断条件时，会需要同时判断多个条件\n* 只有多个条件都满足，才能够执行后续代码，这个时候需要使用到逻辑运算符\n* 逻辑运算符 可以把多个条件按照逻辑进行连接，变成更复杂的条件\n* Python 中的 逻辑运算符 包括：`与 and`、`或 or`、`非 not` 三种\n\n#### 2.6 循环语句\n\n```py\nwhile 条件: \n  条件满足时，做的事情....\n\nwhile 条件: \n  条件满足时，做的事情....\nelse:\n  正常循环结束执行的代码\n```\n\n* `break` ，退出循环\n* `continue`，退出当前循环，执行下一次循环\n\n**字符串中的转义字符**:\n| 转义字符 | 描述       |\n| :------: | ---------- |\n|   `\\\\`   | 反斜杠符号 |\n|   `\\'`   | 单引号     |\n|   `\\\"`   | 双引号     |\n|   `\\n`   | 换行       |\n|   `\\t`   | 横向制表符 |\n|   `\\r`   | 回车       |\n\n```py\ni = 1\nprint(\"九九乘法表：\")\nwhile i < 10:\n  j = 1\n  while j <= i:\n    print(\"%d*%d=%d\\t\" % (j, i, i*j), end=\"\")\n    j = j + 1\n  print()\n  i += 1\n```\n\n#### 2.7 函数基础\n\n**函数的定义**:\n\n```py\ndef 函数名():\n```\n\n1. def 是英文 define 的缩写\n2. 函数名称应该能够表达函数封装代码的功能，方便后续的调用\n3. 函数名称的命名应该 符合标识符的命名规则\n   1. 可以由字母、下划线和数字组成\n   2. 不能以数字开头\n   3. 不能与关键字重名\n4. 调用函数很简单的，通过`函数名()`即可完成对函数的调用\n\n**函数的文档注释**:\n\n1. 在开发中，如果希望给函数添加注释，应该在 定义函数 的下方，使用 连续的三对引号\n2. 在连续的三对引号 之间编写对函数的说明文字\n3. 在函数调用 位置，使用快捷键 `CTRL + Q` 可以查看函数的说明信息\n\n```py\ndef sum(num1, num2):\n  \"\"\"对两个数字的求和\"\"\"\n  return num1+num2\n```\n\n#### 2.8 高级变量类型\n\n* **列表**\n  * 列表的定义\n    * List（列表）是 Python 中使用最频繁的数据类型，在其他语言中通常叫做 数组\n    * 专门用于存储一串信息\n    * 列表用 `[]` 定义，数据之间使用 `,` 分隔\n    * 列表的索引从 0 开始\n      * 索引就是数据在列表中的位置编号，索引又可以被称为下标\n  * 列表常用操作\n  \n  | 序号 | 分类 | 关键字 / 函数 / 方法    | 说明                     |\n  | ---- | ---- | ----------------------- | ------------------------ |\n  | 1    | 增加 | 列表.insert(索引, 数据) | 在指定位置插入数据       |\n  |      |      | 列表.append(数据)       | 在末尾追加数据           |\n  |      |      | 列表.extend(列表2)      | 将列表2 的数据追加到列表 |\n  | 2    | 修改 | 列表[索引] = 数据       | 修改指定索引的数据       |\n  | 3    | 删除 | del 列表[索引]          | 删除指定索引的数据       |\n  |      |      | 列表.remove[数据]       | 删除第一个出现的指定数据 |\n  |      |      | 列表.pop                | 删除末尾数据             |\n  |      |      | 列表.pop(索引)          | 删除指定索引数据         |\n  |      |      | 列表.clear              | 清空列表                 |\n  | 4    | 统计 | len(列表)               | 列表长度                 |\n  |      |      | 列表.count(数据)        | 数据在列表中出现的次数   |\n  | 5    | 排序 | 列表.sort()             | 升序排序                 |\n  |      |      | 列表.sort(reverse=True) | 降序排序                 |\n  |      |      | 列表.reverse()          | 逆序、反转               |\n  * del 关键字\n    * 使用 del 关键字(delete) 同样可以删除列表中元素\n    * del 关键字本质上是用来 将一个变量从内存中删除的\n    * 如果使用 del 关键字将变量从内存中删除，后续的代码就不能再使用这个变量了\n  * 循环遍历\n    * 遍历就是从头到尾依次从列表中获取数据\n\n    ```py\n    for 循环内部使用的变量 in 列表:\n      循环体\n    ```\n\n* **元组**\n  * Tuple（元组）与列表类似，不同之处在于元组的元素不能修改\n  * 用于存储一串信息，数据之间使用` , `分隔\n  * 元组用`()` 定义\n  * 元组的索引 从 0 开始\n  * 常用操作与循环遍历与列表相同\n* **字典**\n  * dictionary（字典）是除列表以外 Python 之中 最灵活的数据类型\n  * 和列表的区别\n    * **列表** 是 **有序** 的对象集合\n    * **字典** 是 **无序** 的对象集合\n  * 字典用 `{}` 定义\n  * 字典使用 键值对存储数据，键值对之间使用 `,` 分隔\n    * **键** `key` 是索引\n    * **值** `value` 是数据\n    * **键** 和 **值** 之间使用 `:` 分隔\n    * **键**必须是唯一的\n    * **值** 可以取任何数据类型，但 **键** 只能使用 **字符串**、**数字**或 **元组**\n  * 常用操作\n  \n  | 序号 | 分类 | 关键字 / 函数 / 方法       | 说明                      |\n  | ---- | ---- | -------------------------- | ------------------------- |\n  | 1    | 增加 | 字典[key] = value          | 新增键值对                |\n  |      |      | 字典.setdefault(key,value) | 新增键值对                |\n  |      |      | 字典.update(字典2)         | 将字典2的数据合并到字典中 |\n  | 2    | 修改 | 字典[key] = value          | 修改指定key的数据         |\n  | 3    | 删除 | del 字典[key]              | 删除指定键值对的数据      |\n  |      |      | 字典.popitem()             | 随机删除一个键值对        |\n  |      |      | 字典.pop(key)              | 删除指定键值对数据        |\n  |      |      | 字典.clear()               | 清空字典                  |\n  | 4    | 统计 | len(字典)                  | 字典的键值对数量          |\n  | 5    | 查询 | 字典.keys()                | 所有key列表               |\n  |      |      | 字典.values()              | 所有value列表             |\n  |      |      | 字典.items()               | 所有(key,value)元组列表   |\n  |      |      | 字典[key]                  | 获取key对应的值           |\n  |      |      | 字典.get(key)              | 获取key对应的值           |\n  * 循环遍历\n  \n  ```py\n  for key in 字典:\n    循环体\n  \n  for key,value in 字典:\n    循环体\n  ```\n\n* **集合**\n  * 创建集合\n    * `a = {1,2,3}`\n    * `a = set{}`\n  * 是乱序的\n  * 数据具有唯一性，有去重的功能\n  \n  | 序号 | 分类 | 关键字 / 函数 / 方法 | 说明                     |\n  | ---- | ---- | -------------------- | ------------------------ |\n  | 1    | 增加 | 集合.add(value)      | 新增数据                 |\n  |      |      | 集合.update(列表)    | 将列表的数据合并到集合中 |\n  | 2    | 删除 | 集合.discard()       | 删除指定数据             |\n  |      |      | 集合.pop()           | 随机删除一个数据         |\n  |      |      | 集合.remove()        | 删除指定数据             |\n  | 3    | 查询 | value in 集合        | 判断数据是否在集合序列   |\n  |      |      | value not in 集合    | 判断数据是否不在集合序列 |\n* **字符串**\n  * 字符串的定义\n    * 字符串 就是 一串字符，是编程语言中表示文本的数据类型\n    * 在 `Python` 中可以使用 一对双引号` \" `或者 一对单引号` ' `定义一个字符串\n    * 可以使用 索引 获取一个字符串中 指定位置的字符，索引计数从 0 开始\n    * 也可以使用 `for` 循环遍历 字符串中每一个字符\n  * 字符串的常用操作\n    * 判断类型\n  \n    | 方法               | 说明                                                                                            |\n    | ------------------ | ----------------------------------------------------------------------------------------------- |\n    | string.isspace()   | 如果 string 中只包含空格，则返回 True                                                           |\n    | string.isalnum()   | 如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True                                 |\n    | string.isalpha()   | 如果 string 至少有一个字符并且所有字符都是字母则返回 True                                       |\n    | string.isdecimal() | 如果 string 只包含数字则返回 True，全角数字                                                     |\n    | string.isdigit()   | 如果 string 只包含数字则返回 True，全角数字、⑴、\\u00b2                                          |\n    | string.isnumeric() | 如果 string 只包含数字则返回 True，全角数字，汉字数字                                           |\n    | string.istitle()   | 如果 string 是标题化的(每个单词的首字母大写)则返回 True                                         |\n    | string.islower()   | 如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True |\n    | string.isupper()   | 如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True |\n    * 查找和替换\n\n    | 方法                                                  | 说明                                                                                                                       |\n    | ----------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n    | string.startswith(str)                                | 检查字符串是否是以 str 开头，是则返回 True                                                                                 |\n    | string.endswith(str)                                  | 检查字符串是否是以 str 结束，是则返回 True                                                                                 |\n    | string.find(str, start=0, end=len(string))            | 检测 str 是否包含在 string 中，如果 start 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回 -1 |\n    | string.rfind(str, start=0, end=len(string))           | 类似于 find()，不过是从右边开始查找                                                                                        |\n    | string.index(str, start=0, end=len(string))           | 跟 find() 方法类似，不过如果 str 不在 string 会报错                                                                        |\n    | string.rindex(str, start=0, end=len(string))          | 类似于 index()，不过是从右边开始                                                                                           |\n    | string.replace(oldstr, newstr, num=string.count(old)) | 把 string 中的 oldstr 替换成 newstr，如果 num 指定，则替换不超过 num 次                                                    |\n    * 大小写转换\n\n    | 方法                | 说明                             |\n    | ------------------- | -------------------------------- |\n    | string.capitalize() | 把字符串的第一个字符大写         |\n    | string.title()      | 把字符串的每个单词首字母大写     |\n    | string.lower()      | 转换 string 中所有大写字符为小写 |\n    | string.upper()      | 转换 string 中的小写字母为大写   |\n    | string.swapcase()   | 翻转 string 中的大小写           |\n    * 文本对齐\n\n    | 方法                 | 说明                                                          |\n    | -------------------- | ------------------------------------------------------------- |\n    | string.ljust(width)  | 返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串 |\n    | string.rjust(width)  | 返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串 |\n    | string.center(width) | 返回一个原字符串居中，并使用空格填充至长度 width 的新字符串   |\n    * 去除空白字符\n  \n    | 方法            | 说明                               |\n    | --------------- | ---------------------------------- |\n    | string.lstrip() | 截掉 string 左边（开始）的空白字符 |\n    | string.rstrip() | 截掉 string 右边（末尾）的空白字符 |\n    | string.strip()  | 截掉 string 左右两边的空白字符     |\n    * 拆分和连接\n\n    | 方法                      | 说明                                                                                                             |\n    | ------------------------- | ---------------------------------------------------------------------------------------------------------------- |\n    | string.partition(str)     | 把字符串 string 分成一个 3 元素的元组 (str前面, str, str后面)                                                    |\n    | string.rpartition(str)    | 类似于 partition() 方法，不过是从右边开始查找                                                                    |\n    | string.split(str=\"\", num) | 以 str 为分隔符拆分 string，如果 num 有指定值，则仅分隔 num + 1 个子字符串，str 默认包含 '\\r', '\\t', '\\n' 和空格 |\n    | string.splitlines()       | 按照行('\\r', '\\n', '\\r\\n')分隔，返回一个包含各行作为元素的列表                                                   |\n    | string.join(seq)          | 以 string 作为分隔符，将 seq 中所有的元素（的字符串表示）合并为一个新的字符串                                    |\n* **字符串的切片**\n  * 切片 方法适用于 字符串、列表、元组\n    * 切片 使用 索引值 来限定范围，从一个大的 字符串 中 切出 小的 字符串\n    * 列表 和 元组 都是 有序 的集合，都能够 通过索引值 获取到对应的数据\n    * 字典 是一个 无序 的集合，是使用 键值对 保存数据\n  * 语法： `字符串[开始索引:结束索引:步长]`\n  * 在 Python 中不仅支持 顺序索引，同时还支持 倒序索引\n    * 所谓倒序索引就是 从右向左 计算索引\n    * 最右边的索引值是 -1，依次递减\n\n#### 2.9 公共方法\n\n**Python 包含了以下内置函数**：\n| 函数              | 描述                              | 备注                        |\n| ----------------- | --------------------------------- | --------------------------- |\n| len(item)         | 计算容器中元素个数                |                             |\n| del(item)         | 删除变量                          | del 有两种方式              |\n| max(item)         | 返回容器中元素最大值              | 如果是字典，只针对 key 比较 |\n| min(item)         | 返回容器中元素最小值              | 如果是字典，只针对 key 比较 |\n| cmp(item1, item2) | 比较两个值，-1 小于/0 相等/1 大于 | Python 3.x 取消了 cmp 函数  |\n\n**切片**:\n| 描述  | Python 表达式 | 结果 | 支持的数据类型 |\n| :---: | ------------- | ---- | -------------- |\n| 切片  | \"0123456789\"[::-2] | \"97531\" | 字符串、列表、元组 |\n\n**运算符**:\n|    运算符    | Python 表达式         | 结果                         | 描述           | 支持的数据类型           |\n| :----------: | --------------------- | ---------------------------- | -------------- | ------------------------ |\n|      +       | [1, 2] + [3, 4]       | [1, 2, 3, 4]                 | 合并           | 字符串、列表、元组       |\n|      *       | [\"Hi!\"] * 4           | ['Hi!', 'Hi!', 'Hi!', 'Hi!'] | 重复           | 字符串、列表、元组       |\n|      in      | 3 in (1, 2, 3)        | True                         | 元素是否存在   | 字符串、列表、元组、字典 |\n|    not in    | 4 not in (1, 2, 3)    | True                         | 元素是否不存在 | 字符串、列表、元组、字典 |\n| > >= == < <= | (1, 2, 3) < (2, 2, 3) | True                         | 元素比较       | 字符串、列表、元组       |\n\n**成员运算符**:\n| 运算符 | 描述                                                  | 实例                          |\n| ------ | ----------------------------------------------------- | ----------------------------- |\n| in     | 如果在指定的序列中找到值返回 True，否则返回 False     | 3 in (1, 2, 3) 返回 True      |\n| not in | 如果在指定的序列中没有找到值返回 True，否则返回 False | 3 not in (1, 2, 3) 返回 False |\n\n**for 循环语法**:\n\n```py\nfor 变量 in 集合:\n  循环体代码\nelse: \n  没有通过 break 退出循环，循环结束后，会执行的代码\n```\n\n#### 2.10 变量进阶\n\n**变量的引用**:\n\n* 变量 和 数据 都是保存在 内存 中的\n* 在 Python 中 **函数** 的 **参数** 传递以及 **返回值** 都是靠 **引用** 传递的\n* 变量 和 数据 是分开存储的\n* 数据 保存在内存中的一个位置\n* 变量 中保存着数据在内存中的地址\n* 变量 中 记录数据的地址，就叫做 引用\n* 使用`id()`函数可以查看变量中保存数据所在的**内存地址**\n\n**可变和不可变类型**:\n\n* 不可变类型，内存中的数据不允许被修改：\n  * 数字类型 `int`, `bool`, `float`, `complex`, `long(2.x)`\n  * 字符串 `str`\n  * 元组 `tuple`\n* 可变类型，内存中的数据可以被修改：\n  * 列表 `list`\n  * 字典 `dict`\n* 注意\n  * 可变类型的数据变化，是通过 方法 来实现的\n  * 如果给一个可变类型的变量，赋值了一个新的数据，引用会修改\n    * 变量 不再 对之前的数据引用\n    * 变量 改为 对新赋值的数据引用\n\n**哈希**：\n\n* Python 中内置有一个名字叫做 `hash(o)` 的函数\n  * 接收一个 不可变类型 的数据作为 参数\n  * 返回 结果是一个 整数\n* 哈希 是一种 算法，其作用就是提取数据的 特征码（指纹）\n  * 相同的内容 得到 相同的结果\n  * 不同的内容 得到 不同的结果\n* 在 Python 中，设置字典的 键值对 时，会首先对 key 进行 hash 已决定如何在内存中保存字典的数据，以方便 后续 对字典的操作：增、删、改、查\n  * 键值对的 key 必须是不可变类型数据\n  * 键值对的 value 可以是任意类型的数据\n\n#### 2.11 函数进阶\n\n局部变量：函数内部定义的，只能在函数内部使用\n全局变量：函数外部定义的，所有函数都能使用\n\n* 函数返回值\n  * 利用元组返回多个值 `return (a,b)`\n  * 利用数组解构接收多值 `a,b = fun()`\n* 缺省参数\n  * 指定一个参数有默认值`fun(a,b=1)`\n* 多值参数\n  * 参数名前添加`*`可以接收元组\n  * 参数名前添加`**`可以接收字典\n  * 参数名前添加`*`可以对元组拆包\n  * 参数名前添加`**`可以对字典拆包\n* Lambda表达式\n  * `参数 = lambda 参数列表: 表达式`\n  * 无参数    `fn = lambda: 100`\n  * 一个参数  `fn = lambda a: a`\n  * 默认参数  `fn = lambda a,b=1: a+b`\n  * 可变参数  `fn = lambda *args: args`\n* 高阶函数\n  * 把函数作为参数传入\n* 内置高阶函数\n  * `map(func,list)`\n    * 将传入的函数func作用于list的每一个元素，并将结果组成迭代器返回\n    * 使用`list(res)`将结果转化为列表\n  * `reduce(func,list)`\n    * 定义func函数必须有两个参数\n    * 让func函数计算结果与list下一个元素作累计运算\n    * 需要导入`functools`模块\n  * `filter(func,list)`\n    * 根据func过滤不符合条件的元素，返回一个filter对象\n    * 使用`list(res)`将结果转化为列表\n\n#### 2.12 文件操作\n\n* 打开文件\n  * `f = open(name, mode)`\n  * 打开一个已经存在的文件或者创建一个新文件\n  * `name`文件名，`mode`表示打开文件方式：只读`w`、只写`r`、追加`a`\n* 写入文件\n  * `f.write(内容)`\n* 读取文件\n  * `f.read(num)`\n    * num表示要读取的长度（字节）\n  * `f.readlines()`\n    * 读取全部文件，返回一个列表，每一行为一个元素\n  * `f.readline()`\n    * 读取一行内容\n  * `f.seek(偏移量,起始位置)`\n    * 移动文件指针位置，起始位置：0：文件开头，1：当前位置，2：文件结尾\n* 关闭文件\n  * `f.close()`\n* 文件重命名\n  * 导入 `os` 模块\n  * `os.rename(原文件名,新文件名)`\n* 删除文件\n  * `os.remove(文件名)`\n* 创建文件夹\n  * `os.mkdir(文件名)`\n* 删除文件夹\n  * `os.rmdir(文件名)`\n* 获取当前目录\n  * `os.getcwd()`\n* 改变默认目录\n  * `os.chdir(目录)`\n* 获取目录列表\n  * `os.listdir(目录)`\n\n### 3.进阶语法\n\n#### 3.1 类\n\n```py\n# 定义类\nclass 类名:\n\n  # 类属性，可以被实例对象和类对象访问\n  # 仅占用一份内存，节省空间\n  # 不能通过实例对象修改，只能通过类对象修改\n  age = 18\n\n  def __init__(self):\n    # 初始化方法\n\n  def __str__(self):\n    return \"类的说明，由print函数触发该方法\"\n\n  def __del__(self):\n    # 对象删除后调用此方法\n\n  def mode(self):\n    # 定义方法\n  \n  def __mode(self):\n    # 定义私有方法\n    self.__name = \"z\" # 私有属性\n  \n  @classmethod\n  def mode1(cls):\n    # 类方法\n    # 需要用装饰器表示 @classmethod\n    # 第一个参数必须为类对象，用来访问类属性\n  \n  @staticmethod\n  def mode2():\n    # 静态方法\n    # 没有必须参数的方法\n    # 可以被实例对象和类对象访问\n\n\n# 创建对象\n对象名 = 类名()\n\n# 类外面添加属性\n对象名.属性名 = 值\n\n# 类里面获取属性\nself.属性名\n```\n\n#### 3.2 继承\n\n子类可以继承父类所有属性和方法：\n\n```py\nclass Father:\n  def mode:\n    pass\n\nclass Chidren(Father):\n\nclass Son(Father,Chidren):\n  # 多继承，当由同名属性和方法时，优先使用第一个\n  def __init__(self):\n    # 调用父类方法\n    super().mode()\n```\n\n#### 3.3 多态\n\n是一种对象使用方法，通过多个子类继承相同父类并分别重写父类的方法，再通过统一调用父类方法来产生不同的结果\n\n#### 3.4 异常\n\n```py\ntry:\n  # 可能发生错误的代码\nexcept 异常类型:\n  # 捕获异常的处理代码\n\ntry:\n  # 可能发生错误的代码\nexcept (异常类型1,异常类型2):\n  # 捕获多个异常的处理代码\n\ntry:\n  # 可能发生错误的代码\nexcept (异常类型1,异常类型2) as result:\n  # 捕获异常描述信息result\n\ntry:\n  # 可能发生错误的代码\nexcept Exception as result:\n  # 捕获所有异常信息result\nelse:\n  # 没有异常执行的代码\nfinally:\n  # 无论有没有异常都会执行的代码\n\nclass InputError(Exception):\n  # 自定义异常类\n\n# 抛出异常\nraise InputError()\n```\n\n#### 3.5 模块与包\n\n* 导入模块的方法\n  * import 模块名,模块名2\n  * from 模块名 import 功能名，功能名2\n  * from 模块名 import *\n  * import 模块名 as 别名\n  * from 模块名 import 功能名 as 别名\n* 制作模块\n  * 每一个文件都是一个模块，模块名就是文件名\n  * `__all__`\n    * 在模块文件中存在变量 `__all__ = ['mode1']`\n    * 该模块只能被调用放在改变量里面的函数\n* 包\n  * 在文件夹下有`__init__.py`文件，该文件夹称为包\n  * 导入包\n    * import 包名.模块名.功能名\n    * 在`__init__.py`文件，写`__all__ = ['mode1']`开表示导出的模块\n\n#### 3.6 迭代器与生成器\n\n迭代器从对象的第一个元素开始访问，直到对象的所有元素被访问完结束\n迭代器有两个基本的方法：iter() 和 next()\n字符串，列表或元组对象都可用于创建迭代器\n\n```py\nlist=[1,2,3,4]\nit = iter(list)    # 创建迭代器对象\nnext(it)           # 输出迭代器的下一个元素\n```\n\n把一个类作为一个迭代器使用需要在类中实现两个方法`__iter__()` 与 `__next__()`\n`__iter__()` 方法返回一个特殊的迭代器对象， 这个迭代器对象实现了 `__next__()` 方法并通过抛出 `StopIteration` 异常标识迭代的完成。\n\n```py\nclass MyNumbers:\n  def __iter__(self):\n    self.a = 1\n    return self\n \n  def __next__(self):\n    if self.a <= 20:\n      x = self.a\n      self.a += 1\n      return x\n    else:\n      raise StopIteration\n```\n\n生成器是一个返回迭代器的函数，只能用于迭代操作\n在调用生成器运行的过程中，每次遇到 `yield` 时函数会暂停并保存当前所有的运行信息，返回 `yield` 的值, 并在下一次执行 `next()` 方法时从当前位置继续运行\n\n```py\nclass MyNumber:\n  '''利用生成器产生斐波那契数列'''\n  def __init__(self,count):\n    self.a = 0\n    self.b = 1\n    self.count = 0\n    self.max = count\n  \n  def __iter__(self):\n    while True:\n      if self.count < self.max:\n        yield self.a\n        self.a, self.b = self.b, self.a + self.b\n        self.count += 1\n      else:\n        raise StopIteration\n  \nif __name__ == '__main__':\n  for i in MyNumber(10):\n    print(i)\n```\n\n#### 3.7 装饰器\n\n给函数无修改的情况下添加新功能\n\n```py\ndef Medthod(fun):\n  print(\"This is a decorator\")\n  fun()\n\n@Medthod\ndef Fun():\n  print(\"This is a function\")\n  \nif __name__ == '__main__':\n  Fun()\n```\n\n### 4.常用库的使用\n\n#### 4.1 Matplotlib\n\n作用：数据可视化\n\n```py\nimport matplotlib.pyplot as plt\n\nplt.figure()\nplt.plot([1, 2, 3, 4], [1, 4, 9, 16])\nplt.show()\n```\n\nMatplotlib三层结构\n\n1. 容器层\n   1. (Canvas)画板层，最底层\n   2. (Figure)画布层，建立在画板之上\n   3. (Axes)绘图区/坐标系，建立在画布之上，一个画布有多个绘图区\n2. 辅助显示层\n3. 图像层：坐标轴(axis)、图例(legend)建立在绘图区上\n\n**Matplotlib模块**:\n\n* Matplotlib.pyplot\n  * figure() 创建默认画布\n  * figure(figsize=(),dpi=) 创建指定画布\n    * figsize，指定图的长宽\n    * dpi：图像的清晰度\n  * savefig(\"图像路径\")，保存图像\n  * plot(x,y) x轴数据，y轴数据\n    * plot(x,y1,label='y1',color='red',linestyle='--',marker='o')\n  * show() 显示图像\n  * xticks(x,**kwargs), x为要显示的刻度\n  * yticks(y,**kwargs), y为要显示的刻度\n  * 中文显示问题\n    * `matplotlib.matplotlib_fname()`方法找到配置文件，添加下面文字\n    * font.sans-serif: Microsoft YaHei\n    * 从本地的字体库中找到`C:\\Windows\\Fonts\\Microsoft YaHei UI`字体\n    * 复制到`matplotlib\\mpl-data\\fonts\\ttf`文件夹中\n  * grid(True,linestyle='--',color='gray',linewidth=1,alpha=0.5) 坐标图的网格线\n  * xlabel x坐标轴信息\n  * ylabel y坐标轴信息\n  * title 标题\n  * 多个图画在一起\n    * 多次使用plot(x,y)进行画图就行了\n  * 多个图组合一起\n    * subplot(2,1,1) 两行一列第一个图，后面写全部的画图代码\n    * subplot(2,1,2) 两行一列第二个图，后面写全部的画图代码\n  * 折线图 plot()\n  * 散点图 scatter()\n  * 柱状图 bar()\n  * 直方图 histogram()\n  * 饼图 pie()\n\n```py\nfrom matplotlib.pyplot import *\n\nx= range(1,11)\ny1= [i*i for i in x]\ny2= [i*i*i for i in x]\nfigure(figsize=(10,10),dpi=100)\nsubplot(2,1,1)\nplot(x,y1,label='y1',color='red',linestyle='--',marker='o')\nxticks(x)\nyticks(range(0,1000,100))\ngrid(True,linestyle='--',color='gray',linewidth=1,alpha=0.5)\nsubplot(2,1,2)\nplot(x,y2,label='y2',color='green',linestyle='-.',marker='*')\nxticks(x)\nyticks(range(0,1000,100))\ngrid(True,linestyle='--',color='gray',linewidth=1,alpha=0.5)\nshow()\n```\n\n#### 4.2 Numpy\n\n数值计算库，用于快速处理数组\n\n```py\nimport numpy as np\n\na = np.array([[1, 2, 3],\n          [4, 5, 6]])\n\ntype(a)\n# =========\n# numpy.ndarray\n```\n\n* numpy\n  * 数组里面的数据都是相同的数据类型\n  * 支持向量化运算\n  * ndarray\n    * 属性\n    * shape 数组维度的元组  (行数,列数)\n    * ndim 数组维度\n    * size 数组中元素的数量\n    * itemsize 一个数组元素的长度\n    * dtype 数组元素类型\n  * 生成数组的方法\n    * 生成0和1\n      * `zeros(shape=[行,列],dtype=\"float32\")`\n      * `ones(shape=[行,列],dtype=\"float32\")`\n    * 从现有数组生成\n      * `array([1,2,3])`\n      * `asarray(a)` 浅拷贝\n      * `copy(a)` 深拷贝\n    * 生成固定范围的数组\n      * `linspace(0,100,1000)` 左闭右闭的数据\n      * `arange(0，100，0.1)` 左闭右开\n    * 生成随机数组\n      * 均匀分布 `random.uniform(low = -1,high = 1,size = 1000)`\n      * 正态分布 `random.randn(loc = 0,scale = 1,size = (2,8))`\n  * 索引数据\n    * `a[1,2]`\n  * 修改数据\n    * `reshape((行，列))` 可以把任意行列的数组，转化为需要的行列，返回新的数组\n    * `resize((行，列))` 修改效果与上面一样，但是会修改原数组\n    * `T` 对数组进行转置操作\n  * 类型修改\n    * `astype(新类型)`\n  * 序列化\n    * `tostring()`\n  * 去重\n    * `set(数组)` 无法转化一维以上数据\n    * `unique(数组)` 全部转化为一维\n  * 运算\n    * 逻辑运算\n      * `数组[数组 > 1]`\n      * `all(布尔值)` 只要有一个False返回False\n      * `any(布尔值)` 只要有一个True返回True\n      * `where(三元运算符)`  `where(布尔值，True操作，False操作)`\n    * 统计运算\n      * 统计指标函数\n        * min 最小值 `min(axis=0)` 按列求最小值 `min(axis=1)` 按列求最大值\n        * max 最大值\n        * mean 平均值\n        * median 中位数\n        * var 方差\n        * std 标准差\n      * `argmax(数组,axis=0)`\n      * `argmin(数组,axis=1)`\n    * 数组运算\n      * 数组可以直接与数进行运算\n      * 不同形状的数组需要满足广播机制，不同形状的其中一个是1\n    * 矩阵运算\n      * 矩阵乘法\n        * `matmul(矩阵1，矩阵2)` 普通乘\n        * `dot(矩阵1，矩阵2)` 点乘\n  * 合并与分割\n    * `hstack((矩阵1,矩阵2,...))` 水平拼接\n    * `vstack((矩阵1,矩阵2,...))` 垂直拼接\n    * `concatenate((矩阵1，矩阵2,...),axis=0)` 根据axis判断水平还是垂直拼接\n    * `split(矩阵,[索引1,索引2,...])` 根据索引作为终点来依次分割矩阵\n  * IO操作与数据处理\n    * 读取\n      * `genfromtxt(文件路径,delimiter=\",\")` 根据分隔符的规则读取文件数据，非数字和缺失值会显示`nan`\n\n#### 4.3 Pandas\n\n读取文件方便，封装了Numpy、Matplotlib\n\n* 核心数据结构\n  * `DataFrame(数组)`\n    * 具有行索引和列索引的二维数组，让数组更直观的表现\n    * `DataFrame(数组，index=行索引矩阵，columns=列索引矩阵)` 给数据表添加行表头和列表头\n    * 属性\n      * shape  行数和列数元组\n      * index  行表头\n      * columns 列表头\n      * values 中间的有效数据\n      * T 转置\n    * 方法\n      * head(n) 返回前n行数据\n      * tail(n) 返回后n行数据\n    * 修改行列表头\n      * 利用属性index进行修改，只能统一修改不能单独修改\n  * `MultiIndex`\n    * 多级或分层索引对象，三维数据表示\n    * 属性\n      * `index`\n        * `names`   levels的名称\n        * `levels`  每个level的元组值\n  * `Series`\n    * 带索引的一维数组\n    * 只有行索引\n    * 属性\n      * index\n      * values\n* 数据操作\n  * 索引操作\n    * drop(行/列索引矩阵,axis=0/1) 删除部分行/列数据\n    * 直接索引\n    * 按名字索引\n    * 按数字索引\n    * 组合索引\n  * 赋值操作\n  * 排序\n","slug":"计算机/python/Python快速入门语法","published":1,"updated":"2023-12-09T10:20:22.818Z","layout":"post","photos":[],"_id":"cm1z7giph000edwvx6foi6zdu","content":"<h1 id=\"Python快速入门语法\"><a href=\"#Python快速入门语法\" class=\"headerlink\" title=\"Python快速入门语法\"></a>Python快速入门语法</h1><h2 id=\"一、基础语法\"><a href=\"#一、基础语法\" class=\"headerlink\" title=\"一、基础语法\"></a>一、基础语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><h4 id=\"1-1-Python-源程序的基本概念\"><a href=\"#1-1-Python-源程序的基本概念\" class=\"headerlink\" title=\"1.1 Python 源程序的基本概念\"></a>1.1 Python 源程序的基本概念</h4><ol>\n<li>Python 源程序就是一个特殊格式的文本文件，可以使用任意文本编辑软件做 Python 的开发</li>\n<li>Python 程序的 文件扩展名 通常都是 .py</li>\n</ol>\n<h4 id=\"1-2-演练步骤\"><a href=\"#1-2-演练步骤\" class=\"headerlink\" title=\"1.2 演练步骤\"></a>1.2 演练步骤</h4><ul>\n<li>在桌面下，新建 认识Python 目录</li>\n<li>在 认识Python 目录下新建 <code>01-HelloPython.py</code> 文件</li>\n<li>使用 gedit 编辑 <code>01-HelloPython.py</code> 并且输入以下内容：<br><code>python print(&quot;hello python&quot;) print(&quot;hello world&quot;)</code></li>\n<li>在终端中输入以下命令执行 <code>01-HelloPython.py</code><br><code>bash $ python 01-HelloPython.py</code></li>\n</ul>\n<blockquote>\n<p>print 是 python 中我们学习的第一个 函数<br>print 函数的作用，可以把 “” 内部的内容，输出到屏幕上</p>\n</blockquote>\n<h4 id=\"1-3-执行-Python-程序的方式\"><a href=\"#1-3-执行-Python-程序的方式\" class=\"headerlink\" title=\"1.3 执行 Python 程序的方式\"></a>1.3 执行 Python 程序的方式</h4><ol>\n<li>解释器 python &#x2F; python3<br>  <strong>Python 的解释器</strong><br>  <code>```bash</code></li>\n</ol>\n<p>  <strong>使用 python 2.x 解释器</strong><br>  <code>$ python xxx.py</code><br>  <strong>使用 python 3.x 解释器</strong><br>  <code>$ python3 xxx.py</code><br>  <strong>其他解释器（知道）</strong><br>  <strong>Python 的解释器</strong> 如今有多个语言的实现，包括：</p>\n<ul>\n<li><code>CPython</code> —— 官方版本的 C 语言实现</li>\n<li><code>Jython</code> —— 可以运行在 Java 平台</li>\n<li><code>IronPython</code> —— 可以运行在 .NET 和 Mono 平台</li>\n<li><code>PyPy</code> —— Python 实现的，支持 JIT 即时编译</li>\n</ul>\n<ol start=\"2\">\n<li>交互式运行 Python 程序<ul>\n<li>直接在终端中运行解释器，而不输入要执行的文件名</li>\n<li>在 Python 的 <code>Shell</code> 中直接输入 Python 的代码，会立即看到程序执行结果</li>\n</ul>\n<ol>\n<li>交互式运行 Python 的优缺点<br>  <strong>优点</strong><br>  适合于学习&#x2F;验证 Python 语法或者局部代码<br>  <strong>缺点</strong><br>  代码不能保存<br>  不适合运行太大的程序</li>\n<li>退出 官方的解释器<ol>\n<li>直接输入<code>exit()</code></li>\n<li>使用热键退出<br>在 python 解释器中，按热键 ctrl + d 可以退出解释器</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"2-基础语法\"><a href=\"#2-基础语法\" class=\"headerlink\" title=\"2.基础语法\"></a>2.基础语法</h3><h4 id=\"2-1-注释\"><a href=\"#2-1-注释\" class=\"headerlink\" title=\"2.1 注释\"></a>2.1 注释</h4><ul>\n<li><p>单行注释（行注释）</p>\n<ul>\n<li>以<code>#</code>开头，<code>#</code>右边的所有东西都被当做说明文字，而不是真正要执行的程序，只起到辅助说明作用</li>\n</ul>\n</li>\n<li><p>多行注释（块注释）</p>\n<ul>\n<li>要在 Python 程序中使用多行注释，可以用 一对 连续的 三个 引号(单引号和双引号都可以)</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行注释</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">  多行注释</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2-2-算数运算符\"><a href=\"#2-2-算数运算符\" class=\"headerlink\" title=\"2.2 算数运算符\"></a>2.2 算数运算符</h4><ul>\n<li><p>算数运算符是 运算符的一种</p>\n</li>\n<li><p>是完成基本的算术运算使用的符号，用来处理四则运算</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th align=\"center\">描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">+</td>\n<td align=\"center\">加</td>\n<td>10 + 20 &#x3D; 30</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td align=\"center\">减</td>\n<td>10 - 20 &#x3D; -10</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td align=\"center\">乘</td>\n<td>10 * 20 &#x3D; 200</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;</td>\n<td align=\"center\">除</td>\n<td>10 &#x2F; 20 &#x3D; 0.5</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;&#x2F;</td>\n<td align=\"center\">取整除</td>\n<td>返回除法的整数部分（商） 9 &#x2F;&#x2F; 2 输出结果 4</td>\n</tr>\n<tr>\n<td align=\"center\">%</td>\n<td align=\"center\">取余数</td>\n<td>返回除法的余数 9 % 2 &#x3D; 1</td>\n</tr>\n<tr>\n<td align=\"center\">**</td>\n<td align=\"center\">幂</td>\n<td>又称次方、乘方，2 ** 3 &#x3D; 8</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>在 Python 中 <code>*</code> 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果<br><code>python In [1]: &quot;-&quot; * 50 Out[1]: &#39;----------------------------------------&#39;</code></p>\n</li>\n<li><p>算数运算符的优先级</p>\n<ul>\n<li>先乘除后加减</li>\n<li>同级运算符是 从左至右 计算</li>\n<li>可以使用 () 调整计算的优先级</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>**</td>\n<td>幂 (最高优先级)</td>\n</tr>\n<tr>\n<td>* &#x2F; % &#x2F;&#x2F;</td>\n<td>乘、除、取余数、取整除</td>\n</tr>\n<tr>\n<td>+ -</td>\n<td>加法、减法</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"2-3-变量的基本使用\"><a href=\"#2-3-变量的基本使用\" class=\"headerlink\" title=\"2.3 变量的基本使用\"></a>2.3 变量的基本使用</h4><p><strong>变量定义</strong>：</p>\n<ul>\n<li>在 Python 中，每个变量 在使用前都必须赋值，变量 赋值以后 该变量 才会被创建</li>\n<li>等号（&#x3D;）用来给变量赋值<ul>\n<li><code>=</code> 左边是一个变量名</li>\n<li><code>=</code> 右边是存储在变量中的值</li>\n<li><code>变量名 = 值</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>变量的类型</strong>:</p>\n<ul>\n<li>在 Python 中定义变量是 不需要指定类型（在其他很多高级语言中都需要）</li>\n<li>数据类型可以分为 数字型 和 非数字型</li>\n<li>数字型<ul>\n<li>整型 (int)</li>\n<li>浮点型（float）</li>\n<li>布尔型（bool）</li>\n<li>真 True 非 0 数 —— 非零即真</li>\n<li>假 False 0</li>\n<li>复数型 (complex)<ul>\n<li>主要用于科学计算，例如：平面场问题、波动问题、电感电容等问题</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>非数字型<ul>\n<li>字符串</li>\n<li>列表</li>\n<li>元组</li>\n<li>字典</li>\n</ul>\n</li>\n<li>使用 type 函数可以查看一个变量的类型<ul>\n<li><code>type(name)</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>变量的输入</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>print(x)</td>\n<td>将 x 输出到控制台</td>\n</tr>\n<tr>\n<td>type(x)</td>\n<td>查看 x 的变量类型</td>\n</tr>\n</tbody></table>\n<p>input 函数实现键盘输入</p>\n<ul>\n<li>在 Python 中可以使用 input 函数从键盘等待用户的输入</li>\n<li>用户输入的 任何内容 Python 都认为是一个 字符串</li>\n<li>语法如下：<br>  <code>字符串变量 = input(&quot;提示信息：&quot;)</code></li>\n</ul>\n<p><strong>类型转换函数</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>int(x)</td>\n<td>将 x 转换为一个整数</td>\n</tr>\n<tr>\n<td>float(x)</td>\n<td>将 x 转换到一个浮点数</td>\n</tr>\n</tbody></table>\n<p><strong>变量的格式化输出</strong>:</p>\n<ul>\n<li>在 Python 中可以使用<code>print</code>函数将信息输出到控制台</li>\n<li>如果希望输出文字信息的同时，一起输出数据，就需要使用到格式化操作符</li>\n<li><code>%</code>被称为<strong>格式化操作符</strong>，专门用于处理字符串中的格式<ul>\n<li>包含 <code>%</code> 的字符串，被称为格式化字符串</li>\n<li><code>%</code> 和不同的字符连用，不同类型的数据需要使用不同的格式化字符</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>格式化字符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%s</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td>%d</td>\n<td>有符号十进制整数，%06d 表示输出的整数显示位数，不足的地方使用 0 补全</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>浮点数，%.2f 表示小数点后只显示两位</td>\n</tr>\n<tr>\n<td>%%</td>\n<td>输出 %</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;格式化字符串%s&quot;</span> %a)</span><br></pre></td></tr></table></figure>\n\n<p><strong>变量的命名</strong>:</p>\n<ul>\n<li>标识符<ul>\n<li>标示符可以由 字母、下划线 和 数字 组成</li>\n<li>不能以数字开头</li>\n<li>不能与关键字重名</li>\n</ul>\n</li>\n<li>关键字<ul>\n<li>关键字就是在 Python 内部已经使用的标识符</li>\n<li>关键字具有特殊的功能和含义</li>\n<li>开发者不允许定义和关键字相同的名字的标示符</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-4-运算符\"><a href=\"#2-4-运算符\" class=\"headerlink\" title=\"2.4 运算符\"></a>2.4 运算符</h4><ul>\n<li><p>算数运算符</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th align=\"center\">描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">+</td>\n<td align=\"center\">加</td>\n<td>10 + 20 &#x3D; 30</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td align=\"center\">减</td>\n<td>10 - 20 &#x3D; -10</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td align=\"center\">乘</td>\n<td>10 * 20 &#x3D; 200</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;</td>\n<td align=\"center\">除</td>\n<td>10 &#x2F; 20 &#x3D; 0.5</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;&#x2F;</td>\n<td align=\"center\">取整除</td>\n<td>返回除法的整数部分（商） 9 &#x2F;&#x2F; 2 输出结果 4</td>\n</tr>\n<tr>\n<td align=\"center\">%</td>\n<td align=\"center\">取余数</td>\n<td>返回除法的余数 9 % 2 &#x3D; 1</td>\n</tr>\n<tr>\n<td align=\"center\">**</td>\n<td align=\"center\">幂</td>\n<td>又称次方、乘方，2 ** 3 &#x3D; 8</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>比较（关系）运算符</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>检查两个操作数的值是否 相等，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>检查两个操作数的值是否 不相等，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>检查左操作数的值是否 大于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>检查左操作数的值是否 小于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>检查左操作数的值是否 大于或等于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>检查左操作数的值是否 小于或等于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>逻辑运算符</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>逻辑表达式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>and</td>\n<td>x and y</td>\n<td>只有 x 和 y 的值都为 True，才会返回 True否则只要 x 或者 y 有一个值为 False，就返回 False</td>\n</tr>\n<tr>\n<td>or</td>\n<td>x or y</td>\n<td>只要 x 或者 y 有一个值为 True，就返回 True只有 x 和 y 的值都为 False，才会返回 False</td>\n</tr>\n<tr>\n<td>not</td>\n<td>not x</td>\n<td>如果 x 为 True，返回 False如果 x 为 False，返回 True</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>赋值运算符</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;</td>\n<td>简单的赋值运算符</td>\n<td>c &#x3D; a + b 将 a + b 的运算结果赋值为 c</td>\n</tr>\n<tr>\n<td>+&#x3D;</td>\n<td>加法赋值运算符</td>\n<td>c +&#x3D; a 等效于 c &#x3D; c + a</td>\n</tr>\n<tr>\n<td>-&#x3D;</td>\n<td>减法赋值运算符</td>\n<td>c -&#x3D; a 等效于 c &#x3D; c - a</td>\n</tr>\n<tr>\n<td>*&#x3D;</td>\n<td>乘法赋值运算符</td>\n<td>c *&#x3D; a 等效于 c &#x3D; c * a</td>\n</tr>\n<tr>\n<td>&#x2F;&#x3D;</td>\n<td>除法赋值运算符</td>\n<td>c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td>\n</tr>\n<tr>\n<td>&#x2F;&#x2F;&#x3D;</td>\n<td>取整除赋值运算符</td>\n<td>c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td>\n</tr>\n<tr>\n<td>%&#x3D;</td>\n<td>取 模 (余数)赋值运算符</td>\n<td>c %&#x3D; a 等效于 c &#x3D; c % a</td>\n</tr>\n<tr>\n<td>**&#x3D;</td>\n<td>幂赋值运算符</td>\n<td>c **&#x3D; a 等效于 c &#x3D; c ** a</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>运算符的优先级</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>**</td>\n<td>幂 (最高优先级)</td>\n</tr>\n<tr>\n<td>* &#x2F; % &#x2F;&#x2F;</td>\n<td>乘、除、取余数、取整除</td>\n</tr>\n<tr>\n<td>+ -</td>\n<td>加法、减法</td>\n</tr>\n<tr>\n<td>&lt;&#x3D; &lt; &gt; &gt;&#x3D;</td>\n<td>比较运算符</td>\n</tr>\n<tr>\n<td>&#x3D;&#x3D; !&#x3D;</td>\n<td>等于运算符</td>\n</tr>\n<tr>\n<td>&#x3D; %&#x3D; &#x2F;&#x3D; &#x2F;&#x2F;&#x3D; -&#x3D; +&#x3D; *&#x3D; **&#x3D;</td>\n<td>赋值运算符</td>\n</tr>\n<tr>\n<td>not or and</td>\n<td>逻辑运算符</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"2-5-条件语句\"><a href=\"#2-5-条件语句\" class=\"headerlink\" title=\"2.5 条件语句\"></a>2.5 条件语句</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 要判断的条件: </span><br><span class=\"line\">  条件成立时，要做的事情 ……</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> 要判断的条件: </span><br><span class=\"line\">  条件成立时，要做的事情 …… </span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  条件不成立时，要做的事情 ……</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> 条件<span class=\"number\">1</span>: </span><br><span class=\"line\">  条件<span class=\"number\">1</span>满足执行的代码 …… </span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件<span class=\"number\">2</span>: </span><br><span class=\"line\">  条件<span class=\"number\">2</span>满足时，执行的代码 …… </span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件<span class=\"number\">3</span>: </span><br><span class=\"line\">  条件<span class=\"number\">3</span>满足时，执行的代码 …… </span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  以上条件都不满足时，执行的代码 ……</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑运算</strong>:</p>\n<ul>\n<li>在程序开发中，通常在判断条件时，会需要同时判断多个条件</li>\n<li>只有多个条件都满足，才能够执行后续代码，这个时候需要使用到逻辑运算符</li>\n<li>逻辑运算符 可以把多个条件按照逻辑进行连接，变成更复杂的条件</li>\n<li>Python 中的 逻辑运算符 包括：<code>与 and</code>、<code>或 or</code>、<code>非 not</code> 三种</li>\n</ul>\n<h4 id=\"2-6-循环语句\"><a href=\"#2-6-循环语句\" class=\"headerlink\" title=\"2.6 循环语句\"></a>2.6 循环语句</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 条件: </span><br><span class=\"line\">  条件满足时，做的事情....</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> 条件: </span><br><span class=\"line\">  条件满足时，做的事情....</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  正常循环结束执行的代码</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>break</code> ，退出循环</li>\n<li><code>continue</code>，退出当前循环，执行下一次循环</li>\n</ul>\n<p><strong>字符串中的转义字符</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">转义字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>\\\\</code></td>\n<td>反斜杠符号</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\&#39;</code></td>\n<td>单引号</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\&quot;</code></td>\n<td>双引号</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\n</code></td>\n<td>换行</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\t</code></td>\n<td>横向制表符</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\r</code></td>\n<td>回车</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;九九乘法表：&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">  j = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> j &lt;= i:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d*%d=%d\\t&quot;</span> % (j, i, i*j), end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    j = j + <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>()</span><br><span class=\"line\">  i += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-函数基础\"><a href=\"#2-7-函数基础\" class=\"headerlink\" title=\"2.7 函数基础\"></a>2.7 函数基础</h4><p><strong>函数的定义</strong>:</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">函数名</span>():</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>def 是英文 define 的缩写</li>\n<li>函数名称应该能够表达函数封装代码的功能，方便后续的调用</li>\n<li>函数名称的命名应该 符合标识符的命名规则<ol>\n<li>可以由字母、下划线和数字组成</li>\n<li>不能以数字开头</li>\n<li>不能与关键字重名</li>\n</ol>\n</li>\n<li>调用函数很简单的，通过<code>函数名()</code>即可完成对函数的调用</li>\n</ol>\n<p><strong>函数的文档注释</strong>:</p>\n<ol>\n<li>在开发中，如果希望给函数添加注释，应该在 定义函数 的下方，使用 连续的三对引号</li>\n<li>在连续的三对引号 之间编写对函数的说明文字</li>\n<li>在函数调用 位置，使用快捷键 <code>CTRL + Q</code> 可以查看函数的说明信息</li>\n</ol>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sum</span>(<span class=\"params\">num1, num2</span>):</span><br><span class=\"line\">  <span class=\"string\">&quot;&quot;&quot;对两个数字的求和&quot;&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> num1+num2</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-8-高级变量类型\"><a href=\"#2-8-高级变量类型\" class=\"headerlink\" title=\"2.8 高级变量类型\"></a>2.8 高级变量类型</h4><ul>\n<li><p><strong>列表</strong></p>\n<ul>\n<li>列表的定义<ul>\n<li>List（列表）是 Python 中使用最频繁的数据类型，在其他语言中通常叫做 数组</li>\n<li>专门用于存储一串信息</li>\n<li>列表用 <code>[]</code> 定义，数据之间使用 <code>,</code> 分隔</li>\n<li>列表的索引从 0 开始<ul>\n<li>索引就是数据在列表中的位置编号，索引又可以被称为下标</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>列表常用操作</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>分类</th>\n<th>关键字 &#x2F; 函数 &#x2F; 方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>增加</td>\n<td>列表.insert(索引, 数据)</td>\n<td>在指定位置插入数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.append(数据)</td>\n<td>在末尾追加数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.extend(列表2)</td>\n<td>将列表2 的数据追加到列表</td>\n</tr>\n<tr>\n<td>2</td>\n<td>修改</td>\n<td>列表[索引] &#x3D; 数据</td>\n<td>修改指定索引的数据</td>\n</tr>\n<tr>\n<td>3</td>\n<td>删除</td>\n<td>del 列表[索引]</td>\n<td>删除指定索引的数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.remove[数据]</td>\n<td>删除第一个出现的指定数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.pop</td>\n<td>删除末尾数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.pop(索引)</td>\n<td>删除指定索引数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.clear</td>\n<td>清空列表</td>\n</tr>\n<tr>\n<td>4</td>\n<td>统计</td>\n<td>len(列表)</td>\n<td>列表长度</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.count(数据)</td>\n<td>数据在列表中出现的次数</td>\n</tr>\n<tr>\n<td>5</td>\n<td>排序</td>\n<td>列表.sort()</td>\n<td>升序排序</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.sort(reverse&#x3D;True)</td>\n<td>降序排序</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.reverse()</td>\n<td>逆序、反转</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>del 关键字</p>\n<ul>\n<li>使用 del 关键字(delete) 同样可以删除列表中元素</li>\n<li>del 关键字本质上是用来 将一个变量从内存中删除的</li>\n<li>如果使用 del 关键字将变量从内存中删除，后续的代码就不能再使用这个变量了</li>\n</ul>\n</li>\n<li><p>循环遍历</p>\n<ul>\n<li>遍历就是从头到尾依次从列表中获取数据</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 循环内部使用的变量 <span class=\"keyword\">in</span> 列表:</span><br><span class=\"line\">  循环体</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>元组</strong></p>\n<ul>\n<li>Tuple（元组）与列表类似，不同之处在于元组的元素不能修改</li>\n<li>用于存储一串信息，数据之间使用<code>,</code>分隔</li>\n<li>元组用<code>()</code> 定义</li>\n<li>元组的索引 从 0 开始</li>\n<li>常用操作与循环遍历与列表相同</li>\n</ul>\n</li>\n<li><p><strong>字典</strong></p>\n<ul>\n<li>dictionary（字典）是除列表以外 Python 之中 最灵活的数据类型</li>\n<li>和列表的区别<ul>\n<li><strong>列表</strong> 是 <strong>有序</strong> 的对象集合</li>\n<li><strong>字典</strong> 是 <strong>无序</strong> 的对象集合</li>\n</ul>\n</li>\n<li>字典用 <code>&#123;&#125;</code> 定义</li>\n<li>字典使用 键值对存储数据，键值对之间使用 <code>,</code> 分隔<ul>\n<li><strong>键</strong> <code>key</code> 是索引</li>\n<li><strong>值</strong> <code>value</code> 是数据</li>\n<li><strong>键</strong> 和 <strong>值</strong> 之间使用 <code>:</code> 分隔</li>\n<li><strong>键</strong>必须是唯一的</li>\n<li><strong>值</strong> 可以取任何数据类型，但 <strong>键</strong> 只能使用 <strong>字符串</strong>、<strong>数字</strong>或 <strong>元组</strong></li>\n</ul>\n</li>\n<li>常用操作</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>分类</th>\n<th>关键字 &#x2F; 函数 &#x2F; 方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>增加</td>\n<td>字典[key] &#x3D; value</td>\n<td>新增键值对</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.setdefault(key,value)</td>\n<td>新增键值对</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.update(字典2)</td>\n<td>将字典2的数据合并到字典中</td>\n</tr>\n<tr>\n<td>2</td>\n<td>修改</td>\n<td>字典[key] &#x3D; value</td>\n<td>修改指定key的数据</td>\n</tr>\n<tr>\n<td>3</td>\n<td>删除</td>\n<td>del 字典[key]</td>\n<td>删除指定键值对的数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.popitem()</td>\n<td>随机删除一个键值对</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.pop(key)</td>\n<td>删除指定键值对数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.clear()</td>\n<td>清空字典</td>\n</tr>\n<tr>\n<td>4</td>\n<td>统计</td>\n<td>len(字典)</td>\n<td>字典的键值对数量</td>\n</tr>\n<tr>\n<td>5</td>\n<td>查询</td>\n<td>字典.keys()</td>\n<td>所有key列表</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.values()</td>\n<td>所有value列表</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.items()</td>\n<td>所有(key,value)元组列表</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典[key]</td>\n<td>获取key对应的值</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.get(key)</td>\n<td>获取key对应的值</td>\n</tr>\n</tbody></table>\n<ul>\n<li>循环遍历</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> 字典:</span><br><span class=\"line\">  循环体</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> 字典:</span><br><span class=\"line\">  循环体</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>集合</strong></p>\n<ul>\n<li>创建集合<ul>\n<li><code>a = &#123;1,2,3&#125;</code></li>\n<li><code>a = set&#123;&#125;</code></li>\n</ul>\n</li>\n<li>是乱序的</li>\n<li>数据具有唯一性，有去重的功能</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>分类</th>\n<th>关键字 &#x2F; 函数 &#x2F; 方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>增加</td>\n<td>集合.add(value)</td>\n<td>新增数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>集合.update(列表)</td>\n<td>将列表的数据合并到集合中</td>\n</tr>\n<tr>\n<td>2</td>\n<td>删除</td>\n<td>集合.discard()</td>\n<td>删除指定数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>集合.pop()</td>\n<td>随机删除一个数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>集合.remove()</td>\n<td>删除指定数据</td>\n</tr>\n<tr>\n<td>3</td>\n<td>查询</td>\n<td>value in 集合</td>\n<td>判断数据是否在集合序列</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>value not in 集合</td>\n<td>判断数据是否不在集合序列</td>\n</tr>\n</tbody></table>\n</li>\n<li><p><strong>字符串</strong></p>\n<ul>\n<li><p>字符串的定义</p>\n<ul>\n<li>字符串 就是 一串字符，是编程语言中表示文本的数据类型</li>\n<li>在 <code>Python</code> 中可以使用 一对双引号<code>&quot;</code>或者 一对单引号<code>&#39;</code>定义一个字符串</li>\n<li>可以使用 索引 获取一个字符串中 指定位置的字符，索引计数从 0 开始</li>\n<li>也可以使用 <code>for</code> 循环遍历 字符串中每一个字符</li>\n</ul>\n</li>\n<li><p>字符串的常用操作</p>\n<ul>\n<li>判断类型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.isspace()</td>\n<td>如果 string 中只包含空格，则返回 True</td>\n</tr>\n<tr>\n<td>string.isalnum()</td>\n<td>如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True</td>\n</tr>\n<tr>\n<td>string.isalpha()</td>\n<td>如果 string 至少有一个字符并且所有字符都是字母则返回 True</td>\n</tr>\n<tr>\n<td>string.isdecimal()</td>\n<td>如果 string 只包含数字则返回 True，全角数字</td>\n</tr>\n<tr>\n<td>string.isdigit()</td>\n<td>如果 string 只包含数字则返回 True，全角数字、⑴、\\u00b2</td>\n</tr>\n<tr>\n<td>string.isnumeric()</td>\n<td>如果 string 只包含数字则返回 True，全角数字，汉字数字</td>\n</tr>\n<tr>\n<td>string.istitle()</td>\n<td>如果 string 是标题化的(每个单词的首字母大写)则返回 True</td>\n</tr>\n<tr>\n<td>string.islower()</td>\n<td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True</td>\n</tr>\n<tr>\n<td>string.isupper()</td>\n<td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True</td>\n</tr>\n</tbody></table>\n<ul>\n<li>查找和替换</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.startswith(str)</td>\n<td>检查字符串是否是以 str 开头，是则返回 True</td>\n</tr>\n<tr>\n<td>string.endswith(str)</td>\n<td>检查字符串是否是以 str 结束，是则返回 True</td>\n</tr>\n<tr>\n<td>string.find(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>检测 str 是否包含在 string 中，如果 start 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回 -1</td>\n</tr>\n<tr>\n<td>string.rfind(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>类似于 find()，不过是从右边开始查找</td>\n</tr>\n<tr>\n<td>string.index(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>跟 find() 方法类似，不过如果 str 不在 string 会报错</td>\n</tr>\n<tr>\n<td>string.rindex(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>类似于 index()，不过是从右边开始</td>\n</tr>\n<tr>\n<td>string.replace(oldstr, newstr, num&#x3D;string.count(old))</td>\n<td>把 string 中的 oldstr 替换成 newstr，如果 num 指定，则替换不超过 num 次</td>\n</tr>\n</tbody></table>\n<ul>\n<li>大小写转换</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.capitalize()</td>\n<td>把字符串的第一个字符大写</td>\n</tr>\n<tr>\n<td>string.title()</td>\n<td>把字符串的每个单词首字母大写</td>\n</tr>\n<tr>\n<td>string.lower()</td>\n<td>转换 string 中所有大写字符为小写</td>\n</tr>\n<tr>\n<td>string.upper()</td>\n<td>转换 string 中的小写字母为大写</td>\n</tr>\n<tr>\n<td>string.swapcase()</td>\n<td>翻转 string 中的大小写</td>\n</tr>\n</tbody></table>\n<ul>\n<li>文本对齐</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.ljust(width)</td>\n<td>返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串</td>\n</tr>\n<tr>\n<td>string.rjust(width)</td>\n<td>返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串</td>\n</tr>\n<tr>\n<td>string.center(width)</td>\n<td>返回一个原字符串居中，并使用空格填充至长度 width 的新字符串</td>\n</tr>\n</tbody></table>\n<ul>\n<li>去除空白字符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.lstrip()</td>\n<td>截掉 string 左边（开始）的空白字符</td>\n</tr>\n<tr>\n<td>string.rstrip()</td>\n<td>截掉 string 右边（末尾）的空白字符</td>\n</tr>\n<tr>\n<td>string.strip()</td>\n<td>截掉 string 左右两边的空白字符</td>\n</tr>\n</tbody></table>\n<ul>\n<li>拆分和连接</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.partition(str)</td>\n<td>把字符串 string 分成一个 3 元素的元组 (str前面, str, str后面)</td>\n</tr>\n<tr>\n<td>string.rpartition(str)</td>\n<td>类似于 partition() 方法，不过是从右边开始查找</td>\n</tr>\n<tr>\n<td>string.split(str&#x3D;””, num)</td>\n<td>以 str 为分隔符拆分 string，如果 num 有指定值，则仅分隔 num + 1 个子字符串，str 默认包含 ‘\\r’, ‘\\t’, ‘\\n’ 和空格</td>\n</tr>\n<tr>\n<td>string.splitlines()</td>\n<td>按照行(‘\\r’, ‘\\n’, ‘\\r\\n’)分隔，返回一个包含各行作为元素的列表</td>\n</tr>\n<tr>\n<td>string.join(seq)</td>\n<td>以 string 作为分隔符，将 seq 中所有的元素（的字符串表示）合并为一个新的字符串</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li><p><strong>字符串的切片</strong></p>\n<ul>\n<li>切片 方法适用于 字符串、列表、元组<ul>\n<li>切片 使用 索引值 来限定范围，从一个大的 字符串 中 切出 小的 字符串</li>\n<li>列表 和 元组 都是 有序 的集合，都能够 通过索引值 获取到对应的数据</li>\n<li>字典 是一个 无序 的集合，是使用 键值对 保存数据</li>\n</ul>\n</li>\n<li>语法： <code>字符串[开始索引:结束索引:步长]</code></li>\n<li>在 Python 中不仅支持 顺序索引，同时还支持 倒序索引<ul>\n<li>所谓倒序索引就是 从右向左 计算索引</li>\n<li>最右边的索引值是 -1，依次递减</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-9-公共方法\"><a href=\"#2-9-公共方法\" class=\"headerlink\" title=\"2.9 公共方法\"></a>2.9 公共方法</h4><p><strong>Python 包含了以下内置函数</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>描述</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>len(item)</td>\n<td>计算容器中元素个数</td>\n<td></td>\n</tr>\n<tr>\n<td>del(item)</td>\n<td>删除变量</td>\n<td>del 有两种方式</td>\n</tr>\n<tr>\n<td>max(item)</td>\n<td>返回容器中元素最大值</td>\n<td>如果是字典，只针对 key 比较</td>\n</tr>\n<tr>\n<td>min(item)</td>\n<td>返回容器中元素最小值</td>\n<td>如果是字典，只针对 key 比较</td>\n</tr>\n<tr>\n<td>cmp(item1, item2)</td>\n<td>比较两个值，-1 小于&#x2F;0 相等&#x2F;1 大于</td>\n<td>Python 3.x 取消了 cmp 函数</td>\n</tr>\n</tbody></table>\n<p><strong>切片</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">描述</th>\n<th>Python 表达式</th>\n<th>结果</th>\n<th>支持的数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">切片</td>\n<td>“0123456789”[::-2]</td>\n<td>“97531”</td>\n<td>字符串、列表、元组</td>\n</tr>\n</tbody></table>\n<p><strong>运算符</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th>Python 表达式</th>\n<th>结果</th>\n<th>描述</th>\n<th>支持的数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">+</td>\n<td>[1, 2] + [3, 4]</td>\n<td>[1, 2, 3, 4]</td>\n<td>合并</td>\n<td>字符串、列表、元组</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td>[“Hi!”] * 4</td>\n<td>[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td>\n<td>重复</td>\n<td>字符串、列表、元组</td>\n</tr>\n<tr>\n<td align=\"center\">in</td>\n<td>3 in (1, 2, 3)</td>\n<td>True</td>\n<td>元素是否存在</td>\n<td>字符串、列表、元组、字典</td>\n</tr>\n<tr>\n<td align=\"center\">not in</td>\n<td>4 not in (1, 2, 3)</td>\n<td>True</td>\n<td>元素是否不存在</td>\n<td>字符串、列表、元组、字典</td>\n</tr>\n<tr>\n<td align=\"center\">&gt; &gt;&#x3D; &#x3D;&#x3D; &lt; &lt;&#x3D;</td>\n<td>(1, 2, 3) &lt; (2, 2, 3)</td>\n<td>True</td>\n<td>元素比较</td>\n<td>字符串、列表、元组</td>\n</tr>\n</tbody></table>\n<p><strong>成员运算符</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>in</td>\n<td>如果在指定的序列中找到值返回 True，否则返回 False</td>\n<td>3 in (1, 2, 3) 返回 True</td>\n</tr>\n<tr>\n<td>not in</td>\n<td>如果在指定的序列中没有找到值返回 True，否则返回 False</td>\n<td>3 not in (1, 2, 3) 返回 False</td>\n</tr>\n</tbody></table>\n<p><strong>for 循环语法</strong>:</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 变量 <span class=\"keyword\">in</span> 集合:</span><br><span class=\"line\">  循环体代码</span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  没有通过 <span class=\"keyword\">break</span> 退出循环，循环结束后，会执行的代码</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-10-变量进阶\"><a href=\"#2-10-变量进阶\" class=\"headerlink\" title=\"2.10 变量进阶\"></a>2.10 变量进阶</h4><p><strong>变量的引用</strong>:</p>\n<ul>\n<li>变量 和 数据 都是保存在 内存 中的</li>\n<li>在 Python 中 <strong>函数</strong> 的 <strong>参数</strong> 传递以及 <strong>返回值</strong> 都是靠 <strong>引用</strong> 传递的</li>\n<li>变量 和 数据 是分开存储的</li>\n<li>数据 保存在内存中的一个位置</li>\n<li>变量 中保存着数据在内存中的地址</li>\n<li>变量 中 记录数据的地址，就叫做 引用</li>\n<li>使用<code>id()</code>函数可以查看变量中保存数据所在的<strong>内存地址</strong></li>\n</ul>\n<p><strong>可变和不可变类型</strong>:</p>\n<ul>\n<li>不可变类型，内存中的数据不允许被修改：<ul>\n<li>数字类型 <code>int</code>, <code>bool</code>, <code>float</code>, <code>complex</code>, <code>long(2.x)</code></li>\n<li>字符串 <code>str</code></li>\n<li>元组 <code>tuple</code></li>\n</ul>\n</li>\n<li>可变类型，内存中的数据可以被修改：<ul>\n<li>列表 <code>list</code></li>\n<li>字典 <code>dict</code></li>\n</ul>\n</li>\n<li>注意<ul>\n<li>可变类型的数据变化，是通过 方法 来实现的</li>\n<li>如果给一个可变类型的变量，赋值了一个新的数据，引用会修改<ul>\n<li>变量 不再 对之前的数据引用</li>\n<li>变量 改为 对新赋值的数据引用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>哈希</strong>：</p>\n<ul>\n<li>Python 中内置有一个名字叫做 <code>hash(o)</code> 的函数<ul>\n<li>接收一个 不可变类型 的数据作为 参数</li>\n<li>返回 结果是一个 整数</li>\n</ul>\n</li>\n<li>哈希 是一种 算法，其作用就是提取数据的 特征码（指纹）<ul>\n<li>相同的内容 得到 相同的结果</li>\n<li>不同的内容 得到 不同的结果</li>\n</ul>\n</li>\n<li>在 Python 中，设置字典的 键值对 时，会首先对 key 进行 hash 已决定如何在内存中保存字典的数据，以方便 后续 对字典的操作：增、删、改、查<ul>\n<li>键值对的 key 必须是不可变类型数据</li>\n<li>键值对的 value 可以是任意类型的数据</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-11-函数进阶\"><a href=\"#2-11-函数进阶\" class=\"headerlink\" title=\"2.11 函数进阶\"></a>2.11 函数进阶</h4><p>局部变量：函数内部定义的，只能在函数内部使用<br>全局变量：函数外部定义的，所有函数都能使用</p>\n<ul>\n<li>函数返回值<ul>\n<li>利用元组返回多个值 <code>return (a,b)</code></li>\n<li>利用数组解构接收多值 <code>a,b = fun()</code></li>\n</ul>\n</li>\n<li>缺省参数<ul>\n<li>指定一个参数有默认值<code>fun(a,b=1)</code></li>\n</ul>\n</li>\n<li>多值参数<ul>\n<li>参数名前添加<code>*</code>可以接收元组</li>\n<li>参数名前添加<code>**</code>可以接收字典</li>\n<li>参数名前添加<code>*</code>可以对元组拆包</li>\n<li>参数名前添加<code>**</code>可以对字典拆包</li>\n</ul>\n</li>\n<li>Lambda表达式<ul>\n<li><code>参数 = lambda 参数列表: 表达式</code></li>\n<li>无参数    <code>fn = lambda: 100</code></li>\n<li>一个参数  <code>fn = lambda a: a</code></li>\n<li>默认参数  <code>fn = lambda a,b=1: a+b</code></li>\n<li>可变参数  <code>fn = lambda *args: args</code></li>\n</ul>\n</li>\n<li>高阶函数<ul>\n<li>把函数作为参数传入</li>\n</ul>\n</li>\n<li>内置高阶函数<ul>\n<li><code>map(func,list)</code><ul>\n<li>将传入的函数func作用于list的每一个元素，并将结果组成迭代器返回</li>\n<li>使用<code>list(res)</code>将结果转化为列表</li>\n</ul>\n</li>\n<li><code>reduce(func,list)</code><ul>\n<li>定义func函数必须有两个参数</li>\n<li>让func函数计算结果与list下一个元素作累计运算</li>\n<li>需要导入<code>functools</code>模块</li>\n</ul>\n</li>\n<li><code>filter(func,list)</code><ul>\n<li>根据func过滤不符合条件的元素，返回一个filter对象</li>\n<li>使用<code>list(res)</code>将结果转化为列表</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-12-文件操作\"><a href=\"#2-12-文件操作\" class=\"headerlink\" title=\"2.12 文件操作\"></a>2.12 文件操作</h4><ul>\n<li>打开文件<ul>\n<li><code>f = open(name, mode)</code></li>\n<li>打开一个已经存在的文件或者创建一个新文件</li>\n<li><code>name</code>文件名，<code>mode</code>表示打开文件方式：只读<code>w</code>、只写<code>r</code>、追加<code>a</code></li>\n</ul>\n</li>\n<li>写入文件<ul>\n<li><code>f.write(内容)</code></li>\n</ul>\n</li>\n<li>读取文件<ul>\n<li><code>f.read(num)</code><ul>\n<li>num表示要读取的长度（字节）</li>\n</ul>\n</li>\n<li><code>f.readlines()</code><ul>\n<li>读取全部文件，返回一个列表，每一行为一个元素</li>\n</ul>\n</li>\n<li><code>f.readline()</code><ul>\n<li>读取一行内容</li>\n</ul>\n</li>\n<li><code>f.seek(偏移量,起始位置)</code><ul>\n<li>移动文件指针位置，起始位置：0：文件开头，1：当前位置，2：文件结尾</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>关闭文件<ul>\n<li><code>f.close()</code></li>\n</ul>\n</li>\n<li>文件重命名<ul>\n<li>导入 <code>os</code> 模块</li>\n<li><code>os.rename(原文件名,新文件名)</code></li>\n</ul>\n</li>\n<li>删除文件<ul>\n<li><code>os.remove(文件名)</code></li>\n</ul>\n</li>\n<li>创建文件夹<ul>\n<li><code>os.mkdir(文件名)</code></li>\n</ul>\n</li>\n<li>删除文件夹<ul>\n<li><code>os.rmdir(文件名)</code></li>\n</ul>\n</li>\n<li>获取当前目录<ul>\n<li><code>os.getcwd()</code></li>\n</ul>\n</li>\n<li>改变默认目录<ul>\n<li><code>os.chdir(目录)</code></li>\n</ul>\n</li>\n<li>获取目录列表<ul>\n<li><code>os.listdir(目录)</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-进阶语法\"><a href=\"#3-进阶语法\" class=\"headerlink\" title=\"3.进阶语法\"></a>3.进阶语法</h3><h4 id=\"3-1-类\"><a href=\"#3-1-类\" class=\"headerlink\" title=\"3.1 类\"></a>3.1 类</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">类名</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 类属性，可以被实例对象和类对象访问</span></span><br><span class=\"line\">  <span class=\"comment\"># 仅占用一份内存，节省空间</span></span><br><span class=\"line\">  <span class=\"comment\"># 不能通过实例对象修改，只能通过类对象修改</span></span><br><span class=\"line\">  age = <span class=\"number\">18</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 初始化方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;类的说明，由print函数触发该方法&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__del__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 对象删除后调用此方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 定义方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__mode</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 定义私有方法</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.__name = <span class=\"string\">&quot;z&quot;</span> <span class=\"comment\"># 私有属性</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"meta\">  @classmethod</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode1</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 类方法</span></span><br><span class=\"line\">    <span class=\"comment\"># 需要用装饰器表示 @classmethod</span></span><br><span class=\"line\">    <span class=\"comment\"># 第一个参数必须为类对象，用来访问类属性</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"meta\">  @staticmethod</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode2</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 静态方法</span></span><br><span class=\"line\">    <span class=\"comment\"># 没有必须参数的方法</span></span><br><span class=\"line\">    <span class=\"comment\"># 可以被实例对象和类对象访问</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建对象</span></span><br><span class=\"line\">对象名 = 类名()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 类外面添加属性</span></span><br><span class=\"line\">对象名.属性名 = 值</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 类里面获取属性</span></span><br><span class=\"line\"><span class=\"variable language_\">self</span>.属性名</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-继承\"><a href=\"#3-2-继承\" class=\"headerlink\" title=\"3.2 继承\"></a>3.2 继承</h4><p>子类可以继承父类所有属性和方法：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span>:</span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Chidren</span>(<span class=\"title class_ inherited__\">Father</span>):</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Son</span>(Father,Chidren):</span><br><span class=\"line\">  <span class=\"comment\"># 多继承，当由同名属性和方法时，优先使用第一个</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 调用父类方法</span></span><br><span class=\"line\">    <span class=\"built_in\">super</span>().mode()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-多态\"><a href=\"#3-3-多态\" class=\"headerlink\" title=\"3.3 多态\"></a>3.3 多态</h4><p>是一种对象使用方法，通过多个子类继承相同父类并分别重写父类的方法，再通过统一调用父类方法来产生不同的结果</p>\n<h4 id=\"3-4-异常\"><a href=\"#3-4-异常\" class=\"headerlink\" title=\"3.4 异常\"></a>3.4 异常</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> 异常类型:</span><br><span class=\"line\">  <span class=\"comment\"># 捕获异常的处理代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> (异常类型<span class=\"number\">1</span>,异常类型<span class=\"number\">2</span>):</span><br><span class=\"line\">  <span class=\"comment\"># 捕获多个异常的处理代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> (异常类型<span class=\"number\">1</span>,异常类型<span class=\"number\">2</span>) <span class=\"keyword\">as</span> result:</span><br><span class=\"line\">  <span class=\"comment\"># 捕获异常描述信息result</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> result:</span><br><span class=\"line\">  <span class=\"comment\"># 捕获所有异常信息result</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 没有异常执行的代码</span></span><br><span class=\"line\"><span class=\"keyword\">finally</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 无论有没有异常都会执行的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">InputError</span>(<span class=\"title class_ inherited__\">Exception</span>):</span><br><span class=\"line\">  <span class=\"comment\"># 自定义异常类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 抛出异常</span></span><br><span class=\"line\"><span class=\"keyword\">raise</span> InputError()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-5-模块与包\"><a href=\"#3-5-模块与包\" class=\"headerlink\" title=\"3.5 模块与包\"></a>3.5 模块与包</h4><ul>\n<li>导入模块的方法<ul>\n<li>import 模块名,模块名2</li>\n<li>from 模块名 import 功能名，功能名2</li>\n<li>from 模块名 import *</li>\n<li>import 模块名 as 别名</li>\n<li>from 模块名 import 功能名 as 别名</li>\n</ul>\n</li>\n<li>制作模块<ul>\n<li>每一个文件都是一个模块，模块名就是文件名</li>\n<li><code>__all__</code><ul>\n<li>在模块文件中存在变量 <code>__all__ = [&#39;mode1&#39;]</code></li>\n<li>该模块只能被调用放在改变量里面的函数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>包<ul>\n<li>在文件夹下有<code>__init__.py</code>文件，该文件夹称为包</li>\n<li>导入包<ul>\n<li>import 包名.模块名.功能名</li>\n<li>在<code>__init__.py</code>文件，写<code>__all__ = [&#39;mode1&#39;]</code>开表示导出的模块</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-6-迭代器与生成器\"><a href=\"#3-6-迭代器与生成器\" class=\"headerlink\" title=\"3.6 迭代器与生成器\"></a>3.6 迭代器与生成器</h4><p>迭代器从对象的第一个元素开始访问，直到对象的所有元素被访问完结束<br>迭代器有两个基本的方法：iter() 和 next()<br>字符串，列表或元组对象都可用于创建迭代器</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">list</span>=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">it = <span class=\"built_in\">iter</span>(<span class=\"built_in\">list</span>)    <span class=\"comment\"># 创建迭代器对象</span></span><br><span class=\"line\"><span class=\"built_in\">next</span>(it)           <span class=\"comment\"># 输出迭代器的下一个元素</span></span><br></pre></td></tr></table></figure>\n\n<p>把一个类作为一个迭代器使用需要在类中实现两个方法<code>__iter__()</code> 与 <code>__next__()</code><br><code>__iter__()</code> 方法返回一个特殊的迭代器对象， 这个迭代器对象实现了 <code>__next__()</code> 方法并通过抛出 <code>StopIteration</code> 异常标识迭代的完成。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyNumbers</span>:</span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__next__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.a &lt;= <span class=\"number\">20</span>:</span><br><span class=\"line\">      x = <span class=\"variable language_\">self</span>.a</span><br><span class=\"line\">      <span class=\"variable language_\">self</span>.a += <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">raise</span> StopIteration</span><br></pre></td></tr></table></figure>\n\n<p>生成器是一个返回迭代器的函数，只能用于迭代操作<br>在调用生成器运行的过程中，每次遇到 <code>yield</code> 时函数会暂停并保存当前所有的运行信息，返回 <code>yield</code> 的值, 并在下一次执行 <code>next()</code> 方法时从当前位置继续运行</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyNumber</span>:</span><br><span class=\"line\">  <span class=\"string\">&#x27;&#x27;&#x27;利用生成器产生斐波那契数列&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,count</span>):</span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.a = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.b = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.<span class=\"built_in\">max</span> = count</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.count &lt; <span class=\"variable language_\">self</span>.<span class=\"built_in\">max</span>:</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> <span class=\"variable language_\">self</span>.a</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.a, <span class=\"variable language_\">self</span>.b = <span class=\"variable language_\">self</span>.b, <span class=\"variable language_\">self</span>.a + <span class=\"variable language_\">self</span>.b</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.count += <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> StopIteration</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> MyNumber(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-7-装饰器\"><a href=\"#3-7-装饰器\" class=\"headerlink\" title=\"3.7 装饰器\"></a>3.7 装饰器</h4><p>给函数无修改的情况下添加新功能</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Medthod</span>(<span class=\"params\">fun</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;This is a decorator&quot;</span>)</span><br><span class=\"line\">  fun()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Medthod</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Fun</span>():</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;This is a function&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  Fun()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-常用库的使用\"><a href=\"#4-常用库的使用\" class=\"headerlink\" title=\"4.常用库的使用\"></a>4.常用库的使用</h3><h4 id=\"4-1-Matplotlib\"><a href=\"#4-1-Matplotlib\" class=\"headerlink\" title=\"4.1 Matplotlib\"></a>4.1 Matplotlib</h4><p>作用：数据可视化</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure()</span><br><span class=\"line\">plt.plot([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>])</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<p>Matplotlib三层结构</p>\n<ol>\n<li>容器层<ol>\n<li>(Canvas)画板层，最底层</li>\n<li>(Figure)画布层，建立在画板之上</li>\n<li>(Axes)绘图区&#x2F;坐标系，建立在画布之上，一个画布有多个绘图区</li>\n</ol>\n</li>\n<li>辅助显示层</li>\n<li>图像层：坐标轴(axis)、图例(legend)建立在绘图区上</li>\n</ol>\n<p><strong>Matplotlib模块</strong>:</p>\n<ul>\n<li>Matplotlib.pyplot<ul>\n<li>figure() 创建默认画布</li>\n<li>figure(figsize&#x3D;(),dpi&#x3D;) 创建指定画布<ul>\n<li>figsize，指定图的长宽</li>\n<li>dpi：图像的清晰度</li>\n</ul>\n</li>\n<li>savefig(“图像路径”)，保存图像</li>\n<li>plot(x,y) x轴数据，y轴数据<ul>\n<li>plot(x,y1,label&#x3D;’y1’,color&#x3D;’red’,linestyle&#x3D;’–’,marker&#x3D;’o’)</li>\n</ul>\n</li>\n<li>show() 显示图像</li>\n<li>xticks(x,**kwargs), x为要显示的刻度</li>\n<li>yticks(y,**kwargs), y为要显示的刻度</li>\n<li>中文显示问题<ul>\n<li><code>matplotlib.matplotlib_fname()</code>方法找到配置文件，添加下面文字</li>\n<li>font.sans-serif: Microsoft YaHei</li>\n<li>从本地的字体库中找到<code>C:\\Windows\\Fonts\\Microsoft YaHei UI</code>字体</li>\n<li>复制到<code>matplotlib\\mpl-data\\fonts\\ttf</code>文件夹中</li>\n</ul>\n</li>\n<li>grid(True,linestyle&#x3D;’–’,color&#x3D;’gray’,linewidth&#x3D;1,alpha&#x3D;0.5) 坐标图的网格线</li>\n<li>xlabel x坐标轴信息</li>\n<li>ylabel y坐标轴信息</li>\n<li>title 标题</li>\n<li>多个图画在一起<ul>\n<li>多次使用plot(x,y)进行画图就行了</li>\n</ul>\n</li>\n<li>多个图组合一起<ul>\n<li>subplot(2,1,1) 两行一列第一个图，后面写全部的画图代码</li>\n<li>subplot(2,1,2) 两行一列第二个图，后面写全部的画图代码</li>\n</ul>\n</li>\n<li>折线图 plot()</li>\n<li>散点图 scatter()</li>\n<li>柱状图 bar()</li>\n<li>直方图 histogram()</li>\n<li>饼图 pie()</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.pyplot <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">x= <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)</span><br><span class=\"line\">y1= [i*i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> x]</span><br><span class=\"line\">y2= [i*i*i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> x]</span><br><span class=\"line\">figure(figsize=(<span class=\"number\">10</span>,<span class=\"number\">10</span>),dpi=<span class=\"number\">100</span>)</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">plot(x,y1,label=<span class=\"string\">&#x27;y1&#x27;</span>,color=<span class=\"string\">&#x27;red&#x27;</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">xticks(x)</span><br><span class=\"line\">yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">1000</span>,<span class=\"number\">100</span>))</span><br><span class=\"line\">grid(<span class=\"literal\">True</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,color=<span class=\"string\">&#x27;gray&#x27;</span>,linewidth=<span class=\"number\">1</span>,alpha=<span class=\"number\">0.5</span>)</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">plot(x,y2,label=<span class=\"string\">&#x27;y2&#x27;</span>,color=<span class=\"string\">&#x27;green&#x27;</span>,linestyle=<span class=\"string\">&#x27;-.&#x27;</span>,marker=<span class=\"string\">&#x27;*&#x27;</span>)</span><br><span class=\"line\">xticks(x)</span><br><span class=\"line\">yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">1000</span>,<span class=\"number\">100</span>))</span><br><span class=\"line\">grid(<span class=\"literal\">True</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,color=<span class=\"string\">&#x27;gray&#x27;</span>,linewidth=<span class=\"number\">1</span>,alpha=<span class=\"number\">0.5</span>)</span><br><span class=\"line\">show()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-Numpy\"><a href=\"#4-2-Numpy\" class=\"headerlink\" title=\"4.2 Numpy\"></a>4.2 Numpy</h4><p>数值计算库，用于快速处理数组</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">a = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">          [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">type</span>(a)</span><br><span class=\"line\"><span class=\"comment\"># =========</span></span><br><span class=\"line\"><span class=\"comment\"># numpy.ndarray</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>numpy<ul>\n<li>数组里面的数据都是相同的数据类型</li>\n<li>支持向量化运算</li>\n<li>ndarray<ul>\n<li>属性</li>\n<li>shape 数组维度的元组  (行数,列数)</li>\n<li>ndim 数组维度</li>\n<li>size 数组中元素的数量</li>\n<li>itemsize 一个数组元素的长度</li>\n<li>dtype 数组元素类型</li>\n</ul>\n</li>\n<li>生成数组的方法<ul>\n<li>生成0和1<ul>\n<li><code>zeros(shape=[行,列],dtype=&quot;float32&quot;)</code></li>\n<li><code>ones(shape=[行,列],dtype=&quot;float32&quot;)</code></li>\n</ul>\n</li>\n<li>从现有数组生成<ul>\n<li><code>array([1,2,3])</code></li>\n<li><code>asarray(a)</code> 浅拷贝</li>\n<li><code>copy(a)</code> 深拷贝</li>\n</ul>\n</li>\n<li>生成固定范围的数组<ul>\n<li><code>linspace(0,100,1000)</code> 左闭右闭的数据</li>\n<li><code>arange(0，100，0.1)</code> 左闭右开</li>\n</ul>\n</li>\n<li>生成随机数组<ul>\n<li>均匀分布 <code>random.uniform(low = -1,high = 1,size = 1000)</code></li>\n<li>正态分布 <code>random.randn(loc = 0,scale = 1,size = (2,8))</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>索引数据<ul>\n<li><code>a[1,2]</code></li>\n</ul>\n</li>\n<li>修改数据<ul>\n<li><code>reshape((行，列))</code> 可以把任意行列的数组，转化为需要的行列，返回新的数组</li>\n<li><code>resize((行，列))</code> 修改效果与上面一样，但是会修改原数组</li>\n<li><code>T</code> 对数组进行转置操作</li>\n</ul>\n</li>\n<li>类型修改<ul>\n<li><code>astype(新类型)</code></li>\n</ul>\n</li>\n<li>序列化<ul>\n<li><code>tostring()</code></li>\n</ul>\n</li>\n<li>去重<ul>\n<li><code>set(数组)</code> 无法转化一维以上数据</li>\n<li><code>unique(数组)</code> 全部转化为一维</li>\n</ul>\n</li>\n<li>运算<ul>\n<li>逻辑运算<ul>\n<li><code>数组[数组 &gt; 1]</code></li>\n<li><code>all(布尔值)</code> 只要有一个False返回False</li>\n<li><code>any(布尔值)</code> 只要有一个True返回True</li>\n<li><code>where(三元运算符)</code>  <code>where(布尔值，True操作，False操作)</code></li>\n</ul>\n</li>\n<li>统计运算<ul>\n<li>统计指标函数<ul>\n<li>min 最小值 <code>min(axis=0)</code> 按列求最小值 <code>min(axis=1)</code> 按列求最大值</li>\n<li>max 最大值</li>\n<li>mean 平均值</li>\n<li>median 中位数</li>\n<li>var 方差</li>\n<li>std 标准差</li>\n</ul>\n</li>\n<li><code>argmax(数组,axis=0)</code></li>\n<li><code>argmin(数组,axis=1)</code></li>\n</ul>\n</li>\n<li>数组运算<ul>\n<li>数组可以直接与数进行运算</li>\n<li>不同形状的数组需要满足广播机制，不同形状的其中一个是1</li>\n</ul>\n</li>\n<li>矩阵运算<ul>\n<li>矩阵乘法<ul>\n<li><code>matmul(矩阵1，矩阵2)</code> 普通乘</li>\n<li><code>dot(矩阵1，矩阵2)</code> 点乘</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>合并与分割<ul>\n<li><code>hstack((矩阵1,矩阵2,...))</code> 水平拼接</li>\n<li><code>vstack((矩阵1,矩阵2,...))</code> 垂直拼接</li>\n<li><code>concatenate((矩阵1，矩阵2,...),axis=0)</code> 根据axis判断水平还是垂直拼接</li>\n<li><code>split(矩阵,[索引1,索引2,...])</code> 根据索引作为终点来依次分割矩阵</li>\n</ul>\n</li>\n<li>IO操作与数据处理<ul>\n<li>读取<ul>\n<li><code>genfromtxt(文件路径,delimiter=&quot;,&quot;)</code> 根据分隔符的规则读取文件数据，非数字和缺失值会显示<code>nan</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-3-Pandas\"><a href=\"#4-3-Pandas\" class=\"headerlink\" title=\"4.3 Pandas\"></a>4.3 Pandas</h4><p>读取文件方便，封装了Numpy、Matplotlib</p>\n<ul>\n<li>核心数据结构<ul>\n<li><code>DataFrame(数组)</code><ul>\n<li>具有行索引和列索引的二维数组，让数组更直观的表现</li>\n<li><code>DataFrame(数组，index=行索引矩阵，columns=列索引矩阵)</code> 给数据表添加行表头和列表头</li>\n<li>属性<ul>\n<li>shape  行数和列数元组</li>\n<li>index  行表头</li>\n<li>columns 列表头</li>\n<li>values 中间的有效数据</li>\n<li>T 转置</li>\n</ul>\n</li>\n<li>方法<ul>\n<li>head(n) 返回前n行数据</li>\n<li>tail(n) 返回后n行数据</li>\n</ul>\n</li>\n<li>修改行列表头<ul>\n<li>利用属性index进行修改，只能统一修改不能单独修改</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>MultiIndex</code><ul>\n<li>多级或分层索引对象，三维数据表示</li>\n<li>属性<ul>\n<li><code>index</code><ul>\n<li><code>names</code>   levels的名称</li>\n<li><code>levels</code>  每个level的元组值</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>Series</code><ul>\n<li>带索引的一维数组</li>\n<li>只有行索引</li>\n<li>属性<ul>\n<li>index</li>\n<li>values</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据操作<ul>\n<li>索引操作<ul>\n<li>drop(行&#x2F;列索引矩阵,axis&#x3D;0&#x2F;1) 删除部分行&#x2F;列数据</li>\n<li>直接索引</li>\n<li>按名字索引</li>\n<li>按数字索引</li>\n<li>组合索引</li>\n</ul>\n</li>\n<li>赋值操作</li>\n<li>排序</li>\n</ul>\n</li>\n</ul>\n","more":"<h1 id=\"Python快速入门语法\"><a href=\"#Python快速入门语法\" class=\"headerlink\" title=\"Python快速入门语法\"></a>Python快速入门语法</h1><h2 id=\"一、基础语法\"><a href=\"#一、基础语法\" class=\"headerlink\" title=\"一、基础语法\"></a>一、基础语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><h4 id=\"1-1-Python-源程序的基本概念\"><a href=\"#1-1-Python-源程序的基本概念\" class=\"headerlink\" title=\"1.1 Python 源程序的基本概念\"></a>1.1 Python 源程序的基本概念</h4><ol>\n<li>Python 源程序就是一个特殊格式的文本文件，可以使用任意文本编辑软件做 Python 的开发</li>\n<li>Python 程序的 文件扩展名 通常都是 .py</li>\n</ol>\n<h4 id=\"1-2-演练步骤\"><a href=\"#1-2-演练步骤\" class=\"headerlink\" title=\"1.2 演练步骤\"></a>1.2 演练步骤</h4><ul>\n<li>在桌面下，新建 认识Python 目录</li>\n<li>在 认识Python 目录下新建 <code>01-HelloPython.py</code> 文件</li>\n<li>使用 gedit 编辑 <code>01-HelloPython.py</code> 并且输入以下内容：<br><code>python print(&quot;hello python&quot;) print(&quot;hello world&quot;)</code></li>\n<li>在终端中输入以下命令执行 <code>01-HelloPython.py</code><br><code>bash $ python 01-HelloPython.py</code></li>\n</ul>\n<blockquote>\n<p>print 是 python 中我们学习的第一个 函数<br>print 函数的作用，可以把 “” 内部的内容，输出到屏幕上</p>\n</blockquote>\n<h4 id=\"1-3-执行-Python-程序的方式\"><a href=\"#1-3-执行-Python-程序的方式\" class=\"headerlink\" title=\"1.3 执行 Python 程序的方式\"></a>1.3 执行 Python 程序的方式</h4><ol>\n<li>解释器 python &#x2F; python3<br>  <strong>Python 的解释器</strong><br>  <code>```bash</code></li>\n</ol>\n<p>  <strong>使用 python 2.x 解释器</strong><br>  <code>$ python xxx.py</code><br>  <strong>使用 python 3.x 解释器</strong><br>  <code>$ python3 xxx.py</code><br>  <strong>其他解释器（知道）</strong><br>  <strong>Python 的解释器</strong> 如今有多个语言的实现，包括：</p>\n<ul>\n<li><code>CPython</code> —— 官方版本的 C 语言实现</li>\n<li><code>Jython</code> —— 可以运行在 Java 平台</li>\n<li><code>IronPython</code> —— 可以运行在 .NET 和 Mono 平台</li>\n<li><code>PyPy</code> —— Python 实现的，支持 JIT 即时编译</li>\n</ul>\n<ol start=\"2\">\n<li>交互式运行 Python 程序<ul>\n<li>直接在终端中运行解释器，而不输入要执行的文件名</li>\n<li>在 Python 的 <code>Shell</code> 中直接输入 Python 的代码，会立即看到程序执行结果</li>\n</ul>\n<ol>\n<li>交互式运行 Python 的优缺点<br>  <strong>优点</strong><br>  适合于学习&#x2F;验证 Python 语法或者局部代码<br>  <strong>缺点</strong><br>  代码不能保存<br>  不适合运行太大的程序</li>\n<li>退出 官方的解释器<ol>\n<li>直接输入<code>exit()</code></li>\n<li>使用热键退出<br>在 python 解释器中，按热键 ctrl + d 可以退出解释器</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"2-基础语法\"><a href=\"#2-基础语法\" class=\"headerlink\" title=\"2.基础语法\"></a>2.基础语法</h3><h4 id=\"2-1-注释\"><a href=\"#2-1-注释\" class=\"headerlink\" title=\"2.1 注释\"></a>2.1 注释</h4><ul>\n<li><p>单行注释（行注释）</p>\n<ul>\n<li>以<code>#</code>开头，<code>#</code>右边的所有东西都被当做说明文字，而不是真正要执行的程序，只起到辅助说明作用</li>\n</ul>\n</li>\n<li><p>多行注释（块注释）</p>\n<ul>\n<li>要在 Python 程序中使用多行注释，可以用 一对 连续的 三个 引号(单引号和双引号都可以)</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行注释</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">  多行注释</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2-2-算数运算符\"><a href=\"#2-2-算数运算符\" class=\"headerlink\" title=\"2.2 算数运算符\"></a>2.2 算数运算符</h4><ul>\n<li><p>算数运算符是 运算符的一种</p>\n</li>\n<li><p>是完成基本的算术运算使用的符号，用来处理四则运算</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th align=\"center\">描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">+</td>\n<td align=\"center\">加</td>\n<td>10 + 20 &#x3D; 30</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td align=\"center\">减</td>\n<td>10 - 20 &#x3D; -10</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td align=\"center\">乘</td>\n<td>10 * 20 &#x3D; 200</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;</td>\n<td align=\"center\">除</td>\n<td>10 &#x2F; 20 &#x3D; 0.5</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;&#x2F;</td>\n<td align=\"center\">取整除</td>\n<td>返回除法的整数部分（商） 9 &#x2F;&#x2F; 2 输出结果 4</td>\n</tr>\n<tr>\n<td align=\"center\">%</td>\n<td align=\"center\">取余数</td>\n<td>返回除法的余数 9 % 2 &#x3D; 1</td>\n</tr>\n<tr>\n<td align=\"center\">**</td>\n<td align=\"center\">幂</td>\n<td>又称次方、乘方，2 ** 3 &#x3D; 8</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>在 Python 中 <code>*</code> 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果<br><code>python In [1]: &quot;-&quot; * 50 Out[1]: &#39;----------------------------------------&#39;</code></p>\n</li>\n<li><p>算数运算符的优先级</p>\n<ul>\n<li>先乘除后加减</li>\n<li>同级运算符是 从左至右 计算</li>\n<li>可以使用 () 调整计算的优先级</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>**</td>\n<td>幂 (最高优先级)</td>\n</tr>\n<tr>\n<td>* &#x2F; % &#x2F;&#x2F;</td>\n<td>乘、除、取余数、取整除</td>\n</tr>\n<tr>\n<td>+ -</td>\n<td>加法、减法</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"2-3-变量的基本使用\"><a href=\"#2-3-变量的基本使用\" class=\"headerlink\" title=\"2.3 变量的基本使用\"></a>2.3 变量的基本使用</h4><p><strong>变量定义</strong>：</p>\n<ul>\n<li>在 Python 中，每个变量 在使用前都必须赋值，变量 赋值以后 该变量 才会被创建</li>\n<li>等号（&#x3D;）用来给变量赋值<ul>\n<li><code>=</code> 左边是一个变量名</li>\n<li><code>=</code> 右边是存储在变量中的值</li>\n<li><code>变量名 = 值</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>变量的类型</strong>:</p>\n<ul>\n<li>在 Python 中定义变量是 不需要指定类型（在其他很多高级语言中都需要）</li>\n<li>数据类型可以分为 数字型 和 非数字型</li>\n<li>数字型<ul>\n<li>整型 (int)</li>\n<li>浮点型（float）</li>\n<li>布尔型（bool）</li>\n<li>真 True 非 0 数 —— 非零即真</li>\n<li>假 False 0</li>\n<li>复数型 (complex)<ul>\n<li>主要用于科学计算，例如：平面场问题、波动问题、电感电容等问题</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>非数字型<ul>\n<li>字符串</li>\n<li>列表</li>\n<li>元组</li>\n<li>字典</li>\n</ul>\n</li>\n<li>使用 type 函数可以查看一个变量的类型<ul>\n<li><code>type(name)</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>变量的输入</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>print(x)</td>\n<td>将 x 输出到控制台</td>\n</tr>\n<tr>\n<td>type(x)</td>\n<td>查看 x 的变量类型</td>\n</tr>\n</tbody></table>\n<p>input 函数实现键盘输入</p>\n<ul>\n<li>在 Python 中可以使用 input 函数从键盘等待用户的输入</li>\n<li>用户输入的 任何内容 Python 都认为是一个 字符串</li>\n<li>语法如下：<br>  <code>字符串变量 = input(&quot;提示信息：&quot;)</code></li>\n</ul>\n<p><strong>类型转换函数</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>int(x)</td>\n<td>将 x 转换为一个整数</td>\n</tr>\n<tr>\n<td>float(x)</td>\n<td>将 x 转换到一个浮点数</td>\n</tr>\n</tbody></table>\n<p><strong>变量的格式化输出</strong>:</p>\n<ul>\n<li>在 Python 中可以使用<code>print</code>函数将信息输出到控制台</li>\n<li>如果希望输出文字信息的同时，一起输出数据，就需要使用到格式化操作符</li>\n<li><code>%</code>被称为<strong>格式化操作符</strong>，专门用于处理字符串中的格式<ul>\n<li>包含 <code>%</code> 的字符串，被称为格式化字符串</li>\n<li><code>%</code> 和不同的字符连用，不同类型的数据需要使用不同的格式化字符</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>格式化字符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%s</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td>%d</td>\n<td>有符号十进制整数，%06d 表示输出的整数显示位数，不足的地方使用 0 补全</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>浮点数，%.2f 表示小数点后只显示两位</td>\n</tr>\n<tr>\n<td>%%</td>\n<td>输出 %</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;格式化字符串%s&quot;</span> %a)</span><br></pre></td></tr></table></figure>\n\n<p><strong>变量的命名</strong>:</p>\n<ul>\n<li>标识符<ul>\n<li>标示符可以由 字母、下划线 和 数字 组成</li>\n<li>不能以数字开头</li>\n<li>不能与关键字重名</li>\n</ul>\n</li>\n<li>关键字<ul>\n<li>关键字就是在 Python 内部已经使用的标识符</li>\n<li>关键字具有特殊的功能和含义</li>\n<li>开发者不允许定义和关键字相同的名字的标示符</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-4-运算符\"><a href=\"#2-4-运算符\" class=\"headerlink\" title=\"2.4 运算符\"></a>2.4 运算符</h4><ul>\n<li><p>算数运算符</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th align=\"center\">描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">+</td>\n<td align=\"center\">加</td>\n<td>10 + 20 &#x3D; 30</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td align=\"center\">减</td>\n<td>10 - 20 &#x3D; -10</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td align=\"center\">乘</td>\n<td>10 * 20 &#x3D; 200</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;</td>\n<td align=\"center\">除</td>\n<td>10 &#x2F; 20 &#x3D; 0.5</td>\n</tr>\n<tr>\n<td align=\"center\">&#x2F;&#x2F;</td>\n<td align=\"center\">取整除</td>\n<td>返回除法的整数部分（商） 9 &#x2F;&#x2F; 2 输出结果 4</td>\n</tr>\n<tr>\n<td align=\"center\">%</td>\n<td align=\"center\">取余数</td>\n<td>返回除法的余数 9 % 2 &#x3D; 1</td>\n</tr>\n<tr>\n<td align=\"center\">**</td>\n<td align=\"center\">幂</td>\n<td>又称次方、乘方，2 ** 3 &#x3D; 8</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>比较（关系）运算符</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>检查两个操作数的值是否 相等，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>检查两个操作数的值是否 不相等，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>检查左操作数的值是否 大于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>检查左操作数的值是否 小于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>检查左操作数的值是否 大于或等于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>检查左操作数的值是否 小于或等于 右操作数的值，如果是，则条件成立，返回 True</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>逻辑运算符</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>逻辑表达式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>and</td>\n<td>x and y</td>\n<td>只有 x 和 y 的值都为 True，才会返回 True否则只要 x 或者 y 有一个值为 False，就返回 False</td>\n</tr>\n<tr>\n<td>or</td>\n<td>x or y</td>\n<td>只要 x 或者 y 有一个值为 True，就返回 True只有 x 和 y 的值都为 False，才会返回 False</td>\n</tr>\n<tr>\n<td>not</td>\n<td>not x</td>\n<td>如果 x 为 True，返回 False如果 x 为 False，返回 True</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>赋值运算符</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;</td>\n<td>简单的赋值运算符</td>\n<td>c &#x3D; a + b 将 a + b 的运算结果赋值为 c</td>\n</tr>\n<tr>\n<td>+&#x3D;</td>\n<td>加法赋值运算符</td>\n<td>c +&#x3D; a 等效于 c &#x3D; c + a</td>\n</tr>\n<tr>\n<td>-&#x3D;</td>\n<td>减法赋值运算符</td>\n<td>c -&#x3D; a 等效于 c &#x3D; c - a</td>\n</tr>\n<tr>\n<td>*&#x3D;</td>\n<td>乘法赋值运算符</td>\n<td>c *&#x3D; a 等效于 c &#x3D; c * a</td>\n</tr>\n<tr>\n<td>&#x2F;&#x3D;</td>\n<td>除法赋值运算符</td>\n<td>c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td>\n</tr>\n<tr>\n<td>&#x2F;&#x2F;&#x3D;</td>\n<td>取整除赋值运算符</td>\n<td>c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td>\n</tr>\n<tr>\n<td>%&#x3D;</td>\n<td>取 模 (余数)赋值运算符</td>\n<td>c %&#x3D; a 等效于 c &#x3D; c % a</td>\n</tr>\n<tr>\n<td>**&#x3D;</td>\n<td>幂赋值运算符</td>\n<td>c **&#x3D; a 等效于 c &#x3D; c ** a</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>运算符的优先级</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>**</td>\n<td>幂 (最高优先级)</td>\n</tr>\n<tr>\n<td>* &#x2F; % &#x2F;&#x2F;</td>\n<td>乘、除、取余数、取整除</td>\n</tr>\n<tr>\n<td>+ -</td>\n<td>加法、减法</td>\n</tr>\n<tr>\n<td>&lt;&#x3D; &lt; &gt; &gt;&#x3D;</td>\n<td>比较运算符</td>\n</tr>\n<tr>\n<td>&#x3D;&#x3D; !&#x3D;</td>\n<td>等于运算符</td>\n</tr>\n<tr>\n<td>&#x3D; %&#x3D; &#x2F;&#x3D; &#x2F;&#x2F;&#x3D; -&#x3D; +&#x3D; *&#x3D; **&#x3D;</td>\n<td>赋值运算符</td>\n</tr>\n<tr>\n<td>not or and</td>\n<td>逻辑运算符</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"2-5-条件语句\"><a href=\"#2-5-条件语句\" class=\"headerlink\" title=\"2.5 条件语句\"></a>2.5 条件语句</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 要判断的条件: </span><br><span class=\"line\">  条件成立时，要做的事情 ……</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> 要判断的条件: </span><br><span class=\"line\">  条件成立时，要做的事情 …… </span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  条件不成立时，要做的事情 ……</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> 条件<span class=\"number\">1</span>: </span><br><span class=\"line\">  条件<span class=\"number\">1</span>满足执行的代码 …… </span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件<span class=\"number\">2</span>: </span><br><span class=\"line\">  条件<span class=\"number\">2</span>满足时，执行的代码 …… </span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件<span class=\"number\">3</span>: </span><br><span class=\"line\">  条件<span class=\"number\">3</span>满足时，执行的代码 …… </span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  以上条件都不满足时，执行的代码 ……</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑运算</strong>:</p>\n<ul>\n<li>在程序开发中，通常在判断条件时，会需要同时判断多个条件</li>\n<li>只有多个条件都满足，才能够执行后续代码，这个时候需要使用到逻辑运算符</li>\n<li>逻辑运算符 可以把多个条件按照逻辑进行连接，变成更复杂的条件</li>\n<li>Python 中的 逻辑运算符 包括：<code>与 and</code>、<code>或 or</code>、<code>非 not</code> 三种</li>\n</ul>\n<h4 id=\"2-6-循环语句\"><a href=\"#2-6-循环语句\" class=\"headerlink\" title=\"2.6 循环语句\"></a>2.6 循环语句</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 条件: </span><br><span class=\"line\">  条件满足时，做的事情....</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> 条件: </span><br><span class=\"line\">  条件满足时，做的事情....</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  正常循环结束执行的代码</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>break</code> ，退出循环</li>\n<li><code>continue</code>，退出当前循环，执行下一次循环</li>\n</ul>\n<p><strong>字符串中的转义字符</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">转义字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>\\\\</code></td>\n<td>反斜杠符号</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\&#39;</code></td>\n<td>单引号</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\&quot;</code></td>\n<td>双引号</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\n</code></td>\n<td>换行</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\t</code></td>\n<td>横向制表符</td>\n</tr>\n<tr>\n<td align=\"center\"><code>\\r</code></td>\n<td>回车</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;九九乘法表：&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">  j = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> j &lt;= i:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d*%d=%d\\t&quot;</span> % (j, i, i*j), end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    j = j + <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>()</span><br><span class=\"line\">  i += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-函数基础\"><a href=\"#2-7-函数基础\" class=\"headerlink\" title=\"2.7 函数基础\"></a>2.7 函数基础</h4><p><strong>函数的定义</strong>:</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">函数名</span>():</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>def 是英文 define 的缩写</li>\n<li>函数名称应该能够表达函数封装代码的功能，方便后续的调用</li>\n<li>函数名称的命名应该 符合标识符的命名规则<ol>\n<li>可以由字母、下划线和数字组成</li>\n<li>不能以数字开头</li>\n<li>不能与关键字重名</li>\n</ol>\n</li>\n<li>调用函数很简单的，通过<code>函数名()</code>即可完成对函数的调用</li>\n</ol>\n<p><strong>函数的文档注释</strong>:</p>\n<ol>\n<li>在开发中，如果希望给函数添加注释，应该在 定义函数 的下方，使用 连续的三对引号</li>\n<li>在连续的三对引号 之间编写对函数的说明文字</li>\n<li>在函数调用 位置，使用快捷键 <code>CTRL + Q</code> 可以查看函数的说明信息</li>\n</ol>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sum</span>(<span class=\"params\">num1, num2</span>):</span><br><span class=\"line\">  <span class=\"string\">&quot;&quot;&quot;对两个数字的求和&quot;&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> num1+num2</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-8-高级变量类型\"><a href=\"#2-8-高级变量类型\" class=\"headerlink\" title=\"2.8 高级变量类型\"></a>2.8 高级变量类型</h4><ul>\n<li><p><strong>列表</strong></p>\n<ul>\n<li>列表的定义<ul>\n<li>List（列表）是 Python 中使用最频繁的数据类型，在其他语言中通常叫做 数组</li>\n<li>专门用于存储一串信息</li>\n<li>列表用 <code>[]</code> 定义，数据之间使用 <code>,</code> 分隔</li>\n<li>列表的索引从 0 开始<ul>\n<li>索引就是数据在列表中的位置编号，索引又可以被称为下标</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>列表常用操作</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>分类</th>\n<th>关键字 &#x2F; 函数 &#x2F; 方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>增加</td>\n<td>列表.insert(索引, 数据)</td>\n<td>在指定位置插入数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.append(数据)</td>\n<td>在末尾追加数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.extend(列表2)</td>\n<td>将列表2 的数据追加到列表</td>\n</tr>\n<tr>\n<td>2</td>\n<td>修改</td>\n<td>列表[索引] &#x3D; 数据</td>\n<td>修改指定索引的数据</td>\n</tr>\n<tr>\n<td>3</td>\n<td>删除</td>\n<td>del 列表[索引]</td>\n<td>删除指定索引的数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.remove[数据]</td>\n<td>删除第一个出现的指定数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.pop</td>\n<td>删除末尾数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.pop(索引)</td>\n<td>删除指定索引数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.clear</td>\n<td>清空列表</td>\n</tr>\n<tr>\n<td>4</td>\n<td>统计</td>\n<td>len(列表)</td>\n<td>列表长度</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.count(数据)</td>\n<td>数据在列表中出现的次数</td>\n</tr>\n<tr>\n<td>5</td>\n<td>排序</td>\n<td>列表.sort()</td>\n<td>升序排序</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.sort(reverse&#x3D;True)</td>\n<td>降序排序</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>列表.reverse()</td>\n<td>逆序、反转</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>del 关键字</p>\n<ul>\n<li>使用 del 关键字(delete) 同样可以删除列表中元素</li>\n<li>del 关键字本质上是用来 将一个变量从内存中删除的</li>\n<li>如果使用 del 关键字将变量从内存中删除，后续的代码就不能再使用这个变量了</li>\n</ul>\n</li>\n<li><p>循环遍历</p>\n<ul>\n<li>遍历就是从头到尾依次从列表中获取数据</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 循环内部使用的变量 <span class=\"keyword\">in</span> 列表:</span><br><span class=\"line\">  循环体</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>元组</strong></p>\n<ul>\n<li>Tuple（元组）与列表类似，不同之处在于元组的元素不能修改</li>\n<li>用于存储一串信息，数据之间使用<code>,</code>分隔</li>\n<li>元组用<code>()</code> 定义</li>\n<li>元组的索引 从 0 开始</li>\n<li>常用操作与循环遍历与列表相同</li>\n</ul>\n</li>\n<li><p><strong>字典</strong></p>\n<ul>\n<li>dictionary（字典）是除列表以外 Python 之中 最灵活的数据类型</li>\n<li>和列表的区别<ul>\n<li><strong>列表</strong> 是 <strong>有序</strong> 的对象集合</li>\n<li><strong>字典</strong> 是 <strong>无序</strong> 的对象集合</li>\n</ul>\n</li>\n<li>字典用 <code>&#123;&#125;</code> 定义</li>\n<li>字典使用 键值对存储数据，键值对之间使用 <code>,</code> 分隔<ul>\n<li><strong>键</strong> <code>key</code> 是索引</li>\n<li><strong>值</strong> <code>value</code> 是数据</li>\n<li><strong>键</strong> 和 <strong>值</strong> 之间使用 <code>:</code> 分隔</li>\n<li><strong>键</strong>必须是唯一的</li>\n<li><strong>值</strong> 可以取任何数据类型，但 <strong>键</strong> 只能使用 <strong>字符串</strong>、<strong>数字</strong>或 <strong>元组</strong></li>\n</ul>\n</li>\n<li>常用操作</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>分类</th>\n<th>关键字 &#x2F; 函数 &#x2F; 方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>增加</td>\n<td>字典[key] &#x3D; value</td>\n<td>新增键值对</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.setdefault(key,value)</td>\n<td>新增键值对</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.update(字典2)</td>\n<td>将字典2的数据合并到字典中</td>\n</tr>\n<tr>\n<td>2</td>\n<td>修改</td>\n<td>字典[key] &#x3D; value</td>\n<td>修改指定key的数据</td>\n</tr>\n<tr>\n<td>3</td>\n<td>删除</td>\n<td>del 字典[key]</td>\n<td>删除指定键值对的数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.popitem()</td>\n<td>随机删除一个键值对</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.pop(key)</td>\n<td>删除指定键值对数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.clear()</td>\n<td>清空字典</td>\n</tr>\n<tr>\n<td>4</td>\n<td>统计</td>\n<td>len(字典)</td>\n<td>字典的键值对数量</td>\n</tr>\n<tr>\n<td>5</td>\n<td>查询</td>\n<td>字典.keys()</td>\n<td>所有key列表</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.values()</td>\n<td>所有value列表</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.items()</td>\n<td>所有(key,value)元组列表</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典[key]</td>\n<td>获取key对应的值</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>字典.get(key)</td>\n<td>获取key对应的值</td>\n</tr>\n</tbody></table>\n<ul>\n<li>循环遍历</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> 字典:</span><br><span class=\"line\">  循环体</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> 字典:</span><br><span class=\"line\">  循环体</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>集合</strong></p>\n<ul>\n<li>创建集合<ul>\n<li><code>a = &#123;1,2,3&#125;</code></li>\n<li><code>a = set&#123;&#125;</code></li>\n</ul>\n</li>\n<li>是乱序的</li>\n<li>数据具有唯一性，有去重的功能</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>分类</th>\n<th>关键字 &#x2F; 函数 &#x2F; 方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>增加</td>\n<td>集合.add(value)</td>\n<td>新增数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>集合.update(列表)</td>\n<td>将列表的数据合并到集合中</td>\n</tr>\n<tr>\n<td>2</td>\n<td>删除</td>\n<td>集合.discard()</td>\n<td>删除指定数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>集合.pop()</td>\n<td>随机删除一个数据</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>集合.remove()</td>\n<td>删除指定数据</td>\n</tr>\n<tr>\n<td>3</td>\n<td>查询</td>\n<td>value in 集合</td>\n<td>判断数据是否在集合序列</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>value not in 集合</td>\n<td>判断数据是否不在集合序列</td>\n</tr>\n</tbody></table>\n</li>\n<li><p><strong>字符串</strong></p>\n<ul>\n<li><p>字符串的定义</p>\n<ul>\n<li>字符串 就是 一串字符，是编程语言中表示文本的数据类型</li>\n<li>在 <code>Python</code> 中可以使用 一对双引号<code>&quot;</code>或者 一对单引号<code>&#39;</code>定义一个字符串</li>\n<li>可以使用 索引 获取一个字符串中 指定位置的字符，索引计数从 0 开始</li>\n<li>也可以使用 <code>for</code> 循环遍历 字符串中每一个字符</li>\n</ul>\n</li>\n<li><p>字符串的常用操作</p>\n<ul>\n<li>判断类型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.isspace()</td>\n<td>如果 string 中只包含空格，则返回 True</td>\n</tr>\n<tr>\n<td>string.isalnum()</td>\n<td>如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True</td>\n</tr>\n<tr>\n<td>string.isalpha()</td>\n<td>如果 string 至少有一个字符并且所有字符都是字母则返回 True</td>\n</tr>\n<tr>\n<td>string.isdecimal()</td>\n<td>如果 string 只包含数字则返回 True，全角数字</td>\n</tr>\n<tr>\n<td>string.isdigit()</td>\n<td>如果 string 只包含数字则返回 True，全角数字、⑴、\\u00b2</td>\n</tr>\n<tr>\n<td>string.isnumeric()</td>\n<td>如果 string 只包含数字则返回 True，全角数字，汉字数字</td>\n</tr>\n<tr>\n<td>string.istitle()</td>\n<td>如果 string 是标题化的(每个单词的首字母大写)则返回 True</td>\n</tr>\n<tr>\n<td>string.islower()</td>\n<td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True</td>\n</tr>\n<tr>\n<td>string.isupper()</td>\n<td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True</td>\n</tr>\n</tbody></table>\n<ul>\n<li>查找和替换</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.startswith(str)</td>\n<td>检查字符串是否是以 str 开头，是则返回 True</td>\n</tr>\n<tr>\n<td>string.endswith(str)</td>\n<td>检查字符串是否是以 str 结束，是则返回 True</td>\n</tr>\n<tr>\n<td>string.find(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>检测 str 是否包含在 string 中，如果 start 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回 -1</td>\n</tr>\n<tr>\n<td>string.rfind(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>类似于 find()，不过是从右边开始查找</td>\n</tr>\n<tr>\n<td>string.index(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>跟 find() 方法类似，不过如果 str 不在 string 会报错</td>\n</tr>\n<tr>\n<td>string.rindex(str, start&#x3D;0, end&#x3D;len(string))</td>\n<td>类似于 index()，不过是从右边开始</td>\n</tr>\n<tr>\n<td>string.replace(oldstr, newstr, num&#x3D;string.count(old))</td>\n<td>把 string 中的 oldstr 替换成 newstr，如果 num 指定，则替换不超过 num 次</td>\n</tr>\n</tbody></table>\n<ul>\n<li>大小写转换</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.capitalize()</td>\n<td>把字符串的第一个字符大写</td>\n</tr>\n<tr>\n<td>string.title()</td>\n<td>把字符串的每个单词首字母大写</td>\n</tr>\n<tr>\n<td>string.lower()</td>\n<td>转换 string 中所有大写字符为小写</td>\n</tr>\n<tr>\n<td>string.upper()</td>\n<td>转换 string 中的小写字母为大写</td>\n</tr>\n<tr>\n<td>string.swapcase()</td>\n<td>翻转 string 中的大小写</td>\n</tr>\n</tbody></table>\n<ul>\n<li>文本对齐</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.ljust(width)</td>\n<td>返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串</td>\n</tr>\n<tr>\n<td>string.rjust(width)</td>\n<td>返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串</td>\n</tr>\n<tr>\n<td>string.center(width)</td>\n<td>返回一个原字符串居中，并使用空格填充至长度 width 的新字符串</td>\n</tr>\n</tbody></table>\n<ul>\n<li>去除空白字符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.lstrip()</td>\n<td>截掉 string 左边（开始）的空白字符</td>\n</tr>\n<tr>\n<td>string.rstrip()</td>\n<td>截掉 string 右边（末尾）的空白字符</td>\n</tr>\n<tr>\n<td>string.strip()</td>\n<td>截掉 string 左右两边的空白字符</td>\n</tr>\n</tbody></table>\n<ul>\n<li>拆分和连接</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.partition(str)</td>\n<td>把字符串 string 分成一个 3 元素的元组 (str前面, str, str后面)</td>\n</tr>\n<tr>\n<td>string.rpartition(str)</td>\n<td>类似于 partition() 方法，不过是从右边开始查找</td>\n</tr>\n<tr>\n<td>string.split(str&#x3D;””, num)</td>\n<td>以 str 为分隔符拆分 string，如果 num 有指定值，则仅分隔 num + 1 个子字符串，str 默认包含 ‘\\r’, ‘\\t’, ‘\\n’ 和空格</td>\n</tr>\n<tr>\n<td>string.splitlines()</td>\n<td>按照行(‘\\r’, ‘\\n’, ‘\\r\\n’)分隔，返回一个包含各行作为元素的列表</td>\n</tr>\n<tr>\n<td>string.join(seq)</td>\n<td>以 string 作为分隔符，将 seq 中所有的元素（的字符串表示）合并为一个新的字符串</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li><p><strong>字符串的切片</strong></p>\n<ul>\n<li>切片 方法适用于 字符串、列表、元组<ul>\n<li>切片 使用 索引值 来限定范围，从一个大的 字符串 中 切出 小的 字符串</li>\n<li>列表 和 元组 都是 有序 的集合，都能够 通过索引值 获取到对应的数据</li>\n<li>字典 是一个 无序 的集合，是使用 键值对 保存数据</li>\n</ul>\n</li>\n<li>语法： <code>字符串[开始索引:结束索引:步长]</code></li>\n<li>在 Python 中不仅支持 顺序索引，同时还支持 倒序索引<ul>\n<li>所谓倒序索引就是 从右向左 计算索引</li>\n<li>最右边的索引值是 -1，依次递减</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-9-公共方法\"><a href=\"#2-9-公共方法\" class=\"headerlink\" title=\"2.9 公共方法\"></a>2.9 公共方法</h4><p><strong>Python 包含了以下内置函数</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>描述</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>len(item)</td>\n<td>计算容器中元素个数</td>\n<td></td>\n</tr>\n<tr>\n<td>del(item)</td>\n<td>删除变量</td>\n<td>del 有两种方式</td>\n</tr>\n<tr>\n<td>max(item)</td>\n<td>返回容器中元素最大值</td>\n<td>如果是字典，只针对 key 比较</td>\n</tr>\n<tr>\n<td>min(item)</td>\n<td>返回容器中元素最小值</td>\n<td>如果是字典，只针对 key 比较</td>\n</tr>\n<tr>\n<td>cmp(item1, item2)</td>\n<td>比较两个值，-1 小于&#x2F;0 相等&#x2F;1 大于</td>\n<td>Python 3.x 取消了 cmp 函数</td>\n</tr>\n</tbody></table>\n<p><strong>切片</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">描述</th>\n<th>Python 表达式</th>\n<th>结果</th>\n<th>支持的数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">切片</td>\n<td>“0123456789”[::-2]</td>\n<td>“97531”</td>\n<td>字符串、列表、元组</td>\n</tr>\n</tbody></table>\n<p><strong>运算符</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th>Python 表达式</th>\n<th>结果</th>\n<th>描述</th>\n<th>支持的数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">+</td>\n<td>[1, 2] + [3, 4]</td>\n<td>[1, 2, 3, 4]</td>\n<td>合并</td>\n<td>字符串、列表、元组</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td>[“Hi!”] * 4</td>\n<td>[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td>\n<td>重复</td>\n<td>字符串、列表、元组</td>\n</tr>\n<tr>\n<td align=\"center\">in</td>\n<td>3 in (1, 2, 3)</td>\n<td>True</td>\n<td>元素是否存在</td>\n<td>字符串、列表、元组、字典</td>\n</tr>\n<tr>\n<td align=\"center\">not in</td>\n<td>4 not in (1, 2, 3)</td>\n<td>True</td>\n<td>元素是否不存在</td>\n<td>字符串、列表、元组、字典</td>\n</tr>\n<tr>\n<td align=\"center\">&gt; &gt;&#x3D; &#x3D;&#x3D; &lt; &lt;&#x3D;</td>\n<td>(1, 2, 3) &lt; (2, 2, 3)</td>\n<td>True</td>\n<td>元素比较</td>\n<td>字符串、列表、元组</td>\n</tr>\n</tbody></table>\n<p><strong>成员运算符</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>in</td>\n<td>如果在指定的序列中找到值返回 True，否则返回 False</td>\n<td>3 in (1, 2, 3) 返回 True</td>\n</tr>\n<tr>\n<td>not in</td>\n<td>如果在指定的序列中没有找到值返回 True，否则返回 False</td>\n<td>3 not in (1, 2, 3) 返回 False</td>\n</tr>\n</tbody></table>\n<p><strong>for 循环语法</strong>:</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 变量 <span class=\"keyword\">in</span> 集合:</span><br><span class=\"line\">  循环体代码</span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  没有通过 <span class=\"keyword\">break</span> 退出循环，循环结束后，会执行的代码</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-10-变量进阶\"><a href=\"#2-10-变量进阶\" class=\"headerlink\" title=\"2.10 变量进阶\"></a>2.10 变量进阶</h4><p><strong>变量的引用</strong>:</p>\n<ul>\n<li>变量 和 数据 都是保存在 内存 中的</li>\n<li>在 Python 中 <strong>函数</strong> 的 <strong>参数</strong> 传递以及 <strong>返回值</strong> 都是靠 <strong>引用</strong> 传递的</li>\n<li>变量 和 数据 是分开存储的</li>\n<li>数据 保存在内存中的一个位置</li>\n<li>变量 中保存着数据在内存中的地址</li>\n<li>变量 中 记录数据的地址，就叫做 引用</li>\n<li>使用<code>id()</code>函数可以查看变量中保存数据所在的<strong>内存地址</strong></li>\n</ul>\n<p><strong>可变和不可变类型</strong>:</p>\n<ul>\n<li>不可变类型，内存中的数据不允许被修改：<ul>\n<li>数字类型 <code>int</code>, <code>bool</code>, <code>float</code>, <code>complex</code>, <code>long(2.x)</code></li>\n<li>字符串 <code>str</code></li>\n<li>元组 <code>tuple</code></li>\n</ul>\n</li>\n<li>可变类型，内存中的数据可以被修改：<ul>\n<li>列表 <code>list</code></li>\n<li>字典 <code>dict</code></li>\n</ul>\n</li>\n<li>注意<ul>\n<li>可变类型的数据变化，是通过 方法 来实现的</li>\n<li>如果给一个可变类型的变量，赋值了一个新的数据，引用会修改<ul>\n<li>变量 不再 对之前的数据引用</li>\n<li>变量 改为 对新赋值的数据引用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>哈希</strong>：</p>\n<ul>\n<li>Python 中内置有一个名字叫做 <code>hash(o)</code> 的函数<ul>\n<li>接收一个 不可变类型 的数据作为 参数</li>\n<li>返回 结果是一个 整数</li>\n</ul>\n</li>\n<li>哈希 是一种 算法，其作用就是提取数据的 特征码（指纹）<ul>\n<li>相同的内容 得到 相同的结果</li>\n<li>不同的内容 得到 不同的结果</li>\n</ul>\n</li>\n<li>在 Python 中，设置字典的 键值对 时，会首先对 key 进行 hash 已决定如何在内存中保存字典的数据，以方便 后续 对字典的操作：增、删、改、查<ul>\n<li>键值对的 key 必须是不可变类型数据</li>\n<li>键值对的 value 可以是任意类型的数据</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-11-函数进阶\"><a href=\"#2-11-函数进阶\" class=\"headerlink\" title=\"2.11 函数进阶\"></a>2.11 函数进阶</h4><p>局部变量：函数内部定义的，只能在函数内部使用<br>全局变量：函数外部定义的，所有函数都能使用</p>\n<ul>\n<li>函数返回值<ul>\n<li>利用元组返回多个值 <code>return (a,b)</code></li>\n<li>利用数组解构接收多值 <code>a,b = fun()</code></li>\n</ul>\n</li>\n<li>缺省参数<ul>\n<li>指定一个参数有默认值<code>fun(a,b=1)</code></li>\n</ul>\n</li>\n<li>多值参数<ul>\n<li>参数名前添加<code>*</code>可以接收元组</li>\n<li>参数名前添加<code>**</code>可以接收字典</li>\n<li>参数名前添加<code>*</code>可以对元组拆包</li>\n<li>参数名前添加<code>**</code>可以对字典拆包</li>\n</ul>\n</li>\n<li>Lambda表达式<ul>\n<li><code>参数 = lambda 参数列表: 表达式</code></li>\n<li>无参数    <code>fn = lambda: 100</code></li>\n<li>一个参数  <code>fn = lambda a: a</code></li>\n<li>默认参数  <code>fn = lambda a,b=1: a+b</code></li>\n<li>可变参数  <code>fn = lambda *args: args</code></li>\n</ul>\n</li>\n<li>高阶函数<ul>\n<li>把函数作为参数传入</li>\n</ul>\n</li>\n<li>内置高阶函数<ul>\n<li><code>map(func,list)</code><ul>\n<li>将传入的函数func作用于list的每一个元素，并将结果组成迭代器返回</li>\n<li>使用<code>list(res)</code>将结果转化为列表</li>\n</ul>\n</li>\n<li><code>reduce(func,list)</code><ul>\n<li>定义func函数必须有两个参数</li>\n<li>让func函数计算结果与list下一个元素作累计运算</li>\n<li>需要导入<code>functools</code>模块</li>\n</ul>\n</li>\n<li><code>filter(func,list)</code><ul>\n<li>根据func过滤不符合条件的元素，返回一个filter对象</li>\n<li>使用<code>list(res)</code>将结果转化为列表</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-12-文件操作\"><a href=\"#2-12-文件操作\" class=\"headerlink\" title=\"2.12 文件操作\"></a>2.12 文件操作</h4><ul>\n<li>打开文件<ul>\n<li><code>f = open(name, mode)</code></li>\n<li>打开一个已经存在的文件或者创建一个新文件</li>\n<li><code>name</code>文件名，<code>mode</code>表示打开文件方式：只读<code>w</code>、只写<code>r</code>、追加<code>a</code></li>\n</ul>\n</li>\n<li>写入文件<ul>\n<li><code>f.write(内容)</code></li>\n</ul>\n</li>\n<li>读取文件<ul>\n<li><code>f.read(num)</code><ul>\n<li>num表示要读取的长度（字节）</li>\n</ul>\n</li>\n<li><code>f.readlines()</code><ul>\n<li>读取全部文件，返回一个列表，每一行为一个元素</li>\n</ul>\n</li>\n<li><code>f.readline()</code><ul>\n<li>读取一行内容</li>\n</ul>\n</li>\n<li><code>f.seek(偏移量,起始位置)</code><ul>\n<li>移动文件指针位置，起始位置：0：文件开头，1：当前位置，2：文件结尾</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>关闭文件<ul>\n<li><code>f.close()</code></li>\n</ul>\n</li>\n<li>文件重命名<ul>\n<li>导入 <code>os</code> 模块</li>\n<li><code>os.rename(原文件名,新文件名)</code></li>\n</ul>\n</li>\n<li>删除文件<ul>\n<li><code>os.remove(文件名)</code></li>\n</ul>\n</li>\n<li>创建文件夹<ul>\n<li><code>os.mkdir(文件名)</code></li>\n</ul>\n</li>\n<li>删除文件夹<ul>\n<li><code>os.rmdir(文件名)</code></li>\n</ul>\n</li>\n<li>获取当前目录<ul>\n<li><code>os.getcwd()</code></li>\n</ul>\n</li>\n<li>改变默认目录<ul>\n<li><code>os.chdir(目录)</code></li>\n</ul>\n</li>\n<li>获取目录列表<ul>\n<li><code>os.listdir(目录)</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-进阶语法\"><a href=\"#3-进阶语法\" class=\"headerlink\" title=\"3.进阶语法\"></a>3.进阶语法</h3><h4 id=\"3-1-类\"><a href=\"#3-1-类\" class=\"headerlink\" title=\"3.1 类\"></a>3.1 类</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">类名</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 类属性，可以被实例对象和类对象访问</span></span><br><span class=\"line\">  <span class=\"comment\"># 仅占用一份内存，节省空间</span></span><br><span class=\"line\">  <span class=\"comment\"># 不能通过实例对象修改，只能通过类对象修改</span></span><br><span class=\"line\">  age = <span class=\"number\">18</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 初始化方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;类的说明，由print函数触发该方法&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__del__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 对象删除后调用此方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 定义方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__mode</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 定义私有方法</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.__name = <span class=\"string\">&quot;z&quot;</span> <span class=\"comment\"># 私有属性</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"meta\">  @classmethod</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode1</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 类方法</span></span><br><span class=\"line\">    <span class=\"comment\"># 需要用装饰器表示 @classmethod</span></span><br><span class=\"line\">    <span class=\"comment\"># 第一个参数必须为类对象，用来访问类属性</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"meta\">  @staticmethod</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode2</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 静态方法</span></span><br><span class=\"line\">    <span class=\"comment\"># 没有必须参数的方法</span></span><br><span class=\"line\">    <span class=\"comment\"># 可以被实例对象和类对象访问</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建对象</span></span><br><span class=\"line\">对象名 = 类名()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 类外面添加属性</span></span><br><span class=\"line\">对象名.属性名 = 值</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 类里面获取属性</span></span><br><span class=\"line\"><span class=\"variable language_\">self</span>.属性名</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-继承\"><a href=\"#3-2-继承\" class=\"headerlink\" title=\"3.2 继承\"></a>3.2 继承</h4><p>子类可以继承父类所有属性和方法：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span>:</span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">mode</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Chidren</span>(<span class=\"title class_ inherited__\">Father</span>):</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Son</span>(Father,Chidren):</span><br><span class=\"line\">  <span class=\"comment\"># 多继承，当由同名属性和方法时，优先使用第一个</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 调用父类方法</span></span><br><span class=\"line\">    <span class=\"built_in\">super</span>().mode()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-多态\"><a href=\"#3-3-多态\" class=\"headerlink\" title=\"3.3 多态\"></a>3.3 多态</h4><p>是一种对象使用方法，通过多个子类继承相同父类并分别重写父类的方法，再通过统一调用父类方法来产生不同的结果</p>\n<h4 id=\"3-4-异常\"><a href=\"#3-4-异常\" class=\"headerlink\" title=\"3.4 异常\"></a>3.4 异常</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> 异常类型:</span><br><span class=\"line\">  <span class=\"comment\"># 捕获异常的处理代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> (异常类型<span class=\"number\">1</span>,异常类型<span class=\"number\">2</span>):</span><br><span class=\"line\">  <span class=\"comment\"># 捕获多个异常的处理代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> (异常类型<span class=\"number\">1</span>,异常类型<span class=\"number\">2</span>) <span class=\"keyword\">as</span> result:</span><br><span class=\"line\">  <span class=\"comment\"># 捕获异常描述信息result</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 可能发生错误的代码</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> result:</span><br><span class=\"line\">  <span class=\"comment\"># 捕获所有异常信息result</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 没有异常执行的代码</span></span><br><span class=\"line\"><span class=\"keyword\">finally</span>:</span><br><span class=\"line\">  <span class=\"comment\"># 无论有没有异常都会执行的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">InputError</span>(<span class=\"title class_ inherited__\">Exception</span>):</span><br><span class=\"line\">  <span class=\"comment\"># 自定义异常类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 抛出异常</span></span><br><span class=\"line\"><span class=\"keyword\">raise</span> InputError()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-5-模块与包\"><a href=\"#3-5-模块与包\" class=\"headerlink\" title=\"3.5 模块与包\"></a>3.5 模块与包</h4><ul>\n<li>导入模块的方法<ul>\n<li>import 模块名,模块名2</li>\n<li>from 模块名 import 功能名，功能名2</li>\n<li>from 模块名 import *</li>\n<li>import 模块名 as 别名</li>\n<li>from 模块名 import 功能名 as 别名</li>\n</ul>\n</li>\n<li>制作模块<ul>\n<li>每一个文件都是一个模块，模块名就是文件名</li>\n<li><code>__all__</code><ul>\n<li>在模块文件中存在变量 <code>__all__ = [&#39;mode1&#39;]</code></li>\n<li>该模块只能被调用放在改变量里面的函数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>包<ul>\n<li>在文件夹下有<code>__init__.py</code>文件，该文件夹称为包</li>\n<li>导入包<ul>\n<li>import 包名.模块名.功能名</li>\n<li>在<code>__init__.py</code>文件，写<code>__all__ = [&#39;mode1&#39;]</code>开表示导出的模块</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-6-迭代器与生成器\"><a href=\"#3-6-迭代器与生成器\" class=\"headerlink\" title=\"3.6 迭代器与生成器\"></a>3.6 迭代器与生成器</h4><p>迭代器从对象的第一个元素开始访问，直到对象的所有元素被访问完结束<br>迭代器有两个基本的方法：iter() 和 next()<br>字符串，列表或元组对象都可用于创建迭代器</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">list</span>=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">it = <span class=\"built_in\">iter</span>(<span class=\"built_in\">list</span>)    <span class=\"comment\"># 创建迭代器对象</span></span><br><span class=\"line\"><span class=\"built_in\">next</span>(it)           <span class=\"comment\"># 输出迭代器的下一个元素</span></span><br></pre></td></tr></table></figure>\n\n<p>把一个类作为一个迭代器使用需要在类中实现两个方法<code>__iter__()</code> 与 <code>__next__()</code><br><code>__iter__()</code> 方法返回一个特殊的迭代器对象， 这个迭代器对象实现了 <code>__next__()</code> 方法并通过抛出 <code>StopIteration</code> 异常标识迭代的完成。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyNumbers</span>:</span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__next__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.a &lt;= <span class=\"number\">20</span>:</span><br><span class=\"line\">      x = <span class=\"variable language_\">self</span>.a</span><br><span class=\"line\">      <span class=\"variable language_\">self</span>.a += <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">raise</span> StopIteration</span><br></pre></td></tr></table></figure>\n\n<p>生成器是一个返回迭代器的函数，只能用于迭代操作<br>在调用生成器运行的过程中，每次遇到 <code>yield</code> 时函数会暂停并保存当前所有的运行信息，返回 <code>yield</code> 的值, 并在下一次执行 <code>next()</code> 方法时从当前位置继续运行</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyNumber</span>:</span><br><span class=\"line\">  <span class=\"string\">&#x27;&#x27;&#x27;利用生成器产生斐波那契数列&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,count</span>):</span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.a = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.b = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"variable language_\">self</span>.<span class=\"built_in\">max</span> = count</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.count &lt; <span class=\"variable language_\">self</span>.<span class=\"built_in\">max</span>:</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> <span class=\"variable language_\">self</span>.a</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.a, <span class=\"variable language_\">self</span>.b = <span class=\"variable language_\">self</span>.b, <span class=\"variable language_\">self</span>.a + <span class=\"variable language_\">self</span>.b</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.count += <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> StopIteration</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> MyNumber(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-7-装饰器\"><a href=\"#3-7-装饰器\" class=\"headerlink\" title=\"3.7 装饰器\"></a>3.7 装饰器</h4><p>给函数无修改的情况下添加新功能</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Medthod</span>(<span class=\"params\">fun</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;This is a decorator&quot;</span>)</span><br><span class=\"line\">  fun()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Medthod</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Fun</span>():</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;This is a function&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  Fun()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-常用库的使用\"><a href=\"#4-常用库的使用\" class=\"headerlink\" title=\"4.常用库的使用\"></a>4.常用库的使用</h3><h4 id=\"4-1-Matplotlib\"><a href=\"#4-1-Matplotlib\" class=\"headerlink\" title=\"4.1 Matplotlib\"></a>4.1 Matplotlib</h4><p>作用：数据可视化</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure()</span><br><span class=\"line\">plt.plot([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>])</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<p>Matplotlib三层结构</p>\n<ol>\n<li>容器层<ol>\n<li>(Canvas)画板层，最底层</li>\n<li>(Figure)画布层，建立在画板之上</li>\n<li>(Axes)绘图区&#x2F;坐标系，建立在画布之上，一个画布有多个绘图区</li>\n</ol>\n</li>\n<li>辅助显示层</li>\n<li>图像层：坐标轴(axis)、图例(legend)建立在绘图区上</li>\n</ol>\n<p><strong>Matplotlib模块</strong>:</p>\n<ul>\n<li>Matplotlib.pyplot<ul>\n<li>figure() 创建默认画布</li>\n<li>figure(figsize&#x3D;(),dpi&#x3D;) 创建指定画布<ul>\n<li>figsize，指定图的长宽</li>\n<li>dpi：图像的清晰度</li>\n</ul>\n</li>\n<li>savefig(“图像路径”)，保存图像</li>\n<li>plot(x,y) x轴数据，y轴数据<ul>\n<li>plot(x,y1,label&#x3D;’y1’,color&#x3D;’red’,linestyle&#x3D;’–’,marker&#x3D;’o’)</li>\n</ul>\n</li>\n<li>show() 显示图像</li>\n<li>xticks(x,**kwargs), x为要显示的刻度</li>\n<li>yticks(y,**kwargs), y为要显示的刻度</li>\n<li>中文显示问题<ul>\n<li><code>matplotlib.matplotlib_fname()</code>方法找到配置文件，添加下面文字</li>\n<li>font.sans-serif: Microsoft YaHei</li>\n<li>从本地的字体库中找到<code>C:\\Windows\\Fonts\\Microsoft YaHei UI</code>字体</li>\n<li>复制到<code>matplotlib\\mpl-data\\fonts\\ttf</code>文件夹中</li>\n</ul>\n</li>\n<li>grid(True,linestyle&#x3D;’–’,color&#x3D;’gray’,linewidth&#x3D;1,alpha&#x3D;0.5) 坐标图的网格线</li>\n<li>xlabel x坐标轴信息</li>\n<li>ylabel y坐标轴信息</li>\n<li>title 标题</li>\n<li>多个图画在一起<ul>\n<li>多次使用plot(x,y)进行画图就行了</li>\n</ul>\n</li>\n<li>多个图组合一起<ul>\n<li>subplot(2,1,1) 两行一列第一个图，后面写全部的画图代码</li>\n<li>subplot(2,1,2) 两行一列第二个图，后面写全部的画图代码</li>\n</ul>\n</li>\n<li>折线图 plot()</li>\n<li>散点图 scatter()</li>\n<li>柱状图 bar()</li>\n<li>直方图 histogram()</li>\n<li>饼图 pie()</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.pyplot <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">x= <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)</span><br><span class=\"line\">y1= [i*i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> x]</span><br><span class=\"line\">y2= [i*i*i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> x]</span><br><span class=\"line\">figure(figsize=(<span class=\"number\">10</span>,<span class=\"number\">10</span>),dpi=<span class=\"number\">100</span>)</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">plot(x,y1,label=<span class=\"string\">&#x27;y1&#x27;</span>,color=<span class=\"string\">&#x27;red&#x27;</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">xticks(x)</span><br><span class=\"line\">yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">1000</span>,<span class=\"number\">100</span>))</span><br><span class=\"line\">grid(<span class=\"literal\">True</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,color=<span class=\"string\">&#x27;gray&#x27;</span>,linewidth=<span class=\"number\">1</span>,alpha=<span class=\"number\">0.5</span>)</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">plot(x,y2,label=<span class=\"string\">&#x27;y2&#x27;</span>,color=<span class=\"string\">&#x27;green&#x27;</span>,linestyle=<span class=\"string\">&#x27;-.&#x27;</span>,marker=<span class=\"string\">&#x27;*&#x27;</span>)</span><br><span class=\"line\">xticks(x)</span><br><span class=\"line\">yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">1000</span>,<span class=\"number\">100</span>))</span><br><span class=\"line\">grid(<span class=\"literal\">True</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,color=<span class=\"string\">&#x27;gray&#x27;</span>,linewidth=<span class=\"number\">1</span>,alpha=<span class=\"number\">0.5</span>)</span><br><span class=\"line\">show()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-Numpy\"><a href=\"#4-2-Numpy\" class=\"headerlink\" title=\"4.2 Numpy\"></a>4.2 Numpy</h4><p>数值计算库，用于快速处理数组</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">a = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">          [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">type</span>(a)</span><br><span class=\"line\"><span class=\"comment\"># =========</span></span><br><span class=\"line\"><span class=\"comment\"># numpy.ndarray</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>numpy<ul>\n<li>数组里面的数据都是相同的数据类型</li>\n<li>支持向量化运算</li>\n<li>ndarray<ul>\n<li>属性</li>\n<li>shape 数组维度的元组  (行数,列数)</li>\n<li>ndim 数组维度</li>\n<li>size 数组中元素的数量</li>\n<li>itemsize 一个数组元素的长度</li>\n<li>dtype 数组元素类型</li>\n</ul>\n</li>\n<li>生成数组的方法<ul>\n<li>生成0和1<ul>\n<li><code>zeros(shape=[行,列],dtype=&quot;float32&quot;)</code></li>\n<li><code>ones(shape=[行,列],dtype=&quot;float32&quot;)</code></li>\n</ul>\n</li>\n<li>从现有数组生成<ul>\n<li><code>array([1,2,3])</code></li>\n<li><code>asarray(a)</code> 浅拷贝</li>\n<li><code>copy(a)</code> 深拷贝</li>\n</ul>\n</li>\n<li>生成固定范围的数组<ul>\n<li><code>linspace(0,100,1000)</code> 左闭右闭的数据</li>\n<li><code>arange(0，100，0.1)</code> 左闭右开</li>\n</ul>\n</li>\n<li>生成随机数组<ul>\n<li>均匀分布 <code>random.uniform(low = -1,high = 1,size = 1000)</code></li>\n<li>正态分布 <code>random.randn(loc = 0,scale = 1,size = (2,8))</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>索引数据<ul>\n<li><code>a[1,2]</code></li>\n</ul>\n</li>\n<li>修改数据<ul>\n<li><code>reshape((行，列))</code> 可以把任意行列的数组，转化为需要的行列，返回新的数组</li>\n<li><code>resize((行，列))</code> 修改效果与上面一样，但是会修改原数组</li>\n<li><code>T</code> 对数组进行转置操作</li>\n</ul>\n</li>\n<li>类型修改<ul>\n<li><code>astype(新类型)</code></li>\n</ul>\n</li>\n<li>序列化<ul>\n<li><code>tostring()</code></li>\n</ul>\n</li>\n<li>去重<ul>\n<li><code>set(数组)</code> 无法转化一维以上数据</li>\n<li><code>unique(数组)</code> 全部转化为一维</li>\n</ul>\n</li>\n<li>运算<ul>\n<li>逻辑运算<ul>\n<li><code>数组[数组 &gt; 1]</code></li>\n<li><code>all(布尔值)</code> 只要有一个False返回False</li>\n<li><code>any(布尔值)</code> 只要有一个True返回True</li>\n<li><code>where(三元运算符)</code>  <code>where(布尔值，True操作，False操作)</code></li>\n</ul>\n</li>\n<li>统计运算<ul>\n<li>统计指标函数<ul>\n<li>min 最小值 <code>min(axis=0)</code> 按列求最小值 <code>min(axis=1)</code> 按列求最大值</li>\n<li>max 最大值</li>\n<li>mean 平均值</li>\n<li>median 中位数</li>\n<li>var 方差</li>\n<li>std 标准差</li>\n</ul>\n</li>\n<li><code>argmax(数组,axis=0)</code></li>\n<li><code>argmin(数组,axis=1)</code></li>\n</ul>\n</li>\n<li>数组运算<ul>\n<li>数组可以直接与数进行运算</li>\n<li>不同形状的数组需要满足广播机制，不同形状的其中一个是1</li>\n</ul>\n</li>\n<li>矩阵运算<ul>\n<li>矩阵乘法<ul>\n<li><code>matmul(矩阵1，矩阵2)</code> 普通乘</li>\n<li><code>dot(矩阵1，矩阵2)</code> 点乘</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>合并与分割<ul>\n<li><code>hstack((矩阵1,矩阵2,...))</code> 水平拼接</li>\n<li><code>vstack((矩阵1,矩阵2,...))</code> 垂直拼接</li>\n<li><code>concatenate((矩阵1，矩阵2,...),axis=0)</code> 根据axis判断水平还是垂直拼接</li>\n<li><code>split(矩阵,[索引1,索引2,...])</code> 根据索引作为终点来依次分割矩阵</li>\n</ul>\n</li>\n<li>IO操作与数据处理<ul>\n<li>读取<ul>\n<li><code>genfromtxt(文件路径,delimiter=&quot;,&quot;)</code> 根据分隔符的规则读取文件数据，非数字和缺失值会显示<code>nan</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-3-Pandas\"><a href=\"#4-3-Pandas\" class=\"headerlink\" title=\"4.3 Pandas\"></a>4.3 Pandas</h4><p>读取文件方便，封装了Numpy、Matplotlib</p>\n<ul>\n<li>核心数据结构<ul>\n<li><code>DataFrame(数组)</code><ul>\n<li>具有行索引和列索引的二维数组，让数组更直观的表现</li>\n<li><code>DataFrame(数组，index=行索引矩阵，columns=列索引矩阵)</code> 给数据表添加行表头和列表头</li>\n<li>属性<ul>\n<li>shape  行数和列数元组</li>\n<li>index  行表头</li>\n<li>columns 列表头</li>\n<li>values 中间的有效数据</li>\n<li>T 转置</li>\n</ul>\n</li>\n<li>方法<ul>\n<li>head(n) 返回前n行数据</li>\n<li>tail(n) 返回后n行数据</li>\n</ul>\n</li>\n<li>修改行列表头<ul>\n<li>利用属性index进行修改，只能统一修改不能单独修改</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>MultiIndex</code><ul>\n<li>多级或分层索引对象，三维数据表示</li>\n<li>属性<ul>\n<li><code>index</code><ul>\n<li><code>names</code>   levels的名称</li>\n<li><code>levels</code>  每个level的元组值</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>Series</code><ul>\n<li>带索引的一维数组</li>\n<li>只有行索引</li>\n<li>属性<ul>\n<li>index</li>\n<li>values</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据操作<ul>\n<li>索引操作<ul>\n<li>drop(行&#x2F;列索引矩阵,axis&#x3D;0&#x2F;1) 删除部分行&#x2F;列数据</li>\n<li>直接索引</li>\n<li>按名字索引</li>\n<li>按数字索引</li>\n<li>组合索引</li>\n</ul>\n</li>\n<li>赋值操作</li>\n<li>排序</li>\n</ul>\n</li>\n</ul>\n"},{"title":"AJAX快速入门","img":"https://images.pexels.com/photos/7881305/pexels-photo-7881305.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500","excerpt":"介绍了前后端的通信方式，以及Ajax的封装原理，以及jQuery的Ajax的使用，以及常见的HTTP请求响应构成。","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-26T09:02:22.000Z","_content":"\n# AJAX快速入门\n\n## 一、Ajax入门\n\n### 1.前言\n\n本笔记参考视频：<https://www.bilibili.com/video/BV1zs411h74a>\n\n客户端请求数据：\n\n1. 向服务器请求数据资源\n2. 服务器处理这次数据请求\n3. 把数据响应给客户端\n\n在网页请求服务器的数据资源，需要用到`XMLHttpRequest`对象\n\n资源请求方式：\n\n* get请求，常用于获取服务端资源\n* post请求，常用于向服务器提交数据\n\n网页中利用`XMLHttpRequest`对象和服务器进行数据交互的方式，称为Ajax。\n\n### 2.前后端通信\n\n#### 2.1jQuery中的Ajax\n\n浏览器中提供的`XMLHttpRequest`用法比较复杂，jQuery对`XMLHttpRequest`进行了封装，提供了一系列Ajax相关的函数，大大的降低了Ajax的使用难度。\n> jQuery是类似vue和react的框架，现在用的很少\n\njQuery中发起Ajax请求的常用三个方法：\n\n* $.get()\n  功能单一，专门发起get请求。\n\n```javascript\n$.get(url,[data],[callback])\n```\n\n| 参数名   | 参数类型 | 是否必选 | 说明                     |\n| -------- | -------- | -------- | ------------------------ |\n| url      | string   | 是       | 要请求的资源地址         |\n| data     | object   | 否       | 请求资源期间要携带的参数 |\n| callback | function | 否       | 请求成功时的回调函数     |\n\n* $.post()\n  功能单一，专门发起post请求。\n\n```javascript\n$.post(url,[data],[callback])\n```\n\n| 参数名   | 参数类型 | 是否必选 | 说明                     |\n| -------- | -------- | -------- | ------------------------ |\n| url      | string   | 是       | 提交数据的地址           |\n| data     | object   | 否       | 要提交的数据             |\n| callback | function | 否       | 数据提交成功时的回调函数 |\n\n* $.ajax()\n  功能综合，可以发送GET或者POST请求\n\n```javascript\n$.ajax({\n  type: '',  //请求方式，GET 或者 POST\n  url: '',   //请求的URL地址\n  data: { },  //这次请求携带的数据\n  success: function(res){} //请求成功后的回调函数\n})\n```\n\n#### 2.2 接口\n\n* 使用Ajax请求数据时，被请求的URL地址，就叫做数据接口。同时，每个接口必须有请求方式。\n* 接口测试工具Postman\n* 接口文档书写规范\n  1. 接口名称：用来标识各个接口的简单说明\n  2. 接口URL：接口调用地址\n  3. 调用方式：接口调用方式\n  4. 参数格式：接口需要传递的参数，包括参数名词、参数类型、是否必选、参数说明这四项内容。\n  5. 响应格式：接口的返回值的详细描述，一般包括数据名称、数据类型、说明这三项内容。\n  6. 返回示例（可选）：通过对象的形式，返回数据的结构。\n\n#### 2.3 from表单\n\n* 作用：在网页中主要负责数据采集功能。\n* 组成部分：\n  1. 表单标签\n  2. 表单域：文本框、密码框等。\n  3. 表单按钮。\n* 属性：\n  * action\n    * 属性值：URL地址（默认值为当前页面的URL地址）\n    * 说明：规定当提交表单时，向何处发送数据\n  * target\n    * 属性值\n  \n      | 值        | 说明                     |\n      | --------- | ------------------------ |\n      | _blank    | 在新窗口打开             |\n      | _self     | 默认，在相同的框架中打开 |\n      | _parent   | 在父框架集中打开         |\n      | _top      | 在整个窗口中打开         |\n      | framename | 在指定的框架中打开       |\n    * 说明：规定何处打开action URL\n  * method\n    * 属性值：get（默认，通过URL地址来提交，适合少量数据）或post（隐藏提交的数据，适合大量、复杂的数据提交）\n    * 说明：规定以何种方式把表单数据提交到action URL\n  * enctype\n    * 属性值\n      | 值                                | 说明                                                   |\n      | --------------------------------- | ------------------------------------------------------ |\n      | application/x-www-form-urlencoded | 在发送前编码所有字符（默认）                           |\n      | multipart/form-data               | 不对字符编码。在使用包含文件上传的控件的表单，必须使用 |\n      | text/plain                        | 空格转化为“+”加号，但不对特殊字符编码                  |\n    * 说明：规定在发送表单数据之前如何对其编码\n* 表单提交的缺点\n  * 页面会发生跳转\n  * 页面之前的状态和数据会丢失\n  * 解决方案：表单只负责采集数据，Ajax负责将数据提交到服务器\n\n#### 2.4 Ajax提交表单数据\n\n```js\n$('#form1').submit(function(e)){\n  alert('监听到了表单的提交事件');\n  e.preventDefault(); //阻止表单的默认提交行为\n  $(selector).serialize(); //一次性获取表单中的所有数据\n}\n\n$('#form1').on('submit',function(e))){\n  alert('监听到了表单的提交事件');\n  e.preventDefault();//阻止表单的默认提交行为\n  $(selector).serialize(); //一次性获取表单中的所有数据\n}\n```\n\n#### 2.5 模板引擎\n\n>模板引擎现在以及内置于大型框架中了，其中art-template为最快的模板引擎\n\n* art-template使用步骤\n  * 导入art-template\n  * 定义数据\n  * 定义模板\n  * 调用template函数\n  * 渲染HTML结构\n* art-template标准语法\n  * 输出：变量输出、对象属性的输出、三元表达式的输出、逻辑输出、算术输出\n  `{{value}}，{{obj.key}}，{{obj.['key']}}，{{a?b:c}}，{{a||b}}，{{a+b}}`\n  * 原文输出：如果value包括HTML标签结构，需要原文输出才能保证能够被渲染\n  `{{@ value}}`\n  * 条件输出\n  `{{if value}} 按需输出的内容 {{/if}}`\n  `{{if value1}} 按需输出的内容 {{else if value2}} 按需输出的内容{{/if}}`\n  * 循环输出：`{{$index}}`来得到索引，`{{$value}}` 来得到值\n  `{{each arr}} 循环内容 {{/each}}`\n  * 过滤器：把`value`提交给`filterName`函数进行处理，得到一个新值\n  `{{value|filterName}}`\n  `template.defaults.imports.filterName=function(value){ }`\n* 模板引擎原理：利用正则表达式提取数据，再用字符串替换方法替换字符串\n* 正则与字符串操作\n  * 语法：`RegExpObject.exec(string)`函数用来检索字符串中的正则表达式的匹配，如果字符串有匹配的值，则返回该匹配值，否则返回Null\n\n  ```js\n  var str = 'hello'\n  var pattern = /o/\n  console.log(pattern.exec(str))\n  ```\n\n  * `replace()`函数用于一些字符替换另一些字符\n* 实现简易模板引擎\n  * 定义模板结构\n  * 预调用模板引擎\n  * 封装template函数\n  * 导入并使用自定义的模板引擎\n\n#### 2.6 XMLHttpRequest\n\n>XMLHttpRequest是浏览器提供的JavaScript对象，可以请求服务器的数据资源，JQuery的Ajax函数就是基于xhr封装的\n\n```js\n//1. 创建xhr对象\nvar xhr = new XMLHttpRequest();\n//2. 调用open()函数\nxhr.open('GET','url');\n//3. 调用send()函数\nxhr.send();\n//4. 监听onreadystatechange事件\nxhr.onreadystatechange=function(){\n  //监听请求状态与服务器响应状态\n  if(xhr.readyState===4 && xhr.status===200){\n    console.log(xhr.responseText)\n  }\n}\n```\n\n* readyState的请求状态\n\n| 值  | 状态             | 说明                                         |\n| --- | ---------------- | -------------------------------------------- |\n| 0   | unsent           | XMLHttpRequest对象已被创建，但未调用open方法 |\n| 1   | opened           | open方法已经被调用                           |\n| 2   | headers_received | send方法已经被调用                           |\n| 3   | loading          | 数据接收中                                   |\n| 4   | done             | Ajax请求完成                                 |\n\n* URL参数传递需要在地址后面添加?号，多个参数使用&进行分割\n  * 参数不能是其他语言，其他语言需要进行编码\n    `encodeURI()`编码函数\n    `decodeURI()`解码函数\n\n```js\n//1. 创建xhr对象\nvar xhr = new XMLHttpRequest();\n//2. 调用open()函数\nxhr.open('POST','url');\n//3.设置Content-Type属性\nxhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');\n//3. 调用send()函数\nxhr.send('参数1&参数2');\n//4. 监听onreadystatechange事件\nxhr.onreadystatechange=function(){\n  //监听请求状态与服务器响应状态\n  if(xhr.readyState===4 && xhr.status===200){\n    console.log(xhr.responseText)\n  }\n}\n```\n\n#### 2.7 数据交换格式\n\n前后端数据传输的格式，分别为**XML**和**JSON**，其中**XML**用的很少，重点为**JSON**\n\n* XML\n  与html类似，为可扩展标记语言。\n  缺点：\n  * XML格式臃肿，数据无关代码多，传输效率低。\n  * Javascript解析XML比较麻烦。\n* JSON\n  英文名JavaScript Object Notation，即\"JavaScript对象表示方法\"。本质是字符串。\n  * 两种结构\n    * 对象结构\n      格式为花括号包裹的键值对，key必须为英文双引号表示的字符串，value可以是数字、字符串、布尔值、null、数组、对象这六种类型。\n    * 数组结构\n      格式为中括号包裹的数据，数据类型可以是数字、字符串、布尔值、null、数组、对象这六种类型。\n  * JSON转化Javascript对象\n    * 使用`JSON.parse('JSON字符串')`方法\n  * Javascript对象转化JSON\n    * 使用`JSON.stringify(JS对象)`方法\n* 序列化与反序列化\n  * 序列化：把**数据对象**转化为**字符串**的过程\n  * 反序列化：把**字符串**转化为**数据对象**的过程\n\n#### 2.8 自定义Ajax函数\n\n* 定义参数选项\n  * method 请求类型\n  * url          请求的URL地址\n  * data       请求携带的数据\n  * success  请求成功之后的回调函数\n\n```js\nfunction resolveData(data){\n  var arr=[];\n  for(var k in data){\n    arr.push(k+'='+data[k])\n  }\n  return arr.join('&');\n}\n\nfunction template(options){\n  var xhr=new XMLHttpRequest();\n  var qs = resolveData(options.data);\n  if(options.method.toUpperCase()==='GET'){\n    xhr.open('GET',options.url+'?'+qs);\n    xhr.send();\n  }else if(options.method.toUpperCase()==='POST'){\n    xhr.open('POST',options.url);\n    xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');\n    xhr.send(qs);\n  }\n  xhr.onreadystatechange=function(){\n    if(xhr.readyState===4 && xhr.status===200){\n      var result = JSON.parse(xhr.responseText);\n      options.success(result);\n    }\n  }\n}\n```\n\n#### 2.9 XMLHttpRequest Level2新特性\n\n* 旧版缺点：\n  1. 只支持文本传输，无法读取和上传文件\n  2. 接收数据没有进度信息\n\n* 设置HTTP请求时限\n  * `xhr.timeout=3000`\n  * `xhr.ontimeout=function(){}`\n* FormData对象管理表单数据\n\n```js\n //创建Form Data对象\n var fd =new FormData();\n//为FormData添加表单项\n fd.append('uname','ithm');\n//创建xhr对象\n var xhr=new XMLHttpRequest()\n//指定请求与url地址\n xhr.open('POST','url');\n//提交\n xhr.send(fd);\n\n\n //获取表单元素\n var form=document.querySelector('#form1');\n form.addEventListener('submit',function(e){\n  e.preventDefault();\n  var fd=new FormData(form);\n  var xhr=new XMLHttpRequest();\n  xhr.open('POST','url');\n  xhr.send(fd);\n  xhr.onreadystatechange=function(){}\n })\n```\n\n* 上传文件\n  1. 定义UI结构\n  2. 验证是否选择文件\n  3. 向FormData中追加文件\n  4. 使用xhr发起上传文件请求\n  5. 监听onreadystatechange事件\n\n```js\nvar btn = document.querySelector('#btnUpload');\nbtn.addEventListener('click',function(){\n  var files=document.querySelector('#file1').files;\n  if(files.length<=0){\n    return alert('');\n  }\n  var fd=new FormData();\n  fd.append('avatar',files[0]);\n  var xhr=new XMLHttpRequest();\n  xhr.open('POST','url');\n  xhr.send(fd);\n  //文件上传进度\n  xhr.upload.onprogress=function(e){\n    if(e.lengthComputable){\n      var procent=Math.ceil((e.loaded/e.total)*100);\n      console.log(procent);\n    }\n\n  }\n  xhr.onreadystatechange=function(){\n      if(xhr.readyState===4 && xhr.status===200){\n        var data = JSON.parse(xhr.responseText);\n        if(data.status===200){\n          //上传成功\n        }else{\n          //上传失败\n        }\n    }\n  }\n})\n```\n\n#### 2.10 axios\n\n专注于网络数据请求的库，更简单易用。\n\n* 发起GET请求\n  `axios.get('url',{params:{（js对象）参数}}).then(callback)`\n* 发起POST请求\n  `axios.post('url',{（js对象）参数}).then(callback)`\n* 类似`$.ajax()`的函数\n\n```js\naxios({\n  method: '请求类型',\n  url: '请求的URL地址',\n  data: {数据},\n  params: {参数}\n}).then(callback)\n```\n\n#### 2.11 同源策略\n\n同源：如果两个页面的协议、域名和端口都相同，则两个页面具有相同的源。\n同源策略：浏览器规定，A网站的JS，不允许和非同源的网站C之间进行资源交互。\n\n1. 无法读取非同源网页的cookie、LocalStorage和IndexedDB\n2. 无法接触非同源网页的DOM\n3. 无法向非同源地址发送Ajax请求\n\n跨域：非同源就是跨域。\n跨域请求的方案：**JSONP**和**CORS**。\n\n* JSONP，只支持GET请求，不支持POST请求。\n  由于浏览器同源策略的限制，网页无法通过Ajax请求非同源的接口数据，但是`<script>`标签不受限制，可以通过src属性，请求跨域的数据接口，并通过函数调用的形式，接收跨域接口响应回来的数据。\n\n  ```js\n  //自己实现JSONP\n  <script>\n    function success(data){\n      console.log(data);\n    }\n  </script>\n  <script src=\"http://url?callback=success&name=zs\"></script>\n\n  //jQuery的JSONP\n  $.ajax({\n    url: 'http://url?callback=success&name=zs',\n    dataType: 'jsonp',\n    jsonp: 'callback',\n    jsonpCallback: 'success',\n    success: function(data){\n      console.log(data);\n    }\n  })\n  ```\n\n* CORS，不兼容性低端浏览器，支持GET和POST请求。\n\n#### 2.12 防抖和节流\n\n节流策略：减少一段时间内事件的触发频率，防止事件无限制被触发。\n\n```js\nvar timer =null;  //定义节流阀\n\nif(timer){  //判断节流阀是否为空\n  return;\n}\n\ntimer=setTimeout(function(){\n  //处理事件\n  timer=null;  //清空节流阀\n},16)\n```\n\n#### 2.13 HTTP协议加强\n\n通信三要素：\n\n* 通信主体\n* 通信内容\n* 通信方式\n\n网页内容叫做超文本，因此网页内容传输协议又叫做超文本传输协议(**H**yper**T**ext **T**ransfer **P**rotocol)，简称HTTP协议。\n\n**HTTP请求消息**由请求行、请求头部、空行和请求体四个部分组成。\n\n1. 请求行\n\n<style>\n.table li{\n  text-align: center;\n  list-style:none;\n  display: inline-block;\n\n  margin: 0;\n  padding: 10px;\n  border: 2px solid black;\n  border-right:none ;\n}\n.a :first-child{\n  background-color: #2ca9e1;\n}\n.a :nth-child(3){\n background-color: #765c47;\n}\n.a :nth-child(5){\n background-color: #f8b500;\n}\n.a :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table a\">\n  <li>请求方式</li><li>空格</li><li>URL</li><li>空格</li><li>协议版本</li><li>回车符</li><li>换行符</li>\n</ul>\n\n2. 请求头部：多行键值对组成，用来描述客户端的基本信息，从而把客户端相关的信息告知服务器。\n\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n|    头部字段     | 说明                                         |\n| :-------------: | -------------------------------------------- |\n|      Host       | 要请求的服务器域名                           |\n|   Connection    | 客户端与服务器的连接方式（keep 或keepalive） |\n| Content-Length  | 用来描述请求体的大小                         |\n|     Accept      | 客户端可识别的响应内容类型列表               |\n|   User-Agent    | 产生请求的浏览器类型                         |\n|  Content-Type   | 客户端告诉服务器实际发送的数据类型           |\n| Accept-Encoding | 客户端可接收的内容压缩编码形式               |\n| Accept-Language | 用户期望获得的自然语言的优先顺序             |\n\n3. 空行(回车符或者换行符)：分割请求头部与请求体。\n\n4. 请求体：存放要通过**POST方式**提交到服务器的数据（GET没有请求体）。\n\n**HTTP响应消息**由状态行、响应头部、空行和响应体四个部分组成。\n\n1. 状态行\n\n<style>\n.c :first-child{\n  background-color: #2ca9e1;\n}\n.c :nth-child(3){\n background-color: #765c47;\n}\n.c :nth-child(5){\n  background-color: #f8b500;\n}\n.c :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table c\">\n  <li>协议版本</li><li>空格</li><li>状态码</li><li>空格</li><li>状态码描述</li><li>回车符</li><li>换行符</li>\n</ul>\n\n2. 响应头部：多行键值对组成，来描述服务器的基本信息。具体细节查看[MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Response_header)文档。\n\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n3. 空行(回车符或者换行符)：分割响应头部与响应体。\n\n4. 响应体：服务器给客户端的资源。\n\n**HTTP的请求方法**:\n\n| 方法   | 描述                                                                               |\n| ------ | ---------------------------------------------------------------------------------- |\n| GET    | （查询）发送请求来获得服务器上的资源，请求体中不会包含请求数据，请求数据放在协议头 |\n| POST   | （新增）向服务器提交资源，数据被包含在请求体中提交给服务器                         |\n| PUT    | （修改）向服务器提交资源，并使用提交的新资源，替换掉服务器对应的旧资源             |\n| DELETE | （删除）请求服务器删除指定的资源。                                                 |\n\n**HTTP响应状态码**用来标识响应状态。\nHTTP状态码由三个十进制组成，第一个数字反应了状态码的类型。\n| 分类 | 说明                                           |\n| ---- | ---------------------------------------------- |\n| 1**  | 信息，服务器收到请求，需要请求者继续执行操作   |\n| 2**  | 成功，操作被成功接收并处理                     |\n| 3**  | 重定向，需要进一步的操作以完成请求             |\n| 4**  | 客户端错误，请求包含语法错误或无法完成请求     |\n| 5**  | 服务器错误，服务器在处理请求的过程中发生了错误 |\n\n| 状态码 | 状态码描述 | 说明                                                     |\n| ------ | ---------- | -------------------------------------------------------- |\n| 200    | OK         | 请求成功。一般用于GET与POST请求                          |\n| 201    | Created    | 已创建。成功请求并创建了新的资源。 通常用于POST与PUT请求 |\n\n| 状态码 | 状态码描述        | 说明                                                                                          |\n| ------ | ----------------- | --------------------------------------------------------------------------------------------- |\n| 301    | Moved Permanently | 永久移动。请求资源已经被永久的移动到了新的URL，返回信息包括新的URL，浏览器会自动定向到新URL。 |\n| 302    | Found             | 临时移动。资源只是临时被移动。                                                                |\n| 304    | Not Modified      | 未修改。所请求的资源未修改，客户端从缓存访问资源。                                            |\n\n| 状态码 | 状态码描述      | 说明                                           |\n| ------ | --------------- | ---------------------------------------------- |\n| 400    | Bad Request     | 语义有误，服务器无法理解。请求参数有误。       |\n| 401    | Unauthorized    | 当前请求需要用户验证。                         |\n| 403    | Forbidden       | 服务器已经理解请求，但是拒绝执行。             |\n| 404    | Not Found       | 服务器无法根据客户端的请求找到资源。           |\n| 408    | Request Timeout | 请求超时。服务器等待客户端发送的请求时间过长。 |\n\n| 状态码 | 状态码描述            | 说明                                               |\n| ------ | --------------------- | -------------------------------------------------- |\n| 500    | Internal Server Error | 服务器内部错误，无法完成请求。                     |\n| 501    | Not Implemented       | 服务器不支持该请求方式，无法完成请求。             |\n| 503    | Service Unavailable   | 由于超载或系统维护，服务器暂时无法处理客户端的请求 |\n","source":"_posts/计算机/前端/AJAX快速入门.md","raw":"---\ntitle: AJAX快速入门\nimg: https://images.pexels.com/photos/7881305/pexels-photo-7881305.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\nexcerpt: 介绍了前后端的通信方式，以及Ajax的封装原理，以及jQuery的Ajax的使用，以及常见的HTTP请求响应构成。\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [前端,Ajax,前后端通信]\nmathjax: true\ndate: 2022-04-26 17:02:22\n---\n\n# AJAX快速入门\n\n## 一、Ajax入门\n\n### 1.前言\n\n本笔记参考视频：<https://www.bilibili.com/video/BV1zs411h74a>\n\n客户端请求数据：\n\n1. 向服务器请求数据资源\n2. 服务器处理这次数据请求\n3. 把数据响应给客户端\n\n在网页请求服务器的数据资源，需要用到`XMLHttpRequest`对象\n\n资源请求方式：\n\n* get请求，常用于获取服务端资源\n* post请求，常用于向服务器提交数据\n\n网页中利用`XMLHttpRequest`对象和服务器进行数据交互的方式，称为Ajax。\n\n### 2.前后端通信\n\n#### 2.1jQuery中的Ajax\n\n浏览器中提供的`XMLHttpRequest`用法比较复杂，jQuery对`XMLHttpRequest`进行了封装，提供了一系列Ajax相关的函数，大大的降低了Ajax的使用难度。\n> jQuery是类似vue和react的框架，现在用的很少\n\njQuery中发起Ajax请求的常用三个方法：\n\n* $.get()\n  功能单一，专门发起get请求。\n\n```javascript\n$.get(url,[data],[callback])\n```\n\n| 参数名   | 参数类型 | 是否必选 | 说明                     |\n| -------- | -------- | -------- | ------------------------ |\n| url      | string   | 是       | 要请求的资源地址         |\n| data     | object   | 否       | 请求资源期间要携带的参数 |\n| callback | function | 否       | 请求成功时的回调函数     |\n\n* $.post()\n  功能单一，专门发起post请求。\n\n```javascript\n$.post(url,[data],[callback])\n```\n\n| 参数名   | 参数类型 | 是否必选 | 说明                     |\n| -------- | -------- | -------- | ------------------------ |\n| url      | string   | 是       | 提交数据的地址           |\n| data     | object   | 否       | 要提交的数据             |\n| callback | function | 否       | 数据提交成功时的回调函数 |\n\n* $.ajax()\n  功能综合，可以发送GET或者POST请求\n\n```javascript\n$.ajax({\n  type: '',  //请求方式，GET 或者 POST\n  url: '',   //请求的URL地址\n  data: { },  //这次请求携带的数据\n  success: function(res){} //请求成功后的回调函数\n})\n```\n\n#### 2.2 接口\n\n* 使用Ajax请求数据时，被请求的URL地址，就叫做数据接口。同时，每个接口必须有请求方式。\n* 接口测试工具Postman\n* 接口文档书写规范\n  1. 接口名称：用来标识各个接口的简单说明\n  2. 接口URL：接口调用地址\n  3. 调用方式：接口调用方式\n  4. 参数格式：接口需要传递的参数，包括参数名词、参数类型、是否必选、参数说明这四项内容。\n  5. 响应格式：接口的返回值的详细描述，一般包括数据名称、数据类型、说明这三项内容。\n  6. 返回示例（可选）：通过对象的形式，返回数据的结构。\n\n#### 2.3 from表单\n\n* 作用：在网页中主要负责数据采集功能。\n* 组成部分：\n  1. 表单标签\n  2. 表单域：文本框、密码框等。\n  3. 表单按钮。\n* 属性：\n  * action\n    * 属性值：URL地址（默认值为当前页面的URL地址）\n    * 说明：规定当提交表单时，向何处发送数据\n  * target\n    * 属性值\n  \n      | 值        | 说明                     |\n      | --------- | ------------------------ |\n      | _blank    | 在新窗口打开             |\n      | _self     | 默认，在相同的框架中打开 |\n      | _parent   | 在父框架集中打开         |\n      | _top      | 在整个窗口中打开         |\n      | framename | 在指定的框架中打开       |\n    * 说明：规定何处打开action URL\n  * method\n    * 属性值：get（默认，通过URL地址来提交，适合少量数据）或post（隐藏提交的数据，适合大量、复杂的数据提交）\n    * 说明：规定以何种方式把表单数据提交到action URL\n  * enctype\n    * 属性值\n      | 值                                | 说明                                                   |\n      | --------------------------------- | ------------------------------------------------------ |\n      | application/x-www-form-urlencoded | 在发送前编码所有字符（默认）                           |\n      | multipart/form-data               | 不对字符编码。在使用包含文件上传的控件的表单，必须使用 |\n      | text/plain                        | 空格转化为“+”加号，但不对特殊字符编码                  |\n    * 说明：规定在发送表单数据之前如何对其编码\n* 表单提交的缺点\n  * 页面会发生跳转\n  * 页面之前的状态和数据会丢失\n  * 解决方案：表单只负责采集数据，Ajax负责将数据提交到服务器\n\n#### 2.4 Ajax提交表单数据\n\n```js\n$('#form1').submit(function(e)){\n  alert('监听到了表单的提交事件');\n  e.preventDefault(); //阻止表单的默认提交行为\n  $(selector).serialize(); //一次性获取表单中的所有数据\n}\n\n$('#form1').on('submit',function(e))){\n  alert('监听到了表单的提交事件');\n  e.preventDefault();//阻止表单的默认提交行为\n  $(selector).serialize(); //一次性获取表单中的所有数据\n}\n```\n\n#### 2.5 模板引擎\n\n>模板引擎现在以及内置于大型框架中了，其中art-template为最快的模板引擎\n\n* art-template使用步骤\n  * 导入art-template\n  * 定义数据\n  * 定义模板\n  * 调用template函数\n  * 渲染HTML结构\n* art-template标准语法\n  * 输出：变量输出、对象属性的输出、三元表达式的输出、逻辑输出、算术输出\n  `{{value}}，{{obj.key}}，{{obj.['key']}}，{{a?b:c}}，{{a||b}}，{{a+b}}`\n  * 原文输出：如果value包括HTML标签结构，需要原文输出才能保证能够被渲染\n  `{{@ value}}`\n  * 条件输出\n  `{{if value}} 按需输出的内容 {{/if}}`\n  `{{if value1}} 按需输出的内容 {{else if value2}} 按需输出的内容{{/if}}`\n  * 循环输出：`{{$index}}`来得到索引，`{{$value}}` 来得到值\n  `{{each arr}} 循环内容 {{/each}}`\n  * 过滤器：把`value`提交给`filterName`函数进行处理，得到一个新值\n  `{{value|filterName}}`\n  `template.defaults.imports.filterName=function(value){ }`\n* 模板引擎原理：利用正则表达式提取数据，再用字符串替换方法替换字符串\n* 正则与字符串操作\n  * 语法：`RegExpObject.exec(string)`函数用来检索字符串中的正则表达式的匹配，如果字符串有匹配的值，则返回该匹配值，否则返回Null\n\n  ```js\n  var str = 'hello'\n  var pattern = /o/\n  console.log(pattern.exec(str))\n  ```\n\n  * `replace()`函数用于一些字符替换另一些字符\n* 实现简易模板引擎\n  * 定义模板结构\n  * 预调用模板引擎\n  * 封装template函数\n  * 导入并使用自定义的模板引擎\n\n#### 2.6 XMLHttpRequest\n\n>XMLHttpRequest是浏览器提供的JavaScript对象，可以请求服务器的数据资源，JQuery的Ajax函数就是基于xhr封装的\n\n```js\n//1. 创建xhr对象\nvar xhr = new XMLHttpRequest();\n//2. 调用open()函数\nxhr.open('GET','url');\n//3. 调用send()函数\nxhr.send();\n//4. 监听onreadystatechange事件\nxhr.onreadystatechange=function(){\n  //监听请求状态与服务器响应状态\n  if(xhr.readyState===4 && xhr.status===200){\n    console.log(xhr.responseText)\n  }\n}\n```\n\n* readyState的请求状态\n\n| 值  | 状态             | 说明                                         |\n| --- | ---------------- | -------------------------------------------- |\n| 0   | unsent           | XMLHttpRequest对象已被创建，但未调用open方法 |\n| 1   | opened           | open方法已经被调用                           |\n| 2   | headers_received | send方法已经被调用                           |\n| 3   | loading          | 数据接收中                                   |\n| 4   | done             | Ajax请求完成                                 |\n\n* URL参数传递需要在地址后面添加?号，多个参数使用&进行分割\n  * 参数不能是其他语言，其他语言需要进行编码\n    `encodeURI()`编码函数\n    `decodeURI()`解码函数\n\n```js\n//1. 创建xhr对象\nvar xhr = new XMLHttpRequest();\n//2. 调用open()函数\nxhr.open('POST','url');\n//3.设置Content-Type属性\nxhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');\n//3. 调用send()函数\nxhr.send('参数1&参数2');\n//4. 监听onreadystatechange事件\nxhr.onreadystatechange=function(){\n  //监听请求状态与服务器响应状态\n  if(xhr.readyState===4 && xhr.status===200){\n    console.log(xhr.responseText)\n  }\n}\n```\n\n#### 2.7 数据交换格式\n\n前后端数据传输的格式，分别为**XML**和**JSON**，其中**XML**用的很少，重点为**JSON**\n\n* XML\n  与html类似，为可扩展标记语言。\n  缺点：\n  * XML格式臃肿，数据无关代码多，传输效率低。\n  * Javascript解析XML比较麻烦。\n* JSON\n  英文名JavaScript Object Notation，即\"JavaScript对象表示方法\"。本质是字符串。\n  * 两种结构\n    * 对象结构\n      格式为花括号包裹的键值对，key必须为英文双引号表示的字符串，value可以是数字、字符串、布尔值、null、数组、对象这六种类型。\n    * 数组结构\n      格式为中括号包裹的数据，数据类型可以是数字、字符串、布尔值、null、数组、对象这六种类型。\n  * JSON转化Javascript对象\n    * 使用`JSON.parse('JSON字符串')`方法\n  * Javascript对象转化JSON\n    * 使用`JSON.stringify(JS对象)`方法\n* 序列化与反序列化\n  * 序列化：把**数据对象**转化为**字符串**的过程\n  * 反序列化：把**字符串**转化为**数据对象**的过程\n\n#### 2.8 自定义Ajax函数\n\n* 定义参数选项\n  * method 请求类型\n  * url          请求的URL地址\n  * data       请求携带的数据\n  * success  请求成功之后的回调函数\n\n```js\nfunction resolveData(data){\n  var arr=[];\n  for(var k in data){\n    arr.push(k+'='+data[k])\n  }\n  return arr.join('&');\n}\n\nfunction template(options){\n  var xhr=new XMLHttpRequest();\n  var qs = resolveData(options.data);\n  if(options.method.toUpperCase()==='GET'){\n    xhr.open('GET',options.url+'?'+qs);\n    xhr.send();\n  }else if(options.method.toUpperCase()==='POST'){\n    xhr.open('POST',options.url);\n    xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');\n    xhr.send(qs);\n  }\n  xhr.onreadystatechange=function(){\n    if(xhr.readyState===4 && xhr.status===200){\n      var result = JSON.parse(xhr.responseText);\n      options.success(result);\n    }\n  }\n}\n```\n\n#### 2.9 XMLHttpRequest Level2新特性\n\n* 旧版缺点：\n  1. 只支持文本传输，无法读取和上传文件\n  2. 接收数据没有进度信息\n\n* 设置HTTP请求时限\n  * `xhr.timeout=3000`\n  * `xhr.ontimeout=function(){}`\n* FormData对象管理表单数据\n\n```js\n //创建Form Data对象\n var fd =new FormData();\n//为FormData添加表单项\n fd.append('uname','ithm');\n//创建xhr对象\n var xhr=new XMLHttpRequest()\n//指定请求与url地址\n xhr.open('POST','url');\n//提交\n xhr.send(fd);\n\n\n //获取表单元素\n var form=document.querySelector('#form1');\n form.addEventListener('submit',function(e){\n  e.preventDefault();\n  var fd=new FormData(form);\n  var xhr=new XMLHttpRequest();\n  xhr.open('POST','url');\n  xhr.send(fd);\n  xhr.onreadystatechange=function(){}\n })\n```\n\n* 上传文件\n  1. 定义UI结构\n  2. 验证是否选择文件\n  3. 向FormData中追加文件\n  4. 使用xhr发起上传文件请求\n  5. 监听onreadystatechange事件\n\n```js\nvar btn = document.querySelector('#btnUpload');\nbtn.addEventListener('click',function(){\n  var files=document.querySelector('#file1').files;\n  if(files.length<=0){\n    return alert('');\n  }\n  var fd=new FormData();\n  fd.append('avatar',files[0]);\n  var xhr=new XMLHttpRequest();\n  xhr.open('POST','url');\n  xhr.send(fd);\n  //文件上传进度\n  xhr.upload.onprogress=function(e){\n    if(e.lengthComputable){\n      var procent=Math.ceil((e.loaded/e.total)*100);\n      console.log(procent);\n    }\n\n  }\n  xhr.onreadystatechange=function(){\n      if(xhr.readyState===4 && xhr.status===200){\n        var data = JSON.parse(xhr.responseText);\n        if(data.status===200){\n          //上传成功\n        }else{\n          //上传失败\n        }\n    }\n  }\n})\n```\n\n#### 2.10 axios\n\n专注于网络数据请求的库，更简单易用。\n\n* 发起GET请求\n  `axios.get('url',{params:{（js对象）参数}}).then(callback)`\n* 发起POST请求\n  `axios.post('url',{（js对象）参数}).then(callback)`\n* 类似`$.ajax()`的函数\n\n```js\naxios({\n  method: '请求类型',\n  url: '请求的URL地址',\n  data: {数据},\n  params: {参数}\n}).then(callback)\n```\n\n#### 2.11 同源策略\n\n同源：如果两个页面的协议、域名和端口都相同，则两个页面具有相同的源。\n同源策略：浏览器规定，A网站的JS，不允许和非同源的网站C之间进行资源交互。\n\n1. 无法读取非同源网页的cookie、LocalStorage和IndexedDB\n2. 无法接触非同源网页的DOM\n3. 无法向非同源地址发送Ajax请求\n\n跨域：非同源就是跨域。\n跨域请求的方案：**JSONP**和**CORS**。\n\n* JSONP，只支持GET请求，不支持POST请求。\n  由于浏览器同源策略的限制，网页无法通过Ajax请求非同源的接口数据，但是`<script>`标签不受限制，可以通过src属性，请求跨域的数据接口，并通过函数调用的形式，接收跨域接口响应回来的数据。\n\n  ```js\n  //自己实现JSONP\n  <script>\n    function success(data){\n      console.log(data);\n    }\n  </script>\n  <script src=\"http://url?callback=success&name=zs\"></script>\n\n  //jQuery的JSONP\n  $.ajax({\n    url: 'http://url?callback=success&name=zs',\n    dataType: 'jsonp',\n    jsonp: 'callback',\n    jsonpCallback: 'success',\n    success: function(data){\n      console.log(data);\n    }\n  })\n  ```\n\n* CORS，不兼容性低端浏览器，支持GET和POST请求。\n\n#### 2.12 防抖和节流\n\n节流策略：减少一段时间内事件的触发频率，防止事件无限制被触发。\n\n```js\nvar timer =null;  //定义节流阀\n\nif(timer){  //判断节流阀是否为空\n  return;\n}\n\ntimer=setTimeout(function(){\n  //处理事件\n  timer=null;  //清空节流阀\n},16)\n```\n\n#### 2.13 HTTP协议加强\n\n通信三要素：\n\n* 通信主体\n* 通信内容\n* 通信方式\n\n网页内容叫做超文本，因此网页内容传输协议又叫做超文本传输协议(**H**yper**T**ext **T**ransfer **P**rotocol)，简称HTTP协议。\n\n**HTTP请求消息**由请求行、请求头部、空行和请求体四个部分组成。\n\n1. 请求行\n\n<style>\n.table li{\n  text-align: center;\n  list-style:none;\n  display: inline-block;\n\n  margin: 0;\n  padding: 10px;\n  border: 2px solid black;\n  border-right:none ;\n}\n.a :first-child{\n  background-color: #2ca9e1;\n}\n.a :nth-child(3){\n background-color: #765c47;\n}\n.a :nth-child(5){\n background-color: #f8b500;\n}\n.a :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table a\">\n  <li>请求方式</li><li>空格</li><li>URL</li><li>空格</li><li>协议版本</li><li>回车符</li><li>换行符</li>\n</ul>\n\n2. 请求头部：多行键值对组成，用来描述客户端的基本信息，从而把客户端相关的信息告知服务器。\n\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n|    头部字段     | 说明                                         |\n| :-------------: | -------------------------------------------- |\n|      Host       | 要请求的服务器域名                           |\n|   Connection    | 客户端与服务器的连接方式（keep 或keepalive） |\n| Content-Length  | 用来描述请求体的大小                         |\n|     Accept      | 客户端可识别的响应内容类型列表               |\n|   User-Agent    | 产生请求的浏览器类型                         |\n|  Content-Type   | 客户端告诉服务器实际发送的数据类型           |\n| Accept-Encoding | 客户端可接收的内容压缩编码形式               |\n| Accept-Language | 用户期望获得的自然语言的优先顺序             |\n\n3. 空行(回车符或者换行符)：分割请求头部与请求体。\n\n4. 请求体：存放要通过**POST方式**提交到服务器的数据（GET没有请求体）。\n\n**HTTP响应消息**由状态行、响应头部、空行和响应体四个部分组成。\n\n1. 状态行\n\n<style>\n.c :first-child{\n  background-color: #2ca9e1;\n}\n.c :nth-child(3){\n background-color: #765c47;\n}\n.c :nth-child(5){\n  background-color: #f8b500;\n}\n.c :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table c\">\n  <li>协议版本</li><li>空格</li><li>状态码</li><li>空格</li><li>状态码描述</li><li>回车符</li><li>换行符</li>\n</ul>\n\n2. 响应头部：多行键值对组成，来描述服务器的基本信息。具体细节查看[MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Response_header)文档。\n\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n3. 空行(回车符或者换行符)：分割响应头部与响应体。\n\n4. 响应体：服务器给客户端的资源。\n\n**HTTP的请求方法**:\n\n| 方法   | 描述                                                                               |\n| ------ | ---------------------------------------------------------------------------------- |\n| GET    | （查询）发送请求来获得服务器上的资源，请求体中不会包含请求数据，请求数据放在协议头 |\n| POST   | （新增）向服务器提交资源，数据被包含在请求体中提交给服务器                         |\n| PUT    | （修改）向服务器提交资源，并使用提交的新资源，替换掉服务器对应的旧资源             |\n| DELETE | （删除）请求服务器删除指定的资源。                                                 |\n\n**HTTP响应状态码**用来标识响应状态。\nHTTP状态码由三个十进制组成，第一个数字反应了状态码的类型。\n| 分类 | 说明                                           |\n| ---- | ---------------------------------------------- |\n| 1**  | 信息，服务器收到请求，需要请求者继续执行操作   |\n| 2**  | 成功，操作被成功接收并处理                     |\n| 3**  | 重定向，需要进一步的操作以完成请求             |\n| 4**  | 客户端错误，请求包含语法错误或无法完成请求     |\n| 5**  | 服务器错误，服务器在处理请求的过程中发生了错误 |\n\n| 状态码 | 状态码描述 | 说明                                                     |\n| ------ | ---------- | -------------------------------------------------------- |\n| 200    | OK         | 请求成功。一般用于GET与POST请求                          |\n| 201    | Created    | 已创建。成功请求并创建了新的资源。 通常用于POST与PUT请求 |\n\n| 状态码 | 状态码描述        | 说明                                                                                          |\n| ------ | ----------------- | --------------------------------------------------------------------------------------------- |\n| 301    | Moved Permanently | 永久移动。请求资源已经被永久的移动到了新的URL，返回信息包括新的URL，浏览器会自动定向到新URL。 |\n| 302    | Found             | 临时移动。资源只是临时被移动。                                                                |\n| 304    | Not Modified      | 未修改。所请求的资源未修改，客户端从缓存访问资源。                                            |\n\n| 状态码 | 状态码描述      | 说明                                           |\n| ------ | --------------- | ---------------------------------------------- |\n| 400    | Bad Request     | 语义有误，服务器无法理解。请求参数有误。       |\n| 401    | Unauthorized    | 当前请求需要用户验证。                         |\n| 403    | Forbidden       | 服务器已经理解请求，但是拒绝执行。             |\n| 404    | Not Found       | 服务器无法根据客户端的请求找到资源。           |\n| 408    | Request Timeout | 请求超时。服务器等待客户端发送的请求时间过长。 |\n\n| 状态码 | 状态码描述            | 说明                                               |\n| ------ | --------------------- | -------------------------------------------------- |\n| 500    | Internal Server Error | 服务器内部错误，无法完成请求。                     |\n| 501    | Not Implemented       | 服务器不支持该请求方式，无法完成请求。             |\n| 503    | Service Unavailable   | 由于超载或系统维护，服务器暂时无法处理客户端的请求 |\n","slug":"计算机/前端/AJAX快速入门","published":1,"updated":"2022-05-17T16:24:55.114Z","layout":"post","photos":[],"_id":"cm1z7gipj000idwvxhtcf5ew7","content":"<h1 id=\"AJAX快速入门\"><a href=\"#AJAX快速入门\" class=\"headerlink\" title=\"AJAX快速入门\"></a>AJAX快速入门</h1><h2 id=\"一、Ajax入门\"><a href=\"#一、Ajax入门\" class=\"headerlink\" title=\"一、Ajax入门\"></a>一、Ajax入门</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>本笔记参考视频：<a href=\"https://www.bilibili.com/video/BV1zs411h74a\">https://www.bilibili.com/video/BV1zs411h74a</a></p>\n<p>客户端请求数据：</p>\n<ol>\n<li>向服务器请求数据资源</li>\n<li>服务器处理这次数据请求</li>\n<li>把数据响应给客户端</li>\n</ol>\n<p>在网页请求服务器的数据资源，需要用到<code>XMLHttpRequest</code>对象</p>\n<p>资源请求方式：</p>\n<ul>\n<li>get请求，常用于获取服务端资源</li>\n<li>post请求，常用于向服务器提交数据</li>\n</ul>\n<p>网页中利用<code>XMLHttpRequest</code>对象和服务器进行数据交互的方式，称为Ajax。</p>\n<h3 id=\"2-前后端通信\"><a href=\"#2-前后端通信\" class=\"headerlink\" title=\"2.前后端通信\"></a>2.前后端通信</h3><h4 id=\"2-1jQuery中的Ajax\"><a href=\"#2-1jQuery中的Ajax\" class=\"headerlink\" title=\"2.1jQuery中的Ajax\"></a>2.1jQuery中的Ajax</h4><p>浏览器中提供的<code>XMLHttpRequest</code>用法比较复杂，jQuery对<code>XMLHttpRequest</code>进行了封装，提供了一系列Ajax相关的函数，大大的降低了Ajax的使用难度。</p>\n<blockquote>\n<p>jQuery是类似vue和react的框架，现在用的很少</p>\n</blockquote>\n<p>jQuery中发起Ajax请求的常用三个方法：</p>\n<ul>\n<li>$.get()<br>功能单一，专门发起get请求。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">get</span>(url,[data],[callback])</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>参数类型</th>\n<th>是否必选</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>要请求的资源地址</td>\n</tr>\n<tr>\n<td>data</td>\n<td>object</td>\n<td>否</td>\n<td>请求资源期间要携带的参数</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>function</td>\n<td>否</td>\n<td>请求成功时的回调函数</td>\n</tr>\n</tbody></table>\n<ul>\n<li>$.post()<br>功能单一，专门发起post请求。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">post</span>(url,[data],[callback])</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>参数类型</th>\n<th>是否必选</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>提交数据的地址</td>\n</tr>\n<tr>\n<td>data</td>\n<td>object</td>\n<td>否</td>\n<td>要提交的数据</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>function</td>\n<td>否</td>\n<td>数据提交成功时的回调函数</td>\n</tr>\n</tbody></table>\n<ul>\n<li>$.ajax()<br>功能综合，可以发送GET或者POST请求</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#x27;</span>,  <span class=\"comment\">//请求方式，GET 或者 POST</span></span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#x27;</span>,   <span class=\"comment\">//请求的URL地址</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123; &#125;,  <span class=\"comment\">//这次请求携带的数据</span></span><br><span class=\"line\">  <span class=\"attr\">success</span>: <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;&#125; <span class=\"comment\">//请求成功后的回调函数</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-接口\"><a href=\"#2-2-接口\" class=\"headerlink\" title=\"2.2 接口\"></a>2.2 接口</h4><ul>\n<li>使用Ajax请求数据时，被请求的URL地址，就叫做数据接口。同时，每个接口必须有请求方式。</li>\n<li>接口测试工具Postman</li>\n<li>接口文档书写规范<ol>\n<li>接口名称：用来标识各个接口的简单说明</li>\n<li>接口URL：接口调用地址</li>\n<li>调用方式：接口调用方式</li>\n<li>参数格式：接口需要传递的参数，包括参数名词、参数类型、是否必选、参数说明这四项内容。</li>\n<li>响应格式：接口的返回值的详细描述，一般包括数据名称、数据类型、说明这三项内容。</li>\n<li>返回示例（可选）：通过对象的形式，返回数据的结构。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"2-3-from表单\"><a href=\"#2-3-from表单\" class=\"headerlink\" title=\"2.3 from表单\"></a>2.3 from表单</h4><ul>\n<li>作用：在网页中主要负责数据采集功能。</li>\n<li>组成部分：<ol>\n<li>表单标签</li>\n<li>表单域：文本框、密码框等。</li>\n<li>表单按钮。</li>\n</ol>\n</li>\n<li>属性：<ul>\n<li>action<ul>\n<li>属性值：URL地址（默认值为当前页面的URL地址）</li>\n<li>说明：规定当提交表单时，向何处发送数据</li>\n</ul>\n</li>\n<li>target<ul>\n<li><p>属性值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>_blank</td>\n<td>在新窗口打开</td>\n</tr>\n<tr>\n<td>_self</td>\n<td>默认，在相同的框架中打开</td>\n</tr>\n<tr>\n<td>_parent</td>\n<td>在父框架集中打开</td>\n</tr>\n<tr>\n<td>_top</td>\n<td>在整个窗口中打开</td>\n</tr>\n<tr>\n<td>framename</td>\n<td>在指定的框架中打开</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>说明：规定何处打开action URL</p>\n</li>\n</ul>\n</li>\n<li>method<ul>\n<li>属性值：get（默认，通过URL地址来提交，适合少量数据）或post（隐藏提交的数据，适合大量、复杂的数据提交）</li>\n<li>说明：规定以何种方式把表单数据提交到action URL</li>\n</ul>\n</li>\n<li>enctype<ul>\n<li>属性值<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>application&#x2F;x-www-form-urlencoded</td>\n<td>在发送前编码所有字符（默认）</td>\n</tr>\n<tr>\n<td>multipart&#x2F;form-data</td>\n<td>不对字符编码。在使用包含文件上传的控件的表单，必须使用</td>\n</tr>\n<tr>\n<td>text&#x2F;plain</td>\n<td>空格转化为“+”加号，但不对特殊字符编码</td>\n</tr>\n</tbody></table>\n</li>\n<li>说明：规定在发送表单数据之前如何对其编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>表单提交的缺点<ul>\n<li>页面会发生跳转</li>\n<li>页面之前的状态和数据会丢失</li>\n<li>解决方案：表单只负责采集数据，Ajax负责将数据提交到服务器</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-4-Ajax提交表单数据\"><a href=\"#2-4-Ajax提交表单数据\" class=\"headerlink\" title=\"2.4 Ajax提交表单数据\"></a>2.4 Ajax提交表单数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&#x27;#form1&#x27;</span>).<span class=\"title function_\">submit</span>(<span class=\"params\"><span class=\"keyword\">function</span>(e)</span>)&#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;监听到了表单的提交事件&#x27;</span>);</span><br><span class=\"line\">  e.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">//阻止表单的默认提交行为</span></span><br><span class=\"line\">  $(selector).<span class=\"title function_\">serialize</span>(); <span class=\"comment\">//一次性获取表单中的所有数据</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&#x27;#form1&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;submit&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)))&#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;监听到了表单的提交事件&#x27;</span>);</span><br><span class=\"line\">  e.<span class=\"title function_\">preventDefault</span>();<span class=\"comment\">//阻止表单的默认提交行为</span></span><br><span class=\"line\">  $(selector).<span class=\"title function_\">serialize</span>(); <span class=\"comment\">//一次性获取表单中的所有数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-模板引擎\"><a href=\"#2-5-模板引擎\" class=\"headerlink\" title=\"2.5 模板引擎\"></a>2.5 模板引擎</h4><blockquote>\n<p>模板引擎现在以及内置于大型框架中了，其中art-template为最快的模板引擎</p>\n</blockquote>\n<ul>\n<li><p>art-template使用步骤</p>\n<ul>\n<li>导入art-template</li>\n<li>定义数据</li>\n<li>定义模板</li>\n<li>调用template函数</li>\n<li>渲染HTML结构</li>\n</ul>\n</li>\n<li><p>art-template标准语法</p>\n<ul>\n<li>输出：变量输出、对象属性的输出、三元表达式的输出、逻辑输出、算术输出<br><code>&#123;&#123;value&#125;&#125;，&#123;&#123;obj.key&#125;&#125;，&#123;&#123;obj.['key']&#125;&#125;，&#123;&#123;a?b:c&#125;&#125;，&#123;&#123;a||b&#125;&#125;，&#123;&#123;a+b&#125;&#125;</code></li>\n<li>原文输出：如果value包括HTML标签结构，需要原文输出才能保证能够被渲染<br><code>&#123;&#123;@ value&#125;&#125;</code></li>\n<li>条件输出<br><code>&#123;&#123;if value&#125;&#125; 按需输出的内容 &#123;&#123;/if&#125;&#125;</code><br><code>&#123;&#123;if value1&#125;&#125; 按需输出的内容 &#123;&#123;else if value2&#125;&#125; 按需输出的内容&#123;&#123;/if&#125;&#125;</code></li>\n<li>循环输出：<code>&#123;&#123;$index&#125;&#125;</code>来得到索引，<code>&#123;&#123;$value&#125;&#125;</code> 来得到值<br><code>&#123;&#123;each arr&#125;&#125; 循环内容 &#123;&#123;/each&#125;&#125;</code></li>\n<li>过滤器：把<code>value</code>提交给<code>filterName</code>函数进行处理，得到一个新值<br><code>&#123;&#123;value|filterName&#125;&#125;</code><br><code>template.defaults.imports.filterName=function(value)&#123; &#125;</code></li>\n</ul>\n</li>\n<li><p>模板引擎原理：利用正则表达式提取数据，再用字符串替换方法替换字符串</p>\n</li>\n<li><p>正则与字符串操作</p>\n<ul>\n<li>语法：<code>RegExpObject.exec(string)</code>函数用来检索字符串中的正则表达式的匹配，如果字符串有匹配的值，则返回该匹配值，否则返回Null</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pattern = <span class=\"regexp\">/o/</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(pattern.<span class=\"title function_\">exec</span>(str))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>replace()</code>函数用于一些字符替换另一些字符</li>\n</ul>\n</li>\n<li><p>实现简易模板引擎</p>\n<ul>\n<li>定义模板结构</li>\n<li>预调用模板引擎</li>\n<li>封装template函数</li>\n<li>导入并使用自定义的模板引擎</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-6-XMLHttpRequest\"><a href=\"#2-6-XMLHttpRequest\" class=\"headerlink\" title=\"2.6 XMLHttpRequest\"></a>2.6 XMLHttpRequest</h4><blockquote>\n<p>XMLHttpRequest是浏览器提供的JavaScript对象，可以请求服务器的数据资源，JQuery的Ajax函数就是基于xhr封装的</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 创建xhr对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\"><span class=\"comment\">//2. 调用open()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;GET&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//3. 调用send()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">send</span>();</span><br><span class=\"line\"><span class=\"comment\">//4. 监听onreadystatechange事件</span></span><br><span class=\"line\">xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//监听请求状态与服务器响应状态</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhr.<span class=\"property\">responseText</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>readyState的请求状态</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>状态</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>unsent</td>\n<td>XMLHttpRequest对象已被创建，但未调用open方法</td>\n</tr>\n<tr>\n<td>1</td>\n<td>opened</td>\n<td>open方法已经被调用</td>\n</tr>\n<tr>\n<td>2</td>\n<td>headers_received</td>\n<td>send方法已经被调用</td>\n</tr>\n<tr>\n<td>3</td>\n<td>loading</td>\n<td>数据接收中</td>\n</tr>\n<tr>\n<td>4</td>\n<td>done</td>\n<td>Ajax请求完成</td>\n</tr>\n</tbody></table>\n<ul>\n<li>URL参数传递需要在地址后面添加?号，多个参数使用&amp;进行分割<ul>\n<li>参数不能是其他语言，其他语言需要进行编码<br><code>encodeURI()</code>编码函数<br><code>decodeURI()</code>解码函数</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 创建xhr对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\"><span class=\"comment\">//2. 调用open()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//3.设置Content-Type属性</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">setRequestHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//3. 调用send()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;参数1&amp;参数2&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//4. 监听onreadystatechange事件</span></span><br><span class=\"line\">xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//监听请求状态与服务器响应状态</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhr.<span class=\"property\">responseText</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-数据交换格式\"><a href=\"#2-7-数据交换格式\" class=\"headerlink\" title=\"2.7 数据交换格式\"></a>2.7 数据交换格式</h4><p>前后端数据传输的格式，分别为<strong>XML</strong>和<strong>JSON</strong>，其中<strong>XML</strong>用的很少，重点为<strong>JSON</strong></p>\n<ul>\n<li>XML<br>与html类似，为可扩展标记语言。<br>缺点：<ul>\n<li>XML格式臃肿，数据无关代码多，传输效率低。</li>\n<li>Javascript解析XML比较麻烦。</li>\n</ul>\n</li>\n<li>JSON<br>英文名JavaScript Object Notation，即”JavaScript对象表示方法”。本质是字符串。<ul>\n<li>两种结构<ul>\n<li>对象结构<br>格式为花括号包裹的键值对，key必须为英文双引号表示的字符串，value可以是数字、字符串、布尔值、null、数组、对象这六种类型。</li>\n<li>数组结构<br>格式为中括号包裹的数据，数据类型可以是数字、字符串、布尔值、null、数组、对象这六种类型。</li>\n</ul>\n</li>\n<li>JSON转化Javascript对象<ul>\n<li>使用<code>JSON.parse(&#39;JSON字符串&#39;)</code>方法</li>\n</ul>\n</li>\n<li>Javascript对象转化JSON<ul>\n<li>使用<code>JSON.stringify(JS对象)</code>方法</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>序列化与反序列化<ul>\n<li>序列化：把<strong>数据对象</strong>转化为<strong>字符串</strong>的过程</li>\n<li>反序列化：把<strong>字符串</strong>转化为<strong>数据对象</strong>的过程</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-8-自定义Ajax函数\"><a href=\"#2-8-自定义Ajax函数\" class=\"headerlink\" title=\"2.8 自定义Ajax函数\"></a>2.8 自定义Ajax函数</h4><ul>\n<li>定义参数选项<ul>\n<li>method 请求类型</li>\n<li>url          请求的URL地址</li>\n<li>data       请求携带的数据</li>\n<li>success  请求成功之后的回调函数</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">resolveData</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr=[];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> data)&#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(k+<span class=\"string\">&#x27;=&#x27;</span>+data[k])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&amp;&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">template</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> qs = <span class=\"title function_\">resolveData</span>(options.<span class=\"property\">data</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(options.<span class=\"property\">method</span>.<span class=\"title function_\">toUpperCase</span>()===<span class=\"string\">&#x27;GET&#x27;</span>)&#123;</span><br><span class=\"line\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;GET&#x27;</span>,options.<span class=\"property\">url</span>+<span class=\"string\">&#x27;?&#x27;</span>+qs);</span><br><span class=\"line\">    xhr.<span class=\"title function_\">send</span>();</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(options.<span class=\"property\">method</span>.<span class=\"title function_\">toUpperCase</span>()===<span class=\"string\">&#x27;POST&#x27;</span>)&#123;</span><br><span class=\"line\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,options.<span class=\"property\">url</span>);</span><br><span class=\"line\">    xhr.<span class=\"title function_\">setRequestHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class=\"line\">    xhr.<span class=\"title function_\">send</span>(qs);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> result = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>);</span><br><span class=\"line\">      options.<span class=\"title function_\">success</span>(result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-9-XMLHttpRequest-Level2新特性\"><a href=\"#2-9-XMLHttpRequest-Level2新特性\" class=\"headerlink\" title=\"2.9 XMLHttpRequest Level2新特性\"></a>2.9 XMLHttpRequest Level2新特性</h4><ul>\n<li><p>旧版缺点：</p>\n<ol>\n<li>只支持文本传输，无法读取和上传文件</li>\n<li>接收数据没有进度信息</li>\n</ol>\n</li>\n<li><p>设置HTTP请求时限</p>\n<ul>\n<li><code>xhr.timeout=3000</code></li>\n<li><code>xhr.ontimeout=function()&#123;&#125;</code></li>\n</ul>\n</li>\n<li><p>FormData对象管理表单数据</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//创建Form Data对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> fd =<span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span><br><span class=\"line\"><span class=\"comment\">//为FormData添加表单项</span></span><br><span class=\"line\"> fd.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;uname&#x27;</span>,<span class=\"string\">&#x27;ithm&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//创建xhr对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>()</span><br><span class=\"line\"><span class=\"comment\">//指定请求与url地址</span></span><br><span class=\"line\"> xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//提交</span></span><br><span class=\"line\"> xhr.<span class=\"title function_\">send</span>(fd);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//获取表单元素</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> form=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#form1&#x27;</span>);</span><br><span class=\"line\"> form.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;submit&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">  e.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd=<span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>(form);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">  xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\">  xhr.<span class=\"title function_\">send</span>(fd);</span><br><span class=\"line\">  xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>上传文件<ol>\n<li>定义UI结构</li>\n<li>验证是否选择文件</li>\n<li>向FormData中追加文件</li>\n<li>使用xhr发起上传文件请求</li>\n<li>监听onreadystatechange事件</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#btnUpload&#x27;</span>);</span><br><span class=\"line\">btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> files=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#file1&#x27;</span>).<span class=\"property\">files</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(files.<span class=\"property\">length</span>&lt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd=<span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span><br><span class=\"line\">  fd.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;avatar&#x27;</span>,files[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">  xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\">  xhr.<span class=\"title function_\">send</span>(fd);</span><br><span class=\"line\">  <span class=\"comment\">//文件上传进度</span></span><br><span class=\"line\">  xhr.<span class=\"property\">upload</span>.<span class=\"property\">onprogress</span>=<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(e.<span class=\"property\">lengthComputable</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> procent=<span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>((e.<span class=\"property\">loaded</span>/e.<span class=\"property\">total</span>)*<span class=\"number\">100</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(procent);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(data.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">          <span class=\"comment\">//上传成功</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          <span class=\"comment\">//上传失败</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-10-axios\"><a href=\"#2-10-axios\" class=\"headerlink\" title=\"2.10 axios\"></a>2.10 axios</h4><p>专注于网络数据请求的库，更简单易用。</p>\n<ul>\n<li>发起GET请求<br><code>axios.get(&#39;url&#39;,&#123;params:&#123;（js对象）参数&#125;&#125;).then(callback)</code></li>\n<li>发起POST请求<br><code>axios.post(&#39;url&#39;,&#123;（js对象）参数&#125;).then(callback)</code></li>\n<li>类似<code>$.ajax()</code>的函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">method</span>: <span class=\"string\">&#x27;请求类型&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;请求的URL地址&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;数据&#125;,</span><br><span class=\"line\">  <span class=\"attr\">params</span>: &#123;参数&#125;</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(callback)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-11-同源策略\"><a href=\"#2-11-同源策略\" class=\"headerlink\" title=\"2.11 同源策略\"></a>2.11 同源策略</h4><p>同源：如果两个页面的协议、域名和端口都相同，则两个页面具有相同的源。<br>同源策略：浏览器规定，A网站的JS，不允许和非同源的网站C之间进行资源交互。</p>\n<ol>\n<li>无法读取非同源网页的cookie、LocalStorage和IndexedDB</li>\n<li>无法接触非同源网页的DOM</li>\n<li>无法向非同源地址发送Ajax请求</li>\n</ol>\n<p>跨域：非同源就是跨域。<br>跨域请求的方案：<strong>JSONP</strong>和<strong>CORS</strong>。</p>\n<ul>\n<li><p>JSONP，只支持GET请求，不支持POST请求。<br>由于浏览器同源策略的限制，网页无法通过Ajax请求非同源的接口数据，但是<code>&lt;script&gt;</code>标签不受限制，可以通过src属性，请求跨域的数据接口，并通过函数调用的形式，接收跨域接口响应回来的数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//自己实现JSONP</span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">success</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://url?callback=success&amp;name=zs&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//jQuery的JSONP</span></span><br><span class=\"line\">$.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://url?callback=success&amp;name=zs&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">dataType</span>: <span class=\"string\">&#x27;jsonp&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">jsonp</span>: <span class=\"string\">&#x27;callback&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">jsonpCallback</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">success</span>: <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>CORS，不兼容性低端浏览器，支持GET和POST请求。</p>\n</li>\n</ul>\n<h4 id=\"2-12-防抖和节流\"><a href=\"#2-12-防抖和节流\" class=\"headerlink\" title=\"2.12 防抖和节流\"></a>2.12 防抖和节流</h4><p>节流策略：减少一段时间内事件的触发频率，防止事件无限制被触发。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> timer =<span class=\"literal\">null</span>;  <span class=\"comment\">//定义节流阀</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(timer)&#123;  <span class=\"comment\">//判断节流阀是否为空</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">timer=<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//处理事件</span></span><br><span class=\"line\">  timer=<span class=\"literal\">null</span>;  <span class=\"comment\">//清空节流阀</span></span><br><span class=\"line\">&#125;,<span class=\"number\">16</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-13-HTTP协议加强\"><a href=\"#2-13-HTTP协议加强\" class=\"headerlink\" title=\"2.13 HTTP协议加强\"></a>2.13 HTTP协议加强</h4><p>通信三要素：</p>\n<ul>\n<li>通信主体</li>\n<li>通信内容</li>\n<li>通信方式</li>\n</ul>\n<p>网页内容叫做超文本，因此网页内容传输协议又叫做超文本传输协议(<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol)，简称HTTP协议。</p>\n<p><strong>HTTP请求消息</strong>由请求行、请求头部、空行和请求体四个部分组成。</p>\n<ol>\n<li>请求行</li>\n</ol>\n<style>\n.table li{\n  text-align: center;\n  list-style:none;\n  display: inline-block;\n\n  margin: 0;\n  padding: 10px;\n  border: 2px solid black;\n  border-right:none ;\n}\n.a :first-child{\n  background-color: #2ca9e1;\n}\n.a :nth-child(3){\n background-color: #765c47;\n}\n.a :nth-child(5){\n background-color: #f8b500;\n}\n.a :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table a\">\n  <li>请求方式</li><li>空格</li><li>URL</li><li>空格</li><li>协议版本</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<ol start=\"2\">\n<li>请求头部：多行键值对组成，用来描述客户端的基本信息，从而把客户端相关的信息告知服务器。</li>\n</ol>\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">头部字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Host</td>\n<td>要请求的服务器域名</td>\n</tr>\n<tr>\n<td align=\"center\">Connection</td>\n<td>客户端与服务器的连接方式（keep 或keepalive）</td>\n</tr>\n<tr>\n<td align=\"center\">Content-Length</td>\n<td>用来描述请求体的大小</td>\n</tr>\n<tr>\n<td align=\"center\">Accept</td>\n<td>客户端可识别的响应内容类型列表</td>\n</tr>\n<tr>\n<td align=\"center\">User-Agent</td>\n<td>产生请求的浏览器类型</td>\n</tr>\n<tr>\n<td align=\"center\">Content-Type</td>\n<td>客户端告诉服务器实际发送的数据类型</td>\n</tr>\n<tr>\n<td align=\"center\">Accept-Encoding</td>\n<td>客户端可接收的内容压缩编码形式</td>\n</tr>\n<tr>\n<td align=\"center\">Accept-Language</td>\n<td>用户期望获得的自然语言的优先顺序</td>\n</tr>\n</tbody></table>\n<ol start=\"3\">\n<li><p>空行(回车符或者换行符)：分割请求头部与请求体。</p>\n</li>\n<li><p>请求体：存放要通过<strong>POST方式</strong>提交到服务器的数据（GET没有请求体）。</p>\n</li>\n</ol>\n<p><strong>HTTP响应消息</strong>由状态行、响应头部、空行和响应体四个部分组成。</p>\n<ol>\n<li>状态行</li>\n</ol>\n<style>\n.c :first-child{\n  background-color: #2ca9e1;\n}\n.c :nth-child(3){\n background-color: #765c47;\n}\n.c :nth-child(5){\n  background-color: #f8b500;\n}\n.c :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table c\">\n  <li>协议版本</li><li>空格</li><li>状态码</li><li>空格</li><li>状态码描述</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<ol start=\"2\">\n<li>响应头部：多行键值对组成，来描述服务器的基本信息。具体细节查看<a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Response_header\">MDN</a>文档。</li>\n</ol>\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<ol start=\"3\">\n<li><p>空行(回车符或者换行符)：分割响应头部与响应体。</p>\n</li>\n<li><p>响应体：服务器给客户端的资源。</p>\n</li>\n</ol>\n<p><strong>HTTP的请求方法</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>GET</td>\n<td>（查询）发送请求来获得服务器上的资源，请求体中不会包含请求数据，请求数据放在协议头</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>（新增）向服务器提交资源，数据被包含在请求体中提交给服务器</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>（修改）向服务器提交资源，并使用提交的新资源，替换掉服务器对应的旧资源</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>（删除）请求服务器删除指定的资源。</td>\n</tr>\n</tbody></table>\n<p><strong>HTTP响应状态码</strong>用来标识响应状态。<br>HTTP状态码由三个十进制组成，第一个数字反应了状态码的类型。</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1**</td>\n<td>信息，服务器收到请求，需要请求者继续执行操作</td>\n</tr>\n<tr>\n<td>2**</td>\n<td>成功，操作被成功接收并处理</td>\n</tr>\n<tr>\n<td>3**</td>\n<td>重定向，需要进一步的操作以完成请求</td>\n</tr>\n<tr>\n<td>4**</td>\n<td>客户端错误，请求包含语法错误或无法完成请求</td>\n</tr>\n<tr>\n<td>5**</td>\n<td>服务器错误，服务器在处理请求的过程中发生了错误</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>200</td>\n<td>OK</td>\n<td>请求成功。一般用于GET与POST请求</td>\n</tr>\n<tr>\n<td>201</td>\n<td>Created</td>\n<td>已创建。成功请求并创建了新的资源。 通常用于POST与PUT请求</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>301</td>\n<td>Moved Permanently</td>\n<td>永久移动。请求资源已经被永久的移动到了新的URL，返回信息包括新的URL，浏览器会自动定向到新URL。</td>\n</tr>\n<tr>\n<td>302</td>\n<td>Found</td>\n<td>临时移动。资源只是临时被移动。</td>\n</tr>\n<tr>\n<td>304</td>\n<td>Not Modified</td>\n<td>未修改。所请求的资源未修改，客户端从缓存访问资源。</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>400</td>\n<td>Bad Request</td>\n<td>语义有误，服务器无法理解。请求参数有误。</td>\n</tr>\n<tr>\n<td>401</td>\n<td>Unauthorized</td>\n<td>当前请求需要用户验证。</td>\n</tr>\n<tr>\n<td>403</td>\n<td>Forbidden</td>\n<td>服务器已经理解请求，但是拒绝执行。</td>\n</tr>\n<tr>\n<td>404</td>\n<td>Not Found</td>\n<td>服务器无法根据客户端的请求找到资源。</td>\n</tr>\n<tr>\n<td>408</td>\n<td>Request Timeout</td>\n<td>请求超时。服务器等待客户端发送的请求时间过长。</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>500</td>\n<td>Internal Server Error</td>\n<td>服务器内部错误，无法完成请求。</td>\n</tr>\n<tr>\n<td>501</td>\n<td>Not Implemented</td>\n<td>服务器不支持该请求方式，无法完成请求。</td>\n</tr>\n<tr>\n<td>503</td>\n<td>Service Unavailable</td>\n<td>由于超载或系统维护，服务器暂时无法处理客户端的请求</td>\n</tr>\n</tbody></table>\n","more":"<h1 id=\"AJAX快速入门\"><a href=\"#AJAX快速入门\" class=\"headerlink\" title=\"AJAX快速入门\"></a>AJAX快速入门</h1><h2 id=\"一、Ajax入门\"><a href=\"#一、Ajax入门\" class=\"headerlink\" title=\"一、Ajax入门\"></a>一、Ajax入门</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>本笔记参考视频：<a href=\"https://www.bilibili.com/video/BV1zs411h74a\">https://www.bilibili.com/video/BV1zs411h74a</a></p>\n<p>客户端请求数据：</p>\n<ol>\n<li>向服务器请求数据资源</li>\n<li>服务器处理这次数据请求</li>\n<li>把数据响应给客户端</li>\n</ol>\n<p>在网页请求服务器的数据资源，需要用到<code>XMLHttpRequest</code>对象</p>\n<p>资源请求方式：</p>\n<ul>\n<li>get请求，常用于获取服务端资源</li>\n<li>post请求，常用于向服务器提交数据</li>\n</ul>\n<p>网页中利用<code>XMLHttpRequest</code>对象和服务器进行数据交互的方式，称为Ajax。</p>\n<h3 id=\"2-前后端通信\"><a href=\"#2-前后端通信\" class=\"headerlink\" title=\"2.前后端通信\"></a>2.前后端通信</h3><h4 id=\"2-1jQuery中的Ajax\"><a href=\"#2-1jQuery中的Ajax\" class=\"headerlink\" title=\"2.1jQuery中的Ajax\"></a>2.1jQuery中的Ajax</h4><p>浏览器中提供的<code>XMLHttpRequest</code>用法比较复杂，jQuery对<code>XMLHttpRequest</code>进行了封装，提供了一系列Ajax相关的函数，大大的降低了Ajax的使用难度。</p>\n<blockquote>\n<p>jQuery是类似vue和react的框架，现在用的很少</p>\n</blockquote>\n<p>jQuery中发起Ajax请求的常用三个方法：</p>\n<ul>\n<li>$.get()<br>功能单一，专门发起get请求。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">get</span>(url,[data],[callback])</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>参数类型</th>\n<th>是否必选</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>要请求的资源地址</td>\n</tr>\n<tr>\n<td>data</td>\n<td>object</td>\n<td>否</td>\n<td>请求资源期间要携带的参数</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>function</td>\n<td>否</td>\n<td>请求成功时的回调函数</td>\n</tr>\n</tbody></table>\n<ul>\n<li>$.post()<br>功能单一，专门发起post请求。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">post</span>(url,[data],[callback])</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>参数类型</th>\n<th>是否必选</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>提交数据的地址</td>\n</tr>\n<tr>\n<td>data</td>\n<td>object</td>\n<td>否</td>\n<td>要提交的数据</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>function</td>\n<td>否</td>\n<td>数据提交成功时的回调函数</td>\n</tr>\n</tbody></table>\n<ul>\n<li>$.ajax()<br>功能综合，可以发送GET或者POST请求</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#x27;</span>,  <span class=\"comment\">//请求方式，GET 或者 POST</span></span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#x27;</span>,   <span class=\"comment\">//请求的URL地址</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123; &#125;,  <span class=\"comment\">//这次请求携带的数据</span></span><br><span class=\"line\">  <span class=\"attr\">success</span>: <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;&#125; <span class=\"comment\">//请求成功后的回调函数</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-接口\"><a href=\"#2-2-接口\" class=\"headerlink\" title=\"2.2 接口\"></a>2.2 接口</h4><ul>\n<li>使用Ajax请求数据时，被请求的URL地址，就叫做数据接口。同时，每个接口必须有请求方式。</li>\n<li>接口测试工具Postman</li>\n<li>接口文档书写规范<ol>\n<li>接口名称：用来标识各个接口的简单说明</li>\n<li>接口URL：接口调用地址</li>\n<li>调用方式：接口调用方式</li>\n<li>参数格式：接口需要传递的参数，包括参数名词、参数类型、是否必选、参数说明这四项内容。</li>\n<li>响应格式：接口的返回值的详细描述，一般包括数据名称、数据类型、说明这三项内容。</li>\n<li>返回示例（可选）：通过对象的形式，返回数据的结构。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"2-3-from表单\"><a href=\"#2-3-from表单\" class=\"headerlink\" title=\"2.3 from表单\"></a>2.3 from表单</h4><ul>\n<li>作用：在网页中主要负责数据采集功能。</li>\n<li>组成部分：<ol>\n<li>表单标签</li>\n<li>表单域：文本框、密码框等。</li>\n<li>表单按钮。</li>\n</ol>\n</li>\n<li>属性：<ul>\n<li>action<ul>\n<li>属性值：URL地址（默认值为当前页面的URL地址）</li>\n<li>说明：规定当提交表单时，向何处发送数据</li>\n</ul>\n</li>\n<li>target<ul>\n<li><p>属性值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>_blank</td>\n<td>在新窗口打开</td>\n</tr>\n<tr>\n<td>_self</td>\n<td>默认，在相同的框架中打开</td>\n</tr>\n<tr>\n<td>_parent</td>\n<td>在父框架集中打开</td>\n</tr>\n<tr>\n<td>_top</td>\n<td>在整个窗口中打开</td>\n</tr>\n<tr>\n<td>framename</td>\n<td>在指定的框架中打开</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>说明：规定何处打开action URL</p>\n</li>\n</ul>\n</li>\n<li>method<ul>\n<li>属性值：get（默认，通过URL地址来提交，适合少量数据）或post（隐藏提交的数据，适合大量、复杂的数据提交）</li>\n<li>说明：规定以何种方式把表单数据提交到action URL</li>\n</ul>\n</li>\n<li>enctype<ul>\n<li>属性值<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>application&#x2F;x-www-form-urlencoded</td>\n<td>在发送前编码所有字符（默认）</td>\n</tr>\n<tr>\n<td>multipart&#x2F;form-data</td>\n<td>不对字符编码。在使用包含文件上传的控件的表单，必须使用</td>\n</tr>\n<tr>\n<td>text&#x2F;plain</td>\n<td>空格转化为“+”加号，但不对特殊字符编码</td>\n</tr>\n</tbody></table>\n</li>\n<li>说明：规定在发送表单数据之前如何对其编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>表单提交的缺点<ul>\n<li>页面会发生跳转</li>\n<li>页面之前的状态和数据会丢失</li>\n<li>解决方案：表单只负责采集数据，Ajax负责将数据提交到服务器</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-4-Ajax提交表单数据\"><a href=\"#2-4-Ajax提交表单数据\" class=\"headerlink\" title=\"2.4 Ajax提交表单数据\"></a>2.4 Ajax提交表单数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&#x27;#form1&#x27;</span>).<span class=\"title function_\">submit</span>(<span class=\"params\"><span class=\"keyword\">function</span>(e)</span>)&#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;监听到了表单的提交事件&#x27;</span>);</span><br><span class=\"line\">  e.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">//阻止表单的默认提交行为</span></span><br><span class=\"line\">  $(selector).<span class=\"title function_\">serialize</span>(); <span class=\"comment\">//一次性获取表单中的所有数据</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&#x27;#form1&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;submit&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)))&#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;监听到了表单的提交事件&#x27;</span>);</span><br><span class=\"line\">  e.<span class=\"title function_\">preventDefault</span>();<span class=\"comment\">//阻止表单的默认提交行为</span></span><br><span class=\"line\">  $(selector).<span class=\"title function_\">serialize</span>(); <span class=\"comment\">//一次性获取表单中的所有数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-模板引擎\"><a href=\"#2-5-模板引擎\" class=\"headerlink\" title=\"2.5 模板引擎\"></a>2.5 模板引擎</h4><blockquote>\n<p>模板引擎现在以及内置于大型框架中了，其中art-template为最快的模板引擎</p>\n</blockquote>\n<ul>\n<li><p>art-template使用步骤</p>\n<ul>\n<li>导入art-template</li>\n<li>定义数据</li>\n<li>定义模板</li>\n<li>调用template函数</li>\n<li>渲染HTML结构</li>\n</ul>\n</li>\n<li><p>art-template标准语法</p>\n<ul>\n<li>输出：变量输出、对象属性的输出、三元表达式的输出、逻辑输出、算术输出<br><code>&#123;&#123;value&#125;&#125;，&#123;&#123;obj.key&#125;&#125;，&#123;&#123;obj.['key']&#125;&#125;，&#123;&#123;a?b:c&#125;&#125;，&#123;&#123;a||b&#125;&#125;，&#123;&#123;a+b&#125;&#125;</code></li>\n<li>原文输出：如果value包括HTML标签结构，需要原文输出才能保证能够被渲染<br><code>&#123;&#123;@ value&#125;&#125;</code></li>\n<li>条件输出<br><code>&#123;&#123;if value&#125;&#125; 按需输出的内容 &#123;&#123;/if&#125;&#125;</code><br><code>&#123;&#123;if value1&#125;&#125; 按需输出的内容 &#123;&#123;else if value2&#125;&#125; 按需输出的内容&#123;&#123;/if&#125;&#125;</code></li>\n<li>循环输出：<code>&#123;&#123;$index&#125;&#125;</code>来得到索引，<code>&#123;&#123;$value&#125;&#125;</code> 来得到值<br><code>&#123;&#123;each arr&#125;&#125; 循环内容 &#123;&#123;/each&#125;&#125;</code></li>\n<li>过滤器：把<code>value</code>提交给<code>filterName</code>函数进行处理，得到一个新值<br><code>&#123;&#123;value|filterName&#125;&#125;</code><br><code>template.defaults.imports.filterName=function(value)&#123; &#125;</code></li>\n</ul>\n</li>\n<li><p>模板引擎原理：利用正则表达式提取数据，再用字符串替换方法替换字符串</p>\n</li>\n<li><p>正则与字符串操作</p>\n<ul>\n<li>语法：<code>RegExpObject.exec(string)</code>函数用来检索字符串中的正则表达式的匹配，如果字符串有匹配的值，则返回该匹配值，否则返回Null</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pattern = <span class=\"regexp\">/o/</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(pattern.<span class=\"title function_\">exec</span>(str))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>replace()</code>函数用于一些字符替换另一些字符</li>\n</ul>\n</li>\n<li><p>实现简易模板引擎</p>\n<ul>\n<li>定义模板结构</li>\n<li>预调用模板引擎</li>\n<li>封装template函数</li>\n<li>导入并使用自定义的模板引擎</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-6-XMLHttpRequest\"><a href=\"#2-6-XMLHttpRequest\" class=\"headerlink\" title=\"2.6 XMLHttpRequest\"></a>2.6 XMLHttpRequest</h4><blockquote>\n<p>XMLHttpRequest是浏览器提供的JavaScript对象，可以请求服务器的数据资源，JQuery的Ajax函数就是基于xhr封装的</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 创建xhr对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\"><span class=\"comment\">//2. 调用open()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;GET&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//3. 调用send()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">send</span>();</span><br><span class=\"line\"><span class=\"comment\">//4. 监听onreadystatechange事件</span></span><br><span class=\"line\">xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//监听请求状态与服务器响应状态</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhr.<span class=\"property\">responseText</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>readyState的请求状态</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>状态</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>unsent</td>\n<td>XMLHttpRequest对象已被创建，但未调用open方法</td>\n</tr>\n<tr>\n<td>1</td>\n<td>opened</td>\n<td>open方法已经被调用</td>\n</tr>\n<tr>\n<td>2</td>\n<td>headers_received</td>\n<td>send方法已经被调用</td>\n</tr>\n<tr>\n<td>3</td>\n<td>loading</td>\n<td>数据接收中</td>\n</tr>\n<tr>\n<td>4</td>\n<td>done</td>\n<td>Ajax请求完成</td>\n</tr>\n</tbody></table>\n<ul>\n<li>URL参数传递需要在地址后面添加?号，多个参数使用&amp;进行分割<ul>\n<li>参数不能是其他语言，其他语言需要进行编码<br><code>encodeURI()</code>编码函数<br><code>decodeURI()</code>解码函数</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 创建xhr对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\"><span class=\"comment\">//2. 调用open()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//3.设置Content-Type属性</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">setRequestHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//3. 调用send()函数</span></span><br><span class=\"line\">xhr.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;参数1&amp;参数2&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//4. 监听onreadystatechange事件</span></span><br><span class=\"line\">xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//监听请求状态与服务器响应状态</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhr.<span class=\"property\">responseText</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-数据交换格式\"><a href=\"#2-7-数据交换格式\" class=\"headerlink\" title=\"2.7 数据交换格式\"></a>2.7 数据交换格式</h4><p>前后端数据传输的格式，分别为<strong>XML</strong>和<strong>JSON</strong>，其中<strong>XML</strong>用的很少，重点为<strong>JSON</strong></p>\n<ul>\n<li>XML<br>与html类似，为可扩展标记语言。<br>缺点：<ul>\n<li>XML格式臃肿，数据无关代码多，传输效率低。</li>\n<li>Javascript解析XML比较麻烦。</li>\n</ul>\n</li>\n<li>JSON<br>英文名JavaScript Object Notation，即”JavaScript对象表示方法”。本质是字符串。<ul>\n<li>两种结构<ul>\n<li>对象结构<br>格式为花括号包裹的键值对，key必须为英文双引号表示的字符串，value可以是数字、字符串、布尔值、null、数组、对象这六种类型。</li>\n<li>数组结构<br>格式为中括号包裹的数据，数据类型可以是数字、字符串、布尔值、null、数组、对象这六种类型。</li>\n</ul>\n</li>\n<li>JSON转化Javascript对象<ul>\n<li>使用<code>JSON.parse(&#39;JSON字符串&#39;)</code>方法</li>\n</ul>\n</li>\n<li>Javascript对象转化JSON<ul>\n<li>使用<code>JSON.stringify(JS对象)</code>方法</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>序列化与反序列化<ul>\n<li>序列化：把<strong>数据对象</strong>转化为<strong>字符串</strong>的过程</li>\n<li>反序列化：把<strong>字符串</strong>转化为<strong>数据对象</strong>的过程</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-8-自定义Ajax函数\"><a href=\"#2-8-自定义Ajax函数\" class=\"headerlink\" title=\"2.8 自定义Ajax函数\"></a>2.8 自定义Ajax函数</h4><ul>\n<li>定义参数选项<ul>\n<li>method 请求类型</li>\n<li>url          请求的URL地址</li>\n<li>data       请求携带的数据</li>\n<li>success  请求成功之后的回调函数</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">resolveData</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr=[];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> data)&#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(k+<span class=\"string\">&#x27;=&#x27;</span>+data[k])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&amp;&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">template</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> qs = <span class=\"title function_\">resolveData</span>(options.<span class=\"property\">data</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(options.<span class=\"property\">method</span>.<span class=\"title function_\">toUpperCase</span>()===<span class=\"string\">&#x27;GET&#x27;</span>)&#123;</span><br><span class=\"line\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;GET&#x27;</span>,options.<span class=\"property\">url</span>+<span class=\"string\">&#x27;?&#x27;</span>+qs);</span><br><span class=\"line\">    xhr.<span class=\"title function_\">send</span>();</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(options.<span class=\"property\">method</span>.<span class=\"title function_\">toUpperCase</span>()===<span class=\"string\">&#x27;POST&#x27;</span>)&#123;</span><br><span class=\"line\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,options.<span class=\"property\">url</span>);</span><br><span class=\"line\">    xhr.<span class=\"title function_\">setRequestHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class=\"line\">    xhr.<span class=\"title function_\">send</span>(qs);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> result = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>);</span><br><span class=\"line\">      options.<span class=\"title function_\">success</span>(result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-9-XMLHttpRequest-Level2新特性\"><a href=\"#2-9-XMLHttpRequest-Level2新特性\" class=\"headerlink\" title=\"2.9 XMLHttpRequest Level2新特性\"></a>2.9 XMLHttpRequest Level2新特性</h4><ul>\n<li><p>旧版缺点：</p>\n<ol>\n<li>只支持文本传输，无法读取和上传文件</li>\n<li>接收数据没有进度信息</li>\n</ol>\n</li>\n<li><p>设置HTTP请求时限</p>\n<ul>\n<li><code>xhr.timeout=3000</code></li>\n<li><code>xhr.ontimeout=function()&#123;&#125;</code></li>\n</ul>\n</li>\n<li><p>FormData对象管理表单数据</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//创建Form Data对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> fd =<span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span><br><span class=\"line\"><span class=\"comment\">//为FormData添加表单项</span></span><br><span class=\"line\"> fd.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;uname&#x27;</span>,<span class=\"string\">&#x27;ithm&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//创建xhr对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>()</span><br><span class=\"line\"><span class=\"comment\">//指定请求与url地址</span></span><br><span class=\"line\"> xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//提交</span></span><br><span class=\"line\"> xhr.<span class=\"title function_\">send</span>(fd);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//获取表单元素</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> form=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#form1&#x27;</span>);</span><br><span class=\"line\"> form.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;submit&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">  e.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd=<span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>(form);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">  xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\">  xhr.<span class=\"title function_\">send</span>(fd);</span><br><span class=\"line\">  xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>上传文件<ol>\n<li>定义UI结构</li>\n<li>验证是否选择文件</li>\n<li>向FormData中追加文件</li>\n<li>使用xhr发起上传文件请求</li>\n<li>监听onreadystatechange事件</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#btnUpload&#x27;</span>);</span><br><span class=\"line\">btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> files=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#file1&#x27;</span>).<span class=\"property\">files</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(files.<span class=\"property\">length</span>&lt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd=<span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span><br><span class=\"line\">  fd.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;avatar&#x27;</span>,files[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">  xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;url&#x27;</span>);</span><br><span class=\"line\">  xhr.<span class=\"title function_\">send</span>(fd);</span><br><span class=\"line\">  <span class=\"comment\">//文件上传进度</span></span><br><span class=\"line\">  xhr.<span class=\"property\">upload</span>.<span class=\"property\">onprogress</span>=<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(e.<span class=\"property\">lengthComputable</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> procent=<span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>((e.<span class=\"property\">loaded</span>/e.<span class=\"property\">total</span>)*<span class=\"number\">100</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(procent);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.<span class=\"property\">onreadystatechange</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span>===<span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(data.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">          <span class=\"comment\">//上传成功</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          <span class=\"comment\">//上传失败</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-10-axios\"><a href=\"#2-10-axios\" class=\"headerlink\" title=\"2.10 axios\"></a>2.10 axios</h4><p>专注于网络数据请求的库，更简单易用。</p>\n<ul>\n<li>发起GET请求<br><code>axios.get(&#39;url&#39;,&#123;params:&#123;（js对象）参数&#125;&#125;).then(callback)</code></li>\n<li>发起POST请求<br><code>axios.post(&#39;url&#39;,&#123;（js对象）参数&#125;).then(callback)</code></li>\n<li>类似<code>$.ajax()</code>的函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">method</span>: <span class=\"string\">&#x27;请求类型&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;请求的URL地址&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;数据&#125;,</span><br><span class=\"line\">  <span class=\"attr\">params</span>: &#123;参数&#125;</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(callback)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-11-同源策略\"><a href=\"#2-11-同源策略\" class=\"headerlink\" title=\"2.11 同源策略\"></a>2.11 同源策略</h4><p>同源：如果两个页面的协议、域名和端口都相同，则两个页面具有相同的源。<br>同源策略：浏览器规定，A网站的JS，不允许和非同源的网站C之间进行资源交互。</p>\n<ol>\n<li>无法读取非同源网页的cookie、LocalStorage和IndexedDB</li>\n<li>无法接触非同源网页的DOM</li>\n<li>无法向非同源地址发送Ajax请求</li>\n</ol>\n<p>跨域：非同源就是跨域。<br>跨域请求的方案：<strong>JSONP</strong>和<strong>CORS</strong>。</p>\n<ul>\n<li><p>JSONP，只支持GET请求，不支持POST请求。<br>由于浏览器同源策略的限制，网页无法通过Ajax请求非同源的接口数据，但是<code>&lt;script&gt;</code>标签不受限制，可以通过src属性，请求跨域的数据接口，并通过函数调用的形式，接收跨域接口响应回来的数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//自己实现JSONP</span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">success</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://url?callback=success&amp;name=zs&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//jQuery的JSONP</span></span><br><span class=\"line\">$.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://url?callback=success&amp;name=zs&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">dataType</span>: <span class=\"string\">&#x27;jsonp&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">jsonp</span>: <span class=\"string\">&#x27;callback&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">jsonpCallback</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">success</span>: <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>CORS，不兼容性低端浏览器，支持GET和POST请求。</p>\n</li>\n</ul>\n<h4 id=\"2-12-防抖和节流\"><a href=\"#2-12-防抖和节流\" class=\"headerlink\" title=\"2.12 防抖和节流\"></a>2.12 防抖和节流</h4><p>节流策略：减少一段时间内事件的触发频率，防止事件无限制被触发。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> timer =<span class=\"literal\">null</span>;  <span class=\"comment\">//定义节流阀</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(timer)&#123;  <span class=\"comment\">//判断节流阀是否为空</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">timer=<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//处理事件</span></span><br><span class=\"line\">  timer=<span class=\"literal\">null</span>;  <span class=\"comment\">//清空节流阀</span></span><br><span class=\"line\">&#125;,<span class=\"number\">16</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-13-HTTP协议加强\"><a href=\"#2-13-HTTP协议加强\" class=\"headerlink\" title=\"2.13 HTTP协议加强\"></a>2.13 HTTP协议加强</h4><p>通信三要素：</p>\n<ul>\n<li>通信主体</li>\n<li>通信内容</li>\n<li>通信方式</li>\n</ul>\n<p>网页内容叫做超文本，因此网页内容传输协议又叫做超文本传输协议(<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol)，简称HTTP协议。</p>\n<p><strong>HTTP请求消息</strong>由请求行、请求头部、空行和请求体四个部分组成。</p>\n<ol>\n<li>请求行</li>\n</ol>\n<style>\n.table li{\n  text-align: center;\n  list-style:none;\n  display: inline-block;\n\n  margin: 0;\n  padding: 10px;\n  border: 2px solid black;\n  border-right:none ;\n}\n.a :first-child{\n  background-color: #2ca9e1;\n}\n.a :nth-child(3){\n background-color: #765c47;\n}\n.a :nth-child(5){\n background-color: #f8b500;\n}\n.a :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table a\">\n  <li>请求方式</li><li>空格</li><li>URL</li><li>空格</li><li>协议版本</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<ol start=\"2\">\n<li>请求头部：多行键值对组成，用来描述客户端的基本信息，从而把客户端相关的信息告知服务器。</li>\n</ol>\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">头部字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Host</td>\n<td>要请求的服务器域名</td>\n</tr>\n<tr>\n<td align=\"center\">Connection</td>\n<td>客户端与服务器的连接方式（keep 或keepalive）</td>\n</tr>\n<tr>\n<td align=\"center\">Content-Length</td>\n<td>用来描述请求体的大小</td>\n</tr>\n<tr>\n<td align=\"center\">Accept</td>\n<td>客户端可识别的响应内容类型列表</td>\n</tr>\n<tr>\n<td align=\"center\">User-Agent</td>\n<td>产生请求的浏览器类型</td>\n</tr>\n<tr>\n<td align=\"center\">Content-Type</td>\n<td>客户端告诉服务器实际发送的数据类型</td>\n</tr>\n<tr>\n<td align=\"center\">Accept-Encoding</td>\n<td>客户端可接收的内容压缩编码形式</td>\n</tr>\n<tr>\n<td align=\"center\">Accept-Language</td>\n<td>用户期望获得的自然语言的优先顺序</td>\n</tr>\n</tbody></table>\n<ol start=\"3\">\n<li><p>空行(回车符或者换行符)：分割请求头部与请求体。</p>\n</li>\n<li><p>请求体：存放要通过<strong>POST方式</strong>提交到服务器的数据（GET没有请求体）。</p>\n</li>\n</ol>\n<p><strong>HTTP响应消息</strong>由状态行、响应头部、空行和响应体四个部分组成。</p>\n<ol>\n<li>状态行</li>\n</ol>\n<style>\n.c :first-child{\n  background-color: #2ca9e1;\n}\n.c :nth-child(3){\n background-color: #765c47;\n}\n.c :nth-child(5){\n  background-color: #f8b500;\n}\n.c :last-child{\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table c\">\n  <li>协议版本</li><li>空格</li><li>状态码</li><li>空格</li><li>状态码描述</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<ol start=\"2\">\n<li>响应头部：多行键值对组成，来描述服务器的基本信息。具体细节查看<a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Response_header\">MDN</a>文档。</li>\n</ol>\n<style>\n.b :first-child{\n  background-color: #727171;\n}\n.b :nth-child(2){\n background-color: #007bbb;\n}\n.b :nth-child(3){\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: #ffea00;\n}\n.b :nth-child(5){\n  border-right: 2px solid black;\n}\n</style>\n<ul class=\"table b\">\n  <li>头部字段名称</li><li>:(冒号)</li><li>值</li><li>回车符</li><li>换行符</li>\n</ul>\n\n<ol start=\"3\">\n<li><p>空行(回车符或者换行符)：分割响应头部与响应体。</p>\n</li>\n<li><p>响应体：服务器给客户端的资源。</p>\n</li>\n</ol>\n<p><strong>HTTP的请求方法</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>GET</td>\n<td>（查询）发送请求来获得服务器上的资源，请求体中不会包含请求数据，请求数据放在协议头</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>（新增）向服务器提交资源，数据被包含在请求体中提交给服务器</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>（修改）向服务器提交资源，并使用提交的新资源，替换掉服务器对应的旧资源</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>（删除）请求服务器删除指定的资源。</td>\n</tr>\n</tbody></table>\n<p><strong>HTTP响应状态码</strong>用来标识响应状态。<br>HTTP状态码由三个十进制组成，第一个数字反应了状态码的类型。</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1**</td>\n<td>信息，服务器收到请求，需要请求者继续执行操作</td>\n</tr>\n<tr>\n<td>2**</td>\n<td>成功，操作被成功接收并处理</td>\n</tr>\n<tr>\n<td>3**</td>\n<td>重定向，需要进一步的操作以完成请求</td>\n</tr>\n<tr>\n<td>4**</td>\n<td>客户端错误，请求包含语法错误或无法完成请求</td>\n</tr>\n<tr>\n<td>5**</td>\n<td>服务器错误，服务器在处理请求的过程中发生了错误</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>200</td>\n<td>OK</td>\n<td>请求成功。一般用于GET与POST请求</td>\n</tr>\n<tr>\n<td>201</td>\n<td>Created</td>\n<td>已创建。成功请求并创建了新的资源。 通常用于POST与PUT请求</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>301</td>\n<td>Moved Permanently</td>\n<td>永久移动。请求资源已经被永久的移动到了新的URL，返回信息包括新的URL，浏览器会自动定向到新URL。</td>\n</tr>\n<tr>\n<td>302</td>\n<td>Found</td>\n<td>临时移动。资源只是临时被移动。</td>\n</tr>\n<tr>\n<td>304</td>\n<td>Not Modified</td>\n<td>未修改。所请求的资源未修改，客户端从缓存访问资源。</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>400</td>\n<td>Bad Request</td>\n<td>语义有误，服务器无法理解。请求参数有误。</td>\n</tr>\n<tr>\n<td>401</td>\n<td>Unauthorized</td>\n<td>当前请求需要用户验证。</td>\n</tr>\n<tr>\n<td>403</td>\n<td>Forbidden</td>\n<td>服务器已经理解请求，但是拒绝执行。</td>\n</tr>\n<tr>\n<td>404</td>\n<td>Not Found</td>\n<td>服务器无法根据客户端的请求找到资源。</td>\n</tr>\n<tr>\n<td>408</td>\n<td>Request Timeout</td>\n<td>请求超时。服务器等待客户端发送的请求时间过长。</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>500</td>\n<td>Internal Server Error</td>\n<td>服务器内部错误，无法完成请求。</td>\n</tr>\n<tr>\n<td>501</td>\n<td>Not Implemented</td>\n<td>服务器不支持该请求方式，无法完成请求。</td>\n</tr>\n<tr>\n<td>503</td>\n<td>Service Unavailable</td>\n<td>由于超载或系统维护，服务器暂时无法处理客户端的请求</td>\n</tr>\n</tbody></table>\n"},{"title":"CSS3快速入门语法","img":"https://images.pexels.com/photos/8160274/pexels-photo-8160274.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500","excerpt":"CSS3的学习笔记，以备查找和复习。","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-23T07:51:23.000Z","_content":"\n# CSS3快速入门语法\n\n## 一、基本语法\n\n### 1.前言\n\n参考视频：<https://www.bilibili.com/video/BV1Kg411T7t9?p=45>\n\n作用：美化网页、布局页面\n\n语法结构：\n选择器{\n  属性：属性值；\n}\n\n注释 ：  /*这是层叠样式表里面的注释*/\n\n* 内嵌式：在`<style>`标签内书写，`<style>`标签放在`<head>`标签内\n\n* 外联式：写在.css文件中，需要通过`<link>`标签在网页引入\n\n  ```html\n  <link rel=\"stylesheet\" href=\"url\">\n   ```\n\n* 行内式：写在标签的style属性中\n\n### 2.基础选择器\n\n#### 2.1 标签选择器\n\n```css\n标签名{\n 属性: 属性值;\n}\n```\n\n作用：选择某一类标签。\n\n#### 2.2 类选择器\n\n```css\n.类名{\n 属性：属性值； \n}\n```\n\n作用：选择class属性值等于类名的标签。\n\n多类名：一个标签可以有多个类名，都在class类里面，不同类名用空格隔开\n\n类名：由字母、数字、下划线、中划线组成，不能用中划线和数字开头。\n\n#### 2.3 id选择器\n\n```css\n#id{\n 属性：属性值；\n}\n```\n\n作用：选择特定id属性的标签。\n\n标签的id属性在整个页面唯一存在，一个标签对应一个id，通常与js搭配。\n\n#### 2.4 通配符选择器\n\n```css\n*{\n 属性：属性值；\n}\n```\n\n作用：选择所有的标签。\n\n### 3.字体属性\n\n#### 3.1 字体大小\n\n* 属性名：font-size\n* 取值：数字+px\n* 注意：谷歌浏览器默认16px，单位需要设置\n\n#### 3.2 字体粗细\n\n* 属性值：font-weight\n* 取值：\n  | 属性值  | 描述                 |\n  | --------- | ---------------------- |\n  | normal  | 默认值，不加粗       |\n  | bold    | 加粗                 |\n  | 100~900 | 400=normal，700=bold |\n  \n#### 3.3 字体样式\n\n* 属性名：font-style\n* 取值：\n    属性值  | 描述                 |\n  | --------- | ---------------------- |\n  | normal  | 默认值，不倾斜      |\n  | italic    | 倾斜               |\n\n#### 3.4 字体\n\n* 属性名：font-family\n* 取值：字体1，字体2，.....\n* 注意：\n  * 默认字体微软雅黑\n  * 从左到右查找字体来展现，可以写具体字体或者一系列字体sans-serif等\n\n#### 3.5 字体属性连写\n\n* 属性名：font\n* 取值：\n  * font：style weight size family;\n  * font:  normal 400 80px 微软雅黑;\n* 注意：\n  * 复合属性，不能改变顺序，只能省略前两个属性\n\n### 4.文本属性\n\n#### 4.1 文本缩进\n\n* 属性名：text-indent\n* 取值：\n  * 数字+px，px单位，像素值\n  * 数字+em，em单位，相对单位，也就是当前一个字符距离\n\n#### 4.2 文本水平对齐\n\n* 属性名：text-align\n* 取值：\n  | 属性值 | 描述   |\n  | -------- | -------- |\n  | left   | 左对齐 |\n  | right  | 右对齐 |\n  | center | 居中   |\n\n#### 4.3 文本修饰\n\n* 属性名：text-decoration\n* 取值：\n  | 属性值       | 描述               |\n  | -------------- | -------------------- |\n  | none         | 默认，无任何装饰线 |\n  | underline    | 下划线             |\n  | overline     | 上划线             |\n  | line-through | 删除线             |\n\n#### 4.4 行高\n\n* 属性名：line-height\n* 取值：\n  * 数字+px\n  * 字号的倍数\n* 注意：\n  * 行间距/行高=上间距+文字高度+下间距\n  * font：style weight size/line-height family;\n  * font:  normal 400 80px/1.5 微软雅黑;\n\n#### 4.5 字体颜色\n\n* 属性名：color，background-color\n* 取值：\n  | 颜色       | 属性值                            |\n  | ------------ | ----------------------------------- |\n  | 预定义颜色 | red，green，blue，pink  ，.......          |\n  | rgb表示（无透明度）    | rgb(255,0,0),.... |\n  | rgb表示（有透明度）    | rgb(255,0,0,0.5),.... |\n  | 16进制     | #FF0000,#eeeeee ,#000,......    |\n\n## 二、进阶语法\n\n### 1.复合选择器\n\n#### 1.1 后代选择器\n\n* 语法：选择器1 选择器2 {css}\n* 说明：根据HTML标签的嵌套关系，选择父元素的后代中满足条件的元素\n* 注意：\n  * 后代包括：儿子，孙子，重孙子，.......\n  * 选择器之间用空格隔开\n\n#### 1.2 子代选择器\n\n* 语法：选择器1>选择器2 {css}\n* 说明：根据HTML标签的嵌套关系，选择父元素的子代中满足条件的元素\n* 注意：\n  * 子代只包括：儿子\n  * 选择器之间用`>`隔开\n\n#### 1.3 并集选择器\n\n* 语法：选择器1,选择器2 {css}\n* 说明：同时选择多组标签，设置相同样式\n* 注意：\n  * 每组选择器可以是基础选择器或者复合选择器\n  * 选择器之间用`,`隔开\n\n#### 1.4 交集选择器\n\n* 语法：选择器1选择器2 {css}\n* 说明：同时满足多个选择器的标签\n\n#### 1.5 hover伪类选择器\n\n* 语法：选择器：hover {css}\n* 说明：鼠标悬停在选择器的元素上时，改变其样式\n\n#### 1.6 Emment语法\n\n* 说明：VScode的语法简写，快速生成代码\n\n|说明|语法|效果|\n|----|----|----|\n|标签名|div|`<div></div>`|\n|类选择器|.red|`<div class=\"red\"></div>`|\n|id选择器|#one|`<div id=\"one\"></div>`|\n|交集选择器|p.red#one|`<p class=\"red\" id=\"one\"></p>`|\n|子代选择器|ul>li|`<ul><li></li></ul>`|\n|内部文本|ul>li{222}|`<ul><li>222</li></ul>`|\n|创建多个|ul>li*3|`<ul><li></li><li></li><li></li></ul>`|\n\n### 2.背景属性\n\n#### 2.1 背景颜色\n\n* 属性名：background-color\n* 属性值：关键字、rgb值、16进制\n\n#### 2.2 背景图片\n\n* 属性名：background-image\n* 属性值：background-image：url('图片路径');\n\n#### 2.3 背景平铺\n\n* 属性名：background-repeat\n* 属性值：\n  |取值|效果|\n  |----|----|\n  |repeat|（默认值）水平和垂直方向都平铺|\n  |no-repeat|不平铺|\n  |repeat-x|水平平铺|\n  |repeat-y|垂直平铺|\n\n#### 2.4 背景位置\n\n* 属性名：background-position\n* 属性值：background-position: 水平方向位置  垂直方向位置；\n\n```mermaid\nflowchart LR\n    Start(属性值) --> res11[方位词]\n    Start(属性值) --> res12[数字+px]\n    res11-->res21[水平方向]\n    res11-->res22[垂直方向]\n    res12--->水平方向:从左向右移动\n    res12--->垂直方向:从上向下移动\n    res21-->left\n    res21-->res31[center]\n    res21-->right\n    res22-->top\n    res22-->center\n    res22-->bottom\n```\n\n#### 2.5 背景属性连写\n\n* 属性名：background\n* 属性值：background： color image repeat position；\n* 注意：不分先后顺序\n\n### 3.元素显示模式\n\n#### 3.1 块级元素\n\n* 显示特点：\n  1. 独占一行\n  2. 宽度默认为父元素宽度，高度取决于内容\n  3. 可以设置宽高\n* 代表标签：\n  * div、p、h、ul、li、dl等\n\n#### 3.2 行内元素\n\n* 显示特点：\n  1. 一行显示多个\n  2. 宽度高度取决于内容\n  3. 不可以设置宽高\n* 代表标签：\n  * a、span、b、u、i、strong等\n\n#### 3.3 行内块元素\n\n* 显示特点：\n  1. 一行显示多个\n  2. 可以设置宽高\n* 代表标签：\n  * input、textarea、button等\n\n#### 3.4 元素显示模式转换\n\n* 作用：改变元素默认显示的特点\n* 语法：\n  |属性|效果|\n  |----|----|\n  |display：block|转化为块元素|\n  |display：inline-block|转化为行内块元素|\n  |display：inline|转化为行内元素|\n\n#### 3.5 特性\n\n* 继承性：子元素的文字属性全部继承父元素（浏览器有默认样式会覆盖）\n* 层叠性：同优先级，后面的样式会覆盖前面的样式\n* 优先级：不同的选择器具有不同的优先级，优先级高的会覆盖优先级低的\n  * 优先级顺序：继承<通配符选择器<标签选择器<类选择器<`id`选择器<行内样式<!important\n\n### 4.盒子模型\n\n> 每一个标签都可以看作一个盒子，浏览器显示网页的每一个矩形区块都可以称为盒子\n> 每个盒子分别由：内容区域、内边距区域、边框区域、外边距区域构成。\n> 工具推荐：PxCook+浏览器调试工具\n\n#### 4.1 内容区域的宽度和高度\n\n* 作用：利用width和height属性默认设置是盒子内容区域的大小\n* 属性：width，height\n* 属性值：数字+px\n\n#### 4.2 边框\n\n* 作用：设置边框粗细、样式和颜色\n* 属性：border\n* 属性值：\n  * 连写：线宽 线型 颜色；\n  * border: 10px solid red;\n  * 单写属性：\n  \n    |属性名|属性值|\n    |----|----|\n    |border-width|数字+px|\n    |border-style|实线solid、虚线dashed、点线dotted|\n    |border-color|16进制、rgb值、关键字|\n  * 某一方向边框属性连写设置：border-left、border-right等。\n\n#### 4.3 内边距\n\n* 作用：设置文字与边框的距离\n* 属性：padding\n* 属性值：数字+px\n  * 四个值：上   右  下  左 （顺时针）\n  * 三个值：上   左右   下\n  * 两个值：上下   左右\n* 边框和内边距会撑大整体的宽高，所以设置`box-sizing: border-box;`自适应调整大小不会撑开宽高。\n\n#### 4.4 外边距\n\n* 作用：盒子外边的距离\n* 属性：margin\n* 属性值：数字+px（与内边距相同）\n* 清除样式\n\n  ```css\n  *{\n    margin: 0;\n    padding: 0;\n  }\n  ```\n\n* 版心居中：`margin: 0 auto;`\n\n### 5.补充选择器\n\n#### 5.1 结构伪类选择器\n\n* 作用：根据元素在HTML的结构关系查找元素\n* 用法：\n  |选择器|说明|\n  |-----|-----|\n  |E:first-child{}|匹配父元素第一个子元素，并且是E元素|\n  |E:last-child{}|匹配父元素最后一个子元素，并且是E元素|\n  |E:nth-child(n){}|匹配父元素第n个子元素，并且是E元素|\n  |E:nth-last-child(n){}|匹配父元素倒数第n个子元素，并且是E元素|\n* n的选择：\n  * 常见：1、2、3、4、.......\n\n  |功能|公式|\n  |----|-----|\n  |偶数|2n、even|\n  |奇数|2n+1、2n-1、odd|\n  |找到前5个|-n+5|\n  |找到从第5个往后|n+5|\n\n#### 5.2 伪元素\n\n* 作用：由css模拟出标签效果，能够使用伪元素在网页中创建内容\n* 用法：\n  \n  |伪元素|作用|\n  |----|-----|\n  |::before|在父元素内容的最前添加一个伪元素|\n  |::after|在父元素内容的最后添加一个伪元素|\n\n  ```css\n  选择器::before{\n    content: \"内容\";\n    width: 100px;\n  }\n  ```\n\n* 注意：\n  * 必须设置content属性才能生效\n  * 默认为行内元素\n  * 常用于装饰小图标\n\n#### 5.3 浮动\n\n* 作用：图文环绕，网页布局\n* 属性：float\n* 注意：\n  1. 会让元素不占用标准流的位置来布局，标准流的元素会挤上来\n  2. 高标准流半个级别，可以覆盖标准流的元素\n  3. 类似行内块元素\n  4. 不能设置常规的居中方式\n\n#### 5.4 清除浮动\n\n* 作用：清除浮动带来的影响\n* 原因：子元素浮动后脱标-->不占位\n* 方法：\n\n 1. 直接设置父元素高度\n 2. 额外标签法：给父元素最后添加一个块元素，给块元素设置clear：both\n 3. 单伪元素清除法：用伪元素替代额外标签\n 4. 双伪元素清除法\n 5. 给父元素设置overflow：hidden\n\n### 6.定位\n\n#### 6.1 基本使用\n\n* 属性名：position\n* 常见属性值：\n  |定位方式|属性值|\n  |:------:|:---------:|\n  |静态定位|static|\n  |相对定位|relative|\n  |绝对定位|absolute|\n  |固定定位|fixed|\n* 设置偏移值：偏移值设置两个方向\n  |方向|属性名|属性值|含义|\n  |:---:|:----:|:----:|:----:|\n  |水平|left|数字+px|距离左边的距离|\n  |水平|right|数字+px|距离右边的距离|\n  |垂直|top|数字+px|距离上边的距离|\n  |垂直|bottom|数字+px|距离下边的距离|\n\n#### 6.2 相对定位\n\n* 作用：相对于自己之前的位置移动\n* 用法：position：relative；\n* 特点：\n  1. 需要配合方位属性实现移动。\n  2. 相对于自己原来的位置移动。\n  3. 原来的位置存在占位，不脱标。\n\n#### 6.3 绝对定位\n\n* 作用：相对于定位的父元素进行定位移动\n* 用法：position：absolute；\n* 特点：\n  1. 脱标的占位置\n  2. 具有行内块的特点\n\n#### 6.4 固定定位\n\n* 作用：相对于浏览器进行定位移动\n* 用法：position：fixed；\n* 特点：\n  1. 需要配合方位属性实现移动\n  2. 相对与浏览器可视区域移动\n  3. 在页面不占位置，已经脱标\n\n#### 6.5 元素的层级关系\n\n* 层级关系：标准流<浮动<定位\n* 不同定位之间的层级：默认层级相同，写在后面的会覆盖前面的\n\n### 7.装饰\n\n#### 7.1 垂直对齐\n\n* 作用：解决行内元素（图片和文字）的垂直对齐问题\n* 属性名：vertical-align\n* 属性值：\n  |属性值|效果|\n  |:---:|:----:|\n  |baseline|默认，基线对齐|\n  |top|顶部对齐|\n  |middle|中部对齐|\n  |bottom|底部对齐|\n\n#### 7.2 光标的类型\n\n* 作用：改变鼠标的样式\n* 属性名：cursor\n* 属性值：\n  |属性值|效果|\n  |----|-----|\n  |default|默认值，箭头|\n  |pointer|小手|\n  |text|工字型|\n  |move|十字拖动标|\n\n#### 7.3 边框圆角\n\n* 属性名：border-radius\n* 取值：数字（半径）+px、百分比\n  * border-radius：10px；说明四个角曲率相同\n  * border-radius： 10px  10px 10px 10px；四个角可以一个一个设置（顺时针）\n\n#### 7.4 溢出显示效果\n\n* 属性名：overflow\n* 属性值：\n  |属性值|效果|\n  |----|-----|\n  |visible|默认值，溢出部分可见|\n  |hidden|溢出部分隐藏|\n  |scroll|无论是否溢出都显示滚动条|\n  |auto|根据是否溢出，自动显示或隐藏滚动条|\n\n#### 7.5 元素本身隐藏\n\n* 用法：visibility：hidden\n             display：none\n\n#### 7.6 元素的透明度\n\n* 作用：让元素整体包括内容一起变透明\n* 属性名：opacity\n* 属性值：0（完全透明）~1（完全不透明）之间的数字\n\n### 8.样式补充\n\n#### 8.1 精灵图\n\n* 作用：将小图合并成大图，减轻服务器的压力（服务器会发送小图整合图，网页接收图片后“裁剪”出小图来显示）\n* 使用：\n  1. 创建一个盒子，设置盒子的尺寸与小图尺寸一样\n  2. 将精灵图设置为盒子背景图\n  3. 修改背景图位置：background-position：x y；\n\n#### 8.2 背景图覆盖\n\n* 作用：设置背景图覆盖方式\n* 用法：background-size：宽度 高度；\n* 取值：\n  |取值|场景|\n  |----|-----|\n  |数字+px|常用|\n  |百分比|相对于当前盒子的宽高百分比|\n  |contain|包含，将背景图片等比例缩放，直到不会超过盒子的大小|\n  |cover|覆盖，将图片填满整个盒子没有空白|\n\n#### 8.3 盒子阴影\n\n* 作用：给盒子添加阴影\n* 属性名：box-shadow\n* 取值：连写赋值\n  |参数|作用|\n  |----|-----|\n  |h-shadow|必须，水平偏移量|\n  |v-shadow|必须，垂直偏移量|\n  |blur|可选，模糊度|\n  |spread|可选，阴影扩大|\n  |color|可选，阴影颜色|\n  |inset|可选，将阴影改为内部阴影|\n\n#### 8.4 过渡\n\n* 作用：配合hover使用，让元素慢慢变化\n* 属性名：transition\n* 取值：\n  |参数|取值|\n  |----|------|\n  |过渡的属性|all：所有属性过渡；具体属性名|\n  |过渡的时长|数字+s（秒）|\n\n#### 8.5 SEO搜索引擎优化\n\n* 作用：让网站在搜索引擎的排名靠前\n* 方法：\n  1. 竞价排名\n  2. 将网页制作html后缀\n  3. 标签语义化\n     1. title：网页标题标签\n     2. description：网页描述标签\n     3. keywords：网页关键词标签\n\n* 添加图标\n\n```html\n<link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\">\n```\n\n### 9.动态\n\n#### 9.1 平面转换\n\n改变盒子在平面的形态（位移、旋转、缩放）\n2D转换\n属性：**transform**\n\n* 位移\n  * 语法：`transform: translate (水平移动距离,垂直移动距离);`\n  * 取值：\n    * 数值+px\n    * 百分比（参照物为盒子自身尺寸）\n  * 注意：\n    * translateX() 仅水平移动\n    * translateY() 仅垂直移动\n* 旋转\n  * 语法：`transform: rotate(角度);`\n  * 取值：\n    * 数值+deg\n  * 注意：\n    * 可以取正负\n* 转换原点\n  * 语法：`transform-origin: 原点水平位置 原点垂直位置;`\n  * 取值：\n    * 方位名词：left、top、right、bottom、center\n    * 数值+px\n    * 百分比\n  * 注意：\n    * 默认原点是盒子中心点\n    * 原点就是物体旋转点\n    * 需要先位移后旋转\n* 缩放\n  * 语法：`transform: scale(x轴缩放倍率,y轴缩放倍率);` `transform: scale(等比缩放倍率);`\n  * 取值：数值\n  * 注意：\n    * 数值可以为小数\n* 渐变\n  * 语法：`background-image: linear-gradient(方向, 颜色1, 颜色2,...);`\n  * 取值：\n    * 方向取值为`to+空格+方位名词`，表示往拿个方向渐变\n    * 颜色可以取多个值，表示多种颜色的渐变\n\n#### 9.2 空间转换\n\n实现元素在空间内的位移、旋转、缩放。\n3D转换，z轴垂直于屏幕\n空间转换属性：**transform**\n\n* 位移\n  * 语法：\n    * `transform: translate3d(x,y,z)`\n    * `transform: translateX(值)`\n    * `transform: translateY(值)`\n    * `transform: translateZ(值)`\n  * 取值：\n    * 数值+px\n    * 可以正负\n* 透视\n  * 语法：`perspective: 值;`\n  * 取值：数值+px （建议800-1200）\n  * 只有设置了透视，Z方向的位移才能有明显的变化\n* 旋转\n  * 语法：\n    * `transform: rotateX(角度)`\n    * `transform: rotateY(角度)`\n    * `transform: rotateZ(角度)`\n    * `transform: rotate3d(x,y,z,角度)`\n  * 取值：\n    * 数值+deg\n    * x,y,z为0-1的数字来自定义旋转轴的位置\n* 立体呈现\n  * 语法：`transform-style: preserve-3d;`\n* 缩放\n  * 语法：\n    * `transform: scaleX(倍数)`\n    * `transform: scaleY(倍数)`\n    * `transform: scaleZ(倍数)`\n    * `transform: scale3d(x,y,z)`\n  * 取值：数字（整数或小数）\n\n#### 9.3 动画\n\n* 使用animation添加动画\n* 动画效果：实现多个状态之间的变化过程，动画过程可控\n\n```css\n.one{\n  width: 400px;\n  height: 200px;\n  background-color: #f00;\n  margin: 100px 0;\n  /*使用动画*/\n  animation: change 3s;\n}\n\n/*自定义动画：只能有两个状态的变化*/\n@keyframes change{\n  from{\n    width: 100px;\n  }\n  to{\n    width: 400px;\n  }\n}\n\n/*自定义动画：多个状态的变化，百分比为占用动画时长的百分比*/\n@keyframes change{\n  20%{\n    background-color: blue;\n    width: 100px;\n  }\n  40%{\n    background-color: green;\n    width: 200px;\n  }\n  60%{\n    background-color: pink;\n    width: 300px;\n  }\n  100%{\n    background-color: red;\n    width: 400px;\n  }\n}\n```\n\n* 语法:\n  * `animation: 动画名称 动画时长 速度曲线 延迟时间 重复次数 动画方向 执行完毕时的状态;`\n  * `animation: name duration timing-function delay iteration-count direction fill-mode;`\n* 注意：\n  * 动画名称和动画时长为必须属性值\n  * 可选属性值的取值不分先后\n  * 无限循环属性值 `infinite`\n  * 动画方向属性值： `alternate` 从尾到头快速执行动画\n  * 速度曲线：`steps(数字)` 逐帧动画\n\n## 三、移动端Web\n\n* PC端网页与移动端网页的区别\n  * PC屏幕大，网页固定版心\n  * 手机屏幕小，网页宽度多数为100%\n\n参考逻辑分辨率，一般选用`iPhone 6/7/8`设备来参考开发\n\n视口：规定html大小，让html宽度与设备宽度一样，没有视口标签宽度就为**980px**：\n`<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">`\n\n百分比布局（流式布局）：宽度自适应，高度固定。（古老布局）\n\n### 1.Flex布局\n\n#### 1.1 基本使用\n\n* 作用：\n  * 基于Flex精确灵活控制块级盒子的布局方式，避免浮动布局中脱离文档流的现象发生。\n  * Flex布局非常适合结构化布局\n* 语法：\n  * 在父元素添加 `display: flex`\n* 组成：\n  * 弹性容器\n  * 弹性盒子\n  * 主轴\n  * 侧轴/交叉轴\n\n#### 1.2 对齐\n\n* 主轴对齐方式\n* 属性：`justify-content` (添加在父元素里面)\n\n|属性值|作用|\n|:---:|---|\n|flex-start|默认值，起点开始排序|\n|flex-end|终点向起点开始排列|\n|center|沿主轴居中排列|\n|space-around|弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子两侧|\n|space-between|弹性盒子沿主轴均匀排列，空白间距均分在相邻盒子之间|\n|space-evenly|弹性盒子沿主轴均匀排列，弹性盒子与容器之间间距相等|\n\n* 侧轴对齐方式\n* 属性：`align-items` (添加到父元素里面)\n* 注意：`align-items`属性值只能设置一个，后面会覆盖前面的。当子元素有高度`stretch`会失效\n\n|属性值|作用|\n|:---:|---|\n|flex-start|默认值，起点开始排序|\n|flex-end|终点向起点开始排列|\n|center|沿侧轴居中排列|\n|stretch|默认值，弹性盒子沿主轴拉伸至铺满容器|\n\n* 伸缩比：占用父元素剩余尺寸的份数\n* 属性：`flex`\n* 取值：数值（整数）\n\n### 2.移动适配\n\n#### 2.1 rem使用\n\n* 相对单位\n* rem单位是相对于HTML标签的字号计算结果\n* 1rem=1HTML字号大小\n\n需要设置html标签字号`font-size: 15px`\n使用媒体查询设置差异化CSS样式\n\n```css\n@media (媒体特性) {\n  选择器{\n    CSS属性\n  }\n}\n\n@media (width:320px) {\n  html{\n    font-size: 32px;\n  }\n}\n```\n\n目前rem布局方案中，将网页等分成10份，HTML标签的字号为视口宽度的1/10\n\n#### 2.2 less\n\n目标：快速编译生成CSS代码\n\nless是一个CSS预处理器，扩充CSS语言，使CSS具备一定的逻辑性\n\n浏览器不识别less代码\n\n* 注释\n  * 单行注释：`//`\n  * 多行注释：`/**/`\n* 运算\n  * `+`、`-`、`*`直接使用\n  * 除法需要添加小括号包裹整个表达式或者`.`\n* 后代选择器\n  * 在父元素选择器里面写选择器（嵌套），表示父子级的选择关系\n  * 在父元素选择器里面写选择器，在里面选择器前面添加`&`表示平级关系\n* 变量\n  * 把变量存储到一个容器，设置属性值为这个容器名\n  * 作用就是存储数据，方便修改\n* 语法：\n  * 定义变量：`@变量名: 值;`\n  * 使用变量：`CSS变量: @变量名;`\n* 导入其他less文件\n  * 语法：`@import \"文件路径\";`\n  * 可以省略`.less`后缀\n* 导出CSS文件\n  * VScode插件`easyLess`可以自动保存并生成CSS文件\n  * 禁止导出：在less文件第一行添加：`// out:false`\n\n#### 2.3 vw/vh单位\n\n* 相对单位\n* vw：viewport width\n  * 1vw=1/100视口宽度\n  * vw尺寸 = px单位数值/(0.01*视口宽度)\n* vh：viewport height\n  * 1vh=1/100视口高度\n  * vh尺寸 = px单位数值/(0.01*视口高度)\n* 不允许vw和vh混用，宽高都用vw\n\n### 3.响应式web\n\n#### 3.1 媒体查询\n\n* 目标：根据设备宽度的变化，设置差异化样式\n* 媒体特性写法：\n  * max-width：小于等于该宽度\n  * min-width：大于等于该宽度\n  * 具有层叠性，后面会覆盖前面的\n\n```css\n@meida (min-width: 768px){\n\n}\n\n@meida (min-width: 992px){\n  \n}\n\n@meida (min-width: 1200px){\n  \n}\n```\n\n* 在link标签中使用媒体查询\n\n```html\n<link rel=\"stylesheet\" href=\"one.css\" media=\"(min-width: 768px)\">\n```\n\n#### 3.2 BootStrap的安装和使用\n\n[BootStrap](https://v5.bootcss.com/)是一个开源的响应式前端UI框架\n\n```bash\n# 安装BootStrap\nnpm install bootstrap\n# 安装BootStrap的图标库\nnpm i bootstrap-icons\n```\n\n```html\n<!-- 引入BootStrap及图标库-->\n<link rel=\"stylesheet\" href=\"node_modules/bootstrap/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"node_modules/bootstrap-icons/font/bootstrap-icons.css\">\n```\n\n#### 3.3 BootStrap的栅格系统\n\n* 目标：使用BootStrap栅格系统布局响应式网页\n* 栅格化是指将整个网页的宽度分成若干等份\n* BootStrap默认将网页分成12等份\n\n| |超小屏幕|小屏幕|中等屏幕|大屏幕|超大屏幕|超超大屏幕|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|响应断点|<576px|≥576px|≥768px|≥992px|≥1200px|≥1400px|\n|别名|xs|sm|md|lg|xl|xxl|\n|容器宽度|100%|540px|720px|960px|1140px|1320px|\n|类前缀|.col-|.col-sm-|.col-md-|.col-lg-|.col-xl-|.col-xxl-|\n|列数|12|12|12|12|12|12|\n|列间隙|30px|30px|30px|30px|30px|30px|\n\n* `.container`类自带间距15px\n* `.row`类自带-15px，用来定义栅格布局的行和列\n","source":"_posts/计算机/前端/CSS3快速入门语法.md","raw":"---\ntitle: CSS3快速入门语法\nimg: https://images.pexels.com/photos/8160274/pexels-photo-8160274.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\nexcerpt: CSS3的学习笔记，以备查找和复习。\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [前端,编程语法,CSS3]\nmathjax: true\ndate: 2022-04-23 15:51:23\n---\n\n# CSS3快速入门语法\n\n## 一、基本语法\n\n### 1.前言\n\n参考视频：<https://www.bilibili.com/video/BV1Kg411T7t9?p=45>\n\n作用：美化网页、布局页面\n\n语法结构：\n选择器{\n  属性：属性值；\n}\n\n注释 ：  /*这是层叠样式表里面的注释*/\n\n* 内嵌式：在`<style>`标签内书写，`<style>`标签放在`<head>`标签内\n\n* 外联式：写在.css文件中，需要通过`<link>`标签在网页引入\n\n  ```html\n  <link rel=\"stylesheet\" href=\"url\">\n   ```\n\n* 行内式：写在标签的style属性中\n\n### 2.基础选择器\n\n#### 2.1 标签选择器\n\n```css\n标签名{\n 属性: 属性值;\n}\n```\n\n作用：选择某一类标签。\n\n#### 2.2 类选择器\n\n```css\n.类名{\n 属性：属性值； \n}\n```\n\n作用：选择class属性值等于类名的标签。\n\n多类名：一个标签可以有多个类名，都在class类里面，不同类名用空格隔开\n\n类名：由字母、数字、下划线、中划线组成，不能用中划线和数字开头。\n\n#### 2.3 id选择器\n\n```css\n#id{\n 属性：属性值；\n}\n```\n\n作用：选择特定id属性的标签。\n\n标签的id属性在整个页面唯一存在，一个标签对应一个id，通常与js搭配。\n\n#### 2.4 通配符选择器\n\n```css\n*{\n 属性：属性值；\n}\n```\n\n作用：选择所有的标签。\n\n### 3.字体属性\n\n#### 3.1 字体大小\n\n* 属性名：font-size\n* 取值：数字+px\n* 注意：谷歌浏览器默认16px，单位需要设置\n\n#### 3.2 字体粗细\n\n* 属性值：font-weight\n* 取值：\n  | 属性值  | 描述                 |\n  | --------- | ---------------------- |\n  | normal  | 默认值，不加粗       |\n  | bold    | 加粗                 |\n  | 100~900 | 400=normal，700=bold |\n  \n#### 3.3 字体样式\n\n* 属性名：font-style\n* 取值：\n    属性值  | 描述                 |\n  | --------- | ---------------------- |\n  | normal  | 默认值，不倾斜      |\n  | italic    | 倾斜               |\n\n#### 3.4 字体\n\n* 属性名：font-family\n* 取值：字体1，字体2，.....\n* 注意：\n  * 默认字体微软雅黑\n  * 从左到右查找字体来展现，可以写具体字体或者一系列字体sans-serif等\n\n#### 3.5 字体属性连写\n\n* 属性名：font\n* 取值：\n  * font：style weight size family;\n  * font:  normal 400 80px 微软雅黑;\n* 注意：\n  * 复合属性，不能改变顺序，只能省略前两个属性\n\n### 4.文本属性\n\n#### 4.1 文本缩进\n\n* 属性名：text-indent\n* 取值：\n  * 数字+px，px单位，像素值\n  * 数字+em，em单位，相对单位，也就是当前一个字符距离\n\n#### 4.2 文本水平对齐\n\n* 属性名：text-align\n* 取值：\n  | 属性值 | 描述   |\n  | -------- | -------- |\n  | left   | 左对齐 |\n  | right  | 右对齐 |\n  | center | 居中   |\n\n#### 4.3 文本修饰\n\n* 属性名：text-decoration\n* 取值：\n  | 属性值       | 描述               |\n  | -------------- | -------------------- |\n  | none         | 默认，无任何装饰线 |\n  | underline    | 下划线             |\n  | overline     | 上划线             |\n  | line-through | 删除线             |\n\n#### 4.4 行高\n\n* 属性名：line-height\n* 取值：\n  * 数字+px\n  * 字号的倍数\n* 注意：\n  * 行间距/行高=上间距+文字高度+下间距\n  * font：style weight size/line-height family;\n  * font:  normal 400 80px/1.5 微软雅黑;\n\n#### 4.5 字体颜色\n\n* 属性名：color，background-color\n* 取值：\n  | 颜色       | 属性值                            |\n  | ------------ | ----------------------------------- |\n  | 预定义颜色 | red，green，blue，pink  ，.......          |\n  | rgb表示（无透明度）    | rgb(255,0,0),.... |\n  | rgb表示（有透明度）    | rgb(255,0,0,0.5),.... |\n  | 16进制     | #FF0000,#eeeeee ,#000,......    |\n\n## 二、进阶语法\n\n### 1.复合选择器\n\n#### 1.1 后代选择器\n\n* 语法：选择器1 选择器2 {css}\n* 说明：根据HTML标签的嵌套关系，选择父元素的后代中满足条件的元素\n* 注意：\n  * 后代包括：儿子，孙子，重孙子，.......\n  * 选择器之间用空格隔开\n\n#### 1.2 子代选择器\n\n* 语法：选择器1>选择器2 {css}\n* 说明：根据HTML标签的嵌套关系，选择父元素的子代中满足条件的元素\n* 注意：\n  * 子代只包括：儿子\n  * 选择器之间用`>`隔开\n\n#### 1.3 并集选择器\n\n* 语法：选择器1,选择器2 {css}\n* 说明：同时选择多组标签，设置相同样式\n* 注意：\n  * 每组选择器可以是基础选择器或者复合选择器\n  * 选择器之间用`,`隔开\n\n#### 1.4 交集选择器\n\n* 语法：选择器1选择器2 {css}\n* 说明：同时满足多个选择器的标签\n\n#### 1.5 hover伪类选择器\n\n* 语法：选择器：hover {css}\n* 说明：鼠标悬停在选择器的元素上时，改变其样式\n\n#### 1.6 Emment语法\n\n* 说明：VScode的语法简写，快速生成代码\n\n|说明|语法|效果|\n|----|----|----|\n|标签名|div|`<div></div>`|\n|类选择器|.red|`<div class=\"red\"></div>`|\n|id选择器|#one|`<div id=\"one\"></div>`|\n|交集选择器|p.red#one|`<p class=\"red\" id=\"one\"></p>`|\n|子代选择器|ul>li|`<ul><li></li></ul>`|\n|内部文本|ul>li{222}|`<ul><li>222</li></ul>`|\n|创建多个|ul>li*3|`<ul><li></li><li></li><li></li></ul>`|\n\n### 2.背景属性\n\n#### 2.1 背景颜色\n\n* 属性名：background-color\n* 属性值：关键字、rgb值、16进制\n\n#### 2.2 背景图片\n\n* 属性名：background-image\n* 属性值：background-image：url('图片路径');\n\n#### 2.3 背景平铺\n\n* 属性名：background-repeat\n* 属性值：\n  |取值|效果|\n  |----|----|\n  |repeat|（默认值）水平和垂直方向都平铺|\n  |no-repeat|不平铺|\n  |repeat-x|水平平铺|\n  |repeat-y|垂直平铺|\n\n#### 2.4 背景位置\n\n* 属性名：background-position\n* 属性值：background-position: 水平方向位置  垂直方向位置；\n\n```mermaid\nflowchart LR\n    Start(属性值) --> res11[方位词]\n    Start(属性值) --> res12[数字+px]\n    res11-->res21[水平方向]\n    res11-->res22[垂直方向]\n    res12--->水平方向:从左向右移动\n    res12--->垂直方向:从上向下移动\n    res21-->left\n    res21-->res31[center]\n    res21-->right\n    res22-->top\n    res22-->center\n    res22-->bottom\n```\n\n#### 2.5 背景属性连写\n\n* 属性名：background\n* 属性值：background： color image repeat position；\n* 注意：不分先后顺序\n\n### 3.元素显示模式\n\n#### 3.1 块级元素\n\n* 显示特点：\n  1. 独占一行\n  2. 宽度默认为父元素宽度，高度取决于内容\n  3. 可以设置宽高\n* 代表标签：\n  * div、p、h、ul、li、dl等\n\n#### 3.2 行内元素\n\n* 显示特点：\n  1. 一行显示多个\n  2. 宽度高度取决于内容\n  3. 不可以设置宽高\n* 代表标签：\n  * a、span、b、u、i、strong等\n\n#### 3.3 行内块元素\n\n* 显示特点：\n  1. 一行显示多个\n  2. 可以设置宽高\n* 代表标签：\n  * input、textarea、button等\n\n#### 3.4 元素显示模式转换\n\n* 作用：改变元素默认显示的特点\n* 语法：\n  |属性|效果|\n  |----|----|\n  |display：block|转化为块元素|\n  |display：inline-block|转化为行内块元素|\n  |display：inline|转化为行内元素|\n\n#### 3.5 特性\n\n* 继承性：子元素的文字属性全部继承父元素（浏览器有默认样式会覆盖）\n* 层叠性：同优先级，后面的样式会覆盖前面的样式\n* 优先级：不同的选择器具有不同的优先级，优先级高的会覆盖优先级低的\n  * 优先级顺序：继承<通配符选择器<标签选择器<类选择器<`id`选择器<行内样式<!important\n\n### 4.盒子模型\n\n> 每一个标签都可以看作一个盒子，浏览器显示网页的每一个矩形区块都可以称为盒子\n> 每个盒子分别由：内容区域、内边距区域、边框区域、外边距区域构成。\n> 工具推荐：PxCook+浏览器调试工具\n\n#### 4.1 内容区域的宽度和高度\n\n* 作用：利用width和height属性默认设置是盒子内容区域的大小\n* 属性：width，height\n* 属性值：数字+px\n\n#### 4.2 边框\n\n* 作用：设置边框粗细、样式和颜色\n* 属性：border\n* 属性值：\n  * 连写：线宽 线型 颜色；\n  * border: 10px solid red;\n  * 单写属性：\n  \n    |属性名|属性值|\n    |----|----|\n    |border-width|数字+px|\n    |border-style|实线solid、虚线dashed、点线dotted|\n    |border-color|16进制、rgb值、关键字|\n  * 某一方向边框属性连写设置：border-left、border-right等。\n\n#### 4.3 内边距\n\n* 作用：设置文字与边框的距离\n* 属性：padding\n* 属性值：数字+px\n  * 四个值：上   右  下  左 （顺时针）\n  * 三个值：上   左右   下\n  * 两个值：上下   左右\n* 边框和内边距会撑大整体的宽高，所以设置`box-sizing: border-box;`自适应调整大小不会撑开宽高。\n\n#### 4.4 外边距\n\n* 作用：盒子外边的距离\n* 属性：margin\n* 属性值：数字+px（与内边距相同）\n* 清除样式\n\n  ```css\n  *{\n    margin: 0;\n    padding: 0;\n  }\n  ```\n\n* 版心居中：`margin: 0 auto;`\n\n### 5.补充选择器\n\n#### 5.1 结构伪类选择器\n\n* 作用：根据元素在HTML的结构关系查找元素\n* 用法：\n  |选择器|说明|\n  |-----|-----|\n  |E:first-child{}|匹配父元素第一个子元素，并且是E元素|\n  |E:last-child{}|匹配父元素最后一个子元素，并且是E元素|\n  |E:nth-child(n){}|匹配父元素第n个子元素，并且是E元素|\n  |E:nth-last-child(n){}|匹配父元素倒数第n个子元素，并且是E元素|\n* n的选择：\n  * 常见：1、2、3、4、.......\n\n  |功能|公式|\n  |----|-----|\n  |偶数|2n、even|\n  |奇数|2n+1、2n-1、odd|\n  |找到前5个|-n+5|\n  |找到从第5个往后|n+5|\n\n#### 5.2 伪元素\n\n* 作用：由css模拟出标签效果，能够使用伪元素在网页中创建内容\n* 用法：\n  \n  |伪元素|作用|\n  |----|-----|\n  |::before|在父元素内容的最前添加一个伪元素|\n  |::after|在父元素内容的最后添加一个伪元素|\n\n  ```css\n  选择器::before{\n    content: \"内容\";\n    width: 100px;\n  }\n  ```\n\n* 注意：\n  * 必须设置content属性才能生效\n  * 默认为行内元素\n  * 常用于装饰小图标\n\n#### 5.3 浮动\n\n* 作用：图文环绕，网页布局\n* 属性：float\n* 注意：\n  1. 会让元素不占用标准流的位置来布局，标准流的元素会挤上来\n  2. 高标准流半个级别，可以覆盖标准流的元素\n  3. 类似行内块元素\n  4. 不能设置常规的居中方式\n\n#### 5.4 清除浮动\n\n* 作用：清除浮动带来的影响\n* 原因：子元素浮动后脱标-->不占位\n* 方法：\n\n 1. 直接设置父元素高度\n 2. 额外标签法：给父元素最后添加一个块元素，给块元素设置clear：both\n 3. 单伪元素清除法：用伪元素替代额外标签\n 4. 双伪元素清除法\n 5. 给父元素设置overflow：hidden\n\n### 6.定位\n\n#### 6.1 基本使用\n\n* 属性名：position\n* 常见属性值：\n  |定位方式|属性值|\n  |:------:|:---------:|\n  |静态定位|static|\n  |相对定位|relative|\n  |绝对定位|absolute|\n  |固定定位|fixed|\n* 设置偏移值：偏移值设置两个方向\n  |方向|属性名|属性值|含义|\n  |:---:|:----:|:----:|:----:|\n  |水平|left|数字+px|距离左边的距离|\n  |水平|right|数字+px|距离右边的距离|\n  |垂直|top|数字+px|距离上边的距离|\n  |垂直|bottom|数字+px|距离下边的距离|\n\n#### 6.2 相对定位\n\n* 作用：相对于自己之前的位置移动\n* 用法：position：relative；\n* 特点：\n  1. 需要配合方位属性实现移动。\n  2. 相对于自己原来的位置移动。\n  3. 原来的位置存在占位，不脱标。\n\n#### 6.3 绝对定位\n\n* 作用：相对于定位的父元素进行定位移动\n* 用法：position：absolute；\n* 特点：\n  1. 脱标的占位置\n  2. 具有行内块的特点\n\n#### 6.4 固定定位\n\n* 作用：相对于浏览器进行定位移动\n* 用法：position：fixed；\n* 特点：\n  1. 需要配合方位属性实现移动\n  2. 相对与浏览器可视区域移动\n  3. 在页面不占位置，已经脱标\n\n#### 6.5 元素的层级关系\n\n* 层级关系：标准流<浮动<定位\n* 不同定位之间的层级：默认层级相同，写在后面的会覆盖前面的\n\n### 7.装饰\n\n#### 7.1 垂直对齐\n\n* 作用：解决行内元素（图片和文字）的垂直对齐问题\n* 属性名：vertical-align\n* 属性值：\n  |属性值|效果|\n  |:---:|:----:|\n  |baseline|默认，基线对齐|\n  |top|顶部对齐|\n  |middle|中部对齐|\n  |bottom|底部对齐|\n\n#### 7.2 光标的类型\n\n* 作用：改变鼠标的样式\n* 属性名：cursor\n* 属性值：\n  |属性值|效果|\n  |----|-----|\n  |default|默认值，箭头|\n  |pointer|小手|\n  |text|工字型|\n  |move|十字拖动标|\n\n#### 7.3 边框圆角\n\n* 属性名：border-radius\n* 取值：数字（半径）+px、百分比\n  * border-radius：10px；说明四个角曲率相同\n  * border-radius： 10px  10px 10px 10px；四个角可以一个一个设置（顺时针）\n\n#### 7.4 溢出显示效果\n\n* 属性名：overflow\n* 属性值：\n  |属性值|效果|\n  |----|-----|\n  |visible|默认值，溢出部分可见|\n  |hidden|溢出部分隐藏|\n  |scroll|无论是否溢出都显示滚动条|\n  |auto|根据是否溢出，自动显示或隐藏滚动条|\n\n#### 7.5 元素本身隐藏\n\n* 用法：visibility：hidden\n             display：none\n\n#### 7.6 元素的透明度\n\n* 作用：让元素整体包括内容一起变透明\n* 属性名：opacity\n* 属性值：0（完全透明）~1（完全不透明）之间的数字\n\n### 8.样式补充\n\n#### 8.1 精灵图\n\n* 作用：将小图合并成大图，减轻服务器的压力（服务器会发送小图整合图，网页接收图片后“裁剪”出小图来显示）\n* 使用：\n  1. 创建一个盒子，设置盒子的尺寸与小图尺寸一样\n  2. 将精灵图设置为盒子背景图\n  3. 修改背景图位置：background-position：x y；\n\n#### 8.2 背景图覆盖\n\n* 作用：设置背景图覆盖方式\n* 用法：background-size：宽度 高度；\n* 取值：\n  |取值|场景|\n  |----|-----|\n  |数字+px|常用|\n  |百分比|相对于当前盒子的宽高百分比|\n  |contain|包含，将背景图片等比例缩放，直到不会超过盒子的大小|\n  |cover|覆盖，将图片填满整个盒子没有空白|\n\n#### 8.3 盒子阴影\n\n* 作用：给盒子添加阴影\n* 属性名：box-shadow\n* 取值：连写赋值\n  |参数|作用|\n  |----|-----|\n  |h-shadow|必须，水平偏移量|\n  |v-shadow|必须，垂直偏移量|\n  |blur|可选，模糊度|\n  |spread|可选，阴影扩大|\n  |color|可选，阴影颜色|\n  |inset|可选，将阴影改为内部阴影|\n\n#### 8.4 过渡\n\n* 作用：配合hover使用，让元素慢慢变化\n* 属性名：transition\n* 取值：\n  |参数|取值|\n  |----|------|\n  |过渡的属性|all：所有属性过渡；具体属性名|\n  |过渡的时长|数字+s（秒）|\n\n#### 8.5 SEO搜索引擎优化\n\n* 作用：让网站在搜索引擎的排名靠前\n* 方法：\n  1. 竞价排名\n  2. 将网页制作html后缀\n  3. 标签语义化\n     1. title：网页标题标签\n     2. description：网页描述标签\n     3. keywords：网页关键词标签\n\n* 添加图标\n\n```html\n<link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\">\n```\n\n### 9.动态\n\n#### 9.1 平面转换\n\n改变盒子在平面的形态（位移、旋转、缩放）\n2D转换\n属性：**transform**\n\n* 位移\n  * 语法：`transform: translate (水平移动距离,垂直移动距离);`\n  * 取值：\n    * 数值+px\n    * 百分比（参照物为盒子自身尺寸）\n  * 注意：\n    * translateX() 仅水平移动\n    * translateY() 仅垂直移动\n* 旋转\n  * 语法：`transform: rotate(角度);`\n  * 取值：\n    * 数值+deg\n  * 注意：\n    * 可以取正负\n* 转换原点\n  * 语法：`transform-origin: 原点水平位置 原点垂直位置;`\n  * 取值：\n    * 方位名词：left、top、right、bottom、center\n    * 数值+px\n    * 百分比\n  * 注意：\n    * 默认原点是盒子中心点\n    * 原点就是物体旋转点\n    * 需要先位移后旋转\n* 缩放\n  * 语法：`transform: scale(x轴缩放倍率,y轴缩放倍率);` `transform: scale(等比缩放倍率);`\n  * 取值：数值\n  * 注意：\n    * 数值可以为小数\n* 渐变\n  * 语法：`background-image: linear-gradient(方向, 颜色1, 颜色2,...);`\n  * 取值：\n    * 方向取值为`to+空格+方位名词`，表示往拿个方向渐变\n    * 颜色可以取多个值，表示多种颜色的渐变\n\n#### 9.2 空间转换\n\n实现元素在空间内的位移、旋转、缩放。\n3D转换，z轴垂直于屏幕\n空间转换属性：**transform**\n\n* 位移\n  * 语法：\n    * `transform: translate3d(x,y,z)`\n    * `transform: translateX(值)`\n    * `transform: translateY(值)`\n    * `transform: translateZ(值)`\n  * 取值：\n    * 数值+px\n    * 可以正负\n* 透视\n  * 语法：`perspective: 值;`\n  * 取值：数值+px （建议800-1200）\n  * 只有设置了透视，Z方向的位移才能有明显的变化\n* 旋转\n  * 语法：\n    * `transform: rotateX(角度)`\n    * `transform: rotateY(角度)`\n    * `transform: rotateZ(角度)`\n    * `transform: rotate3d(x,y,z,角度)`\n  * 取值：\n    * 数值+deg\n    * x,y,z为0-1的数字来自定义旋转轴的位置\n* 立体呈现\n  * 语法：`transform-style: preserve-3d;`\n* 缩放\n  * 语法：\n    * `transform: scaleX(倍数)`\n    * `transform: scaleY(倍数)`\n    * `transform: scaleZ(倍数)`\n    * `transform: scale3d(x,y,z)`\n  * 取值：数字（整数或小数）\n\n#### 9.3 动画\n\n* 使用animation添加动画\n* 动画效果：实现多个状态之间的变化过程，动画过程可控\n\n```css\n.one{\n  width: 400px;\n  height: 200px;\n  background-color: #f00;\n  margin: 100px 0;\n  /*使用动画*/\n  animation: change 3s;\n}\n\n/*自定义动画：只能有两个状态的变化*/\n@keyframes change{\n  from{\n    width: 100px;\n  }\n  to{\n    width: 400px;\n  }\n}\n\n/*自定义动画：多个状态的变化，百分比为占用动画时长的百分比*/\n@keyframes change{\n  20%{\n    background-color: blue;\n    width: 100px;\n  }\n  40%{\n    background-color: green;\n    width: 200px;\n  }\n  60%{\n    background-color: pink;\n    width: 300px;\n  }\n  100%{\n    background-color: red;\n    width: 400px;\n  }\n}\n```\n\n* 语法:\n  * `animation: 动画名称 动画时长 速度曲线 延迟时间 重复次数 动画方向 执行完毕时的状态;`\n  * `animation: name duration timing-function delay iteration-count direction fill-mode;`\n* 注意：\n  * 动画名称和动画时长为必须属性值\n  * 可选属性值的取值不分先后\n  * 无限循环属性值 `infinite`\n  * 动画方向属性值： `alternate` 从尾到头快速执行动画\n  * 速度曲线：`steps(数字)` 逐帧动画\n\n## 三、移动端Web\n\n* PC端网页与移动端网页的区别\n  * PC屏幕大，网页固定版心\n  * 手机屏幕小，网页宽度多数为100%\n\n参考逻辑分辨率，一般选用`iPhone 6/7/8`设备来参考开发\n\n视口：规定html大小，让html宽度与设备宽度一样，没有视口标签宽度就为**980px**：\n`<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">`\n\n百分比布局（流式布局）：宽度自适应，高度固定。（古老布局）\n\n### 1.Flex布局\n\n#### 1.1 基本使用\n\n* 作用：\n  * 基于Flex精确灵活控制块级盒子的布局方式，避免浮动布局中脱离文档流的现象发生。\n  * Flex布局非常适合结构化布局\n* 语法：\n  * 在父元素添加 `display: flex`\n* 组成：\n  * 弹性容器\n  * 弹性盒子\n  * 主轴\n  * 侧轴/交叉轴\n\n#### 1.2 对齐\n\n* 主轴对齐方式\n* 属性：`justify-content` (添加在父元素里面)\n\n|属性值|作用|\n|:---:|---|\n|flex-start|默认值，起点开始排序|\n|flex-end|终点向起点开始排列|\n|center|沿主轴居中排列|\n|space-around|弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子两侧|\n|space-between|弹性盒子沿主轴均匀排列，空白间距均分在相邻盒子之间|\n|space-evenly|弹性盒子沿主轴均匀排列，弹性盒子与容器之间间距相等|\n\n* 侧轴对齐方式\n* 属性：`align-items` (添加到父元素里面)\n* 注意：`align-items`属性值只能设置一个，后面会覆盖前面的。当子元素有高度`stretch`会失效\n\n|属性值|作用|\n|:---:|---|\n|flex-start|默认值，起点开始排序|\n|flex-end|终点向起点开始排列|\n|center|沿侧轴居中排列|\n|stretch|默认值，弹性盒子沿主轴拉伸至铺满容器|\n\n* 伸缩比：占用父元素剩余尺寸的份数\n* 属性：`flex`\n* 取值：数值（整数）\n\n### 2.移动适配\n\n#### 2.1 rem使用\n\n* 相对单位\n* rem单位是相对于HTML标签的字号计算结果\n* 1rem=1HTML字号大小\n\n需要设置html标签字号`font-size: 15px`\n使用媒体查询设置差异化CSS样式\n\n```css\n@media (媒体特性) {\n  选择器{\n    CSS属性\n  }\n}\n\n@media (width:320px) {\n  html{\n    font-size: 32px;\n  }\n}\n```\n\n目前rem布局方案中，将网页等分成10份，HTML标签的字号为视口宽度的1/10\n\n#### 2.2 less\n\n目标：快速编译生成CSS代码\n\nless是一个CSS预处理器，扩充CSS语言，使CSS具备一定的逻辑性\n\n浏览器不识别less代码\n\n* 注释\n  * 单行注释：`//`\n  * 多行注释：`/**/`\n* 运算\n  * `+`、`-`、`*`直接使用\n  * 除法需要添加小括号包裹整个表达式或者`.`\n* 后代选择器\n  * 在父元素选择器里面写选择器（嵌套），表示父子级的选择关系\n  * 在父元素选择器里面写选择器，在里面选择器前面添加`&`表示平级关系\n* 变量\n  * 把变量存储到一个容器，设置属性值为这个容器名\n  * 作用就是存储数据，方便修改\n* 语法：\n  * 定义变量：`@变量名: 值;`\n  * 使用变量：`CSS变量: @变量名;`\n* 导入其他less文件\n  * 语法：`@import \"文件路径\";`\n  * 可以省略`.less`后缀\n* 导出CSS文件\n  * VScode插件`easyLess`可以自动保存并生成CSS文件\n  * 禁止导出：在less文件第一行添加：`// out:false`\n\n#### 2.3 vw/vh单位\n\n* 相对单位\n* vw：viewport width\n  * 1vw=1/100视口宽度\n  * vw尺寸 = px单位数值/(0.01*视口宽度)\n* vh：viewport height\n  * 1vh=1/100视口高度\n  * vh尺寸 = px单位数值/(0.01*视口高度)\n* 不允许vw和vh混用，宽高都用vw\n\n### 3.响应式web\n\n#### 3.1 媒体查询\n\n* 目标：根据设备宽度的变化，设置差异化样式\n* 媒体特性写法：\n  * max-width：小于等于该宽度\n  * min-width：大于等于该宽度\n  * 具有层叠性，后面会覆盖前面的\n\n```css\n@meida (min-width: 768px){\n\n}\n\n@meida (min-width: 992px){\n  \n}\n\n@meida (min-width: 1200px){\n  \n}\n```\n\n* 在link标签中使用媒体查询\n\n```html\n<link rel=\"stylesheet\" href=\"one.css\" media=\"(min-width: 768px)\">\n```\n\n#### 3.2 BootStrap的安装和使用\n\n[BootStrap](https://v5.bootcss.com/)是一个开源的响应式前端UI框架\n\n```bash\n# 安装BootStrap\nnpm install bootstrap\n# 安装BootStrap的图标库\nnpm i bootstrap-icons\n```\n\n```html\n<!-- 引入BootStrap及图标库-->\n<link rel=\"stylesheet\" href=\"node_modules/bootstrap/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"node_modules/bootstrap-icons/font/bootstrap-icons.css\">\n```\n\n#### 3.3 BootStrap的栅格系统\n\n* 目标：使用BootStrap栅格系统布局响应式网页\n* 栅格化是指将整个网页的宽度分成若干等份\n* BootStrap默认将网页分成12等份\n\n| |超小屏幕|小屏幕|中等屏幕|大屏幕|超大屏幕|超超大屏幕|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|响应断点|<576px|≥576px|≥768px|≥992px|≥1200px|≥1400px|\n|别名|xs|sm|md|lg|xl|xxl|\n|容器宽度|100%|540px|720px|960px|1140px|1320px|\n|类前缀|.col-|.col-sm-|.col-md-|.col-lg-|.col-xl-|.col-xxl-|\n|列数|12|12|12|12|12|12|\n|列间隙|30px|30px|30px|30px|30px|30px|\n\n* `.container`类自带间距15px\n* `.row`类自带-15px，用来定义栅格布局的行和列\n","slug":"计算机/前端/CSS3快速入门语法","published":1,"updated":"2022-05-15T06:01:30.308Z","layout":"post","photos":[],"_id":"cm1z7gipk000jdwvx14j5dnxk","content":"<h1 id=\"CSS3快速入门语法\"><a href=\"#CSS3快速入门语法\" class=\"headerlink\" title=\"CSS3快速入门语法\"></a>CSS3快速入门语法</h1><h2 id=\"一、基本语法\"><a href=\"#一、基本语法\" class=\"headerlink\" title=\"一、基本语法\"></a>一、基本语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>参考视频：<a href=\"https://www.bilibili.com/video/BV1Kg411T7t9?p=45\">https://www.bilibili.com/video/BV1Kg411T7t9?p=45</a></p>\n<p>作用：美化网页、布局页面</p>\n<p>语法结构：<br>选择器{<br>  属性：属性值；<br>}</p>\n<p>注释 ：  &#x2F;<em>这是层叠样式表里面的注释</em>&#x2F;</p>\n<ul>\n<li><p>内嵌式：在<code>&lt;style&gt;</code>标签内书写，<code>&lt;style&gt;</code>标签放在<code>&lt;head&gt;</code>标签内</p>\n</li>\n<li><p>外联式：写在.css文件中，需要通过<code>&lt;link&gt;</code>标签在网页引入</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>行内式：写在标签的style属性中</p>\n</li>\n</ul>\n<h3 id=\"2-基础选择器\"><a href=\"#2-基础选择器\" class=\"headerlink\" title=\"2.基础选择器\"></a>2.基础选择器</h3><h4 id=\"2-1-标签选择器\"><a href=\"#2-1-标签选择器\" class=\"headerlink\" title=\"2.1 标签选择器\"></a>2.1 标签选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签名&#123;</span><br><span class=\"line\"> 属性: 属性值;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择某一类标签。</p>\n<h4 id=\"2-2-类选择器\"><a href=\"#2-2-类选择器\" class=\"headerlink\" title=\"2.2 类选择器\"></a>2.2 类选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.类名&#123;</span><br><span class=\"line\"> 属性：属性值； </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择class属性值等于类名的标签。</p>\n<p>多类名：一个标签可以有多个类名，都在class类里面，不同类名用空格隔开</p>\n<p>类名：由字母、数字、下划线、中划线组成，不能用中划线和数字开头。</p>\n<h4 id=\"2-3-id选择器\"><a href=\"#2-3-id选择器\" class=\"headerlink\" title=\"2.3 id选择器\"></a>2.3 id选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#id</span>&#123;</span><br><span class=\"line\"> 属性：属性值；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择特定id属性的标签。</p>\n<p>标签的id属性在整个页面唯一存在，一个标签对应一个id，通常与js搭配。</p>\n<h4 id=\"2-4-通配符选择器\"><a href=\"#2-4-通配符选择器\" class=\"headerlink\" title=\"2.4 通配符选择器\"></a>2.4 通配符选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\"> 属性：属性值；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择所有的标签。</p>\n<h3 id=\"3-字体属性\"><a href=\"#3-字体属性\" class=\"headerlink\" title=\"3.字体属性\"></a>3.字体属性</h3><h4 id=\"3-1-字体大小\"><a href=\"#3-1-字体大小\" class=\"headerlink\" title=\"3.1 字体大小\"></a>3.1 字体大小</h4><ul>\n<li>属性名：font-size</li>\n<li>取值：数字+px</li>\n<li>注意：谷歌浏览器默认16px，单位需要设置</li>\n</ul>\n<h4 id=\"3-2-字体粗细\"><a href=\"#3-2-字体粗细\" class=\"headerlink\" title=\"3.2 字体粗细\"></a>3.2 字体粗细</h4><ul>\n<li>属性值：font-weight</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>normal</td>\n<td>默认值，不加粗</td>\n</tr>\n<tr>\n<td>bold</td>\n<td>加粗</td>\n</tr>\n<tr>\n<td>100~900</td>\n<td>400&#x3D;normal，700&#x3D;bold</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"3-3-字体样式\"><a href=\"#3-3-字体样式\" class=\"headerlink\" title=\"3.3 字体样式\"></a>3.3 字体样式</h4><ul>\n<li>属性名：font-style</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>normal</td>\n<td>默认值，不倾斜</td>\n</tr>\n<tr>\n<td>italic</td>\n<td>倾斜</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"3-4-字体\"><a href=\"#3-4-字体\" class=\"headerlink\" title=\"3.4 字体\"></a>3.4 字体</h4><ul>\n<li>属性名：font-family</li>\n<li>取值：字体1，字体2，…..</li>\n<li>注意：<ul>\n<li>默认字体微软雅黑</li>\n<li>从左到右查找字体来展现，可以写具体字体或者一系列字体sans-serif等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-5-字体属性连写\"><a href=\"#3-5-字体属性连写\" class=\"headerlink\" title=\"3.5 字体属性连写\"></a>3.5 字体属性连写</h4><ul>\n<li>属性名：font</li>\n<li>取值：<ul>\n<li>font：style weight size family;</li>\n<li>font:  normal 400 80px 微软雅黑;</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>复合属性，不能改变顺序，只能省略前两个属性</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-文本属性\"><a href=\"#4-文本属性\" class=\"headerlink\" title=\"4.文本属性\"></a>4.文本属性</h3><h4 id=\"4-1-文本缩进\"><a href=\"#4-1-文本缩进\" class=\"headerlink\" title=\"4.1 文本缩进\"></a>4.1 文本缩进</h4><ul>\n<li>属性名：text-indent</li>\n<li>取值：<ul>\n<li>数字+px，px单位，像素值</li>\n<li>数字+em，em单位，相对单位，也就是当前一个字符距离</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-2-文本水平对齐\"><a href=\"#4-2-文本水平对齐\" class=\"headerlink\" title=\"4.2 文本水平对齐\"></a>4.2 文本水平对齐</h4><ul>\n<li>属性名：text-align</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>left</td>\n<td>左对齐</td>\n</tr>\n<tr>\n<td>right</td>\n<td>右对齐</td>\n</tr>\n<tr>\n<td>center</td>\n<td>居中</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"4-3-文本修饰\"><a href=\"#4-3-文本修饰\" class=\"headerlink\" title=\"4.3 文本修饰\"></a>4.3 文本修饰</h4><ul>\n<li>属性名：text-decoration</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>none</td>\n<td>默认，无任何装饰线</td>\n</tr>\n<tr>\n<td>underline</td>\n<td>下划线</td>\n</tr>\n<tr>\n<td>overline</td>\n<td>上划线</td>\n</tr>\n<tr>\n<td>line-through</td>\n<td>删除线</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"4-4-行高\"><a href=\"#4-4-行高\" class=\"headerlink\" title=\"4.4 行高\"></a>4.4 行高</h4><ul>\n<li>属性名：line-height</li>\n<li>取值：<ul>\n<li>数字+px</li>\n<li>字号的倍数</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>行间距&#x2F;行高&#x3D;上间距+文字高度+下间距</li>\n<li>font：style weight size&#x2F;line-height family;</li>\n<li>font:  normal 400 80px&#x2F;1.5 微软雅黑;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-5-字体颜色\"><a href=\"#4-5-字体颜色\" class=\"headerlink\" title=\"4.5 字体颜色\"></a>4.5 字体颜色</h4><ul>\n<li>属性名：color，background-color</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>颜色</th>\n<th>属性值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>预定义颜色</td>\n<td>red，green，blue，pink  ，…….</td>\n</tr>\n<tr>\n<td>rgb表示（无透明度）</td>\n<td>rgb(255,0,0),….</td>\n</tr>\n<tr>\n<td>rgb表示（有透明度）</td>\n<td>rgb(255,0,0,0.5),….</td>\n</tr>\n<tr>\n<td>16进制</td>\n<td>#FF0000,#eeeeee ,#000,……</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h2 id=\"二、进阶语法\"><a href=\"#二、进阶语法\" class=\"headerlink\" title=\"二、进阶语法\"></a>二、进阶语法</h2><h3 id=\"1-复合选择器\"><a href=\"#1-复合选择器\" class=\"headerlink\" title=\"1.复合选择器\"></a>1.复合选择器</h3><h4 id=\"1-1-后代选择器\"><a href=\"#1-1-后代选择器\" class=\"headerlink\" title=\"1.1 后代选择器\"></a>1.1 后代选择器</h4><ul>\n<li>语法：选择器1 选择器2 {css}</li>\n<li>说明：根据HTML标签的嵌套关系，选择父元素的后代中满足条件的元素</li>\n<li>注意：<ul>\n<li>后代包括：儿子，孙子，重孙子，…….</li>\n<li>选择器之间用空格隔开</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-子代选择器\"><a href=\"#1-2-子代选择器\" class=\"headerlink\" title=\"1.2 子代选择器\"></a>1.2 子代选择器</h4><ul>\n<li>语法：选择器1&gt;选择器2 {css}</li>\n<li>说明：根据HTML标签的嵌套关系，选择父元素的子代中满足条件的元素</li>\n<li>注意：<ul>\n<li>子代只包括：儿子</li>\n<li>选择器之间用<code>&gt;</code>隔开</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-3-并集选择器\"><a href=\"#1-3-并集选择器\" class=\"headerlink\" title=\"1.3 并集选择器\"></a>1.3 并集选择器</h4><ul>\n<li>语法：选择器1,选择器2 {css}</li>\n<li>说明：同时选择多组标签，设置相同样式</li>\n<li>注意：<ul>\n<li>每组选择器可以是基础选择器或者复合选择器</li>\n<li>选择器之间用<code>,</code>隔开</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-交集选择器\"><a href=\"#1-4-交集选择器\" class=\"headerlink\" title=\"1.4 交集选择器\"></a>1.4 交集选择器</h4><ul>\n<li>语法：选择器1选择器2 {css}</li>\n<li>说明：同时满足多个选择器的标签</li>\n</ul>\n<h4 id=\"1-5-hover伪类选择器\"><a href=\"#1-5-hover伪类选择器\" class=\"headerlink\" title=\"1.5 hover伪类选择器\"></a>1.5 hover伪类选择器</h4><ul>\n<li>语法：选择器：hover {css}</li>\n<li>说明：鼠标悬停在选择器的元素上时，改变其样式</li>\n</ul>\n<h4 id=\"1-6-Emment语法\"><a href=\"#1-6-Emment语法\" class=\"headerlink\" title=\"1.6 Emment语法\"></a>1.6 Emment语法</h4><ul>\n<li>说明：VScode的语法简写，快速生成代码</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>说明</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标签名</td>\n<td>div</td>\n<td><code>&lt;div&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>类选择器</td>\n<td>.red</td>\n<td><code>&lt;div class=&quot;red&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>id选择器</td>\n<td>#one</td>\n<td><code>&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>交集选择器</td>\n<td>p.red#one</td>\n<td><code>&lt;p class=&quot;red&quot; id=&quot;one&quot;&gt;&lt;/p&gt;</code></td>\n</tr>\n<tr>\n<td>子代选择器</td>\n<td>ul&gt;li</td>\n<td><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code></td>\n</tr>\n<tr>\n<td>内部文本</td>\n<td>ul&gt;li{222}</td>\n<td><code>&lt;ul&gt;&lt;li&gt;222&lt;/li&gt;&lt;/ul&gt;</code></td>\n</tr>\n<tr>\n<td>创建多个</td>\n<td>ul&gt;li*3</td>\n<td><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"2-背景属性\"><a href=\"#2-背景属性\" class=\"headerlink\" title=\"2.背景属性\"></a>2.背景属性</h3><h4 id=\"2-1-背景颜色\"><a href=\"#2-1-背景颜色\" class=\"headerlink\" title=\"2.1 背景颜色\"></a>2.1 背景颜色</h4><ul>\n<li>属性名：background-color</li>\n<li>属性值：关键字、rgb值、16进制</li>\n</ul>\n<h4 id=\"2-2-背景图片\"><a href=\"#2-2-背景图片\" class=\"headerlink\" title=\"2.2 背景图片\"></a>2.2 背景图片</h4><ul>\n<li>属性名：background-image</li>\n<li>属性值：background-image：url(‘图片路径’);</li>\n</ul>\n<h4 id=\"2-3-背景平铺\"><a href=\"#2-3-背景平铺\" class=\"headerlink\" title=\"2.3 背景平铺\"></a>2.3 背景平铺</h4><ul>\n<li>属性名：background-repeat</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th>取值</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>repeat</td>\n<td>（默认值）水平和垂直方向都平铺</td>\n</tr>\n<tr>\n<td>no-repeat</td>\n<td>不平铺</td>\n</tr>\n<tr>\n<td>repeat-x</td>\n<td>水平平铺</td>\n</tr>\n<tr>\n<td>repeat-y</td>\n<td>垂直平铺</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"2-4-背景位置\"><a href=\"#2-4-背景位置\" class=\"headerlink\" title=\"2.4 背景位置\"></a>2.4 背景位置</h4><ul>\n<li>属性名：background-position</li>\n<li>属性值：background-position: 水平方向位置  垂直方向位置；</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flowchart LR</span><br><span class=\"line\">    Start(属性值) --&gt; res11[方位词]</span><br><span class=\"line\">    Start(属性值) --&gt; res12[数字+px]</span><br><span class=\"line\">    res11--&gt;res21[水平方向]</span><br><span class=\"line\">    res11--&gt;res22[垂直方向]</span><br><span class=\"line\">    res12---&gt;水平方向:从左向右移动</span><br><span class=\"line\">    res12---&gt;垂直方向:从上向下移动</span><br><span class=\"line\">    res21--&gt;left</span><br><span class=\"line\">    res21--&gt;res31[center]</span><br><span class=\"line\">    res21--&gt;right</span><br><span class=\"line\">    res22--&gt;top</span><br><span class=\"line\">    res22--&gt;center</span><br><span class=\"line\">    res22--&gt;bottom</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-背景属性连写\"><a href=\"#2-5-背景属性连写\" class=\"headerlink\" title=\"2.5 背景属性连写\"></a>2.5 背景属性连写</h4><ul>\n<li>属性名：background</li>\n<li>属性值：background： color image repeat position；</li>\n<li>注意：不分先后顺序</li>\n</ul>\n<h3 id=\"3-元素显示模式\"><a href=\"#3-元素显示模式\" class=\"headerlink\" title=\"3.元素显示模式\"></a>3.元素显示模式</h3><h4 id=\"3-1-块级元素\"><a href=\"#3-1-块级元素\" class=\"headerlink\" title=\"3.1 块级元素\"></a>3.1 块级元素</h4><ul>\n<li>显示特点：<ol>\n<li>独占一行</li>\n<li>宽度默认为父元素宽度，高度取决于内容</li>\n<li>可以设置宽高</li>\n</ol>\n</li>\n<li>代表标签：<ul>\n<li>div、p、h、ul、li、dl等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-2-行内元素\"><a href=\"#3-2-行内元素\" class=\"headerlink\" title=\"3.2 行内元素\"></a>3.2 行内元素</h4><ul>\n<li>显示特点：<ol>\n<li>一行显示多个</li>\n<li>宽度高度取决于内容</li>\n<li>不可以设置宽高</li>\n</ol>\n</li>\n<li>代表标签：<ul>\n<li>a、span、b、u、i、strong等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-3-行内块元素\"><a href=\"#3-3-行内块元素\" class=\"headerlink\" title=\"3.3 行内块元素\"></a>3.3 行内块元素</h4><ul>\n<li>显示特点：<ol>\n<li>一行显示多个</li>\n<li>可以设置宽高</li>\n</ol>\n</li>\n<li>代表标签：<ul>\n<li>input、textarea、button等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-4-元素显示模式转换\"><a href=\"#3-4-元素显示模式转换\" class=\"headerlink\" title=\"3.4 元素显示模式转换\"></a>3.4 元素显示模式转换</h4><ul>\n<li>作用：改变元素默认显示的特点</li>\n<li>语法：<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>display：block</td>\n<td>转化为块元素</td>\n</tr>\n<tr>\n<td>display：inline-block</td>\n<td>转化为行内块元素</td>\n</tr>\n<tr>\n<td>display：inline</td>\n<td>转化为行内元素</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"3-5-特性\"><a href=\"#3-5-特性\" class=\"headerlink\" title=\"3.5 特性\"></a>3.5 特性</h4><ul>\n<li>继承性：子元素的文字属性全部继承父元素（浏览器有默认样式会覆盖）</li>\n<li>层叠性：同优先级，后面的样式会覆盖前面的样式</li>\n<li>优先级：不同的选择器具有不同的优先级，优先级高的会覆盖优先级低的<ul>\n<li>优先级顺序：继承&lt;通配符选择器&lt;标签选择器&lt;类选择器&lt;<code>id</code>选择器&lt;行内样式&lt;!important</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-盒子模型\"><a href=\"#4-盒子模型\" class=\"headerlink\" title=\"4.盒子模型\"></a>4.盒子模型</h3><blockquote>\n<p>每一个标签都可以看作一个盒子，浏览器显示网页的每一个矩形区块都可以称为盒子<br>每个盒子分别由：内容区域、内边距区域、边框区域、外边距区域构成。<br>工具推荐：PxCook+浏览器调试工具</p>\n</blockquote>\n<h4 id=\"4-1-内容区域的宽度和高度\"><a href=\"#4-1-内容区域的宽度和高度\" class=\"headerlink\" title=\"4.1 内容区域的宽度和高度\"></a>4.1 内容区域的宽度和高度</h4><ul>\n<li>作用：利用width和height属性默认设置是盒子内容区域的大小</li>\n<li>属性：width，height</li>\n<li>属性值：数字+px</li>\n</ul>\n<h4 id=\"4-2-边框\"><a href=\"#4-2-边框\" class=\"headerlink\" title=\"4.2 边框\"></a>4.2 边框</h4><ul>\n<li>作用：设置边框粗细、样式和颜色</li>\n<li>属性：border</li>\n<li>属性值：<ul>\n<li><p>连写：线宽 线型 颜色；</p>\n</li>\n<li><p>border: 10px solid red;</p>\n</li>\n<li><p>单写属性：</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>属性值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>border-width</td>\n<td>数字+px</td>\n</tr>\n<tr>\n<td>border-style</td>\n<td>实线solid、虚线dashed、点线dotted</td>\n</tr>\n<tr>\n<td>border-color</td>\n<td>16进制、rgb值、关键字</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>某一方向边框属性连写设置：border-left、border-right等。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-3-内边距\"><a href=\"#4-3-内边距\" class=\"headerlink\" title=\"4.3 内边距\"></a>4.3 内边距</h4><ul>\n<li>作用：设置文字与边框的距离</li>\n<li>属性：padding</li>\n<li>属性值：数字+px<ul>\n<li>四个值：上   右  下  左 （顺时针）</li>\n<li>三个值：上   左右   下</li>\n<li>两个值：上下   左右</li>\n</ul>\n</li>\n<li>边框和内边距会撑大整体的宽高，所以设置<code>box-sizing: border-box;</code>自适应调整大小不会撑开宽高。</li>\n</ul>\n<h4 id=\"4-4-外边距\"><a href=\"#4-4-外边距\" class=\"headerlink\" title=\"4.4 外边距\"></a>4.4 外边距</h4><ul>\n<li><p>作用：盒子外边的距离</p>\n</li>\n<li><p>属性：margin</p>\n</li>\n<li><p>属性值：数字+px（与内边距相同）</p>\n</li>\n<li><p>清除样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>版心居中：<code>margin: 0 auto;</code></p>\n</li>\n</ul>\n<h3 id=\"5-补充选择器\"><a href=\"#5-补充选择器\" class=\"headerlink\" title=\"5.补充选择器\"></a>5.补充选择器</h3><h4 id=\"5-1-结构伪类选择器\"><a href=\"#5-1-结构伪类选择器\" class=\"headerlink\" title=\"5.1 结构伪类选择器\"></a>5.1 结构伪类选择器</h4><ul>\n<li><p>作用：根据元素在HTML的结构关系查找元素</p>\n</li>\n<li><p>用法：</p>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>E:first-child{}</td>\n<td>匹配父元素第一个子元素，并且是E元素</td>\n</tr>\n<tr>\n<td>E:last-child{}</td>\n<td>匹配父元素最后一个子元素，并且是E元素</td>\n</tr>\n<tr>\n<td>E:nth-child(n){}</td>\n<td>匹配父元素第n个子元素，并且是E元素</td>\n</tr>\n<tr>\n<td>E:nth-last-child(n){}</td>\n<td>匹配父元素倒数第n个子元素，并且是E元素</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>n的选择：</p>\n<ul>\n<li>常见：1、2、3、4、…….</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>公式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>偶数</td>\n<td>2n、even</td>\n</tr>\n<tr>\n<td>奇数</td>\n<td>2n+1、2n-1、odd</td>\n</tr>\n<tr>\n<td>找到前5个</td>\n<td>-n+5</td>\n</tr>\n<tr>\n<td>找到从第5个往后</td>\n<td>n+5</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"5-2-伪元素\"><a href=\"#5-2-伪元素\" class=\"headerlink\" title=\"5.2 伪元素\"></a>5.2 伪元素</h4><ul>\n<li><p>作用：由css模拟出标签效果，能够使用伪元素在网页中创建内容</p>\n</li>\n<li><p>用法：</p>\n<table>\n<thead>\n<tr>\n<th>伪元素</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>::before</td>\n<td>在父元素内容的最前添加一个伪元素</td>\n</tr>\n<tr>\n<td>::after</td>\n<td>在父元素内容的最后添加一个伪元素</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选择器<span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">&quot;内容&quot;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意：</p>\n<ul>\n<li>必须设置content属性才能生效</li>\n<li>默认为行内元素</li>\n<li>常用于装饰小图标</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"5-3-浮动\"><a href=\"#5-3-浮动\" class=\"headerlink\" title=\"5.3 浮动\"></a>5.3 浮动</h4><ul>\n<li>作用：图文环绕，网页布局</li>\n<li>属性：float</li>\n<li>注意：<ol>\n<li>会让元素不占用标准流的位置来布局，标准流的元素会挤上来</li>\n<li>高标准流半个级别，可以覆盖标准流的元素</li>\n<li>类似行内块元素</li>\n<li>不能设置常规的居中方式</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"5-4-清除浮动\"><a href=\"#5-4-清除浮动\" class=\"headerlink\" title=\"5.4 清除浮动\"></a>5.4 清除浮动</h4><ul>\n<li>作用：清除浮动带来的影响</li>\n<li>原因：子元素浮动后脱标–&gt;不占位</li>\n<li>方法：</li>\n</ul>\n<ol>\n<li>直接设置父元素高度</li>\n<li>额外标签法：给父元素最后添加一个块元素，给块元素设置clear：both</li>\n<li>单伪元素清除法：用伪元素替代额外标签</li>\n<li>双伪元素清除法</li>\n<li>给父元素设置overflow：hidden</li>\n</ol>\n<h3 id=\"6-定位\"><a href=\"#6-定位\" class=\"headerlink\" title=\"6.定位\"></a>6.定位</h3><h4 id=\"6-1-基本使用\"><a href=\"#6-1-基本使用\" class=\"headerlink\" title=\"6.1 基本使用\"></a>6.1 基本使用</h4><ul>\n<li>属性名：position</li>\n<li>常见属性值：<table>\n<thead>\n<tr>\n<th align=\"center\">定位方式</th>\n<th align=\"center\">属性值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">静态定位</td>\n<td align=\"center\">static</td>\n</tr>\n<tr>\n<td align=\"center\">相对定位</td>\n<td align=\"center\">relative</td>\n</tr>\n<tr>\n<td align=\"center\">绝对定位</td>\n<td align=\"center\">absolute</td>\n</tr>\n<tr>\n<td align=\"center\">固定定位</td>\n<td align=\"center\">fixed</td>\n</tr>\n</tbody></table>\n</li>\n<li>设置偏移值：偏移值设置两个方向<table>\n<thead>\n<tr>\n<th align=\"center\">方向</th>\n<th align=\"center\">属性名</th>\n<th align=\"center\">属性值</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">水平</td>\n<td align=\"center\">left</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离左边的距离</td>\n</tr>\n<tr>\n<td align=\"center\">水平</td>\n<td align=\"center\">right</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离右边的距离</td>\n</tr>\n<tr>\n<td align=\"center\">垂直</td>\n<td align=\"center\">top</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离上边的距离</td>\n</tr>\n<tr>\n<td align=\"center\">垂直</td>\n<td align=\"center\">bottom</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离下边的距离</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"6-2-相对定位\"><a href=\"#6-2-相对定位\" class=\"headerlink\" title=\"6.2 相对定位\"></a>6.2 相对定位</h4><ul>\n<li>作用：相对于自己之前的位置移动</li>\n<li>用法：position：relative；</li>\n<li>特点：<ol>\n<li>需要配合方位属性实现移动。</li>\n<li>相对于自己原来的位置移动。</li>\n<li>原来的位置存在占位，不脱标。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"6-3-绝对定位\"><a href=\"#6-3-绝对定位\" class=\"headerlink\" title=\"6.3 绝对定位\"></a>6.3 绝对定位</h4><ul>\n<li>作用：相对于定位的父元素进行定位移动</li>\n<li>用法：position：absolute；</li>\n<li>特点：<ol>\n<li>脱标的占位置</li>\n<li>具有行内块的特点</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"6-4-固定定位\"><a href=\"#6-4-固定定位\" class=\"headerlink\" title=\"6.4 固定定位\"></a>6.4 固定定位</h4><ul>\n<li>作用：相对于浏览器进行定位移动</li>\n<li>用法：position：fixed；</li>\n<li>特点：<ol>\n<li>需要配合方位属性实现移动</li>\n<li>相对与浏览器可视区域移动</li>\n<li>在页面不占位置，已经脱标</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"6-5-元素的层级关系\"><a href=\"#6-5-元素的层级关系\" class=\"headerlink\" title=\"6.5 元素的层级关系\"></a>6.5 元素的层级关系</h4><ul>\n<li>层级关系：标准流&lt;浮动&lt;定位</li>\n<li>不同定位之间的层级：默认层级相同，写在后面的会覆盖前面的</li>\n</ul>\n<h3 id=\"7-装饰\"><a href=\"#7-装饰\" class=\"headerlink\" title=\"7.装饰\"></a>7.装饰</h3><h4 id=\"7-1-垂直对齐\"><a href=\"#7-1-垂直对齐\" class=\"headerlink\" title=\"7.1 垂直对齐\"></a>7.1 垂直对齐</h4><ul>\n<li>作用：解决行内元素（图片和文字）的垂直对齐问题</li>\n<li>属性名：vertical-align</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th align=\"center\">效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">baseline</td>\n<td align=\"center\">默认，基线对齐</td>\n</tr>\n<tr>\n<td align=\"center\">top</td>\n<td align=\"center\">顶部对齐</td>\n</tr>\n<tr>\n<td align=\"center\">middle</td>\n<td align=\"center\">中部对齐</td>\n</tr>\n<tr>\n<td align=\"center\">bottom</td>\n<td align=\"center\">底部对齐</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"7-2-光标的类型\"><a href=\"#7-2-光标的类型\" class=\"headerlink\" title=\"7.2 光标的类型\"></a>7.2 光标的类型</h4><ul>\n<li>作用：改变鼠标的样式</li>\n<li>属性名：cursor</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>default</td>\n<td>默认值，箭头</td>\n</tr>\n<tr>\n<td>pointer</td>\n<td>小手</td>\n</tr>\n<tr>\n<td>text</td>\n<td>工字型</td>\n</tr>\n<tr>\n<td>move</td>\n<td>十字拖动标</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"7-3-边框圆角\"><a href=\"#7-3-边框圆角\" class=\"headerlink\" title=\"7.3 边框圆角\"></a>7.3 边框圆角</h4><ul>\n<li>属性名：border-radius</li>\n<li>取值：数字（半径）+px、百分比<ul>\n<li>border-radius：10px；说明四个角曲率相同</li>\n<li>border-radius： 10px  10px 10px 10px；四个角可以一个一个设置（顺时针）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"7-4-溢出显示效果\"><a href=\"#7-4-溢出显示效果\" class=\"headerlink\" title=\"7.4 溢出显示效果\"></a>7.4 溢出显示效果</h4><ul>\n<li>属性名：overflow</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>visible</td>\n<td>默认值，溢出部分可见</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>溢出部分隐藏</td>\n</tr>\n<tr>\n<td>scroll</td>\n<td>无论是否溢出都显示滚动条</td>\n</tr>\n<tr>\n<td>auto</td>\n<td>根据是否溢出，自动显示或隐藏滚动条</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"7-5-元素本身隐藏\"><a href=\"#7-5-元素本身隐藏\" class=\"headerlink\" title=\"7.5 元素本身隐藏\"></a>7.5 元素本身隐藏</h4><ul>\n<li>用法：visibility：hidden<br>       display：none</li>\n</ul>\n<h4 id=\"7-6-元素的透明度\"><a href=\"#7-6-元素的透明度\" class=\"headerlink\" title=\"7.6 元素的透明度\"></a>7.6 元素的透明度</h4><ul>\n<li>作用：让元素整体包括内容一起变透明</li>\n<li>属性名：opacity</li>\n<li>属性值：0（完全透明）~1（完全不透明）之间的数字</li>\n</ul>\n<h3 id=\"8-样式补充\"><a href=\"#8-样式补充\" class=\"headerlink\" title=\"8.样式补充\"></a>8.样式补充</h3><h4 id=\"8-1-精灵图\"><a href=\"#8-1-精灵图\" class=\"headerlink\" title=\"8.1 精灵图\"></a>8.1 精灵图</h4><ul>\n<li>作用：将小图合并成大图，减轻服务器的压力（服务器会发送小图整合图，网页接收图片后“裁剪”出小图来显示）</li>\n<li>使用：<ol>\n<li>创建一个盒子，设置盒子的尺寸与小图尺寸一样</li>\n<li>将精灵图设置为盒子背景图</li>\n<li>修改背景图位置：background-position：x y；</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"8-2-背景图覆盖\"><a href=\"#8-2-背景图覆盖\" class=\"headerlink\" title=\"8.2 背景图覆盖\"></a>8.2 背景图覆盖</h4><ul>\n<li>作用：设置背景图覆盖方式</li>\n<li>用法：background-size：宽度 高度；</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>取值</th>\n<th>场景</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>数字+px</td>\n<td>常用</td>\n</tr>\n<tr>\n<td>百分比</td>\n<td>相对于当前盒子的宽高百分比</td>\n</tr>\n<tr>\n<td>contain</td>\n<td>包含，将背景图片等比例缩放，直到不会超过盒子的大小</td>\n</tr>\n<tr>\n<td>cover</td>\n<td>覆盖，将图片填满整个盒子没有空白</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"8-3-盒子阴影\"><a href=\"#8-3-盒子阴影\" class=\"headerlink\" title=\"8.3 盒子阴影\"></a>8.3 盒子阴影</h4><ul>\n<li>作用：给盒子添加阴影</li>\n<li>属性名：box-shadow</li>\n<li>取值：连写赋值<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>h-shadow</td>\n<td>必须，水平偏移量</td>\n</tr>\n<tr>\n<td>v-shadow</td>\n<td>必须，垂直偏移量</td>\n</tr>\n<tr>\n<td>blur</td>\n<td>可选，模糊度</td>\n</tr>\n<tr>\n<td>spread</td>\n<td>可选，阴影扩大</td>\n</tr>\n<tr>\n<td>color</td>\n<td>可选，阴影颜色</td>\n</tr>\n<tr>\n<td>inset</td>\n<td>可选，将阴影改为内部阴影</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"8-4-过渡\"><a href=\"#8-4-过渡\" class=\"headerlink\" title=\"8.4 过渡\"></a>8.4 过渡</h4><ul>\n<li>作用：配合hover使用，让元素慢慢变化</li>\n<li>属性名：transition</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>取值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>过渡的属性</td>\n<td>all：所有属性过渡；具体属性名</td>\n</tr>\n<tr>\n<td>过渡的时长</td>\n<td>数字+s（秒）</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"8-5-SEO搜索引擎优化\"><a href=\"#8-5-SEO搜索引擎优化\" class=\"headerlink\" title=\"8.5 SEO搜索引擎优化\"></a>8.5 SEO搜索引擎优化</h4><ul>\n<li><p>作用：让网站在搜索引擎的排名靠前</p>\n</li>\n<li><p>方法：</p>\n<ol>\n<li>竞价排名</li>\n<li>将网页制作html后缀</li>\n<li>标签语义化<ol>\n<li>title：网页标题标签</li>\n<li>description：网页描述标签</li>\n<li>keywords：网页关键词标签</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>添加图标</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;shortcut icon&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;favicon.ico&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/x-icon&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-动态\"><a href=\"#9-动态\" class=\"headerlink\" title=\"9.动态\"></a>9.动态</h3><h4 id=\"9-1-平面转换\"><a href=\"#9-1-平面转换\" class=\"headerlink\" title=\"9.1 平面转换\"></a>9.1 平面转换</h4><p>改变盒子在平面的形态（位移、旋转、缩放）<br>2D转换<br>属性：<strong>transform</strong></p>\n<ul>\n<li>位移<ul>\n<li>语法：<code>transform: translate (水平移动距离,垂直移动距离);</code></li>\n<li>取值：<ul>\n<li>数值+px</li>\n<li>百分比（参照物为盒子自身尺寸）</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>translateX() 仅水平移动</li>\n<li>translateY() 仅垂直移动</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>旋转<ul>\n<li>语法：<code>transform: rotate(角度);</code></li>\n<li>取值：<ul>\n<li>数值+deg</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>可以取正负</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>转换原点<ul>\n<li>语法：<code>transform-origin: 原点水平位置 原点垂直位置;</code></li>\n<li>取值：<ul>\n<li>方位名词：left、top、right、bottom、center</li>\n<li>数值+px</li>\n<li>百分比</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>默认原点是盒子中心点</li>\n<li>原点就是物体旋转点</li>\n<li>需要先位移后旋转</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>缩放<ul>\n<li>语法：<code>transform: scale(x轴缩放倍率,y轴缩放倍率);</code> <code>transform: scale(等比缩放倍率);</code></li>\n<li>取值：数值</li>\n<li>注意：<ul>\n<li>数值可以为小数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>渐变<ul>\n<li>语法：<code>background-image: linear-gradient(方向, 颜色1, 颜色2,...);</code></li>\n<li>取值：<ul>\n<li>方向取值为<code>to+空格+方位名词</code>，表示往拿个方向渐变</li>\n<li>颜色可以取多个值，表示多种颜色的渐变</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"9-2-空间转换\"><a href=\"#9-2-空间转换\" class=\"headerlink\" title=\"9.2 空间转换\"></a>9.2 空间转换</h4><p>实现元素在空间内的位移、旋转、缩放。<br>3D转换，z轴垂直于屏幕<br>空间转换属性：<strong>transform</strong></p>\n<ul>\n<li>位移<ul>\n<li>语法：<ul>\n<li><code>transform: translate3d(x,y,z)</code></li>\n<li><code>transform: translateX(值)</code></li>\n<li><code>transform: translateY(值)</code></li>\n<li><code>transform: translateZ(值)</code></li>\n</ul>\n</li>\n<li>取值：<ul>\n<li>数值+px</li>\n<li>可以正负</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>透视<ul>\n<li>语法：<code>perspective: 值;</code></li>\n<li>取值：数值+px （建议800-1200）</li>\n<li>只有设置了透视，Z方向的位移才能有明显的变化</li>\n</ul>\n</li>\n<li>旋转<ul>\n<li>语法：<ul>\n<li><code>transform: rotateX(角度)</code></li>\n<li><code>transform: rotateY(角度)</code></li>\n<li><code>transform: rotateZ(角度)</code></li>\n<li><code>transform: rotate3d(x,y,z,角度)</code></li>\n</ul>\n</li>\n<li>取值：<ul>\n<li>数值+deg</li>\n<li>x,y,z为0-1的数字来自定义旋转轴的位置</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>立体呈现<ul>\n<li>语法：<code>transform-style: preserve-3d;</code></li>\n</ul>\n</li>\n<li>缩放<ul>\n<li>语法：<ul>\n<li><code>transform: scaleX(倍数)</code></li>\n<li><code>transform: scaleY(倍数)</code></li>\n<li><code>transform: scaleZ(倍数)</code></li>\n<li><code>transform: scale3d(x,y,z)</code></li>\n</ul>\n</li>\n<li>取值：数字（整数或小数）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"9-3-动画\"><a href=\"#9-3-动画\" class=\"headerlink\" title=\"9.3 动画\"></a>9.3 动画</h4><ul>\n<li>使用animation添加动画</li>\n<li>动画效果：实现多个状态之间的变化过程，动画过程可控</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.one</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">/*使用动画*/</span></span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: change <span class=\"number\">3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*自定义动画：只能有两个状态的变化*/</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> change&#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*自定义动画：多个状态的变化，百分比为占用动画时长的百分比*/</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> change&#123;</span><br><span class=\"line\">  <span class=\"number\">20%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"number\">40%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: green;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"number\">60%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: pink;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"number\">100%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>语法:<ul>\n<li><code>animation: 动画名称 动画时长 速度曲线 延迟时间 重复次数 动画方向 执行完毕时的状态;</code></li>\n<li><code>animation: name duration timing-function delay iteration-count direction fill-mode;</code></li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>动画名称和动画时长为必须属性值</li>\n<li>可选属性值的取值不分先后</li>\n<li>无限循环属性值 <code>infinite</code></li>\n<li>动画方向属性值： <code>alternate</code> 从尾到头快速执行动画</li>\n<li>速度曲线：<code>steps(数字)</code> 逐帧动画</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三、移动端Web\"><a href=\"#三、移动端Web\" class=\"headerlink\" title=\"三、移动端Web\"></a>三、移动端Web</h2><ul>\n<li>PC端网页与移动端网页的区别<ul>\n<li>PC屏幕大，网页固定版心</li>\n<li>手机屏幕小，网页宽度多数为100%</li>\n</ul>\n</li>\n</ul>\n<p>参考逻辑分辨率，一般选用<code>iPhone 6/7/8</code>设备来参考开发</p>\n<p>视口：规定html大小，让html宽度与设备宽度一样，没有视口标签宽度就为<strong>980px</strong>：<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code></p>\n<p>百分比布局（流式布局）：宽度自适应，高度固定。（古老布局）</p>\n<h3 id=\"1-Flex布局\"><a href=\"#1-Flex布局\" class=\"headerlink\" title=\"1.Flex布局\"></a>1.Flex布局</h3><h4 id=\"1-1-基本使用\"><a href=\"#1-1-基本使用\" class=\"headerlink\" title=\"1.1 基本使用\"></a>1.1 基本使用</h4><ul>\n<li>作用：<ul>\n<li>基于Flex精确灵活控制块级盒子的布局方式，避免浮动布局中脱离文档流的现象发生。</li>\n<li>Flex布局非常适合结构化布局</li>\n</ul>\n</li>\n<li>语法：<ul>\n<li>在父元素添加 <code>display: flex</code></li>\n</ul>\n</li>\n<li>组成：<ul>\n<li>弹性容器</li>\n<li>弹性盒子</li>\n<li>主轴</li>\n<li>侧轴&#x2F;交叉轴</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-对齐\"><a href=\"#1-2-对齐\" class=\"headerlink\" title=\"1.2 对齐\"></a>1.2 对齐</h4><ul>\n<li>主轴对齐方式</li>\n<li>属性：<code>justify-content</code> (添加在父元素里面)</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">flex-start</td>\n<td>默认值，起点开始排序</td>\n</tr>\n<tr>\n<td align=\"center\">flex-end</td>\n<td>终点向起点开始排列</td>\n</tr>\n<tr>\n<td align=\"center\">center</td>\n<td>沿主轴居中排列</td>\n</tr>\n<tr>\n<td align=\"center\">space-around</td>\n<td>弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子两侧</td>\n</tr>\n<tr>\n<td align=\"center\">space-between</td>\n<td>弹性盒子沿主轴均匀排列，空白间距均分在相邻盒子之间</td>\n</tr>\n<tr>\n<td align=\"center\">space-evenly</td>\n<td>弹性盒子沿主轴均匀排列，弹性盒子与容器之间间距相等</td>\n</tr>\n</tbody></table>\n<ul>\n<li>侧轴对齐方式</li>\n<li>属性：<code>align-items</code> (添加到父元素里面)</li>\n<li>注意：<code>align-items</code>属性值只能设置一个，后面会覆盖前面的。当子元素有高度<code>stretch</code>会失效</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">flex-start</td>\n<td>默认值，起点开始排序</td>\n</tr>\n<tr>\n<td align=\"center\">flex-end</td>\n<td>终点向起点开始排列</td>\n</tr>\n<tr>\n<td align=\"center\">center</td>\n<td>沿侧轴居中排列</td>\n</tr>\n<tr>\n<td align=\"center\">stretch</td>\n<td>默认值，弹性盒子沿主轴拉伸至铺满容器</td>\n</tr>\n</tbody></table>\n<ul>\n<li>伸缩比：占用父元素剩余尺寸的份数</li>\n<li>属性：<code>flex</code></li>\n<li>取值：数值（整数）</li>\n</ul>\n<h3 id=\"2-移动适配\"><a href=\"#2-移动适配\" class=\"headerlink\" title=\"2.移动适配\"></a>2.移动适配</h3><h4 id=\"2-1-rem使用\"><a href=\"#2-1-rem使用\" class=\"headerlink\" title=\"2.1 rem使用\"></a>2.1 rem使用</h4><ul>\n<li>相对单位</li>\n<li>rem单位是相对于HTML标签的字号计算结果</li>\n<li>1rem&#x3D;1HTML字号大小</li>\n</ul>\n<p>需要设置html标签字号<code>font-size: 15px</code><br>使用媒体查询设置差异化CSS样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> (媒体特性) &#123;</span><br><span class=\"line\">  选择器&#123;</span><br><span class=\"line\">    CSS属性</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">width</span>:<span class=\"number\">320px</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">html</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>目前rem布局方案中，将网页等分成10份，HTML标签的字号为视口宽度的1&#x2F;10</p>\n<h4 id=\"2-2-less\"><a href=\"#2-2-less\" class=\"headerlink\" title=\"2.2 less\"></a>2.2 less</h4><p>目标：快速编译生成CSS代码</p>\n<p>less是一个CSS预处理器，扩充CSS语言，使CSS具备一定的逻辑性</p>\n<p>浏览器不识别less代码</p>\n<ul>\n<li>注释<ul>\n<li>单行注释：<code>//</code></li>\n<li>多行注释：<code>/**/</code></li>\n</ul>\n</li>\n<li>运算<ul>\n<li><code>+</code>、<code>-</code>、<code>*</code>直接使用</li>\n<li>除法需要添加小括号包裹整个表达式或者<code>.</code></li>\n</ul>\n</li>\n<li>后代选择器<ul>\n<li>在父元素选择器里面写选择器（嵌套），表示父子级的选择关系</li>\n<li>在父元素选择器里面写选择器，在里面选择器前面添加<code>&amp;</code>表示平级关系</li>\n</ul>\n</li>\n<li>变量<ul>\n<li>把变量存储到一个容器，设置属性值为这个容器名</li>\n<li>作用就是存储数据，方便修改</li>\n</ul>\n</li>\n<li>语法：<ul>\n<li>定义变量：<code>@变量名: 值;</code></li>\n<li>使用变量：<code>CSS变量: @变量名;</code></li>\n</ul>\n</li>\n<li>导入其他less文件<ul>\n<li>语法：<code>@import &quot;文件路径&quot;;</code></li>\n<li>可以省略<code>.less</code>后缀</li>\n</ul>\n</li>\n<li>导出CSS文件<ul>\n<li>VScode插件<code>easyLess</code>可以自动保存并生成CSS文件</li>\n<li>禁止导出：在less文件第一行添加：<code>// out:false</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-vw-vh单位\"><a href=\"#2-3-vw-vh单位\" class=\"headerlink\" title=\"2.3 vw&#x2F;vh单位\"></a>2.3 vw&#x2F;vh单位</h4><ul>\n<li>相对单位</li>\n<li>vw：viewport width<ul>\n<li>1vw&#x3D;1&#x2F;100视口宽度</li>\n<li>vw尺寸 &#x3D; px单位数值&#x2F;(0.01*视口宽度)</li>\n</ul>\n</li>\n<li>vh：viewport height<ul>\n<li>1vh&#x3D;1&#x2F;100视口高度</li>\n<li>vh尺寸 &#x3D; px单位数值&#x2F;(0.01*视口高度)</li>\n</ul>\n</li>\n<li>不允许vw和vh混用，宽高都用vw</li>\n</ul>\n<h3 id=\"3-响应式web\"><a href=\"#3-响应式web\" class=\"headerlink\" title=\"3.响应式web\"></a>3.响应式web</h3><h4 id=\"3-1-媒体查询\"><a href=\"#3-1-媒体查询\" class=\"headerlink\" title=\"3.1 媒体查询\"></a>3.1 媒体查询</h4><ul>\n<li>目标：根据设备宽度的变化，设置差异化样式</li>\n<li>媒体特性写法：<ul>\n<li>max-width：小于等于该宽度</li>\n<li>min-width：大于等于该宽度</li>\n<li>具有层叠性，后面会覆盖前面的</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@meida</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">768px</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@meida</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">992px</span>)&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@meida</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">1200px</span>)&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在link标签中使用媒体查询</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;one.css&quot;</span> <span class=\"attr\">media</span>=<span class=\"string\">&quot;(min-width: 768px)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-BootStrap的安装和使用\"><a href=\"#3-2-BootStrap的安装和使用\" class=\"headerlink\" title=\"3.2 BootStrap的安装和使用\"></a>3.2 BootStrap的安装和使用</h4><p><a href=\"https://v5.bootcss.com/\">BootStrap</a>是一个开源的响应式前端UI框架</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装BootStrap</span></span><br><span class=\"line\">npm install bootstrap</span><br><span class=\"line\"><span class=\"comment\"># 安装BootStrap的图标库</span></span><br><span class=\"line\">npm i bootstrap-icons</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 引入BootStrap及图标库--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;node_modules/bootstrap/dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;node_modules/bootstrap-icons/font/bootstrap-icons.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-BootStrap的栅格系统\"><a href=\"#3-3-BootStrap的栅格系统\" class=\"headerlink\" title=\"3.3 BootStrap的栅格系统\"></a>3.3 BootStrap的栅格系统</h4><ul>\n<li>目标：使用BootStrap栅格系统布局响应式网页</li>\n<li>栅格化是指将整个网页的宽度分成若干等份</li>\n<li>BootStrap默认将网页分成12等份</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">超小屏幕</th>\n<th align=\"center\">小屏幕</th>\n<th align=\"center\">中等屏幕</th>\n<th align=\"center\">大屏幕</th>\n<th align=\"center\">超大屏幕</th>\n<th align=\"center\">超超大屏幕</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">响应断点</td>\n<td align=\"center\">&lt;576px</td>\n<td align=\"center\">≥576px</td>\n<td align=\"center\">≥768px</td>\n<td align=\"center\">≥992px</td>\n<td align=\"center\">≥1200px</td>\n<td align=\"center\">≥1400px</td>\n</tr>\n<tr>\n<td align=\"center\">别名</td>\n<td align=\"center\">xs</td>\n<td align=\"center\">sm</td>\n<td align=\"center\">md</td>\n<td align=\"center\">lg</td>\n<td align=\"center\">xl</td>\n<td align=\"center\">xxl</td>\n</tr>\n<tr>\n<td align=\"center\">容器宽度</td>\n<td align=\"center\">100%</td>\n<td align=\"center\">540px</td>\n<td align=\"center\">720px</td>\n<td align=\"center\">960px</td>\n<td align=\"center\">1140px</td>\n<td align=\"center\">1320px</td>\n</tr>\n<tr>\n<td align=\"center\">类前缀</td>\n<td align=\"center\">.col-</td>\n<td align=\"center\">.col-sm-</td>\n<td align=\"center\">.col-md-</td>\n<td align=\"center\">.col-lg-</td>\n<td align=\"center\">.col-xl-</td>\n<td align=\"center\">.col-xxl-</td>\n</tr>\n<tr>\n<td align=\"center\">列数</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n</tr>\n<tr>\n<td align=\"center\">列间隙</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n</tr>\n</tbody></table>\n<ul>\n<li><code>.container</code>类自带间距15px</li>\n<li><code>.row</code>类自带-15px，用来定义栅格布局的行和列</li>\n</ul>\n","more":"<h1 id=\"CSS3快速入门语法\"><a href=\"#CSS3快速入门语法\" class=\"headerlink\" title=\"CSS3快速入门语法\"></a>CSS3快速入门语法</h1><h2 id=\"一、基本语法\"><a href=\"#一、基本语法\" class=\"headerlink\" title=\"一、基本语法\"></a>一、基本语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>参考视频：<a href=\"https://www.bilibili.com/video/BV1Kg411T7t9?p=45\">https://www.bilibili.com/video/BV1Kg411T7t9?p=45</a></p>\n<p>作用：美化网页、布局页面</p>\n<p>语法结构：<br>选择器{<br>  属性：属性值；<br>}</p>\n<p>注释 ：  &#x2F;<em>这是层叠样式表里面的注释</em>&#x2F;</p>\n<ul>\n<li><p>内嵌式：在<code>&lt;style&gt;</code>标签内书写，<code>&lt;style&gt;</code>标签放在<code>&lt;head&gt;</code>标签内</p>\n</li>\n<li><p>外联式：写在.css文件中，需要通过<code>&lt;link&gt;</code>标签在网页引入</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>行内式：写在标签的style属性中</p>\n</li>\n</ul>\n<h3 id=\"2-基础选择器\"><a href=\"#2-基础选择器\" class=\"headerlink\" title=\"2.基础选择器\"></a>2.基础选择器</h3><h4 id=\"2-1-标签选择器\"><a href=\"#2-1-标签选择器\" class=\"headerlink\" title=\"2.1 标签选择器\"></a>2.1 标签选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签名&#123;</span><br><span class=\"line\"> 属性: 属性值;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择某一类标签。</p>\n<h4 id=\"2-2-类选择器\"><a href=\"#2-2-类选择器\" class=\"headerlink\" title=\"2.2 类选择器\"></a>2.2 类选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.类名&#123;</span><br><span class=\"line\"> 属性：属性值； </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择class属性值等于类名的标签。</p>\n<p>多类名：一个标签可以有多个类名，都在class类里面，不同类名用空格隔开</p>\n<p>类名：由字母、数字、下划线、中划线组成，不能用中划线和数字开头。</p>\n<h4 id=\"2-3-id选择器\"><a href=\"#2-3-id选择器\" class=\"headerlink\" title=\"2.3 id选择器\"></a>2.3 id选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#id</span>&#123;</span><br><span class=\"line\"> 属性：属性值；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择特定id属性的标签。</p>\n<p>标签的id属性在整个页面唯一存在，一个标签对应一个id，通常与js搭配。</p>\n<h4 id=\"2-4-通配符选择器\"><a href=\"#2-4-通配符选择器\" class=\"headerlink\" title=\"2.4 通配符选择器\"></a>2.4 通配符选择器</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\"> 属性：属性值；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作用：选择所有的标签。</p>\n<h3 id=\"3-字体属性\"><a href=\"#3-字体属性\" class=\"headerlink\" title=\"3.字体属性\"></a>3.字体属性</h3><h4 id=\"3-1-字体大小\"><a href=\"#3-1-字体大小\" class=\"headerlink\" title=\"3.1 字体大小\"></a>3.1 字体大小</h4><ul>\n<li>属性名：font-size</li>\n<li>取值：数字+px</li>\n<li>注意：谷歌浏览器默认16px，单位需要设置</li>\n</ul>\n<h4 id=\"3-2-字体粗细\"><a href=\"#3-2-字体粗细\" class=\"headerlink\" title=\"3.2 字体粗细\"></a>3.2 字体粗细</h4><ul>\n<li>属性值：font-weight</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>normal</td>\n<td>默认值，不加粗</td>\n</tr>\n<tr>\n<td>bold</td>\n<td>加粗</td>\n</tr>\n<tr>\n<td>100~900</td>\n<td>400&#x3D;normal，700&#x3D;bold</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"3-3-字体样式\"><a href=\"#3-3-字体样式\" class=\"headerlink\" title=\"3.3 字体样式\"></a>3.3 字体样式</h4><ul>\n<li>属性名：font-style</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>normal</td>\n<td>默认值，不倾斜</td>\n</tr>\n<tr>\n<td>italic</td>\n<td>倾斜</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"3-4-字体\"><a href=\"#3-4-字体\" class=\"headerlink\" title=\"3.4 字体\"></a>3.4 字体</h4><ul>\n<li>属性名：font-family</li>\n<li>取值：字体1，字体2，…..</li>\n<li>注意：<ul>\n<li>默认字体微软雅黑</li>\n<li>从左到右查找字体来展现，可以写具体字体或者一系列字体sans-serif等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-5-字体属性连写\"><a href=\"#3-5-字体属性连写\" class=\"headerlink\" title=\"3.5 字体属性连写\"></a>3.5 字体属性连写</h4><ul>\n<li>属性名：font</li>\n<li>取值：<ul>\n<li>font：style weight size family;</li>\n<li>font:  normal 400 80px 微软雅黑;</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>复合属性，不能改变顺序，只能省略前两个属性</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-文本属性\"><a href=\"#4-文本属性\" class=\"headerlink\" title=\"4.文本属性\"></a>4.文本属性</h3><h4 id=\"4-1-文本缩进\"><a href=\"#4-1-文本缩进\" class=\"headerlink\" title=\"4.1 文本缩进\"></a>4.1 文本缩进</h4><ul>\n<li>属性名：text-indent</li>\n<li>取值：<ul>\n<li>数字+px，px单位，像素值</li>\n<li>数字+em，em单位，相对单位，也就是当前一个字符距离</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-2-文本水平对齐\"><a href=\"#4-2-文本水平对齐\" class=\"headerlink\" title=\"4.2 文本水平对齐\"></a>4.2 文本水平对齐</h4><ul>\n<li>属性名：text-align</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>left</td>\n<td>左对齐</td>\n</tr>\n<tr>\n<td>right</td>\n<td>右对齐</td>\n</tr>\n<tr>\n<td>center</td>\n<td>居中</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"4-3-文本修饰\"><a href=\"#4-3-文本修饰\" class=\"headerlink\" title=\"4.3 文本修饰\"></a>4.3 文本修饰</h4><ul>\n<li>属性名：text-decoration</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>none</td>\n<td>默认，无任何装饰线</td>\n</tr>\n<tr>\n<td>underline</td>\n<td>下划线</td>\n</tr>\n<tr>\n<td>overline</td>\n<td>上划线</td>\n</tr>\n<tr>\n<td>line-through</td>\n<td>删除线</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"4-4-行高\"><a href=\"#4-4-行高\" class=\"headerlink\" title=\"4.4 行高\"></a>4.4 行高</h4><ul>\n<li>属性名：line-height</li>\n<li>取值：<ul>\n<li>数字+px</li>\n<li>字号的倍数</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>行间距&#x2F;行高&#x3D;上间距+文字高度+下间距</li>\n<li>font：style weight size&#x2F;line-height family;</li>\n<li>font:  normal 400 80px&#x2F;1.5 微软雅黑;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-5-字体颜色\"><a href=\"#4-5-字体颜色\" class=\"headerlink\" title=\"4.5 字体颜色\"></a>4.5 字体颜色</h4><ul>\n<li>属性名：color，background-color</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>颜色</th>\n<th>属性值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>预定义颜色</td>\n<td>red，green，blue，pink  ，…….</td>\n</tr>\n<tr>\n<td>rgb表示（无透明度）</td>\n<td>rgb(255,0,0),….</td>\n</tr>\n<tr>\n<td>rgb表示（有透明度）</td>\n<td>rgb(255,0,0,0.5),….</td>\n</tr>\n<tr>\n<td>16进制</td>\n<td>#FF0000,#eeeeee ,#000,……</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h2 id=\"二、进阶语法\"><a href=\"#二、进阶语法\" class=\"headerlink\" title=\"二、进阶语法\"></a>二、进阶语法</h2><h3 id=\"1-复合选择器\"><a href=\"#1-复合选择器\" class=\"headerlink\" title=\"1.复合选择器\"></a>1.复合选择器</h3><h4 id=\"1-1-后代选择器\"><a href=\"#1-1-后代选择器\" class=\"headerlink\" title=\"1.1 后代选择器\"></a>1.1 后代选择器</h4><ul>\n<li>语法：选择器1 选择器2 {css}</li>\n<li>说明：根据HTML标签的嵌套关系，选择父元素的后代中满足条件的元素</li>\n<li>注意：<ul>\n<li>后代包括：儿子，孙子，重孙子，…….</li>\n<li>选择器之间用空格隔开</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-子代选择器\"><a href=\"#1-2-子代选择器\" class=\"headerlink\" title=\"1.2 子代选择器\"></a>1.2 子代选择器</h4><ul>\n<li>语法：选择器1&gt;选择器2 {css}</li>\n<li>说明：根据HTML标签的嵌套关系，选择父元素的子代中满足条件的元素</li>\n<li>注意：<ul>\n<li>子代只包括：儿子</li>\n<li>选择器之间用<code>&gt;</code>隔开</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-3-并集选择器\"><a href=\"#1-3-并集选择器\" class=\"headerlink\" title=\"1.3 并集选择器\"></a>1.3 并集选择器</h4><ul>\n<li>语法：选择器1,选择器2 {css}</li>\n<li>说明：同时选择多组标签，设置相同样式</li>\n<li>注意：<ul>\n<li>每组选择器可以是基础选择器或者复合选择器</li>\n<li>选择器之间用<code>,</code>隔开</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-交集选择器\"><a href=\"#1-4-交集选择器\" class=\"headerlink\" title=\"1.4 交集选择器\"></a>1.4 交集选择器</h4><ul>\n<li>语法：选择器1选择器2 {css}</li>\n<li>说明：同时满足多个选择器的标签</li>\n</ul>\n<h4 id=\"1-5-hover伪类选择器\"><a href=\"#1-5-hover伪类选择器\" class=\"headerlink\" title=\"1.5 hover伪类选择器\"></a>1.5 hover伪类选择器</h4><ul>\n<li>语法：选择器：hover {css}</li>\n<li>说明：鼠标悬停在选择器的元素上时，改变其样式</li>\n</ul>\n<h4 id=\"1-6-Emment语法\"><a href=\"#1-6-Emment语法\" class=\"headerlink\" title=\"1.6 Emment语法\"></a>1.6 Emment语法</h4><ul>\n<li>说明：VScode的语法简写，快速生成代码</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>说明</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标签名</td>\n<td>div</td>\n<td><code>&lt;div&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>类选择器</td>\n<td>.red</td>\n<td><code>&lt;div class=&quot;red&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>id选择器</td>\n<td>#one</td>\n<td><code>&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>交集选择器</td>\n<td>p.red#one</td>\n<td><code>&lt;p class=&quot;red&quot; id=&quot;one&quot;&gt;&lt;/p&gt;</code></td>\n</tr>\n<tr>\n<td>子代选择器</td>\n<td>ul&gt;li</td>\n<td><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code></td>\n</tr>\n<tr>\n<td>内部文本</td>\n<td>ul&gt;li{222}</td>\n<td><code>&lt;ul&gt;&lt;li&gt;222&lt;/li&gt;&lt;/ul&gt;</code></td>\n</tr>\n<tr>\n<td>创建多个</td>\n<td>ul&gt;li*3</td>\n<td><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"2-背景属性\"><a href=\"#2-背景属性\" class=\"headerlink\" title=\"2.背景属性\"></a>2.背景属性</h3><h4 id=\"2-1-背景颜色\"><a href=\"#2-1-背景颜色\" class=\"headerlink\" title=\"2.1 背景颜色\"></a>2.1 背景颜色</h4><ul>\n<li>属性名：background-color</li>\n<li>属性值：关键字、rgb值、16进制</li>\n</ul>\n<h4 id=\"2-2-背景图片\"><a href=\"#2-2-背景图片\" class=\"headerlink\" title=\"2.2 背景图片\"></a>2.2 背景图片</h4><ul>\n<li>属性名：background-image</li>\n<li>属性值：background-image：url(‘图片路径’);</li>\n</ul>\n<h4 id=\"2-3-背景平铺\"><a href=\"#2-3-背景平铺\" class=\"headerlink\" title=\"2.3 背景平铺\"></a>2.3 背景平铺</h4><ul>\n<li>属性名：background-repeat</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th>取值</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>repeat</td>\n<td>（默认值）水平和垂直方向都平铺</td>\n</tr>\n<tr>\n<td>no-repeat</td>\n<td>不平铺</td>\n</tr>\n<tr>\n<td>repeat-x</td>\n<td>水平平铺</td>\n</tr>\n<tr>\n<td>repeat-y</td>\n<td>垂直平铺</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"2-4-背景位置\"><a href=\"#2-4-背景位置\" class=\"headerlink\" title=\"2.4 背景位置\"></a>2.4 背景位置</h4><ul>\n<li>属性名：background-position</li>\n<li>属性值：background-position: 水平方向位置  垂直方向位置；</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flowchart LR</span><br><span class=\"line\">    Start(属性值) --&gt; res11[方位词]</span><br><span class=\"line\">    Start(属性值) --&gt; res12[数字+px]</span><br><span class=\"line\">    res11--&gt;res21[水平方向]</span><br><span class=\"line\">    res11--&gt;res22[垂直方向]</span><br><span class=\"line\">    res12---&gt;水平方向:从左向右移动</span><br><span class=\"line\">    res12---&gt;垂直方向:从上向下移动</span><br><span class=\"line\">    res21--&gt;left</span><br><span class=\"line\">    res21--&gt;res31[center]</span><br><span class=\"line\">    res21--&gt;right</span><br><span class=\"line\">    res22--&gt;top</span><br><span class=\"line\">    res22--&gt;center</span><br><span class=\"line\">    res22--&gt;bottom</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-背景属性连写\"><a href=\"#2-5-背景属性连写\" class=\"headerlink\" title=\"2.5 背景属性连写\"></a>2.5 背景属性连写</h4><ul>\n<li>属性名：background</li>\n<li>属性值：background： color image repeat position；</li>\n<li>注意：不分先后顺序</li>\n</ul>\n<h3 id=\"3-元素显示模式\"><a href=\"#3-元素显示模式\" class=\"headerlink\" title=\"3.元素显示模式\"></a>3.元素显示模式</h3><h4 id=\"3-1-块级元素\"><a href=\"#3-1-块级元素\" class=\"headerlink\" title=\"3.1 块级元素\"></a>3.1 块级元素</h4><ul>\n<li>显示特点：<ol>\n<li>独占一行</li>\n<li>宽度默认为父元素宽度，高度取决于内容</li>\n<li>可以设置宽高</li>\n</ol>\n</li>\n<li>代表标签：<ul>\n<li>div、p、h、ul、li、dl等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-2-行内元素\"><a href=\"#3-2-行内元素\" class=\"headerlink\" title=\"3.2 行内元素\"></a>3.2 行内元素</h4><ul>\n<li>显示特点：<ol>\n<li>一行显示多个</li>\n<li>宽度高度取决于内容</li>\n<li>不可以设置宽高</li>\n</ol>\n</li>\n<li>代表标签：<ul>\n<li>a、span、b、u、i、strong等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-3-行内块元素\"><a href=\"#3-3-行内块元素\" class=\"headerlink\" title=\"3.3 行内块元素\"></a>3.3 行内块元素</h4><ul>\n<li>显示特点：<ol>\n<li>一行显示多个</li>\n<li>可以设置宽高</li>\n</ol>\n</li>\n<li>代表标签：<ul>\n<li>input、textarea、button等</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-4-元素显示模式转换\"><a href=\"#3-4-元素显示模式转换\" class=\"headerlink\" title=\"3.4 元素显示模式转换\"></a>3.4 元素显示模式转换</h4><ul>\n<li>作用：改变元素默认显示的特点</li>\n<li>语法：<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>display：block</td>\n<td>转化为块元素</td>\n</tr>\n<tr>\n<td>display：inline-block</td>\n<td>转化为行内块元素</td>\n</tr>\n<tr>\n<td>display：inline</td>\n<td>转化为行内元素</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"3-5-特性\"><a href=\"#3-5-特性\" class=\"headerlink\" title=\"3.5 特性\"></a>3.5 特性</h4><ul>\n<li>继承性：子元素的文字属性全部继承父元素（浏览器有默认样式会覆盖）</li>\n<li>层叠性：同优先级，后面的样式会覆盖前面的样式</li>\n<li>优先级：不同的选择器具有不同的优先级，优先级高的会覆盖优先级低的<ul>\n<li>优先级顺序：继承&lt;通配符选择器&lt;标签选择器&lt;类选择器&lt;<code>id</code>选择器&lt;行内样式&lt;!important</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-盒子模型\"><a href=\"#4-盒子模型\" class=\"headerlink\" title=\"4.盒子模型\"></a>4.盒子模型</h3><blockquote>\n<p>每一个标签都可以看作一个盒子，浏览器显示网页的每一个矩形区块都可以称为盒子<br>每个盒子分别由：内容区域、内边距区域、边框区域、外边距区域构成。<br>工具推荐：PxCook+浏览器调试工具</p>\n</blockquote>\n<h4 id=\"4-1-内容区域的宽度和高度\"><a href=\"#4-1-内容区域的宽度和高度\" class=\"headerlink\" title=\"4.1 内容区域的宽度和高度\"></a>4.1 内容区域的宽度和高度</h4><ul>\n<li>作用：利用width和height属性默认设置是盒子内容区域的大小</li>\n<li>属性：width，height</li>\n<li>属性值：数字+px</li>\n</ul>\n<h4 id=\"4-2-边框\"><a href=\"#4-2-边框\" class=\"headerlink\" title=\"4.2 边框\"></a>4.2 边框</h4><ul>\n<li>作用：设置边框粗细、样式和颜色</li>\n<li>属性：border</li>\n<li>属性值：<ul>\n<li><p>连写：线宽 线型 颜色；</p>\n</li>\n<li><p>border: 10px solid red;</p>\n</li>\n<li><p>单写属性：</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>属性值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>border-width</td>\n<td>数字+px</td>\n</tr>\n<tr>\n<td>border-style</td>\n<td>实线solid、虚线dashed、点线dotted</td>\n</tr>\n<tr>\n<td>border-color</td>\n<td>16进制、rgb值、关键字</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>某一方向边框属性连写设置：border-left、border-right等。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-3-内边距\"><a href=\"#4-3-内边距\" class=\"headerlink\" title=\"4.3 内边距\"></a>4.3 内边距</h4><ul>\n<li>作用：设置文字与边框的距离</li>\n<li>属性：padding</li>\n<li>属性值：数字+px<ul>\n<li>四个值：上   右  下  左 （顺时针）</li>\n<li>三个值：上   左右   下</li>\n<li>两个值：上下   左右</li>\n</ul>\n</li>\n<li>边框和内边距会撑大整体的宽高，所以设置<code>box-sizing: border-box;</code>自适应调整大小不会撑开宽高。</li>\n</ul>\n<h4 id=\"4-4-外边距\"><a href=\"#4-4-外边距\" class=\"headerlink\" title=\"4.4 外边距\"></a>4.4 外边距</h4><ul>\n<li><p>作用：盒子外边的距离</p>\n</li>\n<li><p>属性：margin</p>\n</li>\n<li><p>属性值：数字+px（与内边距相同）</p>\n</li>\n<li><p>清除样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>版心居中：<code>margin: 0 auto;</code></p>\n</li>\n</ul>\n<h3 id=\"5-补充选择器\"><a href=\"#5-补充选择器\" class=\"headerlink\" title=\"5.补充选择器\"></a>5.补充选择器</h3><h4 id=\"5-1-结构伪类选择器\"><a href=\"#5-1-结构伪类选择器\" class=\"headerlink\" title=\"5.1 结构伪类选择器\"></a>5.1 结构伪类选择器</h4><ul>\n<li><p>作用：根据元素在HTML的结构关系查找元素</p>\n</li>\n<li><p>用法：</p>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>E:first-child{}</td>\n<td>匹配父元素第一个子元素，并且是E元素</td>\n</tr>\n<tr>\n<td>E:last-child{}</td>\n<td>匹配父元素最后一个子元素，并且是E元素</td>\n</tr>\n<tr>\n<td>E:nth-child(n){}</td>\n<td>匹配父元素第n个子元素，并且是E元素</td>\n</tr>\n<tr>\n<td>E:nth-last-child(n){}</td>\n<td>匹配父元素倒数第n个子元素，并且是E元素</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>n的选择：</p>\n<ul>\n<li>常见：1、2、3、4、…….</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>公式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>偶数</td>\n<td>2n、even</td>\n</tr>\n<tr>\n<td>奇数</td>\n<td>2n+1、2n-1、odd</td>\n</tr>\n<tr>\n<td>找到前5个</td>\n<td>-n+5</td>\n</tr>\n<tr>\n<td>找到从第5个往后</td>\n<td>n+5</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"5-2-伪元素\"><a href=\"#5-2-伪元素\" class=\"headerlink\" title=\"5.2 伪元素\"></a>5.2 伪元素</h4><ul>\n<li><p>作用：由css模拟出标签效果，能够使用伪元素在网页中创建内容</p>\n</li>\n<li><p>用法：</p>\n<table>\n<thead>\n<tr>\n<th>伪元素</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>::before</td>\n<td>在父元素内容的最前添加一个伪元素</td>\n</tr>\n<tr>\n<td>::after</td>\n<td>在父元素内容的最后添加一个伪元素</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选择器<span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">&quot;内容&quot;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意：</p>\n<ul>\n<li>必须设置content属性才能生效</li>\n<li>默认为行内元素</li>\n<li>常用于装饰小图标</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"5-3-浮动\"><a href=\"#5-3-浮动\" class=\"headerlink\" title=\"5.3 浮动\"></a>5.3 浮动</h4><ul>\n<li>作用：图文环绕，网页布局</li>\n<li>属性：float</li>\n<li>注意：<ol>\n<li>会让元素不占用标准流的位置来布局，标准流的元素会挤上来</li>\n<li>高标准流半个级别，可以覆盖标准流的元素</li>\n<li>类似行内块元素</li>\n<li>不能设置常规的居中方式</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"5-4-清除浮动\"><a href=\"#5-4-清除浮动\" class=\"headerlink\" title=\"5.4 清除浮动\"></a>5.4 清除浮动</h4><ul>\n<li>作用：清除浮动带来的影响</li>\n<li>原因：子元素浮动后脱标–&gt;不占位</li>\n<li>方法：</li>\n</ul>\n<ol>\n<li>直接设置父元素高度</li>\n<li>额外标签法：给父元素最后添加一个块元素，给块元素设置clear：both</li>\n<li>单伪元素清除法：用伪元素替代额外标签</li>\n<li>双伪元素清除法</li>\n<li>给父元素设置overflow：hidden</li>\n</ol>\n<h3 id=\"6-定位\"><a href=\"#6-定位\" class=\"headerlink\" title=\"6.定位\"></a>6.定位</h3><h4 id=\"6-1-基本使用\"><a href=\"#6-1-基本使用\" class=\"headerlink\" title=\"6.1 基本使用\"></a>6.1 基本使用</h4><ul>\n<li>属性名：position</li>\n<li>常见属性值：<table>\n<thead>\n<tr>\n<th align=\"center\">定位方式</th>\n<th align=\"center\">属性值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">静态定位</td>\n<td align=\"center\">static</td>\n</tr>\n<tr>\n<td align=\"center\">相对定位</td>\n<td align=\"center\">relative</td>\n</tr>\n<tr>\n<td align=\"center\">绝对定位</td>\n<td align=\"center\">absolute</td>\n</tr>\n<tr>\n<td align=\"center\">固定定位</td>\n<td align=\"center\">fixed</td>\n</tr>\n</tbody></table>\n</li>\n<li>设置偏移值：偏移值设置两个方向<table>\n<thead>\n<tr>\n<th align=\"center\">方向</th>\n<th align=\"center\">属性名</th>\n<th align=\"center\">属性值</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">水平</td>\n<td align=\"center\">left</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离左边的距离</td>\n</tr>\n<tr>\n<td align=\"center\">水平</td>\n<td align=\"center\">right</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离右边的距离</td>\n</tr>\n<tr>\n<td align=\"center\">垂直</td>\n<td align=\"center\">top</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离上边的距离</td>\n</tr>\n<tr>\n<td align=\"center\">垂直</td>\n<td align=\"center\">bottom</td>\n<td align=\"center\">数字+px</td>\n<td align=\"center\">距离下边的距离</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"6-2-相对定位\"><a href=\"#6-2-相对定位\" class=\"headerlink\" title=\"6.2 相对定位\"></a>6.2 相对定位</h4><ul>\n<li>作用：相对于自己之前的位置移动</li>\n<li>用法：position：relative；</li>\n<li>特点：<ol>\n<li>需要配合方位属性实现移动。</li>\n<li>相对于自己原来的位置移动。</li>\n<li>原来的位置存在占位，不脱标。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"6-3-绝对定位\"><a href=\"#6-3-绝对定位\" class=\"headerlink\" title=\"6.3 绝对定位\"></a>6.3 绝对定位</h4><ul>\n<li>作用：相对于定位的父元素进行定位移动</li>\n<li>用法：position：absolute；</li>\n<li>特点：<ol>\n<li>脱标的占位置</li>\n<li>具有行内块的特点</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"6-4-固定定位\"><a href=\"#6-4-固定定位\" class=\"headerlink\" title=\"6.4 固定定位\"></a>6.4 固定定位</h4><ul>\n<li>作用：相对于浏览器进行定位移动</li>\n<li>用法：position：fixed；</li>\n<li>特点：<ol>\n<li>需要配合方位属性实现移动</li>\n<li>相对与浏览器可视区域移动</li>\n<li>在页面不占位置，已经脱标</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"6-5-元素的层级关系\"><a href=\"#6-5-元素的层级关系\" class=\"headerlink\" title=\"6.5 元素的层级关系\"></a>6.5 元素的层级关系</h4><ul>\n<li>层级关系：标准流&lt;浮动&lt;定位</li>\n<li>不同定位之间的层级：默认层级相同，写在后面的会覆盖前面的</li>\n</ul>\n<h3 id=\"7-装饰\"><a href=\"#7-装饰\" class=\"headerlink\" title=\"7.装饰\"></a>7.装饰</h3><h4 id=\"7-1-垂直对齐\"><a href=\"#7-1-垂直对齐\" class=\"headerlink\" title=\"7.1 垂直对齐\"></a>7.1 垂直对齐</h4><ul>\n<li>作用：解决行内元素（图片和文字）的垂直对齐问题</li>\n<li>属性名：vertical-align</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th align=\"center\">效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">baseline</td>\n<td align=\"center\">默认，基线对齐</td>\n</tr>\n<tr>\n<td align=\"center\">top</td>\n<td align=\"center\">顶部对齐</td>\n</tr>\n<tr>\n<td align=\"center\">middle</td>\n<td align=\"center\">中部对齐</td>\n</tr>\n<tr>\n<td align=\"center\">bottom</td>\n<td align=\"center\">底部对齐</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"7-2-光标的类型\"><a href=\"#7-2-光标的类型\" class=\"headerlink\" title=\"7.2 光标的类型\"></a>7.2 光标的类型</h4><ul>\n<li>作用：改变鼠标的样式</li>\n<li>属性名：cursor</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>default</td>\n<td>默认值，箭头</td>\n</tr>\n<tr>\n<td>pointer</td>\n<td>小手</td>\n</tr>\n<tr>\n<td>text</td>\n<td>工字型</td>\n</tr>\n<tr>\n<td>move</td>\n<td>十字拖动标</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"7-3-边框圆角\"><a href=\"#7-3-边框圆角\" class=\"headerlink\" title=\"7.3 边框圆角\"></a>7.3 边框圆角</h4><ul>\n<li>属性名：border-radius</li>\n<li>取值：数字（半径）+px、百分比<ul>\n<li>border-radius：10px；说明四个角曲率相同</li>\n<li>border-radius： 10px  10px 10px 10px；四个角可以一个一个设置（顺时针）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"7-4-溢出显示效果\"><a href=\"#7-4-溢出显示效果\" class=\"headerlink\" title=\"7.4 溢出显示效果\"></a>7.4 溢出显示效果</h4><ul>\n<li>属性名：overflow</li>\n<li>属性值：<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>visible</td>\n<td>默认值，溢出部分可见</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>溢出部分隐藏</td>\n</tr>\n<tr>\n<td>scroll</td>\n<td>无论是否溢出都显示滚动条</td>\n</tr>\n<tr>\n<td>auto</td>\n<td>根据是否溢出，自动显示或隐藏滚动条</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"7-5-元素本身隐藏\"><a href=\"#7-5-元素本身隐藏\" class=\"headerlink\" title=\"7.5 元素本身隐藏\"></a>7.5 元素本身隐藏</h4><ul>\n<li>用法：visibility：hidden<br>       display：none</li>\n</ul>\n<h4 id=\"7-6-元素的透明度\"><a href=\"#7-6-元素的透明度\" class=\"headerlink\" title=\"7.6 元素的透明度\"></a>7.6 元素的透明度</h4><ul>\n<li>作用：让元素整体包括内容一起变透明</li>\n<li>属性名：opacity</li>\n<li>属性值：0（完全透明）~1（完全不透明）之间的数字</li>\n</ul>\n<h3 id=\"8-样式补充\"><a href=\"#8-样式补充\" class=\"headerlink\" title=\"8.样式补充\"></a>8.样式补充</h3><h4 id=\"8-1-精灵图\"><a href=\"#8-1-精灵图\" class=\"headerlink\" title=\"8.1 精灵图\"></a>8.1 精灵图</h4><ul>\n<li>作用：将小图合并成大图，减轻服务器的压力（服务器会发送小图整合图，网页接收图片后“裁剪”出小图来显示）</li>\n<li>使用：<ol>\n<li>创建一个盒子，设置盒子的尺寸与小图尺寸一样</li>\n<li>将精灵图设置为盒子背景图</li>\n<li>修改背景图位置：background-position：x y；</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"8-2-背景图覆盖\"><a href=\"#8-2-背景图覆盖\" class=\"headerlink\" title=\"8.2 背景图覆盖\"></a>8.2 背景图覆盖</h4><ul>\n<li>作用：设置背景图覆盖方式</li>\n<li>用法：background-size：宽度 高度；</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>取值</th>\n<th>场景</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>数字+px</td>\n<td>常用</td>\n</tr>\n<tr>\n<td>百分比</td>\n<td>相对于当前盒子的宽高百分比</td>\n</tr>\n<tr>\n<td>contain</td>\n<td>包含，将背景图片等比例缩放，直到不会超过盒子的大小</td>\n</tr>\n<tr>\n<td>cover</td>\n<td>覆盖，将图片填满整个盒子没有空白</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"8-3-盒子阴影\"><a href=\"#8-3-盒子阴影\" class=\"headerlink\" title=\"8.3 盒子阴影\"></a>8.3 盒子阴影</h4><ul>\n<li>作用：给盒子添加阴影</li>\n<li>属性名：box-shadow</li>\n<li>取值：连写赋值<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>h-shadow</td>\n<td>必须，水平偏移量</td>\n</tr>\n<tr>\n<td>v-shadow</td>\n<td>必须，垂直偏移量</td>\n</tr>\n<tr>\n<td>blur</td>\n<td>可选，模糊度</td>\n</tr>\n<tr>\n<td>spread</td>\n<td>可选，阴影扩大</td>\n</tr>\n<tr>\n<td>color</td>\n<td>可选，阴影颜色</td>\n</tr>\n<tr>\n<td>inset</td>\n<td>可选，将阴影改为内部阴影</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"8-4-过渡\"><a href=\"#8-4-过渡\" class=\"headerlink\" title=\"8.4 过渡\"></a>8.4 过渡</h4><ul>\n<li>作用：配合hover使用，让元素慢慢变化</li>\n<li>属性名：transition</li>\n<li>取值：<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>取值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>过渡的属性</td>\n<td>all：所有属性过渡；具体属性名</td>\n</tr>\n<tr>\n<td>过渡的时长</td>\n<td>数字+s（秒）</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"8-5-SEO搜索引擎优化\"><a href=\"#8-5-SEO搜索引擎优化\" class=\"headerlink\" title=\"8.5 SEO搜索引擎优化\"></a>8.5 SEO搜索引擎优化</h4><ul>\n<li><p>作用：让网站在搜索引擎的排名靠前</p>\n</li>\n<li><p>方法：</p>\n<ol>\n<li>竞价排名</li>\n<li>将网页制作html后缀</li>\n<li>标签语义化<ol>\n<li>title：网页标题标签</li>\n<li>description：网页描述标签</li>\n<li>keywords：网页关键词标签</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>添加图标</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;shortcut icon&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;favicon.ico&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/x-icon&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-动态\"><a href=\"#9-动态\" class=\"headerlink\" title=\"9.动态\"></a>9.动态</h3><h4 id=\"9-1-平面转换\"><a href=\"#9-1-平面转换\" class=\"headerlink\" title=\"9.1 平面转换\"></a>9.1 平面转换</h4><p>改变盒子在平面的形态（位移、旋转、缩放）<br>2D转换<br>属性：<strong>transform</strong></p>\n<ul>\n<li>位移<ul>\n<li>语法：<code>transform: translate (水平移动距离,垂直移动距离);</code></li>\n<li>取值：<ul>\n<li>数值+px</li>\n<li>百分比（参照物为盒子自身尺寸）</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>translateX() 仅水平移动</li>\n<li>translateY() 仅垂直移动</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>旋转<ul>\n<li>语法：<code>transform: rotate(角度);</code></li>\n<li>取值：<ul>\n<li>数值+deg</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>可以取正负</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>转换原点<ul>\n<li>语法：<code>transform-origin: 原点水平位置 原点垂直位置;</code></li>\n<li>取值：<ul>\n<li>方位名词：left、top、right、bottom、center</li>\n<li>数值+px</li>\n<li>百分比</li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>默认原点是盒子中心点</li>\n<li>原点就是物体旋转点</li>\n<li>需要先位移后旋转</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>缩放<ul>\n<li>语法：<code>transform: scale(x轴缩放倍率,y轴缩放倍率);</code> <code>transform: scale(等比缩放倍率);</code></li>\n<li>取值：数值</li>\n<li>注意：<ul>\n<li>数值可以为小数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>渐变<ul>\n<li>语法：<code>background-image: linear-gradient(方向, 颜色1, 颜色2,...);</code></li>\n<li>取值：<ul>\n<li>方向取值为<code>to+空格+方位名词</code>，表示往拿个方向渐变</li>\n<li>颜色可以取多个值，表示多种颜色的渐变</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"9-2-空间转换\"><a href=\"#9-2-空间转换\" class=\"headerlink\" title=\"9.2 空间转换\"></a>9.2 空间转换</h4><p>实现元素在空间内的位移、旋转、缩放。<br>3D转换，z轴垂直于屏幕<br>空间转换属性：<strong>transform</strong></p>\n<ul>\n<li>位移<ul>\n<li>语法：<ul>\n<li><code>transform: translate3d(x,y,z)</code></li>\n<li><code>transform: translateX(值)</code></li>\n<li><code>transform: translateY(值)</code></li>\n<li><code>transform: translateZ(值)</code></li>\n</ul>\n</li>\n<li>取值：<ul>\n<li>数值+px</li>\n<li>可以正负</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>透视<ul>\n<li>语法：<code>perspective: 值;</code></li>\n<li>取值：数值+px （建议800-1200）</li>\n<li>只有设置了透视，Z方向的位移才能有明显的变化</li>\n</ul>\n</li>\n<li>旋转<ul>\n<li>语法：<ul>\n<li><code>transform: rotateX(角度)</code></li>\n<li><code>transform: rotateY(角度)</code></li>\n<li><code>transform: rotateZ(角度)</code></li>\n<li><code>transform: rotate3d(x,y,z,角度)</code></li>\n</ul>\n</li>\n<li>取值：<ul>\n<li>数值+deg</li>\n<li>x,y,z为0-1的数字来自定义旋转轴的位置</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>立体呈现<ul>\n<li>语法：<code>transform-style: preserve-3d;</code></li>\n</ul>\n</li>\n<li>缩放<ul>\n<li>语法：<ul>\n<li><code>transform: scaleX(倍数)</code></li>\n<li><code>transform: scaleY(倍数)</code></li>\n<li><code>transform: scaleZ(倍数)</code></li>\n<li><code>transform: scale3d(x,y,z)</code></li>\n</ul>\n</li>\n<li>取值：数字（整数或小数）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"9-3-动画\"><a href=\"#9-3-动画\" class=\"headerlink\" title=\"9.3 动画\"></a>9.3 动画</h4><ul>\n<li>使用animation添加动画</li>\n<li>动画效果：实现多个状态之间的变化过程，动画过程可控</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.one</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">/*使用动画*/</span></span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: change <span class=\"number\">3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*自定义动画：只能有两个状态的变化*/</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> change&#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*自定义动画：多个状态的变化，百分比为占用动画时长的百分比*/</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> change&#123;</span><br><span class=\"line\">  <span class=\"number\">20%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"number\">40%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: green;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"number\">60%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: pink;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"number\">100%</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>语法:<ul>\n<li><code>animation: 动画名称 动画时长 速度曲线 延迟时间 重复次数 动画方向 执行完毕时的状态;</code></li>\n<li><code>animation: name duration timing-function delay iteration-count direction fill-mode;</code></li>\n</ul>\n</li>\n<li>注意：<ul>\n<li>动画名称和动画时长为必须属性值</li>\n<li>可选属性值的取值不分先后</li>\n<li>无限循环属性值 <code>infinite</code></li>\n<li>动画方向属性值： <code>alternate</code> 从尾到头快速执行动画</li>\n<li>速度曲线：<code>steps(数字)</code> 逐帧动画</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三、移动端Web\"><a href=\"#三、移动端Web\" class=\"headerlink\" title=\"三、移动端Web\"></a>三、移动端Web</h2><ul>\n<li>PC端网页与移动端网页的区别<ul>\n<li>PC屏幕大，网页固定版心</li>\n<li>手机屏幕小，网页宽度多数为100%</li>\n</ul>\n</li>\n</ul>\n<p>参考逻辑分辨率，一般选用<code>iPhone 6/7/8</code>设备来参考开发</p>\n<p>视口：规定html大小，让html宽度与设备宽度一样，没有视口标签宽度就为<strong>980px</strong>：<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code></p>\n<p>百分比布局（流式布局）：宽度自适应，高度固定。（古老布局）</p>\n<h3 id=\"1-Flex布局\"><a href=\"#1-Flex布局\" class=\"headerlink\" title=\"1.Flex布局\"></a>1.Flex布局</h3><h4 id=\"1-1-基本使用\"><a href=\"#1-1-基本使用\" class=\"headerlink\" title=\"1.1 基本使用\"></a>1.1 基本使用</h4><ul>\n<li>作用：<ul>\n<li>基于Flex精确灵活控制块级盒子的布局方式，避免浮动布局中脱离文档流的现象发生。</li>\n<li>Flex布局非常适合结构化布局</li>\n</ul>\n</li>\n<li>语法：<ul>\n<li>在父元素添加 <code>display: flex</code></li>\n</ul>\n</li>\n<li>组成：<ul>\n<li>弹性容器</li>\n<li>弹性盒子</li>\n<li>主轴</li>\n<li>侧轴&#x2F;交叉轴</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-对齐\"><a href=\"#1-2-对齐\" class=\"headerlink\" title=\"1.2 对齐\"></a>1.2 对齐</h4><ul>\n<li>主轴对齐方式</li>\n<li>属性：<code>justify-content</code> (添加在父元素里面)</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">flex-start</td>\n<td>默认值，起点开始排序</td>\n</tr>\n<tr>\n<td align=\"center\">flex-end</td>\n<td>终点向起点开始排列</td>\n</tr>\n<tr>\n<td align=\"center\">center</td>\n<td>沿主轴居中排列</td>\n</tr>\n<tr>\n<td align=\"center\">space-around</td>\n<td>弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子两侧</td>\n</tr>\n<tr>\n<td align=\"center\">space-between</td>\n<td>弹性盒子沿主轴均匀排列，空白间距均分在相邻盒子之间</td>\n</tr>\n<tr>\n<td align=\"center\">space-evenly</td>\n<td>弹性盒子沿主轴均匀排列，弹性盒子与容器之间间距相等</td>\n</tr>\n</tbody></table>\n<ul>\n<li>侧轴对齐方式</li>\n<li>属性：<code>align-items</code> (添加到父元素里面)</li>\n<li>注意：<code>align-items</code>属性值只能设置一个，后面会覆盖前面的。当子元素有高度<code>stretch</code>会失效</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性值</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">flex-start</td>\n<td>默认值，起点开始排序</td>\n</tr>\n<tr>\n<td align=\"center\">flex-end</td>\n<td>终点向起点开始排列</td>\n</tr>\n<tr>\n<td align=\"center\">center</td>\n<td>沿侧轴居中排列</td>\n</tr>\n<tr>\n<td align=\"center\">stretch</td>\n<td>默认值，弹性盒子沿主轴拉伸至铺满容器</td>\n</tr>\n</tbody></table>\n<ul>\n<li>伸缩比：占用父元素剩余尺寸的份数</li>\n<li>属性：<code>flex</code></li>\n<li>取值：数值（整数）</li>\n</ul>\n<h3 id=\"2-移动适配\"><a href=\"#2-移动适配\" class=\"headerlink\" title=\"2.移动适配\"></a>2.移动适配</h3><h4 id=\"2-1-rem使用\"><a href=\"#2-1-rem使用\" class=\"headerlink\" title=\"2.1 rem使用\"></a>2.1 rem使用</h4><ul>\n<li>相对单位</li>\n<li>rem单位是相对于HTML标签的字号计算结果</li>\n<li>1rem&#x3D;1HTML字号大小</li>\n</ul>\n<p>需要设置html标签字号<code>font-size: 15px</code><br>使用媒体查询设置差异化CSS样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> (媒体特性) &#123;</span><br><span class=\"line\">  选择器&#123;</span><br><span class=\"line\">    CSS属性</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">width</span>:<span class=\"number\">320px</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">html</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>目前rem布局方案中，将网页等分成10份，HTML标签的字号为视口宽度的1&#x2F;10</p>\n<h4 id=\"2-2-less\"><a href=\"#2-2-less\" class=\"headerlink\" title=\"2.2 less\"></a>2.2 less</h4><p>目标：快速编译生成CSS代码</p>\n<p>less是一个CSS预处理器，扩充CSS语言，使CSS具备一定的逻辑性</p>\n<p>浏览器不识别less代码</p>\n<ul>\n<li>注释<ul>\n<li>单行注释：<code>//</code></li>\n<li>多行注释：<code>/**/</code></li>\n</ul>\n</li>\n<li>运算<ul>\n<li><code>+</code>、<code>-</code>、<code>*</code>直接使用</li>\n<li>除法需要添加小括号包裹整个表达式或者<code>.</code></li>\n</ul>\n</li>\n<li>后代选择器<ul>\n<li>在父元素选择器里面写选择器（嵌套），表示父子级的选择关系</li>\n<li>在父元素选择器里面写选择器，在里面选择器前面添加<code>&amp;</code>表示平级关系</li>\n</ul>\n</li>\n<li>变量<ul>\n<li>把变量存储到一个容器，设置属性值为这个容器名</li>\n<li>作用就是存储数据，方便修改</li>\n</ul>\n</li>\n<li>语法：<ul>\n<li>定义变量：<code>@变量名: 值;</code></li>\n<li>使用变量：<code>CSS变量: @变量名;</code></li>\n</ul>\n</li>\n<li>导入其他less文件<ul>\n<li>语法：<code>@import &quot;文件路径&quot;;</code></li>\n<li>可以省略<code>.less</code>后缀</li>\n</ul>\n</li>\n<li>导出CSS文件<ul>\n<li>VScode插件<code>easyLess</code>可以自动保存并生成CSS文件</li>\n<li>禁止导出：在less文件第一行添加：<code>// out:false</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-vw-vh单位\"><a href=\"#2-3-vw-vh单位\" class=\"headerlink\" title=\"2.3 vw&#x2F;vh单位\"></a>2.3 vw&#x2F;vh单位</h4><ul>\n<li>相对单位</li>\n<li>vw：viewport width<ul>\n<li>1vw&#x3D;1&#x2F;100视口宽度</li>\n<li>vw尺寸 &#x3D; px单位数值&#x2F;(0.01*视口宽度)</li>\n</ul>\n</li>\n<li>vh：viewport height<ul>\n<li>1vh&#x3D;1&#x2F;100视口高度</li>\n<li>vh尺寸 &#x3D; px单位数值&#x2F;(0.01*视口高度)</li>\n</ul>\n</li>\n<li>不允许vw和vh混用，宽高都用vw</li>\n</ul>\n<h3 id=\"3-响应式web\"><a href=\"#3-响应式web\" class=\"headerlink\" title=\"3.响应式web\"></a>3.响应式web</h3><h4 id=\"3-1-媒体查询\"><a href=\"#3-1-媒体查询\" class=\"headerlink\" title=\"3.1 媒体查询\"></a>3.1 媒体查询</h4><ul>\n<li>目标：根据设备宽度的变化，设置差异化样式</li>\n<li>媒体特性写法：<ul>\n<li>max-width：小于等于该宽度</li>\n<li>min-width：大于等于该宽度</li>\n<li>具有层叠性，后面会覆盖前面的</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@meida</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">768px</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@meida</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">992px</span>)&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@meida</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">1200px</span>)&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在link标签中使用媒体查询</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;one.css&quot;</span> <span class=\"attr\">media</span>=<span class=\"string\">&quot;(min-width: 768px)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-BootStrap的安装和使用\"><a href=\"#3-2-BootStrap的安装和使用\" class=\"headerlink\" title=\"3.2 BootStrap的安装和使用\"></a>3.2 BootStrap的安装和使用</h4><p><a href=\"https://v5.bootcss.com/\">BootStrap</a>是一个开源的响应式前端UI框架</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装BootStrap</span></span><br><span class=\"line\">npm install bootstrap</span><br><span class=\"line\"><span class=\"comment\"># 安装BootStrap的图标库</span></span><br><span class=\"line\">npm i bootstrap-icons</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 引入BootStrap及图标库--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;node_modules/bootstrap/dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;node_modules/bootstrap-icons/font/bootstrap-icons.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-BootStrap的栅格系统\"><a href=\"#3-3-BootStrap的栅格系统\" class=\"headerlink\" title=\"3.3 BootStrap的栅格系统\"></a>3.3 BootStrap的栅格系统</h4><ul>\n<li>目标：使用BootStrap栅格系统布局响应式网页</li>\n<li>栅格化是指将整个网页的宽度分成若干等份</li>\n<li>BootStrap默认将网页分成12等份</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">超小屏幕</th>\n<th align=\"center\">小屏幕</th>\n<th align=\"center\">中等屏幕</th>\n<th align=\"center\">大屏幕</th>\n<th align=\"center\">超大屏幕</th>\n<th align=\"center\">超超大屏幕</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">响应断点</td>\n<td align=\"center\">&lt;576px</td>\n<td align=\"center\">≥576px</td>\n<td align=\"center\">≥768px</td>\n<td align=\"center\">≥992px</td>\n<td align=\"center\">≥1200px</td>\n<td align=\"center\">≥1400px</td>\n</tr>\n<tr>\n<td align=\"center\">别名</td>\n<td align=\"center\">xs</td>\n<td align=\"center\">sm</td>\n<td align=\"center\">md</td>\n<td align=\"center\">lg</td>\n<td align=\"center\">xl</td>\n<td align=\"center\">xxl</td>\n</tr>\n<tr>\n<td align=\"center\">容器宽度</td>\n<td align=\"center\">100%</td>\n<td align=\"center\">540px</td>\n<td align=\"center\">720px</td>\n<td align=\"center\">960px</td>\n<td align=\"center\">1140px</td>\n<td align=\"center\">1320px</td>\n</tr>\n<tr>\n<td align=\"center\">类前缀</td>\n<td align=\"center\">.col-</td>\n<td align=\"center\">.col-sm-</td>\n<td align=\"center\">.col-md-</td>\n<td align=\"center\">.col-lg-</td>\n<td align=\"center\">.col-xl-</td>\n<td align=\"center\">.col-xxl-</td>\n</tr>\n<tr>\n<td align=\"center\">列数</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n<td align=\"center\">12</td>\n</tr>\n<tr>\n<td align=\"center\">列间隙</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n<td align=\"center\">30px</td>\n</tr>\n</tbody></table>\n<ul>\n<li><code>.container</code>类自带间距15px</li>\n<li><code>.row</code>类自带-15px，用来定义栅格布局的行和列</li>\n</ul>\n"},{"title":"JavaScript快速入门语法","img":"https://images.pexels.com/photos/208560/pexels-photo-208560.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500","excerpt":"JavaScript快速入门语法，介绍了基本语法与Web API的DOM和BOM，以及常见的网络特效","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-26T08:51:10.000Z","_content":"\n# JavaScript快速入门语法\n\n## 一、基础语法\n\n### 1.前言\n\n作用：\n\n* 表单验证\n* 网页特效\n* 服务端开发（Node.js）\n* 桌面程序（Electron）\n* App（Cordova）\n* 控制硬件-物联网（Ruff）\n* 游戏开发（cocos2d-js）\n\nJavaScript组成：**ES**(ECMAScript)+**DOM**+**BOM**\n\n书写位置：\n\n1. 行内：在元素内部写\n2. 内嵌：使用`<script>JS代码</script>` 标签\n3. 外部：`*.js`文件，再通过`<script>` 标签引入`<script src=\"*.js\"></script>`\n\n### 2.基础语法\n\n#### 2.1 注释\n\n```js\n//单行注释\n\n/*\n    多行注释\n*/\n```\n\n#### 2.2 输入输出语句\n\n|方法|说明|归属|\n|:----:|:----:|:----:|\n|alert(msg)|浏览器弹出警告框|浏览器|\n|console.log(msg)|浏览器控制台打印输出信息|浏览器|\n|prompt(info)|浏览器弹出输入框，用户可以输入|浏览器|\n\n#### 2.3 变量\n\n```js\n// 声明变量\nvar age;\n//变量赋值\nage=18；\n//变量的初始化\nvar age=18;\n//会覆盖前面的值\nage=20;\n//声明多个变量\nvar age = 18,\n      sex = 'man';\n//只声明，不赋值\nvar sex;\nconsole.log(sex);\n> undefined\n//不声明，直接使用\nqq=120;\nconsole.log(qq);\n> 120\n```\n\n**命名规范：**\n\n* 由字母、数字、下划线、美元符号组成\n* 区分大小写\n* 不能数字开头\n* 不能是关键字\n* 首字母小写的驼峰命名法\n\n#### 2.4 数据类型\n\nJS属于动态类型语言，根据右边变量值来判断数据类型。变量的数据类型**可变**。\n\n**简单数据类型：**\n|数据类型|说明|默认值|\n|:----:|:----:|:----:|\n|Number|数字型，包括整型和浮点型|0|\n|Boolean|布尔型|false|\n|String|字符串类型|\"\"|\n|Undefined|未定义值|undefined|\n|Null|空值|null|\n\n方法**isNaN()**，判断是否非数字，如果不是数字返回true\n\n**字符串转义符：**\n转义符|说明\n----|-----\n`\\n`|换行\n`\\\\`|斜杠\n`\\'`|单引号\n`\\\"`|双引号\n`\\t`|tab缩进\n`\\b`|空格\n\n数据类型检查函数：`typeof 变量名`\n\n数据类型转化：\n\n* 转化为字符串类型：`toString()`、`String()`\n* 转化为数字类型：`pareInt()`、`parseFloat()`、`Number()`\n* 转化为布尔型：`Boolean()`，只有''、0、NaN、null、undefined会被转化为false，其他都为true\n\n#### 2.5 运算符\n\n* 算术运算符：`+`、`-`、`*`、`/`、`%`\n* 递增、递减运算符：`++`、`--`\n* 比较运算符：`<`、`>`、`>=`、`<=`、`==`、`!=`、`===`和`!==` (全等，要求值和数据类型都一致)\n* 逻辑运算符：`&&`、`||`、`!`\n  * 逻辑与中断：`表达式1 && 表达式2` ，如果表达式1为真，返回表达式2，否则返回表达式1\n  * 逻辑或中断：`表达式1 || 表达式2` ，如果表达式1为真，返回表达式1，否则返回表达式2\n* 赋值运算符：`=`、`+=`、`-=`、`*=`、`/=`、`%=`\n\n#### 2.6 流程控制\n\n```js\n//条件表达式为真，执行语句\nif(条件表达式){\n    //执行语句\n}\n\nif(条件表达式){\n    //执行语句1\n}else{\n    //执行语句2\n}\n\nif(条件表达式1){\n    //执行语句1\n}else if(条件表达式2){\n    //执行语句2\n}else{\n    //执行语句3\n}\n\n//三元表达式：条件表达式为真，返回表达式1，否则返回表达式2\n条件表达式? 表达式1:表达式2\n\n//表达式的值与value值进行匹配\nswitch(表达式){\n    case value1:\n        //执行语句1\n        break;\n    case value2:\n        //执行语句2\n        break;\n    default:\n        //最后语句\n}\n```\n\n#### 2.7 循环控制\n\n```js\n//条件表达式为真，继续循环\nfor(初始化表达式;条件表达式;操作表达式){\n    //循环体\n}\n\n//条件表达式为真，继续循环\nwhile(条件表达式){\n    //循环体\n}\n\ndo{\n    //循环体\n}while(条件表达式)\n```\n\n* `continue`关键字，跳出本次循环，进入下一个循环\n* `break`关键字，跳出当前循环\n\n#### 2.8 数组\n\n```js\n//new创建数组\nvar arr=new Array();\nvar arr=new Array(1,2);\n\n//数组字面量创建数组\nvar arr=[];\nvar arr=[1,2,'pink',true];\n\n//访问数组\nconsole.log(arr[0]);\n\n//遍历数组\nfor(var i=0;i<arr.length;i++){\n    console.log(arr[i]);\n}\n\n//添加元素\narr.length=10; //先修改数组长度，后添加\narr[4]='red';  //直接添加\narr='blue'  //arr会变成字符串\n```\n\n#### 2.9 函数\n\n```js\n//声明函数\nfunction 函数名(){\n    //函数体\n}\n//调用函数\n函数名();\n\n//有参函数\n//声明函数\nfunction 函数名(形参1,形参2,.....){\n    //函数体\n}\n//调用函数\n函数名(实参1,实参2,.....);\n\n//函数表达式声明（匿名函数）\nvar 变量名=function(){\n    //函数体\n}\n//调用函数\n变量名();\n```\n\n* 参数数量不匹配\n  * 实参=形参，正确\n  * 实参>形参，取形参的个数\n  * 实参<形参，多的参数定义为undefined，结果为NaN\n\n* 返回参数：`return 返回值;`\n* 接收参数不确定：用`arguments`来当形参接收数据\n  * `arguments`是一个伪数组，具有数组的length属性，有索引，没有pop()、push()方法\n* 内部访问外部变量，由内向外一层一层的查找。\n* 预解析：js引擎会把所有的var和function提升到当前作用域最前面\n\n#### 2.10 对象\n\n```js\n//创建字面量对象\nvar obj = {};\nvar obj={\n    uname: '张三丰',\n    age: 18,\n    sex: 'man',\n    sayHello: function(){\n        console.log('Hello');\n    }\n}\n\n//调用对象\nconsole.log(obj.uname);\nconsole.log(obj['uname']);\nobj.sayHello();\n\n//new Object创建对象\nvar obj=new Object();\nobj.uname='张三丰';\n\n//构造函数创建对象，建议名字首字母大写\nfunction 构造函数名(){\n    this.属性=值;\n    this.方法=function(){}\n}\nnew 构造函数名();\n\n//遍历对象里面的属性和方法\nfor(变量 in 对象){\n    //循环体\n}\n```\n\n* js对象分为3种：自定义对象、内置对象、浏览器对象\n* 查阅文档：[MDN](https://developer.mozilla.org/zh-CN/)\n* `instanceof`运算符，检测是否为数组，`arr instanceof Array`\n* `unshift()`方法在数组开头添加元素，`push()`方法向数组末尾添加元素\n* `shift()`方法在数组开头删除元素，`pop()`方法向数组末尾删除元素\n* 基本包装类型：把简单数据类型包装成复杂数据类型，使其能够使用属性和方法`var 变量=new String('内容')`\n* 字符串不可变：在字符串重新赋值或者拼接的过程中，会重新开辟内存空间存储数据\n* `indexOf('查找的字符',开始的位置)`，从开始的位置从前往后匹配字符，返回索引，找不到返回-1\n* `lastIndexOf('查找的字符')`，从后往前匹配字符，返回索引（正常的索引）\n* `charAt(索引)`，返回指定索引的字符\n* `charCodeAt(索引)`，获取指定索引字符的ASCII码\n* `str[索引]`，返回指定索引的字符\n* `replace('被替换的字符','替换的字符')`，在字符串中查找被替换的字符替换成替换的字符\n* `split('分隔符')`，根据分隔符将字符串转化为数组\n* 简单数据类型传参传递的是结果，复杂数据类型传参传递的是地址\n\n## 二、Web API\n\n### 1.DOM\n\n>文档对象模型（简称DOM），是W3C组织推荐的标准编程接口\n\n* 文档：一个页面就是一个文档，DOM中使用document表示\n* 元素：页面的所有标签都是元素，DOM中使用element表示\n* 节点：网页中的所有内容都是节点，DOM中使用node表示\n\n#### 1.1 获取元素\n\n```js\n//1.根据 ID 获取,返回DOM的Element对象，没有找到返回null\nvar 变量名=document.getElementById('ID名');\n\n// 2. 根据标签名获取，得到所有标签对象的集合\nvar 变量名=document.getElementsByTagName('标签名');\n\n//3. 通过HTML5新增方法获取\nvar 变量名=document.getElementsByClassName('类名'); \nvar 变量名=document.querySelector('选择器'); //返回选择器的第一个对象\n\n//4.特殊元素获取\nvar 变量名=document.body;  //获取body元素对象\nvar 变量名=document.documentElement; //获取html元素对象\n```\n\n#### 1.2 事件基础\n\n* 事件源、事件类型、事件处理程序\n\n```  js\nvar btn=document.getElementById('btn');\nbtn.onclick = function(){\n    alert('hello');\n}\n```\n\n#### 1.3 操作元素\n\n* innerText属性，可读写元素内容\n* innerHTML属性，可读写元素内容，识别HTML标签\n* src、href属性，通过`对象.属性`的方式可读写元素相关内容\n* id、alt、title属性，可读写元素相关内容\n* 只要是元素的属性，都可以用`对象.属性`这个方法读写元素相关内容\n* 通过`对象.style.属性名`来修改样式\n* 通过`对象.className`修改元素的类名，以便修改更多的样式\n* 上面的方法只能获得本来存在的属性，获得自定义属性使用`对象.getAttribute('属性名');`\n* 设置自定义属性值：`对象.setAttribute('属性名',属性值);`\n* 为了避免歧义，规定自定义属性命名规范：`data-自定义属性名`\n\n#### 1.4 节点操作\n\n* 作用：更简单的获取元素\n* 节点构成：(节点类型)nodeType、(节点名称)nodeName、(节点值)nodeValue\n* `对象.parentNode`，获取对象的父节点对象\n* `对象.childNodes`，获取对象所有子节点对象，伪数组存储\n* `对象.firstChild`，获取对象的第一个子节点对象\n* `对象.lastChild`，获取对象的最后一个子节点对象\n* `对象.firstElementChild`，获取对象的第一个子元素节点对象\n* `对象.lastElementChild`，获取对象的最后一个子元素节点对象\n* `对象.children[索引]`，获取对象的第索引个子元素节点对象\n* `对象.nextSibling`，获取对象的下一个兄弟节点对象\n* `对象.previousSibling`，获取对象的上一个兄弟节点对象\n* `document.createElement('节点名')`，创建节点\n* `对象.appendChild(节点对象)`，在对象下添加子节点\n* `对象.removeChild(节点对象)`，删除对象下的子节点\n* `对象.cloneNode()`，克隆一个节点，参数为空或者false为浅拷贝，为true为深拷贝\n\n#### 1.5 事件高级\n\n* 注册事件\n  `eventTarget.addEventListener(type,listener,useCapture)`\n  `eventTarget.addEventListener()`方法将监听器注册到eventTarget上，当该对象触发指定的事件时，就会执行事件处理函数。\n  `type`：事件类型字符串，如click、mouseover，不需要带on\n  `listener`：事件处理函数，事件发生调用该函数\n  `useCapture`：可选参数、默认为false\n* 删除事件\n  `eventTarget.removeEventListener(type,listener,useCapture)`\n* 事件流\n  捕获阶段：从上往下检查事件是否注册，然后执行，useCapture=true\n  冒泡阶段，从下往上检查事件是否注册，然后执行，useCapture=false\n* 事件对象\n  事件对象在注册事件就会存在，不需要传参自动创建，包含了事件相关信息\n\n```js\nvar div  = document.querySelector('div');\ndiv.onclick=function(event){\n    console.log(event);\n}\n```\n\n|事件对象属性方法|说明|\n|:------:|:-------:|\n|target|返回触发事件对象|\n|type|返回事件的类型|\n|preventDefault()|阻止默认事件，比如不让跳转|\n|stopPropagation()|阻止冒泡|\n\n* 事件委托\n  利用冒泡，给一个父节点添加事件，利用target属性，操作每一个子节点\n\n|鼠标事件|说明|\n|:----:|:-----:|\n|onclick|鼠标左键点击|\n|onmouseover|鼠标经过|\n|onmouseout|鼠标离开|\n|onfocus|鼠标焦点|\n|onblur|失去鼠标焦点|\n|onmousemove|鼠标移动|\n|onmouseup|鼠标弹起|\n|onmousedown|鼠标按下|\n|oncontextmenu|鼠标右键菜单|\n|onselectstart|鼠标选中|\n\n|键盘事件|说明|\n|----|-----|\n|onkeyup|键盘松开|\n|onkeydown|键盘按下|\n|onkeypress|键盘按下，不认识功能键ctrl、shift等|\n\n### 2.BOM\n\n> 浏览器对象模型，它提供独立于内容而与浏览器窗口进行交互的对象，其最大的对象是window\n\n#### 2.1 window对象常见事件\n\n* 窗口加载事件\n\n```js\n//会让页面内容全部加载完成后，处理事件\nwindow.onload=function(){}  //后面函数会覆盖前面的\nwindow.addEventListener(\"load\",function(){});  //不会覆盖，会同时存在\ndocument.addEventListener('DOMContentLoaded',function(){})  //DOM加载完就可以执行了\n```\n\n* 窗口大小事件\n\n```js\n//调整窗口大小加载事件，当触发时就调用的处理函数\n//利用这个事件完成响应式布局，window.innerWidth属性拿到当前的宽度\nwindow.onresize=function(){}\nwindow.addEventListener('resize',function(){});\n```\n\n#### 2.2 定时器\n\n* `window.setTimeout(调用函数，[延迟的毫秒数]);`，该定时器在定时器到期后执行调用函数。\n* `window.clearTimeout(timeoutID)`，取消setTimeout()建立的定时器，timeoutID为定时器的名字\n* `window.setInterval(回调函数，[间隔的毫秒数])`，每隔一段时间调用一次回调函数\n* `window.clearInterval(intervalID)`，停止setInterval()定时器\n\n#### 2.3 JS执行队列\n\n* 同步任务都在主线程执行\n* 异步任务：所有的回调函数，都在消息队列中，等同步任务执行完再执行异步任务\n  1. 普通事件，如click、resize\n  2. 资源加载，如load、error\n  3. 定时器，包括setInterval、setTimeout\n\n#### 2.4 location对象\n\n* 作用：获取或设置窗体的URL\n* URL组成\n  \n|组成|说明|\n|---|---------|\n|protocol|通信协议：http，ftp，matio等|\n|host|主机（域名）|\n|port|端口号，可选|\n|path|路径，由'/'隔开的字符串|\n|query|参数，键值对形式用&隔开|\n|fragment|片段，#后面的内容|\n\n|location对象属性|返回值|\n|----|-----|\n|location.href|返回整个URL|\n|location.host|返回主机|\n|location.port|返回端口号|\n|location.pathname|返回路径|\n|location.search|返回参数|\n|location.hash|返回片段|\n\n|location对象方法|返回值|\n|----|-----|\n|location.assign()|跳转页面，记录浏览历史|\n|location.replace()|替换当前页面，不记录浏览历史|\n|location.reload()|重新加载页面|\n\n#### 2.5 navigator对象\n\n* 包含浏览器信息、用户设备信息等的对象，主要用来区别PC端和移动端\n\n#### 2.6 history对象\n\n|history对象方法|返回值|\n|----|-----|\n|history.back()|页面后退|\n|history.forward()|页面前进|\n|history.go(参数)|参数为1前进，参数为-1后退|\n\n### 3.网页特效\n\n#### 3.1 元素偏移量offset系列\n\n* 获得元素距离带有定位父元素的位置\n* 获得元素自身的大小\n* 返回数值没有单位，只读属性\n* 常见属性\n\n|offset系列属性|说明|\n|-----|------|\n|offsetParent|返回该元素带有定位的父元素，如果没有返回body|\n|offsetTop|返回元素相对带有定位父元素上方的偏移|\n|offsetLeft|返回元素相对带有定位父元素左边框的偏移|\n|offsetWidth|返回自身边框、内边距、内容的宽度|\n|offsetHeight|返回自身边框、内边距、内容的高度|\n\n#### 3.2 元素的可视区client系列\n\n|client系列属性|说明|\n|-----|------|\n|clientTop|返回元素上边框的大小|\n|clientLeft|返回元素左边框的大小|\n|clientWidth|返回自身内边距、内容的宽度，不带单位|\n|clientHeight|返回自身内边距、内容的高度，不带单位|\n\n#### 3.2 元素滚动scroll系列\n\n|scroll系列属性|说明|\n|-----|------|\n|scrollTop|返回显示的内容上方与实际内容上方的距离|\n|scrollLeft|返回显示的内容下方与实际内容下方的距离|\n|scrollWidth|返回自身内边距和实际内容的宽度，不带单位|\n|scrollHeight|返回自身内边距和实际内容的高度，不带单位|\n\n#### 3.3 动画函数封装\n\n* 原理：通过定时器不断移动盒子位置\n* 步骤：\n  1. 获得盒子当前的位置\n  2. 让盒子在当前位置加上一个移动距离\n  3. 加一个定时器不断重复这个操作\n  4. 加一个结束定时器的条件\n  5. 此元素需要添加定位，才能使用element.style.left\n\n## 三、进阶语法\n\n### 1.面向对象\n\n面向过程（POP）：分析解决问题的步骤，用函数一步步实现并调用。\n\n面向对象（OOP）：分析问题成一个个对象，让对象之间分工与合作。\n\n面向对象的特性：\n\n* 封装\n* 继承\n* 多态\n\n#### 1.1 ES6的类和对象\n\n> ES6是新一代的JS的语言规范\n\n```js\n//创建类\nclass Father{\n    //构造函数，传递参数与返回实列对象，会默认创建，new命令会自动调用\n    constructor(x,y){\n        this.x=x;   //this指向当前对象\n        this.y=y;\n    }\n    //添加方法\n    say(){\n        //方法体\n        console.log('hello');\n    }\n}\n//创建实列\nvar xx=new Father(1,2);    //先有类才能实列化，类的定义要在前面\n\n//继承\nclass Son extends Father{\n    constructor(x,y){\n        super(x,y);   // 调用父类的构造函数，必须放在前面，之后再进行原本的构造函数\n        //super.say();  调用父类方法\n    }\n}\nvar son = new Son(1,2); \nson.say();   //调用父类方法\n```\n\n#### 1.2 ES5构造函数和原型\n\n> ES5没有类，需要使用构造函数和原型模拟类的效果\n\n静态成员：在构造函数外，对构造函数的属性直接赋值的。不能实例化访问。\n实例成员：在构造函数内定义的。只能实例化访问。\n\n后面感觉重要了再补，略。。。。\n\n#### 1.3 ES5新增方法\n\n* 数组方法\n  * forEach()\n    * 功能：遍历数组\n    * `array.forEach(function(currentValue,index,arr))`\n    * currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身\n  * map()\n  * filter()\n    * 功能：检查数组中符合条件的所有元素，返回新数组\n    * `array.filter(function(currentValue,index,arr))`\n    * currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身\n  * some()\n    * 功能：检查数组中是否有符合条件的元素，有返回true，否则返回false\n    * `array.filter(function(currentValue,index,arr))`\n    * currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身\n  * every()\n* 字符串方法\n  * trim()\n    * 功能：会从一个字符串的两端删除空白字符，返回新的字符串。\n    * `str.trim()`\n* 对象方法\n  * defineProperty()\n    * 功能：定义对象中新属性或修改原有的属性。\n    * `Object.defineProperty(obj,prop,descriptor)`\n    * obj：目标对象、prop：需定义或修改的属性的名字、descriptor：目标属性所拥有的特性\n    * 第三参数descriptor说明，以对象的形式{}书写：\n      * value：设置属性的值，默认为underfined\n      * writable：值是否可以重写，默认为false\n      * enumerable：目标属性是否可以被枚举，默认为false\n      * configurable：目标属性是否可以被删除或是否可以再次修改特性。默认false\n\n#### 1.4 函数进阶\n\n```js\n//1. 自定义函数\nfunction fn(){}\n//2.函数表达式\nvar fun = function(){}\n//3.利用new Function('参数1','参数2','函数体');\nvar f=new Function('a','b','console.log(a+b)');\n```\n\n更改this指向：\n\n* call()\n  * `对象.call(thisArg[,arg1,arg2,...])`\n  * 可以修改对象中this指向对象thisArg。可以任意传递其他参数。\n* apply()\n  * `对象.apply(thisArg[,argsArray])`\n  * 可以修改对象中this指向对象thisArg。想要传递参数必须为数组。\n* bind()\n  * `对象.bind(thisArg[,arg1,arg2,...])`\n  * 该方法不会调用函数，会返回改造完的新函数。\n\n严格模式：\n\n1. 消除js语法的一些不合理地方\n2. 消除代码的不安全地方\n3. 提高编译器效率，增加运行速度\n4. 为ES6做铺垫，禁用一些保留字：class等。\n\n开启严格模式：在所有语句前添加`\"use strict\";`\n\n严格模式的改变：\n\n* 变量\n  * 变量必须先声明再使用\n  * 全局作用中函数中this是undefined\n  * 定时器的this指向window\n  * 事件和对象的this指向调用者\n* 函数\n  * 不能有重名的参数\n  * 不允许在非函数的代码块内声明函数\n\n高阶函数\n\n* 以函数为参数的函数是高阶函数。\n\n```js\nfunction fn(callback){\n    callback&&callback(); //调用函数\n}\n```\n\n* 以函数为返回值的函数是高阶函数。\n\n闭包：有权访问另一个函数作用域中变量的函数。\n\n```js\nfunction fn(){\n    var num = 10;\n    function fun(){  //闭包\n        console.log(num);\n    }\n    return fun;\n}\nvar f= fn();\nf(); //外面作用域访问内部变量，延长局部变量的作用范围\n```\n\n递归函数：函数内部自己调用自己。\n\n* 浅拷贝：只能拷贝一层数据，更深层次的数据只能拷贝引用。\n  * `Object.assign(target,...sources)`\n* 深拷贝：拷贝多层，每一级别都会拷贝。\n\n#### 1.5 正则表达式\n\n```js\n//1.调用RegExp对象来创建正则表达式\nvar regexp=new RegExp(/123/)\n//2.利用字面量创建正则表达式\nvar regexp=/123/;\nconsole.log(regexp.test(123)); //判断内容是否符合正则表达式\n```\n\n* 边界符\n\n|符号|说明|\n|----|----|\n|^|表示匹配行首的文本|\n|$|表示匹配行尾的文本|\n|[]|表示任意匹配一次中括号内的文本|\n|[^]|表示取反，不匹配文本内容|\n\n* 量词符\n\n|符号|说明|\n|---|----|\n|*|重复零次或更多次|\n|+|重复一次或更多次|\n|？|重复零次或一次|\n|{n}|重复n次|\n|{n,}|重复n次或更多次|\n|{n,m}|重复n到m次|\n\n* 预定义\n\n|符号|说明|\n|---|---|\n|\\d|匹配0-9之间的任一数字|\n|\\D|匹配0-9之外的字符|\n|\\w|匹配任意字母、数字、下划线|\n|\\W|匹配字母、数字、下划线之外的字符|\n|\\s|匹配空格|\n|\\S|匹配非空格符|\n\n`字符串.replace(正则表达式,要替换的字符串)`方法批量替换字符串。\n\nswitch修饰符：\n\n* `/正则表达式/[switch]`\n* g：全局匹配\n* i：忽略大小写\n* gi：全局匹配+忽略大小写\n\n#### 1.6 ES6语法\n\n* `let` 声明的变量具有块级作用域，具有暂时性死区（让块内变量与全局隔离）\n* `const`声明常量时必须赋值，不能更改，具有块级作用域\n* 解构赋值\n  * `let [a,b,c] = [1,2,3];`  按照一一对应关系对从数组对变量赋值\n  * `let {name,age}=person;` 按照属性从对象中进行匹配并赋值给变量\n* `()=>{}` 箭头函数，类似匿名函数，但是没有自己的this\n* 剩余参数`(参数1,...数组名)`，接收多余的参数\n* 扩展运算符`...数组名`：可以将数组拆分成以逗号分隔的参数。\n* `Array.from()`将可遍历的对象转化为数组\n* `Array.find()` 找到第一个符合条件的数组成员，没有找到返回undefined\n* `Array.findIndex()` 找到第一个符合条件的数组成员的索引，没有返回-1\n* `数组.includes()` 查找数组是否包含值，返回布尔值\n* 模板字符串\n  * 使用` `` `符号，可以利用`${变量/函数}`添加字符串在字符串的任意位置\n* `字符串.startsWith(字符串1)` 判断字符串头部是否有字符串1\n* `字符串.endsWith(字符串1)` 判断字符串尾部是否有字符串1\n* `字符串.repeat(n)`重复字符串n次，并返回新的字符串\n* 参数默认值`function add(a,b=1){ return a+b;}`\n\n**Set**集合，类似数组，但是成员唯一\n\n* `let s =new Set();` `let s =new Set([1,2,3,4,4]);`\n* `size`属性，返回集合的个数\n* `add()`方法，增加元素\n* `delete()`方法，删除元素，返回布尔值\n* `has()`方法，检查是否包含某个元素，返回布尔值\n* `clear()`方法，清空Set\n\n**Map**键值对集合，键不限于字符串\n\n* `let m=new Map();`\n* `size`属性，返回集合的个数\n* `set()`方法，增加元素\n* `get()`方法，根据键返回值\n* `clear()`方法，清空Map\n* `has()`方法，检查是否包含某个元素，返回布尔值\n\n**Symbol**数据类型\n特点：\n\n1. Symbol值唯一\n2. Symbol不能与其他数据运算\n3. Symbol定义对象属性不能使用for...in遍历\n\n```js\n//创建Symbol\nlet s = Symbol();\nlet s1 = Symbol('zs');\nlet s2 = Symbol.for('zs');\n\n//安全向未知对象中添加新的方法\nlet game={};\nlet methods={\n    up: Symbol(),\n    down: Symbol()\n};\ngame[methods.up]=function(){\n    console.log('go to up');\n}\ngame[methods.down]=function(){\n    console.log('go to down');\n}\n\n//=================\nlet game={\n    name: 'lrx',\n    [Symbol('say')]: ()=>console.log('hello')\n}\n```\n\nSymbol的内置属性，控制对象在特定场景中的表现\n\n**迭代器**：*Iterator*主要提供给*for....of*\n\n* *for.....in* 访问键(在对象中访问属性) ，*for....of* 访问值\n* 工作原理：\n  * 创建一个指针对象，指向当前数据结构的起始位置\n  * 第一次调用next方法，指针自动指向第一个成员\n  * 不断调用next方法，指针一直后移，直到指向最后一个成员\n  * 每次调用next方法，返回一个包含value和done属性的对象\n\n```js\nconst game={\n    name: 'Night',\n    arr: [\n        'anight',\n        'bnight',\n        'cnight',\n        'knight'\n    ],\n    [Symbol.iterator](){\n        let index=0;\n        let _this=this;\n        return {\n            next: ()=>{\n                if(index<_this.arr.length){\n                    const res={value: _this.arr[index],done: false};\n                    index++;\n                    return res;\n                }else{\n                    return {value: undefined,done: true};  //done为true说明到底了\n                }\n            }\n        };\n    }\n}\n```\n\n**生成器**：是一种异步编程解决方案，是一种特殊函数\n> 异步编程（文件操作、网络操作、数据库操作）--->纯回调函数\n\n```js\n//需求：1s 后输出111，2s后输出222，3s后输出333\nfunction one(){\n    setTimeout(()=>{\n        console.log(111);\n        iterator.next();\n    },1000)\n}\nfunction two(){\n    setTimeout(()=>{\n        console.log(222);\n        iterator.next();\n    },2000)\n}\nfunction three(){\n    setTimeout(()=>{\n        console.log(333);\n        iterator.next();\n    },3000)\n}\nfunction *gen(){\n    yield one();\n    yield two();\n    yield three();\n}\nlet iterator = gen();\niterator.next();   //next里面可以传参，在yield位置接收\n```\n\n#### 1.7 异步编程\n\n**JS是单线程的语言**\n\n* 同步任务\n  * 非耗时任务\n  * 只有前面任务执行完成后，才能执行后面的任务\n* 异步任务\n  * 耗时任务，异步任务有JS的宿主环境执行\n  * 当异步任务执行完成后，会通知JS主线程执行异步任务的回调函数\n\n**Promise**\n\n```js\nconst p = new Promise(function(resolve,reject){\n    setTimeout(function(){\n        // let data='数据库数据'\n        // resolve(data)              //成功调用\n        let err = '数据读取失败'\n        reject(err)                        //失败调用\n    },1000)\n})\np.then(function(value){  //成功调用\n    console.log(value)\n},function(reason){   //失败调用\n    console.log(reason)\n})\n```\n\n**async/await**\n\n用来简化Promise的异步操作\n\n```js\nasync function getAllFile(){   // 存在 await的函数， 必须由 async 修饰\n    // 会等待函数执行完成，而且await会把Promise对象中的结果拆解出来\n    const r1 = await thenFs.readFile('./files/1.txt','utf-8');\n    // await 之前的方法都会同步执行，当到达await方法后，会把await后面的代码都转到异步执行队列中\n    const r2 = await thenFs.readFile('./files/1.txt','utf-8');\n}\n```\n\n## 四、Webpack\n\n前端工程化：把前端开发所需的工具、技术、流程、经验进行规范化、标准化。即：模块化、组件化、规范化、自动化。\n\n### 1.基本使用\n\nwebpack是前端项目工程化的具体解决方案。\n\n主要功能：代码压缩混淆、处理浏览器端JavaScript的兼容性、性能优化等功能。\n\n```bash\n# 在项目文件夹内初始化\nnpm init\n# 安装\nnpm i webpack webpack-cli -D\n```\n\n在`package.json`文件中添加下面配置\n\n```json\n\"scripts\": {\n    \"dev\": \"webpack\"\n  },\n```\n\n在主目录新建`webpack.config.js`文件，添加下面内容\n\n```js\nmodule.exports={\n    mode:'development',\n}\n```\n\n```shell\n# 运行\nnpm run dev\n```\n\nwebpack会把js代码全部转化为兼容模式放在`./dist/main.js`文件中，后续只需要在html中导入该文件就行了。\n\n### 2.进阶使用\n\n#### 2.1 mode可选择值\n\n1. development\n   1. 开发环境\n   2. 不会对打包生成文件进行代码压缩和性能优化\n   3. 打包速度快，适合开发使用\n2. production\n   1. 生产环境\n   2. 会对打包生成文件进行代码压缩和性能优化\n   3. 打包速度慢，仅适合在项目发布阶段使用\n\n#### 2.2 默认约定\n\n1. 默认打包入口文件`src/index.js`\n2. 默认输出文件路径`dist/main.js`\n3. 自定义打包入口文件`entry: \"文件路径\"`\n4. 自定义输出文件路径`output: { path: \"文件路径\", filename: \"输出的文件名\"}`\n\n#### 2.3 插件\n\n1. webpack-dev-server\n   1. 类型nodemon工具\n   2. 每当修改源码后，webpack都会自动进行项目的打包与构建\n2. html-webpack-plugin\n   1. 类似模板引擎\n   2. 可以自定义index.html的内容\n\n```shell\n# 安装插件\nnpm i webpack-dev-server -D\n```\n\n在`package.json`文件中修改下面配置\n\n```json\n\"scripts\": {\n    \"dev\": \"webpack serve\"\n  },\n```\n\n```shell\n# 安装插件\nnpm i html-webpack-plugin -D\n```\n\n在`webpack.config.js`中添加下面配置\n\n```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nconst htmlPlugin = new HtmlWebpackPlugin({\n    template: './src/index.html',\n    filename: 'index.html',\n});\n\nmodule.exports={\n    plugins: [htmlPlugin],\n}\n```\n\n```shell\n# 启动，html-webpack-plugin会把index.html复制到内存中，可以直接访问 http://localhost:8080/\nnpm run dev\n```\n\n为了解决每次打包完成都需要手动打开`http://localhost:8080/`地址，需要对`webpack.config.js`文件的节点进行额外的配置\n\n```js\nmodule.exports={\n    devServer: {\n        port: 8002,\n        host: \"127.0.0.1\",\n        open: true,\n    },\n}\n```\n\n#### 2.4 Loader加载器\n\nwebpack默认只处理js文件，如果需要处理其他文件需要loader加载器的作用\n\n``` mermaid\ngraph LR\nbegin(将要被webpack</br>打包处理的模块)-->one{是否为</br>JS模块}\none--是-->twoJS{是否包含</br>高级JS语法}\none--否-->twoLoader{是否配置了</br>对应的Loader}\ntwoJS--是-->threeBabel{是否配置</br>了babel}\ntwoJS--否-->webpack进行处理\ntwoLoader--是-->four1[调用loader处理]\ntwoLoader--否-->four2[报错]\nthreeBabel--是-->调用loader处理\nthreeBabel--否-->报错\n```\n\n* 打包处理CSS文件\n\n  ```shell\n  # 安装css的loader\n  npm i style-loader css-loader -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  test: /\\.css$/, use: ['style-loader', 'css-loader']\n              },\n          ]\n      }\n  }\n  ```\n\n* 打包Less文件\n\n  ```shell\n  # 安装less的loader\n  npm i less-loader less -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  test: /\\.less$/, use: ['style-loader', 'css-loader', 'less-loader' ]\n              },\n          ]\n      }\n  }\n  ```\n\n* 打包url路径相关文件\n\n  ```shell\n  # 安装loader\n  npm i url-loader file-loader -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  //test: /\\.jpg|png|gif$/, use: 'url-loader' \n                  //test: /\\.jpg|png|gif$/, use: 'url-loader?limit=222229' 限制图片大小，单位byte\n                  test: /\\.jpg|png|gif$/,\n                  use: {\n                    loader: 'url-loader',\n                    options: {\n                      limit: 222229,\n                    },\n                  },\n              },\n          ]\n      }\n  }\n  ```\n\n* 打包处理JS高级语法\n\n  ```shell\n  # 安装loader\n  npm i babel-loader @babel/core @babel/plugin-proposal-class-properties -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  test: /\\.js$/,\n                  exclude: /node_modules/, //排除第三方库\n                  use: {\n                    loader: 'babel-loader',\n                    options: {\n                      plugins: ['@babel/plugin-proposal-class-properties']\n                    },\n                  },\n              },\n          ]\n      }\n  }\n  ```\n\n#### 2.5 打包发布\n\n1. 开发环境下，打包生成的文件存放与内存中，无法获取到最终打包生成的文件\n2. 开发环境下，没有对代码进行压缩和性能优化\n\n在`package.json`文件的script节点下添加build命令：\n\n```json\n \"script\": {\n   \"build\": \"webpack --mode production\"\n }\n```\n\n在`webpack.config.js`对打包路径进行配置\n\n```js\nmodule.exports={\n    output: {\n        path: './dist',\n        filename: 'js/bundle.js',\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.jpg|png|gif$/,\n                use: {\n                    loader: 'url-loader',\n                    options: {\n                        limit: 10240,\n                        outputPath: 'images/'\n                    }\n                }\n            },\n        ]\n    }\n}\n```\n\n清除旧文件插件\n\n```shell\n# 安装插件\nnpm i clean-webpack-plugin -D\n```\n\n在`webpack.config.js`配置插件\n\n```js\nconst {CleanWebpackPlugin} = require('clean-webpack-plugin');\n\nconst cleanPlugin = new CleanWebpackPlugin();\n\nmodule.exports={\n  plugins: [htmlPlugin,cleanPlugin],\n}\n```\n\n在`webpack.config.js`配置Source Map来在调试中查找错误文件\n\n1. 开发环境\n   1. 把devtool的值设置为eval-source-map\n   2. 可以定位到错误行\n2. 生产环境\n   1. 关闭source map，将devtool值设置为nosources-source-map\n   2. 提高网站安全性\n","source":"_posts/计算机/前端/JavaScript快速入门语法.md","raw":"---\ntitle: JavaScript快速入门语法\nimg: https://images.pexels.com/photos/208560/pexels-photo-208560.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\nexcerpt:  JavaScript快速入门语法，介绍了基本语法与Web API的DOM和BOM，以及常见的网络特效\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [前端,JavaScript,编程语法]\nmathjax: true\ndate: 2022-04-26 16:51:10\n---\n\n# JavaScript快速入门语法\n\n## 一、基础语法\n\n### 1.前言\n\n作用：\n\n* 表单验证\n* 网页特效\n* 服务端开发（Node.js）\n* 桌面程序（Electron）\n* App（Cordova）\n* 控制硬件-物联网（Ruff）\n* 游戏开发（cocos2d-js）\n\nJavaScript组成：**ES**(ECMAScript)+**DOM**+**BOM**\n\n书写位置：\n\n1. 行内：在元素内部写\n2. 内嵌：使用`<script>JS代码</script>` 标签\n3. 外部：`*.js`文件，再通过`<script>` 标签引入`<script src=\"*.js\"></script>`\n\n### 2.基础语法\n\n#### 2.1 注释\n\n```js\n//单行注释\n\n/*\n    多行注释\n*/\n```\n\n#### 2.2 输入输出语句\n\n|方法|说明|归属|\n|:----:|:----:|:----:|\n|alert(msg)|浏览器弹出警告框|浏览器|\n|console.log(msg)|浏览器控制台打印输出信息|浏览器|\n|prompt(info)|浏览器弹出输入框，用户可以输入|浏览器|\n\n#### 2.3 变量\n\n```js\n// 声明变量\nvar age;\n//变量赋值\nage=18；\n//变量的初始化\nvar age=18;\n//会覆盖前面的值\nage=20;\n//声明多个变量\nvar age = 18,\n      sex = 'man';\n//只声明，不赋值\nvar sex;\nconsole.log(sex);\n> undefined\n//不声明，直接使用\nqq=120;\nconsole.log(qq);\n> 120\n```\n\n**命名规范：**\n\n* 由字母、数字、下划线、美元符号组成\n* 区分大小写\n* 不能数字开头\n* 不能是关键字\n* 首字母小写的驼峰命名法\n\n#### 2.4 数据类型\n\nJS属于动态类型语言，根据右边变量值来判断数据类型。变量的数据类型**可变**。\n\n**简单数据类型：**\n|数据类型|说明|默认值|\n|:----:|:----:|:----:|\n|Number|数字型，包括整型和浮点型|0|\n|Boolean|布尔型|false|\n|String|字符串类型|\"\"|\n|Undefined|未定义值|undefined|\n|Null|空值|null|\n\n方法**isNaN()**，判断是否非数字，如果不是数字返回true\n\n**字符串转义符：**\n转义符|说明\n----|-----\n`\\n`|换行\n`\\\\`|斜杠\n`\\'`|单引号\n`\\\"`|双引号\n`\\t`|tab缩进\n`\\b`|空格\n\n数据类型检查函数：`typeof 变量名`\n\n数据类型转化：\n\n* 转化为字符串类型：`toString()`、`String()`\n* 转化为数字类型：`pareInt()`、`parseFloat()`、`Number()`\n* 转化为布尔型：`Boolean()`，只有''、0、NaN、null、undefined会被转化为false，其他都为true\n\n#### 2.5 运算符\n\n* 算术运算符：`+`、`-`、`*`、`/`、`%`\n* 递增、递减运算符：`++`、`--`\n* 比较运算符：`<`、`>`、`>=`、`<=`、`==`、`!=`、`===`和`!==` (全等，要求值和数据类型都一致)\n* 逻辑运算符：`&&`、`||`、`!`\n  * 逻辑与中断：`表达式1 && 表达式2` ，如果表达式1为真，返回表达式2，否则返回表达式1\n  * 逻辑或中断：`表达式1 || 表达式2` ，如果表达式1为真，返回表达式1，否则返回表达式2\n* 赋值运算符：`=`、`+=`、`-=`、`*=`、`/=`、`%=`\n\n#### 2.6 流程控制\n\n```js\n//条件表达式为真，执行语句\nif(条件表达式){\n    //执行语句\n}\n\nif(条件表达式){\n    //执行语句1\n}else{\n    //执行语句2\n}\n\nif(条件表达式1){\n    //执行语句1\n}else if(条件表达式2){\n    //执行语句2\n}else{\n    //执行语句3\n}\n\n//三元表达式：条件表达式为真，返回表达式1，否则返回表达式2\n条件表达式? 表达式1:表达式2\n\n//表达式的值与value值进行匹配\nswitch(表达式){\n    case value1:\n        //执行语句1\n        break;\n    case value2:\n        //执行语句2\n        break;\n    default:\n        //最后语句\n}\n```\n\n#### 2.7 循环控制\n\n```js\n//条件表达式为真，继续循环\nfor(初始化表达式;条件表达式;操作表达式){\n    //循环体\n}\n\n//条件表达式为真，继续循环\nwhile(条件表达式){\n    //循环体\n}\n\ndo{\n    //循环体\n}while(条件表达式)\n```\n\n* `continue`关键字，跳出本次循环，进入下一个循环\n* `break`关键字，跳出当前循环\n\n#### 2.8 数组\n\n```js\n//new创建数组\nvar arr=new Array();\nvar arr=new Array(1,2);\n\n//数组字面量创建数组\nvar arr=[];\nvar arr=[1,2,'pink',true];\n\n//访问数组\nconsole.log(arr[0]);\n\n//遍历数组\nfor(var i=0;i<arr.length;i++){\n    console.log(arr[i]);\n}\n\n//添加元素\narr.length=10; //先修改数组长度，后添加\narr[4]='red';  //直接添加\narr='blue'  //arr会变成字符串\n```\n\n#### 2.9 函数\n\n```js\n//声明函数\nfunction 函数名(){\n    //函数体\n}\n//调用函数\n函数名();\n\n//有参函数\n//声明函数\nfunction 函数名(形参1,形参2,.....){\n    //函数体\n}\n//调用函数\n函数名(实参1,实参2,.....);\n\n//函数表达式声明（匿名函数）\nvar 变量名=function(){\n    //函数体\n}\n//调用函数\n变量名();\n```\n\n* 参数数量不匹配\n  * 实参=形参，正确\n  * 实参>形参，取形参的个数\n  * 实参<形参，多的参数定义为undefined，结果为NaN\n\n* 返回参数：`return 返回值;`\n* 接收参数不确定：用`arguments`来当形参接收数据\n  * `arguments`是一个伪数组，具有数组的length属性，有索引，没有pop()、push()方法\n* 内部访问外部变量，由内向外一层一层的查找。\n* 预解析：js引擎会把所有的var和function提升到当前作用域最前面\n\n#### 2.10 对象\n\n```js\n//创建字面量对象\nvar obj = {};\nvar obj={\n    uname: '张三丰',\n    age: 18,\n    sex: 'man',\n    sayHello: function(){\n        console.log('Hello');\n    }\n}\n\n//调用对象\nconsole.log(obj.uname);\nconsole.log(obj['uname']);\nobj.sayHello();\n\n//new Object创建对象\nvar obj=new Object();\nobj.uname='张三丰';\n\n//构造函数创建对象，建议名字首字母大写\nfunction 构造函数名(){\n    this.属性=值;\n    this.方法=function(){}\n}\nnew 构造函数名();\n\n//遍历对象里面的属性和方法\nfor(变量 in 对象){\n    //循环体\n}\n```\n\n* js对象分为3种：自定义对象、内置对象、浏览器对象\n* 查阅文档：[MDN](https://developer.mozilla.org/zh-CN/)\n* `instanceof`运算符，检测是否为数组，`arr instanceof Array`\n* `unshift()`方法在数组开头添加元素，`push()`方法向数组末尾添加元素\n* `shift()`方法在数组开头删除元素，`pop()`方法向数组末尾删除元素\n* 基本包装类型：把简单数据类型包装成复杂数据类型，使其能够使用属性和方法`var 变量=new String('内容')`\n* 字符串不可变：在字符串重新赋值或者拼接的过程中，会重新开辟内存空间存储数据\n* `indexOf('查找的字符',开始的位置)`，从开始的位置从前往后匹配字符，返回索引，找不到返回-1\n* `lastIndexOf('查找的字符')`，从后往前匹配字符，返回索引（正常的索引）\n* `charAt(索引)`，返回指定索引的字符\n* `charCodeAt(索引)`，获取指定索引字符的ASCII码\n* `str[索引]`，返回指定索引的字符\n* `replace('被替换的字符','替换的字符')`，在字符串中查找被替换的字符替换成替换的字符\n* `split('分隔符')`，根据分隔符将字符串转化为数组\n* 简单数据类型传参传递的是结果，复杂数据类型传参传递的是地址\n\n## 二、Web API\n\n### 1.DOM\n\n>文档对象模型（简称DOM），是W3C组织推荐的标准编程接口\n\n* 文档：一个页面就是一个文档，DOM中使用document表示\n* 元素：页面的所有标签都是元素，DOM中使用element表示\n* 节点：网页中的所有内容都是节点，DOM中使用node表示\n\n#### 1.1 获取元素\n\n```js\n//1.根据 ID 获取,返回DOM的Element对象，没有找到返回null\nvar 变量名=document.getElementById('ID名');\n\n// 2. 根据标签名获取，得到所有标签对象的集合\nvar 变量名=document.getElementsByTagName('标签名');\n\n//3. 通过HTML5新增方法获取\nvar 变量名=document.getElementsByClassName('类名'); \nvar 变量名=document.querySelector('选择器'); //返回选择器的第一个对象\n\n//4.特殊元素获取\nvar 变量名=document.body;  //获取body元素对象\nvar 变量名=document.documentElement; //获取html元素对象\n```\n\n#### 1.2 事件基础\n\n* 事件源、事件类型、事件处理程序\n\n```  js\nvar btn=document.getElementById('btn');\nbtn.onclick = function(){\n    alert('hello');\n}\n```\n\n#### 1.3 操作元素\n\n* innerText属性，可读写元素内容\n* innerHTML属性，可读写元素内容，识别HTML标签\n* src、href属性，通过`对象.属性`的方式可读写元素相关内容\n* id、alt、title属性，可读写元素相关内容\n* 只要是元素的属性，都可以用`对象.属性`这个方法读写元素相关内容\n* 通过`对象.style.属性名`来修改样式\n* 通过`对象.className`修改元素的类名，以便修改更多的样式\n* 上面的方法只能获得本来存在的属性，获得自定义属性使用`对象.getAttribute('属性名');`\n* 设置自定义属性值：`对象.setAttribute('属性名',属性值);`\n* 为了避免歧义，规定自定义属性命名规范：`data-自定义属性名`\n\n#### 1.4 节点操作\n\n* 作用：更简单的获取元素\n* 节点构成：(节点类型)nodeType、(节点名称)nodeName、(节点值)nodeValue\n* `对象.parentNode`，获取对象的父节点对象\n* `对象.childNodes`，获取对象所有子节点对象，伪数组存储\n* `对象.firstChild`，获取对象的第一个子节点对象\n* `对象.lastChild`，获取对象的最后一个子节点对象\n* `对象.firstElementChild`，获取对象的第一个子元素节点对象\n* `对象.lastElementChild`，获取对象的最后一个子元素节点对象\n* `对象.children[索引]`，获取对象的第索引个子元素节点对象\n* `对象.nextSibling`，获取对象的下一个兄弟节点对象\n* `对象.previousSibling`，获取对象的上一个兄弟节点对象\n* `document.createElement('节点名')`，创建节点\n* `对象.appendChild(节点对象)`，在对象下添加子节点\n* `对象.removeChild(节点对象)`，删除对象下的子节点\n* `对象.cloneNode()`，克隆一个节点，参数为空或者false为浅拷贝，为true为深拷贝\n\n#### 1.5 事件高级\n\n* 注册事件\n  `eventTarget.addEventListener(type,listener,useCapture)`\n  `eventTarget.addEventListener()`方法将监听器注册到eventTarget上，当该对象触发指定的事件时，就会执行事件处理函数。\n  `type`：事件类型字符串，如click、mouseover，不需要带on\n  `listener`：事件处理函数，事件发生调用该函数\n  `useCapture`：可选参数、默认为false\n* 删除事件\n  `eventTarget.removeEventListener(type,listener,useCapture)`\n* 事件流\n  捕获阶段：从上往下检查事件是否注册，然后执行，useCapture=true\n  冒泡阶段，从下往上检查事件是否注册，然后执行，useCapture=false\n* 事件对象\n  事件对象在注册事件就会存在，不需要传参自动创建，包含了事件相关信息\n\n```js\nvar div  = document.querySelector('div');\ndiv.onclick=function(event){\n    console.log(event);\n}\n```\n\n|事件对象属性方法|说明|\n|:------:|:-------:|\n|target|返回触发事件对象|\n|type|返回事件的类型|\n|preventDefault()|阻止默认事件，比如不让跳转|\n|stopPropagation()|阻止冒泡|\n\n* 事件委托\n  利用冒泡，给一个父节点添加事件，利用target属性，操作每一个子节点\n\n|鼠标事件|说明|\n|:----:|:-----:|\n|onclick|鼠标左键点击|\n|onmouseover|鼠标经过|\n|onmouseout|鼠标离开|\n|onfocus|鼠标焦点|\n|onblur|失去鼠标焦点|\n|onmousemove|鼠标移动|\n|onmouseup|鼠标弹起|\n|onmousedown|鼠标按下|\n|oncontextmenu|鼠标右键菜单|\n|onselectstart|鼠标选中|\n\n|键盘事件|说明|\n|----|-----|\n|onkeyup|键盘松开|\n|onkeydown|键盘按下|\n|onkeypress|键盘按下，不认识功能键ctrl、shift等|\n\n### 2.BOM\n\n> 浏览器对象模型，它提供独立于内容而与浏览器窗口进行交互的对象，其最大的对象是window\n\n#### 2.1 window对象常见事件\n\n* 窗口加载事件\n\n```js\n//会让页面内容全部加载完成后，处理事件\nwindow.onload=function(){}  //后面函数会覆盖前面的\nwindow.addEventListener(\"load\",function(){});  //不会覆盖，会同时存在\ndocument.addEventListener('DOMContentLoaded',function(){})  //DOM加载完就可以执行了\n```\n\n* 窗口大小事件\n\n```js\n//调整窗口大小加载事件，当触发时就调用的处理函数\n//利用这个事件完成响应式布局，window.innerWidth属性拿到当前的宽度\nwindow.onresize=function(){}\nwindow.addEventListener('resize',function(){});\n```\n\n#### 2.2 定时器\n\n* `window.setTimeout(调用函数，[延迟的毫秒数]);`，该定时器在定时器到期后执行调用函数。\n* `window.clearTimeout(timeoutID)`，取消setTimeout()建立的定时器，timeoutID为定时器的名字\n* `window.setInterval(回调函数，[间隔的毫秒数])`，每隔一段时间调用一次回调函数\n* `window.clearInterval(intervalID)`，停止setInterval()定时器\n\n#### 2.3 JS执行队列\n\n* 同步任务都在主线程执行\n* 异步任务：所有的回调函数，都在消息队列中，等同步任务执行完再执行异步任务\n  1. 普通事件，如click、resize\n  2. 资源加载，如load、error\n  3. 定时器，包括setInterval、setTimeout\n\n#### 2.4 location对象\n\n* 作用：获取或设置窗体的URL\n* URL组成\n  \n|组成|说明|\n|---|---------|\n|protocol|通信协议：http，ftp，matio等|\n|host|主机（域名）|\n|port|端口号，可选|\n|path|路径，由'/'隔开的字符串|\n|query|参数，键值对形式用&隔开|\n|fragment|片段，#后面的内容|\n\n|location对象属性|返回值|\n|----|-----|\n|location.href|返回整个URL|\n|location.host|返回主机|\n|location.port|返回端口号|\n|location.pathname|返回路径|\n|location.search|返回参数|\n|location.hash|返回片段|\n\n|location对象方法|返回值|\n|----|-----|\n|location.assign()|跳转页面，记录浏览历史|\n|location.replace()|替换当前页面，不记录浏览历史|\n|location.reload()|重新加载页面|\n\n#### 2.5 navigator对象\n\n* 包含浏览器信息、用户设备信息等的对象，主要用来区别PC端和移动端\n\n#### 2.6 history对象\n\n|history对象方法|返回值|\n|----|-----|\n|history.back()|页面后退|\n|history.forward()|页面前进|\n|history.go(参数)|参数为1前进，参数为-1后退|\n\n### 3.网页特效\n\n#### 3.1 元素偏移量offset系列\n\n* 获得元素距离带有定位父元素的位置\n* 获得元素自身的大小\n* 返回数值没有单位，只读属性\n* 常见属性\n\n|offset系列属性|说明|\n|-----|------|\n|offsetParent|返回该元素带有定位的父元素，如果没有返回body|\n|offsetTop|返回元素相对带有定位父元素上方的偏移|\n|offsetLeft|返回元素相对带有定位父元素左边框的偏移|\n|offsetWidth|返回自身边框、内边距、内容的宽度|\n|offsetHeight|返回自身边框、内边距、内容的高度|\n\n#### 3.2 元素的可视区client系列\n\n|client系列属性|说明|\n|-----|------|\n|clientTop|返回元素上边框的大小|\n|clientLeft|返回元素左边框的大小|\n|clientWidth|返回自身内边距、内容的宽度，不带单位|\n|clientHeight|返回自身内边距、内容的高度，不带单位|\n\n#### 3.2 元素滚动scroll系列\n\n|scroll系列属性|说明|\n|-----|------|\n|scrollTop|返回显示的内容上方与实际内容上方的距离|\n|scrollLeft|返回显示的内容下方与实际内容下方的距离|\n|scrollWidth|返回自身内边距和实际内容的宽度，不带单位|\n|scrollHeight|返回自身内边距和实际内容的高度，不带单位|\n\n#### 3.3 动画函数封装\n\n* 原理：通过定时器不断移动盒子位置\n* 步骤：\n  1. 获得盒子当前的位置\n  2. 让盒子在当前位置加上一个移动距离\n  3. 加一个定时器不断重复这个操作\n  4. 加一个结束定时器的条件\n  5. 此元素需要添加定位，才能使用element.style.left\n\n## 三、进阶语法\n\n### 1.面向对象\n\n面向过程（POP）：分析解决问题的步骤，用函数一步步实现并调用。\n\n面向对象（OOP）：分析问题成一个个对象，让对象之间分工与合作。\n\n面向对象的特性：\n\n* 封装\n* 继承\n* 多态\n\n#### 1.1 ES6的类和对象\n\n> ES6是新一代的JS的语言规范\n\n```js\n//创建类\nclass Father{\n    //构造函数，传递参数与返回实列对象，会默认创建，new命令会自动调用\n    constructor(x,y){\n        this.x=x;   //this指向当前对象\n        this.y=y;\n    }\n    //添加方法\n    say(){\n        //方法体\n        console.log('hello');\n    }\n}\n//创建实列\nvar xx=new Father(1,2);    //先有类才能实列化，类的定义要在前面\n\n//继承\nclass Son extends Father{\n    constructor(x,y){\n        super(x,y);   // 调用父类的构造函数，必须放在前面，之后再进行原本的构造函数\n        //super.say();  调用父类方法\n    }\n}\nvar son = new Son(1,2); \nson.say();   //调用父类方法\n```\n\n#### 1.2 ES5构造函数和原型\n\n> ES5没有类，需要使用构造函数和原型模拟类的效果\n\n静态成员：在构造函数外，对构造函数的属性直接赋值的。不能实例化访问。\n实例成员：在构造函数内定义的。只能实例化访问。\n\n后面感觉重要了再补，略。。。。\n\n#### 1.3 ES5新增方法\n\n* 数组方法\n  * forEach()\n    * 功能：遍历数组\n    * `array.forEach(function(currentValue,index,arr))`\n    * currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身\n  * map()\n  * filter()\n    * 功能：检查数组中符合条件的所有元素，返回新数组\n    * `array.filter(function(currentValue,index,arr))`\n    * currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身\n  * some()\n    * 功能：检查数组中是否有符合条件的元素，有返回true，否则返回false\n    * `array.filter(function(currentValue,index,arr))`\n    * currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身\n  * every()\n* 字符串方法\n  * trim()\n    * 功能：会从一个字符串的两端删除空白字符，返回新的字符串。\n    * `str.trim()`\n* 对象方法\n  * defineProperty()\n    * 功能：定义对象中新属性或修改原有的属性。\n    * `Object.defineProperty(obj,prop,descriptor)`\n    * obj：目标对象、prop：需定义或修改的属性的名字、descriptor：目标属性所拥有的特性\n    * 第三参数descriptor说明，以对象的形式{}书写：\n      * value：设置属性的值，默认为underfined\n      * writable：值是否可以重写，默认为false\n      * enumerable：目标属性是否可以被枚举，默认为false\n      * configurable：目标属性是否可以被删除或是否可以再次修改特性。默认false\n\n#### 1.4 函数进阶\n\n```js\n//1. 自定义函数\nfunction fn(){}\n//2.函数表达式\nvar fun = function(){}\n//3.利用new Function('参数1','参数2','函数体');\nvar f=new Function('a','b','console.log(a+b)');\n```\n\n更改this指向：\n\n* call()\n  * `对象.call(thisArg[,arg1,arg2,...])`\n  * 可以修改对象中this指向对象thisArg。可以任意传递其他参数。\n* apply()\n  * `对象.apply(thisArg[,argsArray])`\n  * 可以修改对象中this指向对象thisArg。想要传递参数必须为数组。\n* bind()\n  * `对象.bind(thisArg[,arg1,arg2,...])`\n  * 该方法不会调用函数，会返回改造完的新函数。\n\n严格模式：\n\n1. 消除js语法的一些不合理地方\n2. 消除代码的不安全地方\n3. 提高编译器效率，增加运行速度\n4. 为ES6做铺垫，禁用一些保留字：class等。\n\n开启严格模式：在所有语句前添加`\"use strict\";`\n\n严格模式的改变：\n\n* 变量\n  * 变量必须先声明再使用\n  * 全局作用中函数中this是undefined\n  * 定时器的this指向window\n  * 事件和对象的this指向调用者\n* 函数\n  * 不能有重名的参数\n  * 不允许在非函数的代码块内声明函数\n\n高阶函数\n\n* 以函数为参数的函数是高阶函数。\n\n```js\nfunction fn(callback){\n    callback&&callback(); //调用函数\n}\n```\n\n* 以函数为返回值的函数是高阶函数。\n\n闭包：有权访问另一个函数作用域中变量的函数。\n\n```js\nfunction fn(){\n    var num = 10;\n    function fun(){  //闭包\n        console.log(num);\n    }\n    return fun;\n}\nvar f= fn();\nf(); //外面作用域访问内部变量，延长局部变量的作用范围\n```\n\n递归函数：函数内部自己调用自己。\n\n* 浅拷贝：只能拷贝一层数据，更深层次的数据只能拷贝引用。\n  * `Object.assign(target,...sources)`\n* 深拷贝：拷贝多层，每一级别都会拷贝。\n\n#### 1.5 正则表达式\n\n```js\n//1.调用RegExp对象来创建正则表达式\nvar regexp=new RegExp(/123/)\n//2.利用字面量创建正则表达式\nvar regexp=/123/;\nconsole.log(regexp.test(123)); //判断内容是否符合正则表达式\n```\n\n* 边界符\n\n|符号|说明|\n|----|----|\n|^|表示匹配行首的文本|\n|$|表示匹配行尾的文本|\n|[]|表示任意匹配一次中括号内的文本|\n|[^]|表示取反，不匹配文本内容|\n\n* 量词符\n\n|符号|说明|\n|---|----|\n|*|重复零次或更多次|\n|+|重复一次或更多次|\n|？|重复零次或一次|\n|{n}|重复n次|\n|{n,}|重复n次或更多次|\n|{n,m}|重复n到m次|\n\n* 预定义\n\n|符号|说明|\n|---|---|\n|\\d|匹配0-9之间的任一数字|\n|\\D|匹配0-9之外的字符|\n|\\w|匹配任意字母、数字、下划线|\n|\\W|匹配字母、数字、下划线之外的字符|\n|\\s|匹配空格|\n|\\S|匹配非空格符|\n\n`字符串.replace(正则表达式,要替换的字符串)`方法批量替换字符串。\n\nswitch修饰符：\n\n* `/正则表达式/[switch]`\n* g：全局匹配\n* i：忽略大小写\n* gi：全局匹配+忽略大小写\n\n#### 1.6 ES6语法\n\n* `let` 声明的变量具有块级作用域，具有暂时性死区（让块内变量与全局隔离）\n* `const`声明常量时必须赋值，不能更改，具有块级作用域\n* 解构赋值\n  * `let [a,b,c] = [1,2,3];`  按照一一对应关系对从数组对变量赋值\n  * `let {name,age}=person;` 按照属性从对象中进行匹配并赋值给变量\n* `()=>{}` 箭头函数，类似匿名函数，但是没有自己的this\n* 剩余参数`(参数1,...数组名)`，接收多余的参数\n* 扩展运算符`...数组名`：可以将数组拆分成以逗号分隔的参数。\n* `Array.from()`将可遍历的对象转化为数组\n* `Array.find()` 找到第一个符合条件的数组成员，没有找到返回undefined\n* `Array.findIndex()` 找到第一个符合条件的数组成员的索引，没有返回-1\n* `数组.includes()` 查找数组是否包含值，返回布尔值\n* 模板字符串\n  * 使用` `` `符号，可以利用`${变量/函数}`添加字符串在字符串的任意位置\n* `字符串.startsWith(字符串1)` 判断字符串头部是否有字符串1\n* `字符串.endsWith(字符串1)` 判断字符串尾部是否有字符串1\n* `字符串.repeat(n)`重复字符串n次，并返回新的字符串\n* 参数默认值`function add(a,b=1){ return a+b;}`\n\n**Set**集合，类似数组，但是成员唯一\n\n* `let s =new Set();` `let s =new Set([1,2,3,4,4]);`\n* `size`属性，返回集合的个数\n* `add()`方法，增加元素\n* `delete()`方法，删除元素，返回布尔值\n* `has()`方法，检查是否包含某个元素，返回布尔值\n* `clear()`方法，清空Set\n\n**Map**键值对集合，键不限于字符串\n\n* `let m=new Map();`\n* `size`属性，返回集合的个数\n* `set()`方法，增加元素\n* `get()`方法，根据键返回值\n* `clear()`方法，清空Map\n* `has()`方法，检查是否包含某个元素，返回布尔值\n\n**Symbol**数据类型\n特点：\n\n1. Symbol值唯一\n2. Symbol不能与其他数据运算\n3. Symbol定义对象属性不能使用for...in遍历\n\n```js\n//创建Symbol\nlet s = Symbol();\nlet s1 = Symbol('zs');\nlet s2 = Symbol.for('zs');\n\n//安全向未知对象中添加新的方法\nlet game={};\nlet methods={\n    up: Symbol(),\n    down: Symbol()\n};\ngame[methods.up]=function(){\n    console.log('go to up');\n}\ngame[methods.down]=function(){\n    console.log('go to down');\n}\n\n//=================\nlet game={\n    name: 'lrx',\n    [Symbol('say')]: ()=>console.log('hello')\n}\n```\n\nSymbol的内置属性，控制对象在特定场景中的表现\n\n**迭代器**：*Iterator*主要提供给*for....of*\n\n* *for.....in* 访问键(在对象中访问属性) ，*for....of* 访问值\n* 工作原理：\n  * 创建一个指针对象，指向当前数据结构的起始位置\n  * 第一次调用next方法，指针自动指向第一个成员\n  * 不断调用next方法，指针一直后移，直到指向最后一个成员\n  * 每次调用next方法，返回一个包含value和done属性的对象\n\n```js\nconst game={\n    name: 'Night',\n    arr: [\n        'anight',\n        'bnight',\n        'cnight',\n        'knight'\n    ],\n    [Symbol.iterator](){\n        let index=0;\n        let _this=this;\n        return {\n            next: ()=>{\n                if(index<_this.arr.length){\n                    const res={value: _this.arr[index],done: false};\n                    index++;\n                    return res;\n                }else{\n                    return {value: undefined,done: true};  //done为true说明到底了\n                }\n            }\n        };\n    }\n}\n```\n\n**生成器**：是一种异步编程解决方案，是一种特殊函数\n> 异步编程（文件操作、网络操作、数据库操作）--->纯回调函数\n\n```js\n//需求：1s 后输出111，2s后输出222，3s后输出333\nfunction one(){\n    setTimeout(()=>{\n        console.log(111);\n        iterator.next();\n    },1000)\n}\nfunction two(){\n    setTimeout(()=>{\n        console.log(222);\n        iterator.next();\n    },2000)\n}\nfunction three(){\n    setTimeout(()=>{\n        console.log(333);\n        iterator.next();\n    },3000)\n}\nfunction *gen(){\n    yield one();\n    yield two();\n    yield three();\n}\nlet iterator = gen();\niterator.next();   //next里面可以传参，在yield位置接收\n```\n\n#### 1.7 异步编程\n\n**JS是单线程的语言**\n\n* 同步任务\n  * 非耗时任务\n  * 只有前面任务执行完成后，才能执行后面的任务\n* 异步任务\n  * 耗时任务，异步任务有JS的宿主环境执行\n  * 当异步任务执行完成后，会通知JS主线程执行异步任务的回调函数\n\n**Promise**\n\n```js\nconst p = new Promise(function(resolve,reject){\n    setTimeout(function(){\n        // let data='数据库数据'\n        // resolve(data)              //成功调用\n        let err = '数据读取失败'\n        reject(err)                        //失败调用\n    },1000)\n})\np.then(function(value){  //成功调用\n    console.log(value)\n},function(reason){   //失败调用\n    console.log(reason)\n})\n```\n\n**async/await**\n\n用来简化Promise的异步操作\n\n```js\nasync function getAllFile(){   // 存在 await的函数， 必须由 async 修饰\n    // 会等待函数执行完成，而且await会把Promise对象中的结果拆解出来\n    const r1 = await thenFs.readFile('./files/1.txt','utf-8');\n    // await 之前的方法都会同步执行，当到达await方法后，会把await后面的代码都转到异步执行队列中\n    const r2 = await thenFs.readFile('./files/1.txt','utf-8');\n}\n```\n\n## 四、Webpack\n\n前端工程化：把前端开发所需的工具、技术、流程、经验进行规范化、标准化。即：模块化、组件化、规范化、自动化。\n\n### 1.基本使用\n\nwebpack是前端项目工程化的具体解决方案。\n\n主要功能：代码压缩混淆、处理浏览器端JavaScript的兼容性、性能优化等功能。\n\n```bash\n# 在项目文件夹内初始化\nnpm init\n# 安装\nnpm i webpack webpack-cli -D\n```\n\n在`package.json`文件中添加下面配置\n\n```json\n\"scripts\": {\n    \"dev\": \"webpack\"\n  },\n```\n\n在主目录新建`webpack.config.js`文件，添加下面内容\n\n```js\nmodule.exports={\n    mode:'development',\n}\n```\n\n```shell\n# 运行\nnpm run dev\n```\n\nwebpack会把js代码全部转化为兼容模式放在`./dist/main.js`文件中，后续只需要在html中导入该文件就行了。\n\n### 2.进阶使用\n\n#### 2.1 mode可选择值\n\n1. development\n   1. 开发环境\n   2. 不会对打包生成文件进行代码压缩和性能优化\n   3. 打包速度快，适合开发使用\n2. production\n   1. 生产环境\n   2. 会对打包生成文件进行代码压缩和性能优化\n   3. 打包速度慢，仅适合在项目发布阶段使用\n\n#### 2.2 默认约定\n\n1. 默认打包入口文件`src/index.js`\n2. 默认输出文件路径`dist/main.js`\n3. 自定义打包入口文件`entry: \"文件路径\"`\n4. 自定义输出文件路径`output: { path: \"文件路径\", filename: \"输出的文件名\"}`\n\n#### 2.3 插件\n\n1. webpack-dev-server\n   1. 类型nodemon工具\n   2. 每当修改源码后，webpack都会自动进行项目的打包与构建\n2. html-webpack-plugin\n   1. 类似模板引擎\n   2. 可以自定义index.html的内容\n\n```shell\n# 安装插件\nnpm i webpack-dev-server -D\n```\n\n在`package.json`文件中修改下面配置\n\n```json\n\"scripts\": {\n    \"dev\": \"webpack serve\"\n  },\n```\n\n```shell\n# 安装插件\nnpm i html-webpack-plugin -D\n```\n\n在`webpack.config.js`中添加下面配置\n\n```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nconst htmlPlugin = new HtmlWebpackPlugin({\n    template: './src/index.html',\n    filename: 'index.html',\n});\n\nmodule.exports={\n    plugins: [htmlPlugin],\n}\n```\n\n```shell\n# 启动，html-webpack-plugin会把index.html复制到内存中，可以直接访问 http://localhost:8080/\nnpm run dev\n```\n\n为了解决每次打包完成都需要手动打开`http://localhost:8080/`地址，需要对`webpack.config.js`文件的节点进行额外的配置\n\n```js\nmodule.exports={\n    devServer: {\n        port: 8002,\n        host: \"127.0.0.1\",\n        open: true,\n    },\n}\n```\n\n#### 2.4 Loader加载器\n\nwebpack默认只处理js文件，如果需要处理其他文件需要loader加载器的作用\n\n``` mermaid\ngraph LR\nbegin(将要被webpack</br>打包处理的模块)-->one{是否为</br>JS模块}\none--是-->twoJS{是否包含</br>高级JS语法}\none--否-->twoLoader{是否配置了</br>对应的Loader}\ntwoJS--是-->threeBabel{是否配置</br>了babel}\ntwoJS--否-->webpack进行处理\ntwoLoader--是-->four1[调用loader处理]\ntwoLoader--否-->four2[报错]\nthreeBabel--是-->调用loader处理\nthreeBabel--否-->报错\n```\n\n* 打包处理CSS文件\n\n  ```shell\n  # 安装css的loader\n  npm i style-loader css-loader -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  test: /\\.css$/, use: ['style-loader', 'css-loader']\n              },\n          ]\n      }\n  }\n  ```\n\n* 打包Less文件\n\n  ```shell\n  # 安装less的loader\n  npm i less-loader less -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  test: /\\.less$/, use: ['style-loader', 'css-loader', 'less-loader' ]\n              },\n          ]\n      }\n  }\n  ```\n\n* 打包url路径相关文件\n\n  ```shell\n  # 安装loader\n  npm i url-loader file-loader -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  //test: /\\.jpg|png|gif$/, use: 'url-loader' \n                  //test: /\\.jpg|png|gif$/, use: 'url-loader?limit=222229' 限制图片大小，单位byte\n                  test: /\\.jpg|png|gif$/,\n                  use: {\n                    loader: 'url-loader',\n                    options: {\n                      limit: 222229,\n                    },\n                  },\n              },\n          ]\n      }\n  }\n  ```\n\n* 打包处理JS高级语法\n\n  ```shell\n  # 安装loader\n  npm i babel-loader @babel/core @babel/plugin-proposal-class-properties -D\n  ```\n\n  ```js\n  // 向 webpack.config.js 文件添加内容\n  module.exports={\n      module: {\n          rules: [\n              {\n                  test: /\\.js$/,\n                  exclude: /node_modules/, //排除第三方库\n                  use: {\n                    loader: 'babel-loader',\n                    options: {\n                      plugins: ['@babel/plugin-proposal-class-properties']\n                    },\n                  },\n              },\n          ]\n      }\n  }\n  ```\n\n#### 2.5 打包发布\n\n1. 开发环境下，打包生成的文件存放与内存中，无法获取到最终打包生成的文件\n2. 开发环境下，没有对代码进行压缩和性能优化\n\n在`package.json`文件的script节点下添加build命令：\n\n```json\n \"script\": {\n   \"build\": \"webpack --mode production\"\n }\n```\n\n在`webpack.config.js`对打包路径进行配置\n\n```js\nmodule.exports={\n    output: {\n        path: './dist',\n        filename: 'js/bundle.js',\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.jpg|png|gif$/,\n                use: {\n                    loader: 'url-loader',\n                    options: {\n                        limit: 10240,\n                        outputPath: 'images/'\n                    }\n                }\n            },\n        ]\n    }\n}\n```\n\n清除旧文件插件\n\n```shell\n# 安装插件\nnpm i clean-webpack-plugin -D\n```\n\n在`webpack.config.js`配置插件\n\n```js\nconst {CleanWebpackPlugin} = require('clean-webpack-plugin');\n\nconst cleanPlugin = new CleanWebpackPlugin();\n\nmodule.exports={\n  plugins: [htmlPlugin,cleanPlugin],\n}\n```\n\n在`webpack.config.js`配置Source Map来在调试中查找错误文件\n\n1. 开发环境\n   1. 把devtool的值设置为eval-source-map\n   2. 可以定位到错误行\n2. 生产环境\n   1. 关闭source map，将devtool值设置为nosources-source-map\n   2. 提高网站安全性\n","slug":"计算机/前端/JavaScript快速入门语法","published":1,"updated":"2022-05-13T12:39:14.032Z","layout":"post","photos":[],"_id":"cm1z7gipm000ndwvxgvxdgtvi","content":"<h1 id=\"JavaScript快速入门语法\"><a href=\"#JavaScript快速入门语法\" class=\"headerlink\" title=\"JavaScript快速入门语法\"></a>JavaScript快速入门语法</h1><h2 id=\"一、基础语法\"><a href=\"#一、基础语法\" class=\"headerlink\" title=\"一、基础语法\"></a>一、基础语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>作用：</p>\n<ul>\n<li>表单验证</li>\n<li>网页特效</li>\n<li>服务端开发（Node.js）</li>\n<li>桌面程序（Electron）</li>\n<li>App（Cordova）</li>\n<li>控制硬件-物联网（Ruff）</li>\n<li>游戏开发（cocos2d-js）</li>\n</ul>\n<p>JavaScript组成：<strong>ES</strong>(ECMAScript)+<strong>DOM</strong>+<strong>BOM</strong></p>\n<p>书写位置：</p>\n<ol>\n<li>行内：在元素内部写</li>\n<li>内嵌：使用<code>&lt;script&gt;JS代码&lt;/script&gt;</code> 标签</li>\n<li>外部：<code>*.js</code>文件，再通过<code>&lt;script&gt;</code> 标签引入<code>&lt;script src=&quot;*.js&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<h3 id=\"2-基础语法\"><a href=\"#2-基础语法\" class=\"headerlink\" title=\"2.基础语法\"></a>2.基础语法</h3><h4 id=\"2-1-注释\"><a href=\"#2-1-注释\" class=\"headerlink\" title=\"2.1 注释\"></a>2.1 注释</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//单行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    多行注释</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-输入输出语句\"><a href=\"#2-2-输入输出语句\" class=\"headerlink\" title=\"2.2 输入输出语句\"></a>2.2 输入输出语句</h4><table>\n<thead>\n<tr>\n<th align=\"center\">方法</th>\n<th align=\"center\">说明</th>\n<th align=\"center\">归属</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">alert(msg)</td>\n<td align=\"center\">浏览器弹出警告框</td>\n<td align=\"center\">浏览器</td>\n</tr>\n<tr>\n<td align=\"center\">console.log(msg)</td>\n<td align=\"center\">浏览器控制台打印输出信息</td>\n<td align=\"center\">浏览器</td>\n</tr>\n<tr>\n<td align=\"center\">prompt(info)</td>\n<td align=\"center\">浏览器弹出输入框，用户可以输入</td>\n<td align=\"center\">浏览器</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-3-变量\"><a href=\"#2-3-变量\" class=\"headerlink\" title=\"2.3 变量\"></a>2.3 变量</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age;</span><br><span class=\"line\"><span class=\"comment\">//变量赋值</span></span><br><span class=\"line\">age=<span class=\"number\">18</span>；</span><br><span class=\"line\"><span class=\"comment\">//变量的初始化</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age=<span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"comment\">//会覆盖前面的值</span></span><br><span class=\"line\">age=<span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"comment\">//声明多个变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">18</span>,</span><br><span class=\"line\">      sex = <span class=\"string\">&#x27;man&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">//只声明，不赋值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sex;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sex);</span><br><span class=\"line\">&gt; <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"comment\">//不声明，直接使用</span></span><br><span class=\"line\">qq=<span class=\"number\">120</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(qq);</span><br><span class=\"line\">&gt; <span class=\"number\">120</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>命名规范：</strong></p>\n<ul>\n<li>由字母、数字、下划线、美元符号组成</li>\n<li>区分大小写</li>\n<li>不能数字开头</li>\n<li>不能是关键字</li>\n<li>首字母小写的驼峰命名法</li>\n</ul>\n<h4 id=\"2-4-数据类型\"><a href=\"#2-4-数据类型\" class=\"headerlink\" title=\"2.4 数据类型\"></a>2.4 数据类型</h4><p>JS属于动态类型语言，根据右边变量值来判断数据类型。变量的数据类型<strong>可变</strong>。</p>\n<p><strong>简单数据类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th align=\"center\">说明</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Number</td>\n<td align=\"center\">数字型，包括整型和浮点型</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">Boolean</td>\n<td align=\"center\">布尔型</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td align=\"center\">String</td>\n<td align=\"center\">字符串类型</td>\n<td align=\"center\">“”</td>\n</tr>\n<tr>\n<td align=\"center\">Undefined</td>\n<td align=\"center\">未定义值</td>\n<td align=\"center\">undefined</td>\n</tr>\n<tr>\n<td align=\"center\">Null</td>\n<td align=\"center\">空值</td>\n<td align=\"center\">null</td>\n</tr>\n</tbody></table>\n<p>方法**isNaN()**，判断是否非数字，如果不是数字返回true</p>\n<p><strong>字符串转义符：</strong></p>\n<table>\n<thead>\n<tr>\n<th>转义符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>\\n</code></td>\n<td>换行</td>\n</tr>\n<tr>\n<td><code>\\\\</code></td>\n<td>斜杠</td>\n</tr>\n<tr>\n<td><code>\\&#39;</code></td>\n<td>单引号</td>\n</tr>\n<tr>\n<td><code>\\&quot;</code></td>\n<td>双引号</td>\n</tr>\n<tr>\n<td><code>\\t</code></td>\n<td>tab缩进</td>\n</tr>\n<tr>\n<td><code>\\b</code></td>\n<td>空格</td>\n</tr>\n</tbody></table>\n<p>数据类型检查函数：<code>typeof 变量名</code></p>\n<p>数据类型转化：</p>\n<ul>\n<li>转化为字符串类型：<code>toString()</code>、<code>String()</code></li>\n<li>转化为数字类型：<code>pareInt()</code>、<code>parseFloat()</code>、<code>Number()</code></li>\n<li>转化为布尔型：<code>Boolean()</code>，只有’’、0、NaN、null、undefined会被转化为false，其他都为true</li>\n</ul>\n<h4 id=\"2-5-运算符\"><a href=\"#2-5-运算符\" class=\"headerlink\" title=\"2.5 运算符\"></a>2.5 运算符</h4><ul>\n<li>算术运算符：<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code></li>\n<li>递增、递减运算符：<code>++</code>、<code>--</code></li>\n<li>比较运算符：<code>&lt;</code>、<code>&gt;</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>==</code>、<code>!=</code>、<code>===</code>和<code>!==</code> (全等，要求值和数据类型都一致)</li>\n<li>逻辑运算符：<code>&amp;&amp;</code>、<code>||</code>、<code>!</code><ul>\n<li>逻辑与中断：<code>表达式1 &amp;&amp; 表达式2</code> ，如果表达式1为真，返回表达式2，否则返回表达式1</li>\n<li>逻辑或中断：<code>表达式1 || 表达式2</code> ，如果表达式1为真，返回表达式1，否则返回表达式2</li>\n</ul>\n</li>\n<li>赋值运算符：<code>=</code>、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code></li>\n</ul>\n<h4 id=\"2-6-流程控制\"><a href=\"#2-6-流程控制\" class=\"headerlink\" title=\"2.6 流程控制\"></a>2.6 流程控制</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//条件表达式为真，执行语句</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(条件表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(条件表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句1</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(条件表达式<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句1</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(条件表达式<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句2</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//三元表达式：条件表达式为真，返回表达式1，否则返回表达式2</span></span><br><span class=\"line\">条件表达式? 表达式<span class=\"number\">1</span>:表达式<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//表达式的值与value值进行匹配</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(表达式)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"attr\">value1</span>:</span><br><span class=\"line\">        <span class=\"comment\">//执行语句1</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"attr\">value2</span>:</span><br><span class=\"line\">        <span class=\"comment\">//执行语句2</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"comment\">//最后语句</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-循环控制\"><a href=\"#2-7-循环控制\" class=\"headerlink\" title=\"2.7 循环控制\"></a>2.7 循环控制</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//条件表达式为真，继续循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(初始化表达式;条件表达式;操作表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//条件表达式为真，继续循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(条件表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(条件表达式)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>continue</code>关键字，跳出本次循环，进入下一个循环</li>\n<li><code>break</code>关键字，跳出当前循环</li>\n</ul>\n<h4 id=\"2-8-数组\"><a href=\"#2-8-数组\" class=\"headerlink\" title=\"2.8 数组\"></a>2.8 数组</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//new创建数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//数组字面量创建数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;pink&#x27;</span>,<span class=\"literal\">true</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//访问数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;arr.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//添加元素</span></span><br><span class=\"line\">arr.<span class=\"property\">length</span>=<span class=\"number\">10</span>; <span class=\"comment\">//先修改数组长度，后添加</span></span><br><span class=\"line\">arr[<span class=\"number\">4</span>]=<span class=\"string\">&#x27;red&#x27;</span>;  <span class=\"comment\">//直接添加</span></span><br><span class=\"line\">arr=<span class=\"string\">&#x27;blue&#x27;</span>  <span class=\"comment\">//arr会变成字符串</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-9-函数\"><a href=\"#2-9-函数\" class=\"headerlink\" title=\"2.9 函数\"></a>2.9 函数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//声明函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> 函数名()&#123;</span><br><span class=\"line\">    <span class=\"comment\">//函数体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用函数</span></span><br><span class=\"line\">函数名();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//有参函数</span></span><br><span class=\"line\"><span class=\"comment\">//声明函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> 函数名(形参<span class=\"number\">1</span>,形参<span class=\"number\">2</span>,.....)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//函数体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用函数</span></span><br><span class=\"line\">函数名(实参<span class=\"number\">1</span>,实参<span class=\"number\">2</span>,.....);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数表达式声明（匿名函数）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//函数体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用函数</span></span><br><span class=\"line\">变量名();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>参数数量不匹配</p>\n<ul>\n<li>实参&#x3D;形参，正确</li>\n<li>实参&gt;形参，取形参的个数</li>\n<li>实参&lt;形参，多的参数定义为undefined，结果为NaN</li>\n</ul>\n</li>\n<li><p>返回参数：<code>return 返回值;</code></p>\n</li>\n<li><p>接收参数不确定：用<code>arguments</code>来当形参接收数据</p>\n<ul>\n<li><code>arguments</code>是一个伪数组，具有数组的length属性，有索引，没有pop()、push()方法</li>\n</ul>\n</li>\n<li><p>内部访问外部变量，由内向外一层一层的查找。</p>\n</li>\n<li><p>预解析：js引擎会把所有的var和function提升到当前作用域最前面</p>\n</li>\n</ul>\n<h4 id=\"2-10-对象\"><a href=\"#2-10-对象\" class=\"headerlink\" title=\"2.10 对象\"></a>2.10 对象</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建字面量对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=&#123;</span><br><span class=\"line\">    <span class=\"attr\">uname</span>: <span class=\"string\">&#x27;张三丰&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;man&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sayHello</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用对象</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">uname</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj[<span class=\"string\">&#x27;uname&#x27;</span>]);</span><br><span class=\"line\">obj.<span class=\"title function_\">sayHello</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//new Object创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">obj.<span class=\"property\">uname</span>=<span class=\"string\">&#x27;张三丰&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造函数创建对象，建议名字首字母大写</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> 构造函数名()&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.属性=值;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.方法=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">new</span> 构造函数名();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历对象里面的属性和方法</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(变量 <span class=\"keyword\">in</span> 对象)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>js对象分为3种：自定义对象、内置对象、浏览器对象</li>\n<li>查阅文档：<a href=\"https://developer.mozilla.org/zh-CN/\">MDN</a></li>\n<li><code>instanceof</code>运算符，检测是否为数组，<code>arr instanceof Array</code></li>\n<li><code>unshift()</code>方法在数组开头添加元素，<code>push()</code>方法向数组末尾添加元素</li>\n<li><code>shift()</code>方法在数组开头删除元素，<code>pop()</code>方法向数组末尾删除元素</li>\n<li>基本包装类型：把简单数据类型包装成复杂数据类型，使其能够使用属性和方法<code>var 变量=new String(&#39;内容&#39;)</code></li>\n<li>字符串不可变：在字符串重新赋值或者拼接的过程中，会重新开辟内存空间存储数据</li>\n<li><code>indexOf(&#39;查找的字符&#39;,开始的位置)</code>，从开始的位置从前往后匹配字符，返回索引，找不到返回-1</li>\n<li><code>lastIndexOf(&#39;查找的字符&#39;)</code>，从后往前匹配字符，返回索引（正常的索引）</li>\n<li><code>charAt(索引)</code>，返回指定索引的字符</li>\n<li><code>charCodeAt(索引)</code>，获取指定索引字符的ASCII码</li>\n<li><code>str[索引]</code>，返回指定索引的字符</li>\n<li><code>replace(&#39;被替换的字符&#39;,&#39;替换的字符&#39;)</code>，在字符串中查找被替换的字符替换成替换的字符</li>\n<li><code>split(&#39;分隔符&#39;)</code>，根据分隔符将字符串转化为数组</li>\n<li>简单数据类型传参传递的是结果，复杂数据类型传参传递的是地址</li>\n</ul>\n<h2 id=\"二、Web-API\"><a href=\"#二、Web-API\" class=\"headerlink\" title=\"二、Web API\"></a>二、Web API</h2><h3 id=\"1-DOM\"><a href=\"#1-DOM\" class=\"headerlink\" title=\"1.DOM\"></a>1.DOM</h3><blockquote>\n<p>文档对象模型（简称DOM），是W3C组织推荐的标准编程接口</p>\n</blockquote>\n<ul>\n<li>文档：一个页面就是一个文档，DOM中使用document表示</li>\n<li>元素：页面的所有标签都是元素，DOM中使用element表示</li>\n<li>节点：网页中的所有内容都是节点，DOM中使用node表示</li>\n</ul>\n<h4 id=\"1-1-获取元素\"><a href=\"#1-1-获取元素\" class=\"headerlink\" title=\"1.1 获取元素\"></a>1.1 获取元素</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.根据 ID 获取,返回DOM的Element对象，没有找到返回null</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ID名&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 根据标签名获取，得到所有标签对象的集合</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;标签名&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3. 通过HTML5新增方法获取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&#x27;类名&#x27;</span>); </span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;选择器&#x27;</span>); <span class=\"comment\">//返回选择器的第一个对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4.特殊元素获取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>;  <span class=\"comment\">//获取body元素对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>; <span class=\"comment\">//获取html元素对象</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-事件基础\"><a href=\"#1-2-事件基础\" class=\"headerlink\" title=\"1.2 事件基础\"></a>1.2 事件基础</h4><ul>\n<li>事件源、事件类型、事件处理程序</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>);</span><br><span class=\"line\">btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-操作元素\"><a href=\"#1-3-操作元素\" class=\"headerlink\" title=\"1.3 操作元素\"></a>1.3 操作元素</h4><ul>\n<li>innerText属性，可读写元素内容</li>\n<li>innerHTML属性，可读写元素内容，识别HTML标签</li>\n<li>src、href属性，通过<code>对象.属性</code>的方式可读写元素相关内容</li>\n<li>id、alt、title属性，可读写元素相关内容</li>\n<li>只要是元素的属性，都可以用<code>对象.属性</code>这个方法读写元素相关内容</li>\n<li>通过<code>对象.style.属性名</code>来修改样式</li>\n<li>通过<code>对象.className</code>修改元素的类名，以便修改更多的样式</li>\n<li>上面的方法只能获得本来存在的属性，获得自定义属性使用<code>对象.getAttribute(&#39;属性名&#39;);</code></li>\n<li>设置自定义属性值：<code>对象.setAttribute(&#39;属性名&#39;,属性值);</code></li>\n<li>为了避免歧义，规定自定义属性命名规范：<code>data-自定义属性名</code></li>\n</ul>\n<h4 id=\"1-4-节点操作\"><a href=\"#1-4-节点操作\" class=\"headerlink\" title=\"1.4 节点操作\"></a>1.4 节点操作</h4><ul>\n<li>作用：更简单的获取元素</li>\n<li>节点构成：(节点类型)nodeType、(节点名称)nodeName、(节点值)nodeValue</li>\n<li><code>对象.parentNode</code>，获取对象的父节点对象</li>\n<li><code>对象.childNodes</code>，获取对象所有子节点对象，伪数组存储</li>\n<li><code>对象.firstChild</code>，获取对象的第一个子节点对象</li>\n<li><code>对象.lastChild</code>，获取对象的最后一个子节点对象</li>\n<li><code>对象.firstElementChild</code>，获取对象的第一个子元素节点对象</li>\n<li><code>对象.lastElementChild</code>，获取对象的最后一个子元素节点对象</li>\n<li><code>对象.children[索引]</code>，获取对象的第索引个子元素节点对象</li>\n<li><code>对象.nextSibling</code>，获取对象的下一个兄弟节点对象</li>\n<li><code>对象.previousSibling</code>，获取对象的上一个兄弟节点对象</li>\n<li><code>document.createElement(&#39;节点名&#39;)</code>，创建节点</li>\n<li><code>对象.appendChild(节点对象)</code>，在对象下添加子节点</li>\n<li><code>对象.removeChild(节点对象)</code>，删除对象下的子节点</li>\n<li><code>对象.cloneNode()</code>，克隆一个节点，参数为空或者false为浅拷贝，为true为深拷贝</li>\n</ul>\n<h4 id=\"1-5-事件高级\"><a href=\"#1-5-事件高级\" class=\"headerlink\" title=\"1.5 事件高级\"></a>1.5 事件高级</h4><ul>\n<li>注册事件<br><code>eventTarget.addEventListener(type,listener,useCapture)</code><br><code>eventTarget.addEventListener()</code>方法将监听器注册到eventTarget上，当该对象触发指定的事件时，就会执行事件处理函数。<br><code>type</code>：事件类型字符串，如click、mouseover，不需要带on<br><code>listener</code>：事件处理函数，事件发生调用该函数<br><code>useCapture</code>：可选参数、默认为false</li>\n<li>删除事件<br><code>eventTarget.removeEventListener(type,listener,useCapture)</code></li>\n<li>事件流<br>捕获阶段：从上往下检查事件是否注册，然后执行，useCapture&#x3D;true<br>冒泡阶段，从下往上检查事件是否注册，然后执行，useCapture&#x3D;false</li>\n<li>事件对象<br>事件对象在注册事件就会存在，不需要传参自动创建，包含了事件相关信息</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> div  = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">div.<span class=\"property\">onclick</span>=<span class=\"keyword\">function</span>(<span class=\"params\">event</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">事件对象属性方法</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">target</td>\n<td align=\"center\">返回触发事件对象</td>\n</tr>\n<tr>\n<td align=\"center\">type</td>\n<td align=\"center\">返回事件的类型</td>\n</tr>\n<tr>\n<td align=\"center\">preventDefault()</td>\n<td align=\"center\">阻止默认事件，比如不让跳转</td>\n</tr>\n<tr>\n<td align=\"center\">stopPropagation()</td>\n<td align=\"center\">阻止冒泡</td>\n</tr>\n</tbody></table>\n<ul>\n<li>事件委托<br>利用冒泡，给一个父节点添加事件，利用target属性，操作每一个子节点</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">鼠标事件</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">onclick</td>\n<td align=\"center\">鼠标左键点击</td>\n</tr>\n<tr>\n<td align=\"center\">onmouseover</td>\n<td align=\"center\">鼠标经过</td>\n</tr>\n<tr>\n<td align=\"center\">onmouseout</td>\n<td align=\"center\">鼠标离开</td>\n</tr>\n<tr>\n<td align=\"center\">onfocus</td>\n<td align=\"center\">鼠标焦点</td>\n</tr>\n<tr>\n<td align=\"center\">onblur</td>\n<td align=\"center\">失去鼠标焦点</td>\n</tr>\n<tr>\n<td align=\"center\">onmousemove</td>\n<td align=\"center\">鼠标移动</td>\n</tr>\n<tr>\n<td align=\"center\">onmouseup</td>\n<td align=\"center\">鼠标弹起</td>\n</tr>\n<tr>\n<td align=\"center\">onmousedown</td>\n<td align=\"center\">鼠标按下</td>\n</tr>\n<tr>\n<td align=\"center\">oncontextmenu</td>\n<td align=\"center\">鼠标右键菜单</td>\n</tr>\n<tr>\n<td align=\"center\">onselectstart</td>\n<td align=\"center\">鼠标选中</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>键盘事件</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>onkeyup</td>\n<td>键盘松开</td>\n</tr>\n<tr>\n<td>onkeydown</td>\n<td>键盘按下</td>\n</tr>\n<tr>\n<td>onkeypress</td>\n<td>键盘按下，不认识功能键ctrl、shift等</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-BOM\"><a href=\"#2-BOM\" class=\"headerlink\" title=\"2.BOM\"></a>2.BOM</h3><blockquote>\n<p>浏览器对象模型，它提供独立于内容而与浏览器窗口进行交互的对象，其最大的对象是window</p>\n</blockquote>\n<h4 id=\"2-1-window对象常见事件\"><a href=\"#2-1-window对象常见事件\" class=\"headerlink\" title=\"2.1 window对象常见事件\"></a>2.1 window对象常见事件</h4><ul>\n<li>窗口加载事件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//会让页面内容全部加载完成后，处理事件</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;  <span class=\"comment\">//后面函数会覆盖前面的</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;load&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;);  <span class=\"comment\">//不会覆盖，会同时存在</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;)  <span class=\"comment\">//DOM加载完就可以执行了</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>窗口大小事件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//调整窗口大小加载事件，当触发时就调用的处理函数</span></span><br><span class=\"line\"><span class=\"comment\">//利用这个事件完成响应式布局，window.innerWidth属性拿到当前的宽度</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-定时器\"><a href=\"#2-2-定时器\" class=\"headerlink\" title=\"2.2 定时器\"></a>2.2 定时器</h4><ul>\n<li><code>window.setTimeout(调用函数，[延迟的毫秒数]);</code>，该定时器在定时器到期后执行调用函数。</li>\n<li><code>window.clearTimeout(timeoutID)</code>，取消setTimeout()建立的定时器，timeoutID为定时器的名字</li>\n<li><code>window.setInterval(回调函数，[间隔的毫秒数])</code>，每隔一段时间调用一次回调函数</li>\n<li><code>window.clearInterval(intervalID)</code>，停止setInterval()定时器</li>\n</ul>\n<h4 id=\"2-3-JS执行队列\"><a href=\"#2-3-JS执行队列\" class=\"headerlink\" title=\"2.3 JS执行队列\"></a>2.3 JS执行队列</h4><ul>\n<li>同步任务都在主线程执行</li>\n<li>异步任务：所有的回调函数，都在消息队列中，等同步任务执行完再执行异步任务<ol>\n<li>普通事件，如click、resize</li>\n<li>资源加载，如load、error</li>\n<li>定时器，包括setInterval、setTimeout</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"2-4-location对象\"><a href=\"#2-4-location对象\" class=\"headerlink\" title=\"2.4 location对象\"></a>2.4 location对象</h4><ul>\n<li>作用：获取或设置窗体的URL</li>\n<li>URL组成</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>组成</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>protocol</td>\n<td>通信协议：http，ftp，matio等</td>\n</tr>\n<tr>\n<td>host</td>\n<td>主机（域名）</td>\n</tr>\n<tr>\n<td>port</td>\n<td>端口号，可选</td>\n</tr>\n<tr>\n<td>path</td>\n<td>路径，由’&#x2F;‘隔开的字符串</td>\n</tr>\n<tr>\n<td>query</td>\n<td>参数，键值对形式用&amp;隔开</td>\n</tr>\n<tr>\n<td>fragment</td>\n<td>片段，#后面的内容</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>location对象属性</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>location.href</td>\n<td>返回整个URL</td>\n</tr>\n<tr>\n<td>location.host</td>\n<td>返回主机</td>\n</tr>\n<tr>\n<td>location.port</td>\n<td>返回端口号</td>\n</tr>\n<tr>\n<td>location.pathname</td>\n<td>返回路径</td>\n</tr>\n<tr>\n<td>location.search</td>\n<td>返回参数</td>\n</tr>\n<tr>\n<td>location.hash</td>\n<td>返回片段</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>location对象方法</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>location.assign()</td>\n<td>跳转页面，记录浏览历史</td>\n</tr>\n<tr>\n<td>location.replace()</td>\n<td>替换当前页面，不记录浏览历史</td>\n</tr>\n<tr>\n<td>location.reload()</td>\n<td>重新加载页面</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-5-navigator对象\"><a href=\"#2-5-navigator对象\" class=\"headerlink\" title=\"2.5 navigator对象\"></a>2.5 navigator对象</h4><ul>\n<li>包含浏览器信息、用户设备信息等的对象，主要用来区别PC端和移动端</li>\n</ul>\n<h4 id=\"2-6-history对象\"><a href=\"#2-6-history对象\" class=\"headerlink\" title=\"2.6 history对象\"></a>2.6 history对象</h4><table>\n<thead>\n<tr>\n<th>history对象方法</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>history.back()</td>\n<td>页面后退</td>\n</tr>\n<tr>\n<td>history.forward()</td>\n<td>页面前进</td>\n</tr>\n<tr>\n<td>history.go(参数)</td>\n<td>参数为1前进，参数为-1后退</td>\n</tr>\n</tbody></table>\n<h3 id=\"3-网页特效\"><a href=\"#3-网页特效\" class=\"headerlink\" title=\"3.网页特效\"></a>3.网页特效</h3><h4 id=\"3-1-元素偏移量offset系列\"><a href=\"#3-1-元素偏移量offset系列\" class=\"headerlink\" title=\"3.1 元素偏移量offset系列\"></a>3.1 元素偏移量offset系列</h4><ul>\n<li>获得元素距离带有定位父元素的位置</li>\n<li>获得元素自身的大小</li>\n<li>返回数值没有单位，只读属性</li>\n<li>常见属性</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>offset系列属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>offsetParent</td>\n<td>返回该元素带有定位的父元素，如果没有返回body</td>\n</tr>\n<tr>\n<td>offsetTop</td>\n<td>返回元素相对带有定位父元素上方的偏移</td>\n</tr>\n<tr>\n<td>offsetLeft</td>\n<td>返回元素相对带有定位父元素左边框的偏移</td>\n</tr>\n<tr>\n<td>offsetWidth</td>\n<td>返回自身边框、内边距、内容的宽度</td>\n</tr>\n<tr>\n<td>offsetHeight</td>\n<td>返回自身边框、内边距、内容的高度</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-2-元素的可视区client系列\"><a href=\"#3-2-元素的可视区client系列\" class=\"headerlink\" title=\"3.2 元素的可视区client系列\"></a>3.2 元素的可视区client系列</h4><table>\n<thead>\n<tr>\n<th>client系列属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>clientTop</td>\n<td>返回元素上边框的大小</td>\n</tr>\n<tr>\n<td>clientLeft</td>\n<td>返回元素左边框的大小</td>\n</tr>\n<tr>\n<td>clientWidth</td>\n<td>返回自身内边距、内容的宽度，不带单位</td>\n</tr>\n<tr>\n<td>clientHeight</td>\n<td>返回自身内边距、内容的高度，不带单位</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-2-元素滚动scroll系列\"><a href=\"#3-2-元素滚动scroll系列\" class=\"headerlink\" title=\"3.2 元素滚动scroll系列\"></a>3.2 元素滚动scroll系列</h4><table>\n<thead>\n<tr>\n<th>scroll系列属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>scrollTop</td>\n<td>返回显示的内容上方与实际内容上方的距离</td>\n</tr>\n<tr>\n<td>scrollLeft</td>\n<td>返回显示的内容下方与实际内容下方的距离</td>\n</tr>\n<tr>\n<td>scrollWidth</td>\n<td>返回自身内边距和实际内容的宽度，不带单位</td>\n</tr>\n<tr>\n<td>scrollHeight</td>\n<td>返回自身内边距和实际内容的高度，不带单位</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-3-动画函数封装\"><a href=\"#3-3-动画函数封装\" class=\"headerlink\" title=\"3.3 动画函数封装\"></a>3.3 动画函数封装</h4><ul>\n<li>原理：通过定时器不断移动盒子位置</li>\n<li>步骤：<ol>\n<li>获得盒子当前的位置</li>\n<li>让盒子在当前位置加上一个移动距离</li>\n<li>加一个定时器不断重复这个操作</li>\n<li>加一个结束定时器的条件</li>\n<li>此元素需要添加定位，才能使用element.style.left</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"三、进阶语法\"><a href=\"#三、进阶语法\" class=\"headerlink\" title=\"三、进阶语法\"></a>三、进阶语法</h2><h3 id=\"1-面向对象\"><a href=\"#1-面向对象\" class=\"headerlink\" title=\"1.面向对象\"></a>1.面向对象</h3><p>面向过程（POP）：分析解决问题的步骤，用函数一步步实现并调用。</p>\n<p>面向对象（OOP）：分析问题成一个个对象，让对象之间分工与合作。</p>\n<p>面向对象的特性：</p>\n<ul>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ul>\n<h4 id=\"1-1-ES6的类和对象\"><a href=\"#1-1-ES6的类和对象\" class=\"headerlink\" title=\"1.1 ES6的类和对象\"></a>1.1 ES6的类和对象</h4><blockquote>\n<p>ES6是新一代的JS的语言规范</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//构造函数，传递参数与返回实列对象，会默认创建，new命令会自动调用</span></span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x,y</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">x</span>=x;   <span class=\"comment\">//this指向当前对象</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">y</span>=y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//添加方法</span></span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//方法体</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建实列</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xx=<span class=\"keyword\">new</span> <span class=\"title class_\">Father</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);    <span class=\"comment\">//先有类才能实列化，类的定义要在前面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//继承</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Son</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Father</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x,y</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">super</span>(x,y);   <span class=\"comment\">// 调用父类的构造函数，必须放在前面，之后再进行原本的构造函数</span></span><br><span class=\"line\">        <span class=\"comment\">//super.say();  调用父类方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> son = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>); </span><br><span class=\"line\">son.<span class=\"title function_\">say</span>();   <span class=\"comment\">//调用父类方法</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-ES5构造函数和原型\"><a href=\"#1-2-ES5构造函数和原型\" class=\"headerlink\" title=\"1.2 ES5构造函数和原型\"></a>1.2 ES5构造函数和原型</h4><blockquote>\n<p>ES5没有类，需要使用构造函数和原型模拟类的效果</p>\n</blockquote>\n<p>静态成员：在构造函数外，对构造函数的属性直接赋值的。不能实例化访问。<br>实例成员：在构造函数内定义的。只能实例化访问。</p>\n<p>后面感觉重要了再补，略。。。。</p>\n<h4 id=\"1-3-ES5新增方法\"><a href=\"#1-3-ES5新增方法\" class=\"headerlink\" title=\"1.3 ES5新增方法\"></a>1.3 ES5新增方法</h4><ul>\n<li>数组方法<ul>\n<li>forEach()<ul>\n<li>功能：遍历数组</li>\n<li><code>array.forEach(function(currentValue,index,arr))</code></li>\n<li>currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身</li>\n</ul>\n</li>\n<li>map()</li>\n<li>filter()<ul>\n<li>功能：检查数组中符合条件的所有元素，返回新数组</li>\n<li><code>array.filter(function(currentValue,index,arr))</code></li>\n<li>currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身</li>\n</ul>\n</li>\n<li>some()<ul>\n<li>功能：检查数组中是否有符合条件的元素，有返回true，否则返回false</li>\n<li><code>array.filter(function(currentValue,index,arr))</code></li>\n<li>currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身</li>\n</ul>\n</li>\n<li>every()</li>\n</ul>\n</li>\n<li>字符串方法<ul>\n<li>trim()<ul>\n<li>功能：会从一个字符串的两端删除空白字符，返回新的字符串。</li>\n<li><code>str.trim()</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>对象方法<ul>\n<li>defineProperty()<ul>\n<li>功能：定义对象中新属性或修改原有的属性。</li>\n<li><code>Object.defineProperty(obj,prop,descriptor)</code></li>\n<li>obj：目标对象、prop：需定义或修改的属性的名字、descriptor：目标属性所拥有的特性</li>\n<li>第三参数descriptor说明，以对象的形式{}书写：<ul>\n<li>value：设置属性的值，默认为underfined</li>\n<li>writable：值是否可以重写，默认为false</li>\n<li>enumerable：目标属性是否可以被枚举，默认为false</li>\n<li>configurable：目标属性是否可以被删除或是否可以再次修改特性。默认false</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-函数进阶\"><a href=\"#1-4-函数进阶\" class=\"headerlink\" title=\"1.4 函数进阶\"></a>1.4 函数进阶</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 自定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//2.函数表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fun = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//3.利用new Function(&#x27;参数1&#x27;,&#x27;参数2&#x27;,&#x27;函数体&#x27;);</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f=<span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;console.log(a+b)&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>更改this指向：</p>\n<ul>\n<li>call()<ul>\n<li><code>对象.call(thisArg[,arg1,arg2,...])</code></li>\n<li>可以修改对象中this指向对象thisArg。可以任意传递其他参数。</li>\n</ul>\n</li>\n<li>apply()<ul>\n<li><code>对象.apply(thisArg[,argsArray])</code></li>\n<li>可以修改对象中this指向对象thisArg。想要传递参数必须为数组。</li>\n</ul>\n</li>\n<li>bind()<ul>\n<li><code>对象.bind(thisArg[,arg1,arg2,...])</code></li>\n<li>该方法不会调用函数，会返回改造完的新函数。</li>\n</ul>\n</li>\n</ul>\n<p>严格模式：</p>\n<ol>\n<li>消除js语法的一些不合理地方</li>\n<li>消除代码的不安全地方</li>\n<li>提高编译器效率，增加运行速度</li>\n<li>为ES6做铺垫，禁用一些保留字：class等。</li>\n</ol>\n<p>开启严格模式：在所有语句前添加<code>&quot;use strict&quot;;</code></p>\n<p>严格模式的改变：</p>\n<ul>\n<li>变量<ul>\n<li>变量必须先声明再使用</li>\n<li>全局作用中函数中this是undefined</li>\n<li>定时器的this指向window</li>\n<li>事件和对象的this指向调用者</li>\n</ul>\n</li>\n<li>函数<ul>\n<li>不能有重名的参数</li>\n<li>不允许在非函数的代码块内声明函数</li>\n</ul>\n</li>\n</ul>\n<p>高阶函数</p>\n<ul>\n<li>以函数为参数的函数是高阶函数。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">    callback&amp;&amp;<span class=\"title function_\">callback</span>(); <span class=\"comment\">//调用函数</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>以函数为返回值的函数是高阶函数。</li>\n</ul>\n<p>闭包：有权访问另一个函数作用域中变量的函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>)&#123;  <span class=\"comment\">//闭包</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fun;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f= <span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"title function_\">f</span>(); <span class=\"comment\">//外面作用域访问内部变量，延长局部变量的作用范围</span></span><br></pre></td></tr></table></figure>\n\n<p>递归函数：函数内部自己调用自己。</p>\n<ul>\n<li>浅拷贝：只能拷贝一层数据，更深层次的数据只能拷贝引用。<ul>\n<li><code>Object.assign(target,...sources)</code></li>\n</ul>\n</li>\n<li>深拷贝：拷贝多层，每一级别都会拷贝。</li>\n</ul>\n<h4 id=\"1-5-正则表达式\"><a href=\"#1-5-正则表达式\" class=\"headerlink\" title=\"1.5 正则表达式\"></a>1.5 正则表达式</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.调用RegExp对象来创建正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> regexp=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/123/</span>)</span><br><span class=\"line\"><span class=\"comment\">//2.利用字面量创建正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> regexp=<span class=\"regexp\">/123/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(regexp.<span class=\"title function_\">test</span>(<span class=\"number\">123</span>)); <span class=\"comment\">//判断内容是否符合正则表达式</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>边界符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td>表示匹配行首的文本</td>\n</tr>\n<tr>\n<td>$</td>\n<td>表示匹配行尾的文本</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>表示任意匹配一次中括号内的文本</td>\n</tr>\n<tr>\n<td>[^]</td>\n<td>表示取反，不匹配文本内容</td>\n</tr>\n</tbody></table>\n<ul>\n<li>量词符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>*</td>\n<td>重复零次或更多次</td>\n</tr>\n<tr>\n<td>+</td>\n<td>重复一次或更多次</td>\n</tr>\n<tr>\n<td>？</td>\n<td>重复零次或一次</td>\n</tr>\n<tr>\n<td>{n}</td>\n<td>重复n次</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td>重复n次或更多次</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td>重复n到m次</td>\n</tr>\n</tbody></table>\n<ul>\n<li>预定义</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>\\d</td>\n<td>匹配0-9之间的任一数字</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>匹配0-9之外的字符</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配任意字母、数字、下划线</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>匹配字母、数字、下划线之外的字符</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配空格</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>匹配非空格符</td>\n</tr>\n</tbody></table>\n<p><code>字符串.replace(正则表达式,要替换的字符串)</code>方法批量替换字符串。</p>\n<p>switch修饰符：</p>\n<ul>\n<li><code>/正则表达式/[switch]</code></li>\n<li>g：全局匹配</li>\n<li>i：忽略大小写</li>\n<li>gi：全局匹配+忽略大小写</li>\n</ul>\n<h4 id=\"1-6-ES6语法\"><a href=\"#1-6-ES6语法\" class=\"headerlink\" title=\"1.6 ES6语法\"></a>1.6 ES6语法</h4><ul>\n<li><code>let</code> 声明的变量具有块级作用域，具有暂时性死区（让块内变量与全局隔离）</li>\n<li><code>const</code>声明常量时必须赋值，不能更改，具有块级作用域</li>\n<li>解构赋值<ul>\n<li><code>let [a,b,c] = [1,2,3];</code>  按照一一对应关系对从数组对变量赋值</li>\n<li><code>let &#123;name,age&#125;=person;</code> 按照属性从对象中进行匹配并赋值给变量</li>\n</ul>\n</li>\n<li><code>()=&gt;&#123;&#125;</code> 箭头函数，类似匿名函数，但是没有自己的this</li>\n<li>剩余参数<code>(参数1,...数组名)</code>，接收多余的参数</li>\n<li>扩展运算符<code>...数组名</code>：可以将数组拆分成以逗号分隔的参数。</li>\n<li><code>Array.from()</code>将可遍历的对象转化为数组</li>\n<li><code>Array.find()</code> 找到第一个符合条件的数组成员，没有找到返回undefined</li>\n<li><code>Array.findIndex()</code> 找到第一个符合条件的数组成员的索引，没有返回-1</li>\n<li><code>数组.includes()</code> 查找数组是否包含值，返回布尔值</li>\n<li>模板字符串<ul>\n<li>使用<code>``</code>符号，可以利用<code>$&#123;变量/函数&#125;</code>添加字符串在字符串的任意位置</li>\n</ul>\n</li>\n<li><code>字符串.startsWith(字符串1)</code> 判断字符串头部是否有字符串1</li>\n<li><code>字符串.endsWith(字符串1)</code> 判断字符串尾部是否有字符串1</li>\n<li><code>字符串.repeat(n)</code>重复字符串n次，并返回新的字符串</li>\n<li>参数默认值<code>function add(a,b=1)&#123; return a+b;&#125;</code></li>\n</ul>\n<p><strong>Set</strong>集合，类似数组，但是成员唯一</p>\n<ul>\n<li><code>let s =new Set();</code> <code>let s =new Set([1,2,3,4,4]);</code></li>\n<li><code>size</code>属性，返回集合的个数</li>\n<li><code>add()</code>方法，增加元素</li>\n<li><code>delete()</code>方法，删除元素，返回布尔值</li>\n<li><code>has()</code>方法，检查是否包含某个元素，返回布尔值</li>\n<li><code>clear()</code>方法，清空Set</li>\n</ul>\n<p><strong>Map</strong>键值对集合，键不限于字符串</p>\n<ul>\n<li><code>let m=new Map();</code></li>\n<li><code>size</code>属性，返回集合的个数</li>\n<li><code>set()</code>方法，增加元素</li>\n<li><code>get()</code>方法，根据键返回值</li>\n<li><code>clear()</code>方法，清空Map</li>\n<li><code>has()</code>方法，检查是否包含某个元素，返回布尔值</li>\n</ul>\n<p><strong>Symbol</strong>数据类型<br>特点：</p>\n<ol>\n<li>Symbol值唯一</li>\n<li>Symbol不能与其他数据运算</li>\n<li>Symbol定义对象属性不能使用for…in遍历</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建Symbol</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"title class_\">Symbol</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> s1 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;zs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> s2 = <span class=\"title class_\">Symbol</span>.<span class=\"title function_\">for</span>(<span class=\"string\">&#x27;zs&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//安全向未知对象中添加新的方法</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> game=&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> methods=&#123;</span><br><span class=\"line\">    <span class=\"attr\">up</span>: <span class=\"title class_\">Symbol</span>(),</span><br><span class=\"line\">    <span class=\"attr\">down</span>: <span class=\"title class_\">Symbol</span>()</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">game[methods.<span class=\"property\">up</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;go to up&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">game[methods.<span class=\"property\">down</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;go to down&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//=================</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> game=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;lrx&#x27;</span>,</span><br><span class=\"line\">    [<span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;say&#x27;</span>)]: <span class=\"function\">()=&gt;</span><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Symbol的内置属性，控制对象在特定场景中的表现</p>\n<p><strong>迭代器</strong>：<em>Iterator</em>主要提供给<em>for….of</em></p>\n<ul>\n<li><em>for…..in</em> 访问键(在对象中访问属性) ，<em>for….of</em> 访问值</li>\n<li>工作原理：<ul>\n<li>创建一个指针对象，指向当前数据结构的起始位置</li>\n<li>第一次调用next方法，指针自动指向第一个成员</li>\n<li>不断调用next方法，指针一直后移，直到指向最后一个成员</li>\n<li>每次调用next方法，返回一个包含value和done属性的对象</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> game=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Night&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">arr</span>: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;anight&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;bnight&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;cnight&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;knight&#x27;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    [<span class=\"title class_\">Symbol</span>.<span class=\"property\">iterator</span>]()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _this=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">next</span>: <span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(index&lt;_this.<span class=\"property\">arr</span>.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">const</span> res=&#123;<span class=\"attr\">value</span>: _this.<span class=\"property\">arr</span>[index],<span class=\"attr\">done</span>: <span class=\"literal\">false</span>&#125;;</span><br><span class=\"line\">                    index++;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"attr\">value</span>: <span class=\"literal\">undefined</span>,<span class=\"attr\">done</span>: <span class=\"literal\">true</span>&#125;;  <span class=\"comment\">//done为true说明到底了</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>生成器</strong>：是一种异步编程解决方案，是一种特殊函数</p>\n<blockquote>\n<p>异步编程（文件操作、网络操作、数据库操作）—&gt;纯回调函数</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//需求：1s 后输出111，2s后输出222，3s后输出333</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">one</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">111</span>);</span><br><span class=\"line\">        iterator.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">two</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">222</span>);</span><br><span class=\"line\">        iterator.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;,<span class=\"number\">2000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">three</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">333</span>);</span><br><span class=\"line\">        iterator.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;,<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> *<span class=\"title function_\">gen</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"title function_\">one</span>();</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"title function_\">two</span>();</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"title function_\">three</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> iterator = <span class=\"title function_\">gen</span>();</span><br><span class=\"line\">iterator.<span class=\"title function_\">next</span>();   <span class=\"comment\">//next里面可以传参，在yield位置接收</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-7-异步编程\"><a href=\"#1-7-异步编程\" class=\"headerlink\" title=\"1.7 异步编程\"></a>1.7 异步编程</h4><p><strong>JS是单线程的语言</strong></p>\n<ul>\n<li>同步任务<ul>\n<li>非耗时任务</li>\n<li>只有前面任务执行完成后，才能执行后面的任务</li>\n</ul>\n</li>\n<li>异步任务<ul>\n<li>耗时任务，异步任务有JS的宿主环境执行</li>\n<li>当异步任务执行完成后，会通知JS主线程执行异步任务的回调函数</li>\n</ul>\n</li>\n</ul>\n<p><strong>Promise</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve,reject</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// let data=&#x27;数据库数据&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// resolve(data)              //成功调用</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> err = <span class=\"string\">&#x27;数据读取失败&#x27;</span></span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(err)                        <span class=\"comment\">//失败调用</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">p.<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">value</span>)&#123;  <span class=\"comment\">//成功调用</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value)</span><br><span class=\"line\">&#125;,<span class=\"keyword\">function</span>(<span class=\"params\">reason</span>)&#123;   <span class=\"comment\">//失败调用</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reason)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>async&#x2F;await</strong></p>\n<p>用来简化Promise的异步操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getAllFile</span>(<span class=\"params\"></span>)&#123;   <span class=\"comment\">// 存在 await的函数， 必须由 async 修饰</span></span><br><span class=\"line\">    <span class=\"comment\">// 会等待函数执行完成，而且await会把Promise对象中的结果拆解出来</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> r1 = <span class=\"keyword\">await</span> thenFs.<span class=\"title function_\">readFile</span>(<span class=\"string\">&#x27;./files/1.txt&#x27;</span>,<span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// await 之前的方法都会同步执行，当到达await方法后，会把await后面的代码都转到异步执行队列中</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> r2 = <span class=\"keyword\">await</span> thenFs.<span class=\"title function_\">readFile</span>(<span class=\"string\">&#x27;./files/1.txt&#x27;</span>,<span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、Webpack\"><a href=\"#四、Webpack\" class=\"headerlink\" title=\"四、Webpack\"></a>四、Webpack</h2><p>前端工程化：把前端开发所需的工具、技术、流程、经验进行规范化、标准化。即：模块化、组件化、规范化、自动化。</p>\n<h3 id=\"1-基本使用\"><a href=\"#1-基本使用\" class=\"headerlink\" title=\"1.基本使用\"></a>1.基本使用</h3><p>webpack是前端项目工程化的具体解决方案。</p>\n<p>主要功能：代码压缩混淆、处理浏览器端JavaScript的兼容性、性能优化等功能。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在项目文件夹内初始化</span></span><br><span class=\"line\">npm init</span><br><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">npm i webpack webpack-cli -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>package.json</code>文件中添加下面配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n\n<p>在主目录新建<code>webpack.config.js</code>文件，添加下面内容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>:<span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">运行</span></span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<p>webpack会把js代码全部转化为兼容模式放在<code>./dist/main.js</code>文件中，后续只需要在html中导入该文件就行了。</p>\n<h3 id=\"2-进阶使用\"><a href=\"#2-进阶使用\" class=\"headerlink\" title=\"2.进阶使用\"></a>2.进阶使用</h3><h4 id=\"2-1-mode可选择值\"><a href=\"#2-1-mode可选择值\" class=\"headerlink\" title=\"2.1 mode可选择值\"></a>2.1 mode可选择值</h4><ol>\n<li>development<ol>\n<li>开发环境</li>\n<li>不会对打包生成文件进行代码压缩和性能优化</li>\n<li>打包速度快，适合开发使用</li>\n</ol>\n</li>\n<li>production<ol>\n<li>生产环境</li>\n<li>会对打包生成文件进行代码压缩和性能优化</li>\n<li>打包速度慢，仅适合在项目发布阶段使用</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"2-2-默认约定\"><a href=\"#2-2-默认约定\" class=\"headerlink\" title=\"2.2 默认约定\"></a>2.2 默认约定</h4><ol>\n<li>默认打包入口文件<code>src/index.js</code></li>\n<li>默认输出文件路径<code>dist/main.js</code></li>\n<li>自定义打包入口文件<code>entry: &quot;文件路径&quot;</code></li>\n<li>自定义输出文件路径<code>output: &#123; path: &quot;文件路径&quot;, filename: &quot;输出的文件名&quot;&#125;</code></li>\n</ol>\n<h4 id=\"2-3-插件\"><a href=\"#2-3-插件\" class=\"headerlink\" title=\"2.3 插件\"></a>2.3 插件</h4><ol>\n<li>webpack-dev-server<ol>\n<li>类型nodemon工具</li>\n<li>每当修改源码后，webpack都会自动进行项目的打包与构建</li>\n</ol>\n</li>\n<li>html-webpack-plugin<ol>\n<li>类似模板引擎</li>\n<li>可以自定义index.html的内容</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">npm i webpack-dev-server -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>package.json</code>文件中修改下面配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack serve&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">npm i html-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>中添加下面配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> htmlPlugin = <span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">&#x27;./src/index.html&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [htmlPlugin],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动，html-webpack-plugin会把index.html复制到内存中，可以直接访问 http://localhost:8080/</span></span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<p>为了解决每次打包完成都需要手动打开<code>http://localhost:8080/</code>地址，需要对<code>webpack.config.js</code>文件的节点进行额外的配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">port</span>: <span class=\"number\">8002</span>,</span><br><span class=\"line\">        <span class=\"attr\">host</span>: <span class=\"string\">&quot;127.0.0.1&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">open</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-Loader加载器\"><a href=\"#2-4-Loader加载器\" class=\"headerlink\" title=\"2.4 Loader加载器\"></a>2.4 Loader加载器</h4><p>webpack默认只处理js文件，如果需要处理其他文件需要loader加载器的作用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">begin(将要被webpack&lt;/br&gt;打包处理的模块)--&gt;one&#123;是否为&lt;/br&gt;JS模块&#125;</span><br><span class=\"line\">one--是--&gt;twoJS&#123;是否包含&lt;/br&gt;高级JS语法&#125;</span><br><span class=\"line\">one--否--&gt;twoLoader&#123;是否配置了&lt;/br&gt;对应的Loader&#125;</span><br><span class=\"line\">twoJS--是--&gt;threeBabel&#123;是否配置&lt;/br&gt;了babel&#125;</span><br><span class=\"line\">twoJS--否--&gt;webpack进行处理</span><br><span class=\"line\">twoLoader--是--&gt;four1[调用loader处理]</span><br><span class=\"line\">twoLoader--否--&gt;four2[报错]</span><br><span class=\"line\">threeBabel--是--&gt;调用loader处理</span><br><span class=\"line\">threeBabel--否--&gt;报错</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>打包处理CSS文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装css的loader</span></span><br><span class=\"line\">npm i style-loader css-loader -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>, <span class=\"attr\">use</span>: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打包Less文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装less的loader</span></span><br><span class=\"line\">npm i less-loader less -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>, <span class=\"attr\">use</span>: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>, <span class=\"string\">&#x27;less-loader&#x27;</span> ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打包url路径相关文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装loader</span></span><br><span class=\"line\">npm i url-loader file-loader -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//test: /\\.jpg|png|gif$/, use: &#x27;url-loader&#x27; </span></span><br><span class=\"line\">                <span class=\"comment\">//test: /\\.jpg|png|gif$/, use: &#x27;url-loader?limit=222229&#x27; 限制图片大小，单位byte</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.jpg|png|gif$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">limit</span>: <span class=\"number\">222229</span>,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打包处理JS高级语法</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装loader</span></span><br><span class=\"line\">npm i babel-loader @babel/core @babel/plugin-proposal-class-properties -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span>, <span class=\"comment\">//排除第三方库</span></span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">plugins</span>: [<span class=\"string\">&#x27;@babel/plugin-proposal-class-properties&#x27;</span>]</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2-5-打包发布\"><a href=\"#2-5-打包发布\" class=\"headerlink\" title=\"2.5 打包发布\"></a>2.5 打包发布</h4><ol>\n<li>开发环境下，打包生成的文件存放与内存中，无法获取到最终打包生成的文件</li>\n<li>开发环境下，没有对代码进行压缩和性能优化</li>\n</ol>\n<p>在<code>package.json</code>文件的script节点下添加build命令：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;script&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack --mode production&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>对打包路径进行配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;./dist&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/bundle.js&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.jpg|png|gif$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">limit</span>: <span class=\"number\">10240</span>,</span><br><span class=\"line\">                        <span class=\"attr\">outputPath</span>: <span class=\"string\">&#x27;images/&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>清除旧文件插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">npm i clean-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>配置插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">CleanWebpackPlugin</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> cleanPlugin = <span class=\"keyword\">new</span> <span class=\"title class_\">CleanWebpackPlugin</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [htmlPlugin,cleanPlugin],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>配置Source Map来在调试中查找错误文件</p>\n<ol>\n<li>开发环境<ol>\n<li>把devtool的值设置为eval-source-map</li>\n<li>可以定位到错误行</li>\n</ol>\n</li>\n<li>生产环境<ol>\n<li>关闭source map，将devtool值设置为nosources-source-map</li>\n<li>提高网站安全性</li>\n</ol>\n</li>\n</ol>\n","more":"<h1 id=\"JavaScript快速入门语法\"><a href=\"#JavaScript快速入门语法\" class=\"headerlink\" title=\"JavaScript快速入门语法\"></a>JavaScript快速入门语法</h1><h2 id=\"一、基础语法\"><a href=\"#一、基础语法\" class=\"headerlink\" title=\"一、基础语法\"></a>一、基础语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>作用：</p>\n<ul>\n<li>表单验证</li>\n<li>网页特效</li>\n<li>服务端开发（Node.js）</li>\n<li>桌面程序（Electron）</li>\n<li>App（Cordova）</li>\n<li>控制硬件-物联网（Ruff）</li>\n<li>游戏开发（cocos2d-js）</li>\n</ul>\n<p>JavaScript组成：<strong>ES</strong>(ECMAScript)+<strong>DOM</strong>+<strong>BOM</strong></p>\n<p>书写位置：</p>\n<ol>\n<li>行内：在元素内部写</li>\n<li>内嵌：使用<code>&lt;script&gt;JS代码&lt;/script&gt;</code> 标签</li>\n<li>外部：<code>*.js</code>文件，再通过<code>&lt;script&gt;</code> 标签引入<code>&lt;script src=&quot;*.js&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<h3 id=\"2-基础语法\"><a href=\"#2-基础语法\" class=\"headerlink\" title=\"2.基础语法\"></a>2.基础语法</h3><h4 id=\"2-1-注释\"><a href=\"#2-1-注释\" class=\"headerlink\" title=\"2.1 注释\"></a>2.1 注释</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//单行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    多行注释</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-输入输出语句\"><a href=\"#2-2-输入输出语句\" class=\"headerlink\" title=\"2.2 输入输出语句\"></a>2.2 输入输出语句</h4><table>\n<thead>\n<tr>\n<th align=\"center\">方法</th>\n<th align=\"center\">说明</th>\n<th align=\"center\">归属</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">alert(msg)</td>\n<td align=\"center\">浏览器弹出警告框</td>\n<td align=\"center\">浏览器</td>\n</tr>\n<tr>\n<td align=\"center\">console.log(msg)</td>\n<td align=\"center\">浏览器控制台打印输出信息</td>\n<td align=\"center\">浏览器</td>\n</tr>\n<tr>\n<td align=\"center\">prompt(info)</td>\n<td align=\"center\">浏览器弹出输入框，用户可以输入</td>\n<td align=\"center\">浏览器</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-3-变量\"><a href=\"#2-3-变量\" class=\"headerlink\" title=\"2.3 变量\"></a>2.3 变量</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age;</span><br><span class=\"line\"><span class=\"comment\">//变量赋值</span></span><br><span class=\"line\">age=<span class=\"number\">18</span>；</span><br><span class=\"line\"><span class=\"comment\">//变量的初始化</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age=<span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"comment\">//会覆盖前面的值</span></span><br><span class=\"line\">age=<span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"comment\">//声明多个变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">18</span>,</span><br><span class=\"line\">      sex = <span class=\"string\">&#x27;man&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">//只声明，不赋值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sex;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sex);</span><br><span class=\"line\">&gt; <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"comment\">//不声明，直接使用</span></span><br><span class=\"line\">qq=<span class=\"number\">120</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(qq);</span><br><span class=\"line\">&gt; <span class=\"number\">120</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>命名规范：</strong></p>\n<ul>\n<li>由字母、数字、下划线、美元符号组成</li>\n<li>区分大小写</li>\n<li>不能数字开头</li>\n<li>不能是关键字</li>\n<li>首字母小写的驼峰命名法</li>\n</ul>\n<h4 id=\"2-4-数据类型\"><a href=\"#2-4-数据类型\" class=\"headerlink\" title=\"2.4 数据类型\"></a>2.4 数据类型</h4><p>JS属于动态类型语言，根据右边变量值来判断数据类型。变量的数据类型<strong>可变</strong>。</p>\n<p><strong>简单数据类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th align=\"center\">说明</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Number</td>\n<td align=\"center\">数字型，包括整型和浮点型</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">Boolean</td>\n<td align=\"center\">布尔型</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td align=\"center\">String</td>\n<td align=\"center\">字符串类型</td>\n<td align=\"center\">“”</td>\n</tr>\n<tr>\n<td align=\"center\">Undefined</td>\n<td align=\"center\">未定义值</td>\n<td align=\"center\">undefined</td>\n</tr>\n<tr>\n<td align=\"center\">Null</td>\n<td align=\"center\">空值</td>\n<td align=\"center\">null</td>\n</tr>\n</tbody></table>\n<p>方法**isNaN()**，判断是否非数字，如果不是数字返回true</p>\n<p><strong>字符串转义符：</strong></p>\n<table>\n<thead>\n<tr>\n<th>转义符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>\\n</code></td>\n<td>换行</td>\n</tr>\n<tr>\n<td><code>\\\\</code></td>\n<td>斜杠</td>\n</tr>\n<tr>\n<td><code>\\&#39;</code></td>\n<td>单引号</td>\n</tr>\n<tr>\n<td><code>\\&quot;</code></td>\n<td>双引号</td>\n</tr>\n<tr>\n<td><code>\\t</code></td>\n<td>tab缩进</td>\n</tr>\n<tr>\n<td><code>\\b</code></td>\n<td>空格</td>\n</tr>\n</tbody></table>\n<p>数据类型检查函数：<code>typeof 变量名</code></p>\n<p>数据类型转化：</p>\n<ul>\n<li>转化为字符串类型：<code>toString()</code>、<code>String()</code></li>\n<li>转化为数字类型：<code>pareInt()</code>、<code>parseFloat()</code>、<code>Number()</code></li>\n<li>转化为布尔型：<code>Boolean()</code>，只有’’、0、NaN、null、undefined会被转化为false，其他都为true</li>\n</ul>\n<h4 id=\"2-5-运算符\"><a href=\"#2-5-运算符\" class=\"headerlink\" title=\"2.5 运算符\"></a>2.5 运算符</h4><ul>\n<li>算术运算符：<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code></li>\n<li>递增、递减运算符：<code>++</code>、<code>--</code></li>\n<li>比较运算符：<code>&lt;</code>、<code>&gt;</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>==</code>、<code>!=</code>、<code>===</code>和<code>!==</code> (全等，要求值和数据类型都一致)</li>\n<li>逻辑运算符：<code>&amp;&amp;</code>、<code>||</code>、<code>!</code><ul>\n<li>逻辑与中断：<code>表达式1 &amp;&amp; 表达式2</code> ，如果表达式1为真，返回表达式2，否则返回表达式1</li>\n<li>逻辑或中断：<code>表达式1 || 表达式2</code> ，如果表达式1为真，返回表达式1，否则返回表达式2</li>\n</ul>\n</li>\n<li>赋值运算符：<code>=</code>、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code></li>\n</ul>\n<h4 id=\"2-6-流程控制\"><a href=\"#2-6-流程控制\" class=\"headerlink\" title=\"2.6 流程控制\"></a>2.6 流程控制</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//条件表达式为真，执行语句</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(条件表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(条件表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句1</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(条件表达式<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句1</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(条件表达式<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句2</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行语句3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//三元表达式：条件表达式为真，返回表达式1，否则返回表达式2</span></span><br><span class=\"line\">条件表达式? 表达式<span class=\"number\">1</span>:表达式<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//表达式的值与value值进行匹配</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(表达式)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"attr\">value1</span>:</span><br><span class=\"line\">        <span class=\"comment\">//执行语句1</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"attr\">value2</span>:</span><br><span class=\"line\">        <span class=\"comment\">//执行语句2</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"comment\">//最后语句</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-循环控制\"><a href=\"#2-7-循环控制\" class=\"headerlink\" title=\"2.7 循环控制\"></a>2.7 循环控制</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//条件表达式为真，继续循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(初始化表达式;条件表达式;操作表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//条件表达式为真，继续循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(条件表达式)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(条件表达式)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>continue</code>关键字，跳出本次循环，进入下一个循环</li>\n<li><code>break</code>关键字，跳出当前循环</li>\n</ul>\n<h4 id=\"2-8-数组\"><a href=\"#2-8-数组\" class=\"headerlink\" title=\"2.8 数组\"></a>2.8 数组</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//new创建数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//数组字面量创建数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;pink&#x27;</span>,<span class=\"literal\">true</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//访问数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;arr.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//添加元素</span></span><br><span class=\"line\">arr.<span class=\"property\">length</span>=<span class=\"number\">10</span>; <span class=\"comment\">//先修改数组长度，后添加</span></span><br><span class=\"line\">arr[<span class=\"number\">4</span>]=<span class=\"string\">&#x27;red&#x27;</span>;  <span class=\"comment\">//直接添加</span></span><br><span class=\"line\">arr=<span class=\"string\">&#x27;blue&#x27;</span>  <span class=\"comment\">//arr会变成字符串</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-9-函数\"><a href=\"#2-9-函数\" class=\"headerlink\" title=\"2.9 函数\"></a>2.9 函数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//声明函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> 函数名()&#123;</span><br><span class=\"line\">    <span class=\"comment\">//函数体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用函数</span></span><br><span class=\"line\">函数名();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//有参函数</span></span><br><span class=\"line\"><span class=\"comment\">//声明函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> 函数名(形参<span class=\"number\">1</span>,形参<span class=\"number\">2</span>,.....)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//函数体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用函数</span></span><br><span class=\"line\">函数名(实参<span class=\"number\">1</span>,实参<span class=\"number\">2</span>,.....);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数表达式声明（匿名函数）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//函数体</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用函数</span></span><br><span class=\"line\">变量名();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>参数数量不匹配</p>\n<ul>\n<li>实参&#x3D;形参，正确</li>\n<li>实参&gt;形参，取形参的个数</li>\n<li>实参&lt;形参，多的参数定义为undefined，结果为NaN</li>\n</ul>\n</li>\n<li><p>返回参数：<code>return 返回值;</code></p>\n</li>\n<li><p>接收参数不确定：用<code>arguments</code>来当形参接收数据</p>\n<ul>\n<li><code>arguments</code>是一个伪数组，具有数组的length属性，有索引，没有pop()、push()方法</li>\n</ul>\n</li>\n<li><p>内部访问外部变量，由内向外一层一层的查找。</p>\n</li>\n<li><p>预解析：js引擎会把所有的var和function提升到当前作用域最前面</p>\n</li>\n</ul>\n<h4 id=\"2-10-对象\"><a href=\"#2-10-对象\" class=\"headerlink\" title=\"2.10 对象\"></a>2.10 对象</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建字面量对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=&#123;</span><br><span class=\"line\">    <span class=\"attr\">uname</span>: <span class=\"string\">&#x27;张三丰&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;man&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sayHello</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用对象</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">uname</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj[<span class=\"string\">&#x27;uname&#x27;</span>]);</span><br><span class=\"line\">obj.<span class=\"title function_\">sayHello</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//new Object创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">obj.<span class=\"property\">uname</span>=<span class=\"string\">&#x27;张三丰&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造函数创建对象，建议名字首字母大写</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> 构造函数名()&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.属性=值;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.方法=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">new</span> 构造函数名();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历对象里面的属性和方法</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(变量 <span class=\"keyword\">in</span> 对象)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环体</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>js对象分为3种：自定义对象、内置对象、浏览器对象</li>\n<li>查阅文档：<a href=\"https://developer.mozilla.org/zh-CN/\">MDN</a></li>\n<li><code>instanceof</code>运算符，检测是否为数组，<code>arr instanceof Array</code></li>\n<li><code>unshift()</code>方法在数组开头添加元素，<code>push()</code>方法向数组末尾添加元素</li>\n<li><code>shift()</code>方法在数组开头删除元素，<code>pop()</code>方法向数组末尾删除元素</li>\n<li>基本包装类型：把简单数据类型包装成复杂数据类型，使其能够使用属性和方法<code>var 变量=new String(&#39;内容&#39;)</code></li>\n<li>字符串不可变：在字符串重新赋值或者拼接的过程中，会重新开辟内存空间存储数据</li>\n<li><code>indexOf(&#39;查找的字符&#39;,开始的位置)</code>，从开始的位置从前往后匹配字符，返回索引，找不到返回-1</li>\n<li><code>lastIndexOf(&#39;查找的字符&#39;)</code>，从后往前匹配字符，返回索引（正常的索引）</li>\n<li><code>charAt(索引)</code>，返回指定索引的字符</li>\n<li><code>charCodeAt(索引)</code>，获取指定索引字符的ASCII码</li>\n<li><code>str[索引]</code>，返回指定索引的字符</li>\n<li><code>replace(&#39;被替换的字符&#39;,&#39;替换的字符&#39;)</code>，在字符串中查找被替换的字符替换成替换的字符</li>\n<li><code>split(&#39;分隔符&#39;)</code>，根据分隔符将字符串转化为数组</li>\n<li>简单数据类型传参传递的是结果，复杂数据类型传参传递的是地址</li>\n</ul>\n<h2 id=\"二、Web-API\"><a href=\"#二、Web-API\" class=\"headerlink\" title=\"二、Web API\"></a>二、Web API</h2><h3 id=\"1-DOM\"><a href=\"#1-DOM\" class=\"headerlink\" title=\"1.DOM\"></a>1.DOM</h3><blockquote>\n<p>文档对象模型（简称DOM），是W3C组织推荐的标准编程接口</p>\n</blockquote>\n<ul>\n<li>文档：一个页面就是一个文档，DOM中使用document表示</li>\n<li>元素：页面的所有标签都是元素，DOM中使用element表示</li>\n<li>节点：网页中的所有内容都是节点，DOM中使用node表示</li>\n</ul>\n<h4 id=\"1-1-获取元素\"><a href=\"#1-1-获取元素\" class=\"headerlink\" title=\"1.1 获取元素\"></a>1.1 获取元素</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.根据 ID 获取,返回DOM的Element对象，没有找到返回null</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ID名&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 根据标签名获取，得到所有标签对象的集合</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;标签名&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3. 通过HTML5新增方法获取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&#x27;类名&#x27;</span>); </span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;选择器&#x27;</span>); <span class=\"comment\">//返回选择器的第一个对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4.特殊元素获取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>;  <span class=\"comment\">//获取body元素对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名=<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>; <span class=\"comment\">//获取html元素对象</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-事件基础\"><a href=\"#1-2-事件基础\" class=\"headerlink\" title=\"1.2 事件基础\"></a>1.2 事件基础</h4><ul>\n<li>事件源、事件类型、事件处理程序</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>);</span><br><span class=\"line\">btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-操作元素\"><a href=\"#1-3-操作元素\" class=\"headerlink\" title=\"1.3 操作元素\"></a>1.3 操作元素</h4><ul>\n<li>innerText属性，可读写元素内容</li>\n<li>innerHTML属性，可读写元素内容，识别HTML标签</li>\n<li>src、href属性，通过<code>对象.属性</code>的方式可读写元素相关内容</li>\n<li>id、alt、title属性，可读写元素相关内容</li>\n<li>只要是元素的属性，都可以用<code>对象.属性</code>这个方法读写元素相关内容</li>\n<li>通过<code>对象.style.属性名</code>来修改样式</li>\n<li>通过<code>对象.className</code>修改元素的类名，以便修改更多的样式</li>\n<li>上面的方法只能获得本来存在的属性，获得自定义属性使用<code>对象.getAttribute(&#39;属性名&#39;);</code></li>\n<li>设置自定义属性值：<code>对象.setAttribute(&#39;属性名&#39;,属性值);</code></li>\n<li>为了避免歧义，规定自定义属性命名规范：<code>data-自定义属性名</code></li>\n</ul>\n<h4 id=\"1-4-节点操作\"><a href=\"#1-4-节点操作\" class=\"headerlink\" title=\"1.4 节点操作\"></a>1.4 节点操作</h4><ul>\n<li>作用：更简单的获取元素</li>\n<li>节点构成：(节点类型)nodeType、(节点名称)nodeName、(节点值)nodeValue</li>\n<li><code>对象.parentNode</code>，获取对象的父节点对象</li>\n<li><code>对象.childNodes</code>，获取对象所有子节点对象，伪数组存储</li>\n<li><code>对象.firstChild</code>，获取对象的第一个子节点对象</li>\n<li><code>对象.lastChild</code>，获取对象的最后一个子节点对象</li>\n<li><code>对象.firstElementChild</code>，获取对象的第一个子元素节点对象</li>\n<li><code>对象.lastElementChild</code>，获取对象的最后一个子元素节点对象</li>\n<li><code>对象.children[索引]</code>，获取对象的第索引个子元素节点对象</li>\n<li><code>对象.nextSibling</code>，获取对象的下一个兄弟节点对象</li>\n<li><code>对象.previousSibling</code>，获取对象的上一个兄弟节点对象</li>\n<li><code>document.createElement(&#39;节点名&#39;)</code>，创建节点</li>\n<li><code>对象.appendChild(节点对象)</code>，在对象下添加子节点</li>\n<li><code>对象.removeChild(节点对象)</code>，删除对象下的子节点</li>\n<li><code>对象.cloneNode()</code>，克隆一个节点，参数为空或者false为浅拷贝，为true为深拷贝</li>\n</ul>\n<h4 id=\"1-5-事件高级\"><a href=\"#1-5-事件高级\" class=\"headerlink\" title=\"1.5 事件高级\"></a>1.5 事件高级</h4><ul>\n<li>注册事件<br><code>eventTarget.addEventListener(type,listener,useCapture)</code><br><code>eventTarget.addEventListener()</code>方法将监听器注册到eventTarget上，当该对象触发指定的事件时，就会执行事件处理函数。<br><code>type</code>：事件类型字符串，如click、mouseover，不需要带on<br><code>listener</code>：事件处理函数，事件发生调用该函数<br><code>useCapture</code>：可选参数、默认为false</li>\n<li>删除事件<br><code>eventTarget.removeEventListener(type,listener,useCapture)</code></li>\n<li>事件流<br>捕获阶段：从上往下检查事件是否注册，然后执行，useCapture&#x3D;true<br>冒泡阶段，从下往上检查事件是否注册，然后执行，useCapture&#x3D;false</li>\n<li>事件对象<br>事件对象在注册事件就会存在，不需要传参自动创建，包含了事件相关信息</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> div  = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">div.<span class=\"property\">onclick</span>=<span class=\"keyword\">function</span>(<span class=\"params\">event</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">事件对象属性方法</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">target</td>\n<td align=\"center\">返回触发事件对象</td>\n</tr>\n<tr>\n<td align=\"center\">type</td>\n<td align=\"center\">返回事件的类型</td>\n</tr>\n<tr>\n<td align=\"center\">preventDefault()</td>\n<td align=\"center\">阻止默认事件，比如不让跳转</td>\n</tr>\n<tr>\n<td align=\"center\">stopPropagation()</td>\n<td align=\"center\">阻止冒泡</td>\n</tr>\n</tbody></table>\n<ul>\n<li>事件委托<br>利用冒泡，给一个父节点添加事件，利用target属性，操作每一个子节点</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">鼠标事件</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">onclick</td>\n<td align=\"center\">鼠标左键点击</td>\n</tr>\n<tr>\n<td align=\"center\">onmouseover</td>\n<td align=\"center\">鼠标经过</td>\n</tr>\n<tr>\n<td align=\"center\">onmouseout</td>\n<td align=\"center\">鼠标离开</td>\n</tr>\n<tr>\n<td align=\"center\">onfocus</td>\n<td align=\"center\">鼠标焦点</td>\n</tr>\n<tr>\n<td align=\"center\">onblur</td>\n<td align=\"center\">失去鼠标焦点</td>\n</tr>\n<tr>\n<td align=\"center\">onmousemove</td>\n<td align=\"center\">鼠标移动</td>\n</tr>\n<tr>\n<td align=\"center\">onmouseup</td>\n<td align=\"center\">鼠标弹起</td>\n</tr>\n<tr>\n<td align=\"center\">onmousedown</td>\n<td align=\"center\">鼠标按下</td>\n</tr>\n<tr>\n<td align=\"center\">oncontextmenu</td>\n<td align=\"center\">鼠标右键菜单</td>\n</tr>\n<tr>\n<td align=\"center\">onselectstart</td>\n<td align=\"center\">鼠标选中</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>键盘事件</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>onkeyup</td>\n<td>键盘松开</td>\n</tr>\n<tr>\n<td>onkeydown</td>\n<td>键盘按下</td>\n</tr>\n<tr>\n<td>onkeypress</td>\n<td>键盘按下，不认识功能键ctrl、shift等</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-BOM\"><a href=\"#2-BOM\" class=\"headerlink\" title=\"2.BOM\"></a>2.BOM</h3><blockquote>\n<p>浏览器对象模型，它提供独立于内容而与浏览器窗口进行交互的对象，其最大的对象是window</p>\n</blockquote>\n<h4 id=\"2-1-window对象常见事件\"><a href=\"#2-1-window对象常见事件\" class=\"headerlink\" title=\"2.1 window对象常见事件\"></a>2.1 window对象常见事件</h4><ul>\n<li>窗口加载事件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//会让页面内容全部加载完成后，处理事件</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;  <span class=\"comment\">//后面函数会覆盖前面的</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;load&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;);  <span class=\"comment\">//不会覆盖，会同时存在</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;)  <span class=\"comment\">//DOM加载完就可以执行了</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>窗口大小事件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//调整窗口大小加载事件，当触发时就调用的处理函数</span></span><br><span class=\"line\"><span class=\"comment\">//利用这个事件完成响应式布局，window.innerWidth属性拿到当前的宽度</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-定时器\"><a href=\"#2-2-定时器\" class=\"headerlink\" title=\"2.2 定时器\"></a>2.2 定时器</h4><ul>\n<li><code>window.setTimeout(调用函数，[延迟的毫秒数]);</code>，该定时器在定时器到期后执行调用函数。</li>\n<li><code>window.clearTimeout(timeoutID)</code>，取消setTimeout()建立的定时器，timeoutID为定时器的名字</li>\n<li><code>window.setInterval(回调函数，[间隔的毫秒数])</code>，每隔一段时间调用一次回调函数</li>\n<li><code>window.clearInterval(intervalID)</code>，停止setInterval()定时器</li>\n</ul>\n<h4 id=\"2-3-JS执行队列\"><a href=\"#2-3-JS执行队列\" class=\"headerlink\" title=\"2.3 JS执行队列\"></a>2.3 JS执行队列</h4><ul>\n<li>同步任务都在主线程执行</li>\n<li>异步任务：所有的回调函数，都在消息队列中，等同步任务执行完再执行异步任务<ol>\n<li>普通事件，如click、resize</li>\n<li>资源加载，如load、error</li>\n<li>定时器，包括setInterval、setTimeout</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"2-4-location对象\"><a href=\"#2-4-location对象\" class=\"headerlink\" title=\"2.4 location对象\"></a>2.4 location对象</h4><ul>\n<li>作用：获取或设置窗体的URL</li>\n<li>URL组成</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>组成</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>protocol</td>\n<td>通信协议：http，ftp，matio等</td>\n</tr>\n<tr>\n<td>host</td>\n<td>主机（域名）</td>\n</tr>\n<tr>\n<td>port</td>\n<td>端口号，可选</td>\n</tr>\n<tr>\n<td>path</td>\n<td>路径，由’&#x2F;‘隔开的字符串</td>\n</tr>\n<tr>\n<td>query</td>\n<td>参数，键值对形式用&amp;隔开</td>\n</tr>\n<tr>\n<td>fragment</td>\n<td>片段，#后面的内容</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>location对象属性</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>location.href</td>\n<td>返回整个URL</td>\n</tr>\n<tr>\n<td>location.host</td>\n<td>返回主机</td>\n</tr>\n<tr>\n<td>location.port</td>\n<td>返回端口号</td>\n</tr>\n<tr>\n<td>location.pathname</td>\n<td>返回路径</td>\n</tr>\n<tr>\n<td>location.search</td>\n<td>返回参数</td>\n</tr>\n<tr>\n<td>location.hash</td>\n<td>返回片段</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>location对象方法</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>location.assign()</td>\n<td>跳转页面，记录浏览历史</td>\n</tr>\n<tr>\n<td>location.replace()</td>\n<td>替换当前页面，不记录浏览历史</td>\n</tr>\n<tr>\n<td>location.reload()</td>\n<td>重新加载页面</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-5-navigator对象\"><a href=\"#2-5-navigator对象\" class=\"headerlink\" title=\"2.5 navigator对象\"></a>2.5 navigator对象</h4><ul>\n<li>包含浏览器信息、用户设备信息等的对象，主要用来区别PC端和移动端</li>\n</ul>\n<h4 id=\"2-6-history对象\"><a href=\"#2-6-history对象\" class=\"headerlink\" title=\"2.6 history对象\"></a>2.6 history对象</h4><table>\n<thead>\n<tr>\n<th>history对象方法</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>history.back()</td>\n<td>页面后退</td>\n</tr>\n<tr>\n<td>history.forward()</td>\n<td>页面前进</td>\n</tr>\n<tr>\n<td>history.go(参数)</td>\n<td>参数为1前进，参数为-1后退</td>\n</tr>\n</tbody></table>\n<h3 id=\"3-网页特效\"><a href=\"#3-网页特效\" class=\"headerlink\" title=\"3.网页特效\"></a>3.网页特效</h3><h4 id=\"3-1-元素偏移量offset系列\"><a href=\"#3-1-元素偏移量offset系列\" class=\"headerlink\" title=\"3.1 元素偏移量offset系列\"></a>3.1 元素偏移量offset系列</h4><ul>\n<li>获得元素距离带有定位父元素的位置</li>\n<li>获得元素自身的大小</li>\n<li>返回数值没有单位，只读属性</li>\n<li>常见属性</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>offset系列属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>offsetParent</td>\n<td>返回该元素带有定位的父元素，如果没有返回body</td>\n</tr>\n<tr>\n<td>offsetTop</td>\n<td>返回元素相对带有定位父元素上方的偏移</td>\n</tr>\n<tr>\n<td>offsetLeft</td>\n<td>返回元素相对带有定位父元素左边框的偏移</td>\n</tr>\n<tr>\n<td>offsetWidth</td>\n<td>返回自身边框、内边距、内容的宽度</td>\n</tr>\n<tr>\n<td>offsetHeight</td>\n<td>返回自身边框、内边距、内容的高度</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-2-元素的可视区client系列\"><a href=\"#3-2-元素的可视区client系列\" class=\"headerlink\" title=\"3.2 元素的可视区client系列\"></a>3.2 元素的可视区client系列</h4><table>\n<thead>\n<tr>\n<th>client系列属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>clientTop</td>\n<td>返回元素上边框的大小</td>\n</tr>\n<tr>\n<td>clientLeft</td>\n<td>返回元素左边框的大小</td>\n</tr>\n<tr>\n<td>clientWidth</td>\n<td>返回自身内边距、内容的宽度，不带单位</td>\n</tr>\n<tr>\n<td>clientHeight</td>\n<td>返回自身内边距、内容的高度，不带单位</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-2-元素滚动scroll系列\"><a href=\"#3-2-元素滚动scroll系列\" class=\"headerlink\" title=\"3.2 元素滚动scroll系列\"></a>3.2 元素滚动scroll系列</h4><table>\n<thead>\n<tr>\n<th>scroll系列属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>scrollTop</td>\n<td>返回显示的内容上方与实际内容上方的距离</td>\n</tr>\n<tr>\n<td>scrollLeft</td>\n<td>返回显示的内容下方与实际内容下方的距离</td>\n</tr>\n<tr>\n<td>scrollWidth</td>\n<td>返回自身内边距和实际内容的宽度，不带单位</td>\n</tr>\n<tr>\n<td>scrollHeight</td>\n<td>返回自身内边距和实际内容的高度，不带单位</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-3-动画函数封装\"><a href=\"#3-3-动画函数封装\" class=\"headerlink\" title=\"3.3 动画函数封装\"></a>3.3 动画函数封装</h4><ul>\n<li>原理：通过定时器不断移动盒子位置</li>\n<li>步骤：<ol>\n<li>获得盒子当前的位置</li>\n<li>让盒子在当前位置加上一个移动距离</li>\n<li>加一个定时器不断重复这个操作</li>\n<li>加一个结束定时器的条件</li>\n<li>此元素需要添加定位，才能使用element.style.left</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"三、进阶语法\"><a href=\"#三、进阶语法\" class=\"headerlink\" title=\"三、进阶语法\"></a>三、进阶语法</h2><h3 id=\"1-面向对象\"><a href=\"#1-面向对象\" class=\"headerlink\" title=\"1.面向对象\"></a>1.面向对象</h3><p>面向过程（POP）：分析解决问题的步骤，用函数一步步实现并调用。</p>\n<p>面向对象（OOP）：分析问题成一个个对象，让对象之间分工与合作。</p>\n<p>面向对象的特性：</p>\n<ul>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ul>\n<h4 id=\"1-1-ES6的类和对象\"><a href=\"#1-1-ES6的类和对象\" class=\"headerlink\" title=\"1.1 ES6的类和对象\"></a>1.1 ES6的类和对象</h4><blockquote>\n<p>ES6是新一代的JS的语言规范</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//构造函数，传递参数与返回实列对象，会默认创建，new命令会自动调用</span></span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x,y</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">x</span>=x;   <span class=\"comment\">//this指向当前对象</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">y</span>=y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//添加方法</span></span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//方法体</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建实列</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xx=<span class=\"keyword\">new</span> <span class=\"title class_\">Father</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);    <span class=\"comment\">//先有类才能实列化，类的定义要在前面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//继承</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Son</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Father</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x,y</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">super</span>(x,y);   <span class=\"comment\">// 调用父类的构造函数，必须放在前面，之后再进行原本的构造函数</span></span><br><span class=\"line\">        <span class=\"comment\">//super.say();  调用父类方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> son = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>); </span><br><span class=\"line\">son.<span class=\"title function_\">say</span>();   <span class=\"comment\">//调用父类方法</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-ES5构造函数和原型\"><a href=\"#1-2-ES5构造函数和原型\" class=\"headerlink\" title=\"1.2 ES5构造函数和原型\"></a>1.2 ES5构造函数和原型</h4><blockquote>\n<p>ES5没有类，需要使用构造函数和原型模拟类的效果</p>\n</blockquote>\n<p>静态成员：在构造函数外，对构造函数的属性直接赋值的。不能实例化访问。<br>实例成员：在构造函数内定义的。只能实例化访问。</p>\n<p>后面感觉重要了再补，略。。。。</p>\n<h4 id=\"1-3-ES5新增方法\"><a href=\"#1-3-ES5新增方法\" class=\"headerlink\" title=\"1.3 ES5新增方法\"></a>1.3 ES5新增方法</h4><ul>\n<li>数组方法<ul>\n<li>forEach()<ul>\n<li>功能：遍历数组</li>\n<li><code>array.forEach(function(currentValue,index,arr))</code></li>\n<li>currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身</li>\n</ul>\n</li>\n<li>map()</li>\n<li>filter()<ul>\n<li>功能：检查数组中符合条件的所有元素，返回新数组</li>\n<li><code>array.filter(function(currentValue,index,arr))</code></li>\n<li>currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身</li>\n</ul>\n</li>\n<li>some()<ul>\n<li>功能：检查数组中是否有符合条件的元素，有返回true，否则返回false</li>\n<li><code>array.filter(function(currentValue,index,arr))</code></li>\n<li>currentValue：数组当前的值、index：数组当前索引、arr：数组对象本身</li>\n</ul>\n</li>\n<li>every()</li>\n</ul>\n</li>\n<li>字符串方法<ul>\n<li>trim()<ul>\n<li>功能：会从一个字符串的两端删除空白字符，返回新的字符串。</li>\n<li><code>str.trim()</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>对象方法<ul>\n<li>defineProperty()<ul>\n<li>功能：定义对象中新属性或修改原有的属性。</li>\n<li><code>Object.defineProperty(obj,prop,descriptor)</code></li>\n<li>obj：目标对象、prop：需定义或修改的属性的名字、descriptor：目标属性所拥有的特性</li>\n<li>第三参数descriptor说明，以对象的形式{}书写：<ul>\n<li>value：设置属性的值，默认为underfined</li>\n<li>writable：值是否可以重写，默认为false</li>\n<li>enumerable：目标属性是否可以被枚举，默认为false</li>\n<li>configurable：目标属性是否可以被删除或是否可以再次修改特性。默认false</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-函数进阶\"><a href=\"#1-4-函数进阶\" class=\"headerlink\" title=\"1.4 函数进阶\"></a>1.4 函数进阶</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 自定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//2.函数表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fun = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//3.利用new Function(&#x27;参数1&#x27;,&#x27;参数2&#x27;,&#x27;函数体&#x27;);</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f=<span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;console.log(a+b)&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>更改this指向：</p>\n<ul>\n<li>call()<ul>\n<li><code>对象.call(thisArg[,arg1,arg2,...])</code></li>\n<li>可以修改对象中this指向对象thisArg。可以任意传递其他参数。</li>\n</ul>\n</li>\n<li>apply()<ul>\n<li><code>对象.apply(thisArg[,argsArray])</code></li>\n<li>可以修改对象中this指向对象thisArg。想要传递参数必须为数组。</li>\n</ul>\n</li>\n<li>bind()<ul>\n<li><code>对象.bind(thisArg[,arg1,arg2,...])</code></li>\n<li>该方法不会调用函数，会返回改造完的新函数。</li>\n</ul>\n</li>\n</ul>\n<p>严格模式：</p>\n<ol>\n<li>消除js语法的一些不合理地方</li>\n<li>消除代码的不安全地方</li>\n<li>提高编译器效率，增加运行速度</li>\n<li>为ES6做铺垫，禁用一些保留字：class等。</li>\n</ol>\n<p>开启严格模式：在所有语句前添加<code>&quot;use strict&quot;;</code></p>\n<p>严格模式的改变：</p>\n<ul>\n<li>变量<ul>\n<li>变量必须先声明再使用</li>\n<li>全局作用中函数中this是undefined</li>\n<li>定时器的this指向window</li>\n<li>事件和对象的this指向调用者</li>\n</ul>\n</li>\n<li>函数<ul>\n<li>不能有重名的参数</li>\n<li>不允许在非函数的代码块内声明函数</li>\n</ul>\n</li>\n</ul>\n<p>高阶函数</p>\n<ul>\n<li>以函数为参数的函数是高阶函数。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">    callback&amp;&amp;<span class=\"title function_\">callback</span>(); <span class=\"comment\">//调用函数</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>以函数为返回值的函数是高阶函数。</li>\n</ul>\n<p>闭包：有权访问另一个函数作用域中变量的函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>)&#123;  <span class=\"comment\">//闭包</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fun;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f= <span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"title function_\">f</span>(); <span class=\"comment\">//外面作用域访问内部变量，延长局部变量的作用范围</span></span><br></pre></td></tr></table></figure>\n\n<p>递归函数：函数内部自己调用自己。</p>\n<ul>\n<li>浅拷贝：只能拷贝一层数据，更深层次的数据只能拷贝引用。<ul>\n<li><code>Object.assign(target,...sources)</code></li>\n</ul>\n</li>\n<li>深拷贝：拷贝多层，每一级别都会拷贝。</li>\n</ul>\n<h4 id=\"1-5-正则表达式\"><a href=\"#1-5-正则表达式\" class=\"headerlink\" title=\"1.5 正则表达式\"></a>1.5 正则表达式</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.调用RegExp对象来创建正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> regexp=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/123/</span>)</span><br><span class=\"line\"><span class=\"comment\">//2.利用字面量创建正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> regexp=<span class=\"regexp\">/123/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(regexp.<span class=\"title function_\">test</span>(<span class=\"number\">123</span>)); <span class=\"comment\">//判断内容是否符合正则表达式</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>边界符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td>表示匹配行首的文本</td>\n</tr>\n<tr>\n<td>$</td>\n<td>表示匹配行尾的文本</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>表示任意匹配一次中括号内的文本</td>\n</tr>\n<tr>\n<td>[^]</td>\n<td>表示取反，不匹配文本内容</td>\n</tr>\n</tbody></table>\n<ul>\n<li>量词符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>*</td>\n<td>重复零次或更多次</td>\n</tr>\n<tr>\n<td>+</td>\n<td>重复一次或更多次</td>\n</tr>\n<tr>\n<td>？</td>\n<td>重复零次或一次</td>\n</tr>\n<tr>\n<td>{n}</td>\n<td>重复n次</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td>重复n次或更多次</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td>重复n到m次</td>\n</tr>\n</tbody></table>\n<ul>\n<li>预定义</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>\\d</td>\n<td>匹配0-9之间的任一数字</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>匹配0-9之外的字符</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配任意字母、数字、下划线</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>匹配字母、数字、下划线之外的字符</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配空格</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>匹配非空格符</td>\n</tr>\n</tbody></table>\n<p><code>字符串.replace(正则表达式,要替换的字符串)</code>方法批量替换字符串。</p>\n<p>switch修饰符：</p>\n<ul>\n<li><code>/正则表达式/[switch]</code></li>\n<li>g：全局匹配</li>\n<li>i：忽略大小写</li>\n<li>gi：全局匹配+忽略大小写</li>\n</ul>\n<h4 id=\"1-6-ES6语法\"><a href=\"#1-6-ES6语法\" class=\"headerlink\" title=\"1.6 ES6语法\"></a>1.6 ES6语法</h4><ul>\n<li><code>let</code> 声明的变量具有块级作用域，具有暂时性死区（让块内变量与全局隔离）</li>\n<li><code>const</code>声明常量时必须赋值，不能更改，具有块级作用域</li>\n<li>解构赋值<ul>\n<li><code>let [a,b,c] = [1,2,3];</code>  按照一一对应关系对从数组对变量赋值</li>\n<li><code>let &#123;name,age&#125;=person;</code> 按照属性从对象中进行匹配并赋值给变量</li>\n</ul>\n</li>\n<li><code>()=&gt;&#123;&#125;</code> 箭头函数，类似匿名函数，但是没有自己的this</li>\n<li>剩余参数<code>(参数1,...数组名)</code>，接收多余的参数</li>\n<li>扩展运算符<code>...数组名</code>：可以将数组拆分成以逗号分隔的参数。</li>\n<li><code>Array.from()</code>将可遍历的对象转化为数组</li>\n<li><code>Array.find()</code> 找到第一个符合条件的数组成员，没有找到返回undefined</li>\n<li><code>Array.findIndex()</code> 找到第一个符合条件的数组成员的索引，没有返回-1</li>\n<li><code>数组.includes()</code> 查找数组是否包含值，返回布尔值</li>\n<li>模板字符串<ul>\n<li>使用<code>``</code>符号，可以利用<code>$&#123;变量/函数&#125;</code>添加字符串在字符串的任意位置</li>\n</ul>\n</li>\n<li><code>字符串.startsWith(字符串1)</code> 判断字符串头部是否有字符串1</li>\n<li><code>字符串.endsWith(字符串1)</code> 判断字符串尾部是否有字符串1</li>\n<li><code>字符串.repeat(n)</code>重复字符串n次，并返回新的字符串</li>\n<li>参数默认值<code>function add(a,b=1)&#123; return a+b;&#125;</code></li>\n</ul>\n<p><strong>Set</strong>集合，类似数组，但是成员唯一</p>\n<ul>\n<li><code>let s =new Set();</code> <code>let s =new Set([1,2,3,4,4]);</code></li>\n<li><code>size</code>属性，返回集合的个数</li>\n<li><code>add()</code>方法，增加元素</li>\n<li><code>delete()</code>方法，删除元素，返回布尔值</li>\n<li><code>has()</code>方法，检查是否包含某个元素，返回布尔值</li>\n<li><code>clear()</code>方法，清空Set</li>\n</ul>\n<p><strong>Map</strong>键值对集合，键不限于字符串</p>\n<ul>\n<li><code>let m=new Map();</code></li>\n<li><code>size</code>属性，返回集合的个数</li>\n<li><code>set()</code>方法，增加元素</li>\n<li><code>get()</code>方法，根据键返回值</li>\n<li><code>clear()</code>方法，清空Map</li>\n<li><code>has()</code>方法，检查是否包含某个元素，返回布尔值</li>\n</ul>\n<p><strong>Symbol</strong>数据类型<br>特点：</p>\n<ol>\n<li>Symbol值唯一</li>\n<li>Symbol不能与其他数据运算</li>\n<li>Symbol定义对象属性不能使用for…in遍历</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建Symbol</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"title class_\">Symbol</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> s1 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;zs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> s2 = <span class=\"title class_\">Symbol</span>.<span class=\"title function_\">for</span>(<span class=\"string\">&#x27;zs&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//安全向未知对象中添加新的方法</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> game=&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> methods=&#123;</span><br><span class=\"line\">    <span class=\"attr\">up</span>: <span class=\"title class_\">Symbol</span>(),</span><br><span class=\"line\">    <span class=\"attr\">down</span>: <span class=\"title class_\">Symbol</span>()</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">game[methods.<span class=\"property\">up</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;go to up&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">game[methods.<span class=\"property\">down</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;go to down&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//=================</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> game=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;lrx&#x27;</span>,</span><br><span class=\"line\">    [<span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;say&#x27;</span>)]: <span class=\"function\">()=&gt;</span><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Symbol的内置属性，控制对象在特定场景中的表现</p>\n<p><strong>迭代器</strong>：<em>Iterator</em>主要提供给<em>for….of</em></p>\n<ul>\n<li><em>for…..in</em> 访问键(在对象中访问属性) ，<em>for….of</em> 访问值</li>\n<li>工作原理：<ul>\n<li>创建一个指针对象，指向当前数据结构的起始位置</li>\n<li>第一次调用next方法，指针自动指向第一个成员</li>\n<li>不断调用next方法，指针一直后移，直到指向最后一个成员</li>\n<li>每次调用next方法，返回一个包含value和done属性的对象</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> game=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Night&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">arr</span>: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;anight&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;bnight&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;cnight&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;knight&#x27;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    [<span class=\"title class_\">Symbol</span>.<span class=\"property\">iterator</span>]()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _this=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">next</span>: <span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(index&lt;_this.<span class=\"property\">arr</span>.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">const</span> res=&#123;<span class=\"attr\">value</span>: _this.<span class=\"property\">arr</span>[index],<span class=\"attr\">done</span>: <span class=\"literal\">false</span>&#125;;</span><br><span class=\"line\">                    index++;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"attr\">value</span>: <span class=\"literal\">undefined</span>,<span class=\"attr\">done</span>: <span class=\"literal\">true</span>&#125;;  <span class=\"comment\">//done为true说明到底了</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>生成器</strong>：是一种异步编程解决方案，是一种特殊函数</p>\n<blockquote>\n<p>异步编程（文件操作、网络操作、数据库操作）—&gt;纯回调函数</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//需求：1s 后输出111，2s后输出222，3s后输出333</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">one</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">111</span>);</span><br><span class=\"line\">        iterator.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">two</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">222</span>);</span><br><span class=\"line\">        iterator.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;,<span class=\"number\">2000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">three</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">333</span>);</span><br><span class=\"line\">        iterator.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;,<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> *<span class=\"title function_\">gen</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"title function_\">one</span>();</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"title function_\">two</span>();</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"title function_\">three</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> iterator = <span class=\"title function_\">gen</span>();</span><br><span class=\"line\">iterator.<span class=\"title function_\">next</span>();   <span class=\"comment\">//next里面可以传参，在yield位置接收</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-7-异步编程\"><a href=\"#1-7-异步编程\" class=\"headerlink\" title=\"1.7 异步编程\"></a>1.7 异步编程</h4><p><strong>JS是单线程的语言</strong></p>\n<ul>\n<li>同步任务<ul>\n<li>非耗时任务</li>\n<li>只有前面任务执行完成后，才能执行后面的任务</li>\n</ul>\n</li>\n<li>异步任务<ul>\n<li>耗时任务，异步任务有JS的宿主环境执行</li>\n<li>当异步任务执行完成后，会通知JS主线程执行异步任务的回调函数</li>\n</ul>\n</li>\n</ul>\n<p><strong>Promise</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve,reject</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// let data=&#x27;数据库数据&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// resolve(data)              //成功调用</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> err = <span class=\"string\">&#x27;数据读取失败&#x27;</span></span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(err)                        <span class=\"comment\">//失败调用</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">p.<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">value</span>)&#123;  <span class=\"comment\">//成功调用</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value)</span><br><span class=\"line\">&#125;,<span class=\"keyword\">function</span>(<span class=\"params\">reason</span>)&#123;   <span class=\"comment\">//失败调用</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reason)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>async&#x2F;await</strong></p>\n<p>用来简化Promise的异步操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getAllFile</span>(<span class=\"params\"></span>)&#123;   <span class=\"comment\">// 存在 await的函数， 必须由 async 修饰</span></span><br><span class=\"line\">    <span class=\"comment\">// 会等待函数执行完成，而且await会把Promise对象中的结果拆解出来</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> r1 = <span class=\"keyword\">await</span> thenFs.<span class=\"title function_\">readFile</span>(<span class=\"string\">&#x27;./files/1.txt&#x27;</span>,<span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// await 之前的方法都会同步执行，当到达await方法后，会把await后面的代码都转到异步执行队列中</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> r2 = <span class=\"keyword\">await</span> thenFs.<span class=\"title function_\">readFile</span>(<span class=\"string\">&#x27;./files/1.txt&#x27;</span>,<span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、Webpack\"><a href=\"#四、Webpack\" class=\"headerlink\" title=\"四、Webpack\"></a>四、Webpack</h2><p>前端工程化：把前端开发所需的工具、技术、流程、经验进行规范化、标准化。即：模块化、组件化、规范化、自动化。</p>\n<h3 id=\"1-基本使用\"><a href=\"#1-基本使用\" class=\"headerlink\" title=\"1.基本使用\"></a>1.基本使用</h3><p>webpack是前端项目工程化的具体解决方案。</p>\n<p>主要功能：代码压缩混淆、处理浏览器端JavaScript的兼容性、性能优化等功能。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在项目文件夹内初始化</span></span><br><span class=\"line\">npm init</span><br><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">npm i webpack webpack-cli -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>package.json</code>文件中添加下面配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n\n<p>在主目录新建<code>webpack.config.js</code>文件，添加下面内容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>:<span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">运行</span></span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<p>webpack会把js代码全部转化为兼容模式放在<code>./dist/main.js</code>文件中，后续只需要在html中导入该文件就行了。</p>\n<h3 id=\"2-进阶使用\"><a href=\"#2-进阶使用\" class=\"headerlink\" title=\"2.进阶使用\"></a>2.进阶使用</h3><h4 id=\"2-1-mode可选择值\"><a href=\"#2-1-mode可选择值\" class=\"headerlink\" title=\"2.1 mode可选择值\"></a>2.1 mode可选择值</h4><ol>\n<li>development<ol>\n<li>开发环境</li>\n<li>不会对打包生成文件进行代码压缩和性能优化</li>\n<li>打包速度快，适合开发使用</li>\n</ol>\n</li>\n<li>production<ol>\n<li>生产环境</li>\n<li>会对打包生成文件进行代码压缩和性能优化</li>\n<li>打包速度慢，仅适合在项目发布阶段使用</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"2-2-默认约定\"><a href=\"#2-2-默认约定\" class=\"headerlink\" title=\"2.2 默认约定\"></a>2.2 默认约定</h4><ol>\n<li>默认打包入口文件<code>src/index.js</code></li>\n<li>默认输出文件路径<code>dist/main.js</code></li>\n<li>自定义打包入口文件<code>entry: &quot;文件路径&quot;</code></li>\n<li>自定义输出文件路径<code>output: &#123; path: &quot;文件路径&quot;, filename: &quot;输出的文件名&quot;&#125;</code></li>\n</ol>\n<h4 id=\"2-3-插件\"><a href=\"#2-3-插件\" class=\"headerlink\" title=\"2.3 插件\"></a>2.3 插件</h4><ol>\n<li>webpack-dev-server<ol>\n<li>类型nodemon工具</li>\n<li>每当修改源码后，webpack都会自动进行项目的打包与构建</li>\n</ol>\n</li>\n<li>html-webpack-plugin<ol>\n<li>类似模板引擎</li>\n<li>可以自定义index.html的内容</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">npm i webpack-dev-server -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>package.json</code>文件中修改下面配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack serve&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">npm i html-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>中添加下面配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> htmlPlugin = <span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">&#x27;./src/index.html&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [htmlPlugin],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动，html-webpack-plugin会把index.html复制到内存中，可以直接访问 http://localhost:8080/</span></span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<p>为了解决每次打包完成都需要手动打开<code>http://localhost:8080/</code>地址，需要对<code>webpack.config.js</code>文件的节点进行额外的配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">port</span>: <span class=\"number\">8002</span>,</span><br><span class=\"line\">        <span class=\"attr\">host</span>: <span class=\"string\">&quot;127.0.0.1&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">open</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-Loader加载器\"><a href=\"#2-4-Loader加载器\" class=\"headerlink\" title=\"2.4 Loader加载器\"></a>2.4 Loader加载器</h4><p>webpack默认只处理js文件，如果需要处理其他文件需要loader加载器的作用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">begin(将要被webpack&lt;/br&gt;打包处理的模块)--&gt;one&#123;是否为&lt;/br&gt;JS模块&#125;</span><br><span class=\"line\">one--是--&gt;twoJS&#123;是否包含&lt;/br&gt;高级JS语法&#125;</span><br><span class=\"line\">one--否--&gt;twoLoader&#123;是否配置了&lt;/br&gt;对应的Loader&#125;</span><br><span class=\"line\">twoJS--是--&gt;threeBabel&#123;是否配置&lt;/br&gt;了babel&#125;</span><br><span class=\"line\">twoJS--否--&gt;webpack进行处理</span><br><span class=\"line\">twoLoader--是--&gt;four1[调用loader处理]</span><br><span class=\"line\">twoLoader--否--&gt;four2[报错]</span><br><span class=\"line\">threeBabel--是--&gt;调用loader处理</span><br><span class=\"line\">threeBabel--否--&gt;报错</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>打包处理CSS文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装css的loader</span></span><br><span class=\"line\">npm i style-loader css-loader -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>, <span class=\"attr\">use</span>: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打包Less文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装less的loader</span></span><br><span class=\"line\">npm i less-loader less -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>, <span class=\"attr\">use</span>: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>, <span class=\"string\">&#x27;less-loader&#x27;</span> ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打包url路径相关文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装loader</span></span><br><span class=\"line\">npm i url-loader file-loader -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//test: /\\.jpg|png|gif$/, use: &#x27;url-loader&#x27; </span></span><br><span class=\"line\">                <span class=\"comment\">//test: /\\.jpg|png|gif$/, use: &#x27;url-loader?limit=222229&#x27; 限制图片大小，单位byte</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.jpg|png|gif$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">limit</span>: <span class=\"number\">222229</span>,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打包处理JS高级语法</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装loader</span></span><br><span class=\"line\">npm i babel-loader @babel/core @babel/plugin-proposal-class-properties -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向 webpack.config.js 文件添加内容</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span>, <span class=\"comment\">//排除第三方库</span></span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">plugins</span>: [<span class=\"string\">&#x27;@babel/plugin-proposal-class-properties&#x27;</span>]</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2-5-打包发布\"><a href=\"#2-5-打包发布\" class=\"headerlink\" title=\"2.5 打包发布\"></a>2.5 打包发布</h4><ol>\n<li>开发环境下，打包生成的文件存放与内存中，无法获取到最终打包生成的文件</li>\n<li>开发环境下，没有对代码进行压缩和性能优化</li>\n</ol>\n<p>在<code>package.json</code>文件的script节点下添加build命令：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;script&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack --mode production&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>对打包路径进行配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;./dist&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/bundle.js&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.jpg|png|gif$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">limit</span>: <span class=\"number\">10240</span>,</span><br><span class=\"line\">                        <span class=\"attr\">outputPath</span>: <span class=\"string\">&#x27;images/&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>清除旧文件插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">npm i clean-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>配置插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">CleanWebpackPlugin</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> cleanPlugin = <span class=\"keyword\">new</span> <span class=\"title class_\">CleanWebpackPlugin</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [htmlPlugin,cleanPlugin],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>webpack.config.js</code>配置Source Map来在调试中查找错误文件</p>\n<ol>\n<li>开发环境<ol>\n<li>把devtool的值设置为eval-source-map</li>\n<li>可以定位到错误行</li>\n</ol>\n</li>\n<li>生产环境<ol>\n<li>关闭source map，将devtool值设置为nosources-source-map</li>\n<li>提高网站安全性</li>\n</ol>\n</li>\n</ol>\n"},{"title":"Node.js快速入门","img":"https://images.pexels.com/photos/10567277/pexels-photo-10567277.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500","excerpt":"web应用的后端开发，其中有express后端开发框架","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-27T11:57:18.000Z","_content":"\n# Node.js快速入门\n\n## 一、Node.js\n\n### 1.前言\n\n本笔记学习视频： <https://www.bilibili.com/video/BV1a34y167AZ>\n\n[Node.js](https://nodejs.org/zh-cn/)是一个基于Chrome V8引擎的JavaScript运行环境。\n\nNode.js是Javascript的后端运行环境，无法调用DOM和BOM等浏览器内置API。\n\n```bash\n#执行js文件\nnode \"要执行的js文件\"\n```\n\n### 2.模块\n\n#### 2.1 fs文件系统模块\n\nNode.js提供的用来操作文件的模块。\n\n```js\n//导入fs模块\nconst fs=require('fs')\n```\n\n* `fs.readFile(path[,options],callback)`方法，读取指定文件的内容\n  * 参数：文件路径、表示以什么编码格式读取文件、文件读取完成后，通过回调函数拿到读取的结果。\n  * 回调函数的参数err对象是否为null，是读取成功，否则读取失败`err.message`返回失败信息。\n* `fs.writeFile(file,data[,options],callback)`方法，用来向指定文件写入内容\n  * 参数：指定存放的文件路径、表示写入的内容、表示写入格式、写入完成后的回调函数。\n  * 写入成功err为null，否则为错误对象。\n\n#### 2.2 path路径模块\n\n```js\n//导入path模块\nconst path=require('path')\n```\n\n* `path.join([...path])`方法，将多个路径片段拼接成完整的路径\n  * 参数：多个路径字符串\n* `path.basename(path[,ext])`方法，从路径解析文件名\n  * 参数：路径、文件扩展名\n\n#### 2.3 http模块\n\n用来创建web服务器的模块。\n\n创建web服务器步骤：\n\n```js\n//1.导入http模块\nconst http=require('http')\n//2.创建http实列\nconst server=http.createServer()\n//3.绑定request事件\nserver.on('request',function(req,res){\n  console.log('客户端请求了服务器')\n  //req是请求对象，包含了与客户端相关的数据和属性\n  const url = req.url   //客户端请求的URL地址\n  const method = req.method  // 客户端的method请求类型\n  const str = '你的请求地址为'+url+'，请求类型是'+method\n  res.setHeader('Content-Type','text/html; charset=utf-8')  //防止中文乱码\n  res.end(str) //向客户端发送指定内容，并结束这次请求的处理过程\n})\n//4.启动服务器\nserver.listen(8008,()=>{\n  console.log('http server running at http://127.0.0.1:8008')\n})\n```\n\n根据url响应不同的html内容：\n\n```js\nserver.on('request',(req,res)=>{\n  const url = req.url \n  let content = '<h1>404 Not found!<h1>' //默认输出内容\n  if(url==='/'||url==='/index.html'){\n    content='<h1>首页<h1>'\n  }else if(url==='/about.html'){\n    content='<h1>关于页面<h1>'\n  }\n  res.setHeader('Content-Type','text/html; charset=utf-8') \n  res.end(content) \n})\n```\n\n#### 2.4 模块化\n\n模块化是指解决一个复杂问题时，自顶向下逐层把系统划分成若干模块的过程。\n优点：\n\n1. 提高代码的复用性\n2. 提高代码的可维护性\n3. 可以实现按需加载\n\n分类：\n\n* 内置模块：Node.js提供的模块\n* 自定义模块：用户自己创建的js文件\n* 第三方模块：第三方开发出来的模块，需要先下载\n\n加载模块：\n\n```js\nconst fs=require('fs')  //加载内置模块，直接写名字\nconst fs=require('./custom.js') //加载用户自定义模块，需要添加路径\nconst fs=require('moment') //加载第三方模块，直接写名字\n```\n\n注意：`require()`方法加载模块，就会执行模块\n\n模块作用域：\n自定义模块的变量、方法，只能在当前模块内被访问。\n\n每个js模块都有一个module对象，它里面存储了和当前模块有关的信息。\n\n`moudle.exports`对象，将模块内的成员共享出去。\n\n```js\n//1.挂载属性\nmoudle.exports.uname='zs';\nmoudle.exports.sayHello=function(){\n  console.log('hello '+uname);\n}\n\n//2.定义新对象\nmodule.exports = {\n    uname: 'zs',\n    sayHello(){\n        console.log('hello '+uname);\n    }\n}\n```\n\n简化代码使用`exports`对象，与`moudle.exports`对象用法一样，且两者指向一样。\n\n#### 2.5 包\n\n**包**是指第三方模块。\n`node_modules`文件夹存放项目安装的包，`package-lock.json`存放包的配置文件\n\n```bash\n#安装全局包\nnpm install 包名 -g\n#安装核心依赖包\nnpm install 包名\n#安装开发依赖包\nnpm install 包名 -D\n#安装指定版本的包\nnpm install 包名@2.22.2\n# 版本号：第一位数字：大版本、第二位数字：功能版本、第三位数字：bug修复版本 \n#卸载核心依赖包\nnpm uninstall 包名\n#卸载全局包\nnpm uninstall 包名 -g\n```\n\nnpm规定，在项目根目录中，必须提供一个叫做`package.json`的包管理配置文件，记录一些项目信息\n\n* 项目的名称、版本号、描述等\n* 项目中都用到了哪些包\n* 哪些在开发中使用\n* 哪些在开发和部署都要使用\n\n```bash\n#新建项目时，创建package.json文件\nnpm init -y\n```\n\n注意：\n\n* 项目所在的文件夹路径只能为英文\n* 运行npm install安装包时，会自动向`package.json`添加信息\n* 运行npm uninstall卸载包时，会自动删除`package.json`中包相关信息\n* 节点dependencies会记录开发和部署都会用到的包\n* 节点devDependencies记录仅开发时用的包\n\n切换国内源下载包\n\n```bash\n# 查看当前包的下载源\nnpm config get registry\n# 切换国内源\nnpm config set registry=https://registry.npm.taobao.org/\n```\n\n**模块加载**:\n\n* 模块在第一次加载后会被缓存\n* 无论什么模块，都会先从缓存加载\n* 被加载目录先查找`package.json`的文件，并寻找`main`属性，作为`require()`加载入口\n* 如果没有`package.json`文件，查找该目录下的`index.js`文件\n* 如果没有找到`index.js`文件，会输出错误信息\n\n### 3.Express\n\n> 基于Node.js平台，快速、开发、极简的Web开发框架\n\n#### 3.1 基本使用\n\n```js\n//导入express\nconst express=require('express')\n//创建web服务器\nconst app=express()\n//启动web服务器\napp.listen(80,()=>{\n    console.log('express server running at http://127.0.0.1');\n})\n```\n\n监听请求\n\n* GET请求\n\n```js\napp.get('/user/:id',function(req,res){\n  //函数\n  //req请求对象\n  //res响应对象\n  res.send() //把内容响应给客户端\n  req.query() //访问客户端通过查询字符串的形式发送到服务器的参数\n  req.params   // 访问url中，通过: 匹配到动态参数\n})\n```\n\n* POST请求\n\n```js\napp.post('url',function(req,res){\n  //函数\n  //req请求对象\n  //res响应对象\n  res.send() //把内容响应给客户端\n})\n```\n\n```js\n//托管静态资源，让文件夹都能让人访问，但存放静态资源的目录名不会出现在url中\napp.use(express.static('文件夹'))\n//可以在url添加文件夹1的名称来访问内容\napp.use('文件夹1',express.static('文件夹2'))\n```\n\n#### 3.2 路由\n\n> Express 中，客户端请求与服务器处理函数之间的映射关系。\n\nExpress的路由分为3部分，分别是请求的类型、请求的URL、处理函数\n\n为了方便管理需要对路由进行模块化：\n\n1. 创建路由模块的js文件\n2. 调用`express.Router()`函数创建路由对象\n3. 向路由对象上挂载路由\n4. 使用`module.exports`向外共享路由对象\n5. 使用`app.use()`函数注册路由模块\n\n```js\nvar express = require('express')\nvar router = express.Router()\n\n//挂载路由\nrouter.get('/user',(req,res)=>{\n  res.send('GET user request')\n})\n\nrouter.post('/user',(req,res)=>{\n  res.send('POST user request')\n})\n\n//向外导出路由对象\nmodule.exports = router\n```\n\n#### 3.3 中间件\n\n当一个请求到达Express的服务器后，可以连续调用多个中间件，从而对这次请求进行预处理。\n\n中间件函数的形参必须包含next参数。\n\nnext()函数把流转关系转到下一个中间件。\n\n```js\n//中间件函数\nconst mw = (req,res,next)=>{\n  next()   //转到下一个中间件，没有就转给路由\n}\n```\n\n调用`app.use(中间件函数)`，可以定义一个全局生效的中间件。\n\n多个中间件共享同一个**req**和**res**，可以在上游添加自定义的属性或者方法，给下游使用\n\n局部中间件：把中间件对象放在路由的url与处理函数之间，该中间件只对这个路由产生效果。\n\n分类：\n\n1. 应用级别的中间件：绑定到app实例上的中间件\n2. 路由级别的中间件：绑定到router实例上的中间件\n3. 错误级别的中间件：专门捕获项目的抛出的异常错误（需要放在所有路由之后），必须有四个形参，(err,req,res,next)\n4. Express内置的中间件\n   1. `express.static`快速托管静态资源\n   2. `express.json`解析JSON格式的请求体数据\n   3. `express.urlencoded`解析url格式的请求数据\n5. 第三方的中间件\n\n自定义中间件：\n\n```js\nconst qs = require('querystring')\napp.use((req,res,next)=>{\n  let str =''\n  req.on('data',(chunk)=>{   //监听data事件\n    str += chunk\n  })\n  req.end('end',()=>{  //监听end事件\n    console.log(str)\n    //查询字符串解析成对象\n    const body = qs.parse(str)\n    console.log(body)\n    // 挂载解析属性\n    req.body = body\n    next()\n  })\n})\n```\n\n#### 3.4 接口\n\n```js\n//创建服务器\nconst express=require('express')\nconst app=express()\n\n//解析post请求的body\napp.use(express.urlencoded({ extended: false }))\n\n//配置跨域cors中间件\nconst cors = require('cors')\napp.use(cors())\n\nconst router=require('./router')\napp.use('/api',router)\n\n\napp.listen(8008,()=>{\n    console.log('express server running at http://127.0.0.1:8008');\n})\n\n```\n\n```js\nconst express = require('express')\nconst router = express.Router()\n\n//GET接口\nrouter.get('/get',(req,res)=>{\n  const query=req.query\n  res.send({\n    status: 0,\n    msg: 'GET 请求成功',\n    data: query\n  })\n})\n\n//POST接口\nrouter.post('/post',(req,res)=>{\n  const body=req.body\n  res.send({\n    status: 0,\n    msg: 'POST 请求成功',\n    data: body\n  })\n})\n\n//向外导出路由对象\nmodule.exports = router\n```\n\n> 跨域问题：CORS和JSONP\nCORS实现跨域响应步骤：\n\n1. 安装cors中间件：`npm i cors`\n2. 使用`const cors=require('cors')`导入中间件，要在路由之前\n3. 在路由之前调用配置中间件`app.use(cors())`\n\n### 4.数据库\n\n#### 4.1 MySQL使用入门\n\n结构：数据库、数据表、数据行、字段（列）\n\nSQL：结构化查询语言，专门访问和处理**关系数据库**。\n\nsql的关键字大小写不敏感\n\n```sql\n--向表中插入数据\nINSERT INTO 表名称(列名称)  values(数据)\n```\n\n```sql\n-- 删除表中某一行数据\nDELETE FROM 表名称  WHERE 列名称 = 某值\n```\n\n```sql\n-- 更新表中某一行某一列数据\nUPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值\n```\n\n```sql\n--从指定的表中查询所有的数据\nSELECT * FROM 表名称\n--从指定的表中查询特定列的数据，查询多个列用英文逗号隔开\nSELECT 列名称 FROM 表名称\n```\n\n**WHERE**可以添加运算符来筛选特定字段\n\n* `=`、`<>`、`>`、`<`、`>=`、`<=`、`BETWEEN`、`LIKE`\n* `AND`、`OR`运算符就是且和或，用来增加筛选条件\n\n```sql\n--按照列名称大小进行升序排序\nSELECT * FROM 表名称 ORDER BY 列名称\n--按照列名称大小进行降序排序 DESC\nSELECT * FROM 表名称 ORDER BY 列名称 DESC\n--按照列名称1进行大范围的降序排序再按照列名称2进行小范围的升序排序\nSELECT * FROM 表名称 ORDER BY 列名称1 DESC, 列名称2 ASC\n```\n\n```sql\n--统计表中列为某值的个数\nSELECT COUNT(*) FROM 表名称 WHERE 列名称 = 某值\n--统计表中列为某值的个数，并给结果起名字\nSELECT COUNT(*) AS 名称 FROM 表名称 WHERE 列名称 = 某值\n```\n\n#### 4.2 项目中连接MySQL数据库\n\n>1.安装MySQL数据库第三方模块`mysql`\n\n```bash\n#mysql数据库\nnpm i mysql\n```\n\n>2.通过mysql模块连接到MySQL数据库\n\n```js\n//导入模块\nconst mysql = require('mysql')\n//创建连接池\nconst db = mysql.createPool({\n  host: '127.0.0.1',\n  user: 'root',\n  port: 3306,\n  password: 'root',\n  database: 'mydb_01'\n})\n//检查连接正常\ndb.query('select 1',(err,res)=>{\n  if(err) return console.log(err.message)\n  console.log(res)\n})\n```\n\n>3.通过mysql模块执行SQL语句\n\n```js\nconst sqlStr = 'select * from users'\ndb.query(sqlStr,(err,res)=>{\n  if(err) return console.log(err.message)   //查询失败\n  console.log(res)   // 查询成功\n})\n\n// 插入字段\nconst user={name: 'Spuer-Man' password: '123'}\n//定义待执行的sql语句\nconst sqlStr = 'insert into users (name,password) values (?,?)'    //英文问号作为占位符\ndb.query(sqlStr,[user.name,user.password],(err,res)=>{\n  if(err) return console.log(err.message)\n  if(res.affectedRows === 1){  //判断数据是否插入成功\n    console.log('插入数据成功')\n  }\n})\n```\n\n#### 4.3 身份验证\n\n服务端渲染：在服务器动态拼接字符串数据，然后发送HTML页面\n优点：\n\n* 前端耗时少\n* 有利于SEO\n缺点：\n* 占用服务器端资源\n* 不利于前后端分离，开发效率低\n\n前后端分离：后端只负责API接口，前端使用Ajax调用接口\n优点：\n\n* 开发体验好\n* 用户体验好\n* 减轻服务器端的渲染压力\n缺点：\n* 不利于SEO\n\n**身份认证**：\n\n>1.服务端渲染：Session认证机制\n\n* HTTP请求的无状态性，每次HTTP请求都是独立的。\n* Cookie存储在浏览器中不超过4kb的字符串。不同域名的cookie各自独立，每当客户端发起请求时，会自动把当前域名下的未过期的cookie一同发送给服务器。\n* 服务器先通过响应头发送cookie给浏览器，浏览器保存cookie，浏览器再通过请求头发送cookie给服务器，服务器再响应内容。\n* cookie不具有安全性\n* session验证\n\n```js\n//使用session中间件\nconst session = require('express-session')\napp.use(\n  session({\n    secret: 'zs',\n    resave: false,\n    saveUninitialized: true\n  })\n)\n//解析提交的表单数据\napp.use(express.urlencoded{extended: false})\n//登录API接口\napp.post('/api/login',(req,res)=>{\n  //判断用户提交信息是否正确\n  if(req.body.username !== 'admin' || req.body.password !== '000000'){\n    return res.send({ status: 1,msg: '登陆失败'})\n  }\n  req.session.user = req.body\n  req.session.islogin = true\n  res.send({status: 0,msg: '登录成功'})\n})\n//取出session信息\napp.get('/api/username',(req,res)=>{\n  if(!req.session.islogin){\n    return res.send({status: 1,msg: 'failed'})\n  }\n  res.send({\n    status: 0,\n    msg: 'success',\n    username: req.session.user.username\n  })\n})\n//清除session\napp.post('/api/logout',(req,res)=>{\n  req.session.destroy()\n  res.send({status: 0,msg: '退出成功'})\n})\n```\n\n>2.前后端分离：JWT认证机制\n\n由于session需要配合cookie才能实现，而cookie默认不支持跨域访问，此时需要额外配置。\n\nJWT是最流行的跨域认证解决方案。\n服务器将用户信息加密成Token字符串，发送到客户端，客户端保存后，再发送Token，服务器把Token还原后进行身份验证。\n\nJWT的组成部分：Header（头部）、Payload（有效荷载）、Signature（签名），三者使用英文点号分割\n\nJWT放在HTTP请求头的Authorization字段中\n\n安装JWT包\n\n```bash\nnpm i jsonwebtoken express-jwt\n```\n\n```js\n//导入JWT\nconst jwt = require('jsonwebtoken')\nconst expressJwt = require('express-jwt')\n//定义secret密钥，用来加密和解密\nconst secretKey = 'my_secret_key'\n//解析token，把用户信息挂载在req.user上\napp.use(expressJwt({ secret: secretKey }).unless({ path: [/^\\/api\\//] }))\n//生成token\nconst tokenStr =jwt.sign({username: 'admin'},secretKey,{expiresIn: 60*60 })\n```\n\n### 5.在express中使用swagger写API文档\n\n#### 5.1 安装和使用swagger\n\n>方法一：使用jsdoc文档注释来生成API文档\n\n```bash\n# 安装相关工具\nnpm i swagger-ui-express\nnpm i swagger-jsdoc\n```\n\n```js\n// app.js\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerJsdoc = require('swagger-jsdoc');\nconst options = {\n    definition: {\n      openapi: '3.0.0',\n      info: {\n        title: 'Hello World',\n        version: '1.0.0',\n        description: '项目描述',\n      },\n    },\n    apis: ['./router/*.js'], //路由文件夹下面的所有js文件\n};\nconst swaggerSpec = swaggerJsdoc(options);\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n```\n\n```js\n//在路由模块前写下面的注释 \n/**\n * @swagger\n * /my/article/addcate:\n * post:\n *   tags:\n *      - 文章分类\n *   summary: 新增文章分类\n *   description: 来新增加一个文章的分类\n *   parameters:\n *      - name: name\n *        description: 文章分类名\n *        in: body\n *        required: true\n *        type: string\n *      - name: alias\n *        description: 文章分类的别名\n *        in: body\n *        required: true\n *        type: string\n *   responses:\n *      0:\n *         description: success，新增文章分类成功\n *      1:\n *         description: failed，新增文章分类失败\n */\n```\n\n> 方法二：使用json文件来写\n\n```bash\n# 安装相关工具\nnpm i swagger-ui-express\n```\n\n```js\n// app.js\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n```\n\n不熟悉语法时，使用在线的 [swagger editor](https://editor.swagger.io/) 进行API接口的编辑\n选择`File->Convert and save as JSON`，下载`swagger.json`放进项目中\n熟悉语法后，直接对`swagger.json`进行修改，不需要编辑器了\n官方文档：<https://swagger.io/docs/specification/about/>\n\n> 方法三：使用yaml文件来写\n\n其实是利用yamljs模块把yaml文件转化为json文件，如果直接写json文件，会发现json文件的所有属性都会加双引号，还有很多格式类的限制，没有yaml写起来舒服，快速。\n而且yaml文件写法才是最贴合官网的语法。\n\n```bash\n# 安装相关工具\nnpm i swagger-ui-express\nnpm i --save yamljs\n```\n\n```js\n// app.js\nconst swaggerUi = require('swagger-ui-express');\nconst YAML = require('yamljs');\nconst swaggerDocument = YAML.load('./swagger.yaml');\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n```\n\n#### 5.2 YAML\n\nYAML是一种标记语言，文件名为`.yaml`\n\n1. 大小写敏感\n2. 使用缩进标识层级关系\n3. 缩进不允许Tab，只允许空格\n4. 缩进的空格个数不重要，但是同级元素需要左对齐\n5. 注释：`#`\n6. 支持的数据类型：\n   1. 对象\n   2. 数组：使用`-`添加在元素前，表示该数组的元素，每一个数组元素都得添加。\n   3. 纯数：任意不可分的数据\n7. `|`使用换行 `>`忽略换行\n8. `$变量`标记一个属性，用`<<: *变量`来导入标记非重复的属性值\n\n#### 5.3 OpenAPI 规范\n\n* 数据类型\n\n| `type` | `format`| 评论 |\n| --- | --- | --- |\n| `integer` | `int32` | 有符号 32 位 |\n| `integer` | `int64` | 有符号 64 位 (a.k.a long) |\n| `number` | `float` |  |\n| `number` | `double` |  |\n| `string` |  |  |\n| `string` | `byte` | base64 编码字符 |\n| `string` | `binary` | 任何八位字节序列 |\n| `boolean` |  |  |\n| `string` | `date` | 由`full-date`定义 [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) |\n| `string` | `date-time` | 由`date-time`定义 [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) |\n| `string` | `password` | 提示 UI 以隐藏输入 |\n\n> URL中的相对引用\n\n除非另有说明，否则所有属于 URL 的属性都可以是 [RFC3986](https://tools.ietf.org/html/rfc3986#section-4.2) 定义的相对引用。使用[服务器对象](#66-服务器对象)中定义的 URL 作为基本 URI 来解析相对引用。\n`$ref` 中使用的相对引用按照 JSON 引用进行处理，使用当前文档的 URL 作为基本 URI。\n\n具体规范见：[OpenAPI规范英文版](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md)，[OpenAPI规范中文版](https://openapi.apifox.cn/)\n","source":"_posts/计算机/前端/Nodejs快速入门.md","raw":"---\ntitle: Node.js快速入门\nimg: https://images.pexels.com/photos/10567277/pexels-photo-10567277.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\nexcerpt: web应用的后端开发，其中有express后端开发框架\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [Node.js,前端,后端,JavaScript]\nmathjax: true\ndate: 2022-04-27 19:57:18\n---\n\n# Node.js快速入门\n\n## 一、Node.js\n\n### 1.前言\n\n本笔记学习视频： <https://www.bilibili.com/video/BV1a34y167AZ>\n\n[Node.js](https://nodejs.org/zh-cn/)是一个基于Chrome V8引擎的JavaScript运行环境。\n\nNode.js是Javascript的后端运行环境，无法调用DOM和BOM等浏览器内置API。\n\n```bash\n#执行js文件\nnode \"要执行的js文件\"\n```\n\n### 2.模块\n\n#### 2.1 fs文件系统模块\n\nNode.js提供的用来操作文件的模块。\n\n```js\n//导入fs模块\nconst fs=require('fs')\n```\n\n* `fs.readFile(path[,options],callback)`方法，读取指定文件的内容\n  * 参数：文件路径、表示以什么编码格式读取文件、文件读取完成后，通过回调函数拿到读取的结果。\n  * 回调函数的参数err对象是否为null，是读取成功，否则读取失败`err.message`返回失败信息。\n* `fs.writeFile(file,data[,options],callback)`方法，用来向指定文件写入内容\n  * 参数：指定存放的文件路径、表示写入的内容、表示写入格式、写入完成后的回调函数。\n  * 写入成功err为null，否则为错误对象。\n\n#### 2.2 path路径模块\n\n```js\n//导入path模块\nconst path=require('path')\n```\n\n* `path.join([...path])`方法，将多个路径片段拼接成完整的路径\n  * 参数：多个路径字符串\n* `path.basename(path[,ext])`方法，从路径解析文件名\n  * 参数：路径、文件扩展名\n\n#### 2.3 http模块\n\n用来创建web服务器的模块。\n\n创建web服务器步骤：\n\n```js\n//1.导入http模块\nconst http=require('http')\n//2.创建http实列\nconst server=http.createServer()\n//3.绑定request事件\nserver.on('request',function(req,res){\n  console.log('客户端请求了服务器')\n  //req是请求对象，包含了与客户端相关的数据和属性\n  const url = req.url   //客户端请求的URL地址\n  const method = req.method  // 客户端的method请求类型\n  const str = '你的请求地址为'+url+'，请求类型是'+method\n  res.setHeader('Content-Type','text/html; charset=utf-8')  //防止中文乱码\n  res.end(str) //向客户端发送指定内容，并结束这次请求的处理过程\n})\n//4.启动服务器\nserver.listen(8008,()=>{\n  console.log('http server running at http://127.0.0.1:8008')\n})\n```\n\n根据url响应不同的html内容：\n\n```js\nserver.on('request',(req,res)=>{\n  const url = req.url \n  let content = '<h1>404 Not found!<h1>' //默认输出内容\n  if(url==='/'||url==='/index.html'){\n    content='<h1>首页<h1>'\n  }else if(url==='/about.html'){\n    content='<h1>关于页面<h1>'\n  }\n  res.setHeader('Content-Type','text/html; charset=utf-8') \n  res.end(content) \n})\n```\n\n#### 2.4 模块化\n\n模块化是指解决一个复杂问题时，自顶向下逐层把系统划分成若干模块的过程。\n优点：\n\n1. 提高代码的复用性\n2. 提高代码的可维护性\n3. 可以实现按需加载\n\n分类：\n\n* 内置模块：Node.js提供的模块\n* 自定义模块：用户自己创建的js文件\n* 第三方模块：第三方开发出来的模块，需要先下载\n\n加载模块：\n\n```js\nconst fs=require('fs')  //加载内置模块，直接写名字\nconst fs=require('./custom.js') //加载用户自定义模块，需要添加路径\nconst fs=require('moment') //加载第三方模块，直接写名字\n```\n\n注意：`require()`方法加载模块，就会执行模块\n\n模块作用域：\n自定义模块的变量、方法，只能在当前模块内被访问。\n\n每个js模块都有一个module对象，它里面存储了和当前模块有关的信息。\n\n`moudle.exports`对象，将模块内的成员共享出去。\n\n```js\n//1.挂载属性\nmoudle.exports.uname='zs';\nmoudle.exports.sayHello=function(){\n  console.log('hello '+uname);\n}\n\n//2.定义新对象\nmodule.exports = {\n    uname: 'zs',\n    sayHello(){\n        console.log('hello '+uname);\n    }\n}\n```\n\n简化代码使用`exports`对象，与`moudle.exports`对象用法一样，且两者指向一样。\n\n#### 2.5 包\n\n**包**是指第三方模块。\n`node_modules`文件夹存放项目安装的包，`package-lock.json`存放包的配置文件\n\n```bash\n#安装全局包\nnpm install 包名 -g\n#安装核心依赖包\nnpm install 包名\n#安装开发依赖包\nnpm install 包名 -D\n#安装指定版本的包\nnpm install 包名@2.22.2\n# 版本号：第一位数字：大版本、第二位数字：功能版本、第三位数字：bug修复版本 \n#卸载核心依赖包\nnpm uninstall 包名\n#卸载全局包\nnpm uninstall 包名 -g\n```\n\nnpm规定，在项目根目录中，必须提供一个叫做`package.json`的包管理配置文件，记录一些项目信息\n\n* 项目的名称、版本号、描述等\n* 项目中都用到了哪些包\n* 哪些在开发中使用\n* 哪些在开发和部署都要使用\n\n```bash\n#新建项目时，创建package.json文件\nnpm init -y\n```\n\n注意：\n\n* 项目所在的文件夹路径只能为英文\n* 运行npm install安装包时，会自动向`package.json`添加信息\n* 运行npm uninstall卸载包时，会自动删除`package.json`中包相关信息\n* 节点dependencies会记录开发和部署都会用到的包\n* 节点devDependencies记录仅开发时用的包\n\n切换国内源下载包\n\n```bash\n# 查看当前包的下载源\nnpm config get registry\n# 切换国内源\nnpm config set registry=https://registry.npm.taobao.org/\n```\n\n**模块加载**:\n\n* 模块在第一次加载后会被缓存\n* 无论什么模块，都会先从缓存加载\n* 被加载目录先查找`package.json`的文件，并寻找`main`属性，作为`require()`加载入口\n* 如果没有`package.json`文件，查找该目录下的`index.js`文件\n* 如果没有找到`index.js`文件，会输出错误信息\n\n### 3.Express\n\n> 基于Node.js平台，快速、开发、极简的Web开发框架\n\n#### 3.1 基本使用\n\n```js\n//导入express\nconst express=require('express')\n//创建web服务器\nconst app=express()\n//启动web服务器\napp.listen(80,()=>{\n    console.log('express server running at http://127.0.0.1');\n})\n```\n\n监听请求\n\n* GET请求\n\n```js\napp.get('/user/:id',function(req,res){\n  //函数\n  //req请求对象\n  //res响应对象\n  res.send() //把内容响应给客户端\n  req.query() //访问客户端通过查询字符串的形式发送到服务器的参数\n  req.params   // 访问url中，通过: 匹配到动态参数\n})\n```\n\n* POST请求\n\n```js\napp.post('url',function(req,res){\n  //函数\n  //req请求对象\n  //res响应对象\n  res.send() //把内容响应给客户端\n})\n```\n\n```js\n//托管静态资源，让文件夹都能让人访问，但存放静态资源的目录名不会出现在url中\napp.use(express.static('文件夹'))\n//可以在url添加文件夹1的名称来访问内容\napp.use('文件夹1',express.static('文件夹2'))\n```\n\n#### 3.2 路由\n\n> Express 中，客户端请求与服务器处理函数之间的映射关系。\n\nExpress的路由分为3部分，分别是请求的类型、请求的URL、处理函数\n\n为了方便管理需要对路由进行模块化：\n\n1. 创建路由模块的js文件\n2. 调用`express.Router()`函数创建路由对象\n3. 向路由对象上挂载路由\n4. 使用`module.exports`向外共享路由对象\n5. 使用`app.use()`函数注册路由模块\n\n```js\nvar express = require('express')\nvar router = express.Router()\n\n//挂载路由\nrouter.get('/user',(req,res)=>{\n  res.send('GET user request')\n})\n\nrouter.post('/user',(req,res)=>{\n  res.send('POST user request')\n})\n\n//向外导出路由对象\nmodule.exports = router\n```\n\n#### 3.3 中间件\n\n当一个请求到达Express的服务器后，可以连续调用多个中间件，从而对这次请求进行预处理。\n\n中间件函数的形参必须包含next参数。\n\nnext()函数把流转关系转到下一个中间件。\n\n```js\n//中间件函数\nconst mw = (req,res,next)=>{\n  next()   //转到下一个中间件，没有就转给路由\n}\n```\n\n调用`app.use(中间件函数)`，可以定义一个全局生效的中间件。\n\n多个中间件共享同一个**req**和**res**，可以在上游添加自定义的属性或者方法，给下游使用\n\n局部中间件：把中间件对象放在路由的url与处理函数之间，该中间件只对这个路由产生效果。\n\n分类：\n\n1. 应用级别的中间件：绑定到app实例上的中间件\n2. 路由级别的中间件：绑定到router实例上的中间件\n3. 错误级别的中间件：专门捕获项目的抛出的异常错误（需要放在所有路由之后），必须有四个形参，(err,req,res,next)\n4. Express内置的中间件\n   1. `express.static`快速托管静态资源\n   2. `express.json`解析JSON格式的请求体数据\n   3. `express.urlencoded`解析url格式的请求数据\n5. 第三方的中间件\n\n自定义中间件：\n\n```js\nconst qs = require('querystring')\napp.use((req,res,next)=>{\n  let str =''\n  req.on('data',(chunk)=>{   //监听data事件\n    str += chunk\n  })\n  req.end('end',()=>{  //监听end事件\n    console.log(str)\n    //查询字符串解析成对象\n    const body = qs.parse(str)\n    console.log(body)\n    // 挂载解析属性\n    req.body = body\n    next()\n  })\n})\n```\n\n#### 3.4 接口\n\n```js\n//创建服务器\nconst express=require('express')\nconst app=express()\n\n//解析post请求的body\napp.use(express.urlencoded({ extended: false }))\n\n//配置跨域cors中间件\nconst cors = require('cors')\napp.use(cors())\n\nconst router=require('./router')\napp.use('/api',router)\n\n\napp.listen(8008,()=>{\n    console.log('express server running at http://127.0.0.1:8008');\n})\n\n```\n\n```js\nconst express = require('express')\nconst router = express.Router()\n\n//GET接口\nrouter.get('/get',(req,res)=>{\n  const query=req.query\n  res.send({\n    status: 0,\n    msg: 'GET 请求成功',\n    data: query\n  })\n})\n\n//POST接口\nrouter.post('/post',(req,res)=>{\n  const body=req.body\n  res.send({\n    status: 0,\n    msg: 'POST 请求成功',\n    data: body\n  })\n})\n\n//向外导出路由对象\nmodule.exports = router\n```\n\n> 跨域问题：CORS和JSONP\nCORS实现跨域响应步骤：\n\n1. 安装cors中间件：`npm i cors`\n2. 使用`const cors=require('cors')`导入中间件，要在路由之前\n3. 在路由之前调用配置中间件`app.use(cors())`\n\n### 4.数据库\n\n#### 4.1 MySQL使用入门\n\n结构：数据库、数据表、数据行、字段（列）\n\nSQL：结构化查询语言，专门访问和处理**关系数据库**。\n\nsql的关键字大小写不敏感\n\n```sql\n--向表中插入数据\nINSERT INTO 表名称(列名称)  values(数据)\n```\n\n```sql\n-- 删除表中某一行数据\nDELETE FROM 表名称  WHERE 列名称 = 某值\n```\n\n```sql\n-- 更新表中某一行某一列数据\nUPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值\n```\n\n```sql\n--从指定的表中查询所有的数据\nSELECT * FROM 表名称\n--从指定的表中查询特定列的数据，查询多个列用英文逗号隔开\nSELECT 列名称 FROM 表名称\n```\n\n**WHERE**可以添加运算符来筛选特定字段\n\n* `=`、`<>`、`>`、`<`、`>=`、`<=`、`BETWEEN`、`LIKE`\n* `AND`、`OR`运算符就是且和或，用来增加筛选条件\n\n```sql\n--按照列名称大小进行升序排序\nSELECT * FROM 表名称 ORDER BY 列名称\n--按照列名称大小进行降序排序 DESC\nSELECT * FROM 表名称 ORDER BY 列名称 DESC\n--按照列名称1进行大范围的降序排序再按照列名称2进行小范围的升序排序\nSELECT * FROM 表名称 ORDER BY 列名称1 DESC, 列名称2 ASC\n```\n\n```sql\n--统计表中列为某值的个数\nSELECT COUNT(*) FROM 表名称 WHERE 列名称 = 某值\n--统计表中列为某值的个数，并给结果起名字\nSELECT COUNT(*) AS 名称 FROM 表名称 WHERE 列名称 = 某值\n```\n\n#### 4.2 项目中连接MySQL数据库\n\n>1.安装MySQL数据库第三方模块`mysql`\n\n```bash\n#mysql数据库\nnpm i mysql\n```\n\n>2.通过mysql模块连接到MySQL数据库\n\n```js\n//导入模块\nconst mysql = require('mysql')\n//创建连接池\nconst db = mysql.createPool({\n  host: '127.0.0.1',\n  user: 'root',\n  port: 3306,\n  password: 'root',\n  database: 'mydb_01'\n})\n//检查连接正常\ndb.query('select 1',(err,res)=>{\n  if(err) return console.log(err.message)\n  console.log(res)\n})\n```\n\n>3.通过mysql模块执行SQL语句\n\n```js\nconst sqlStr = 'select * from users'\ndb.query(sqlStr,(err,res)=>{\n  if(err) return console.log(err.message)   //查询失败\n  console.log(res)   // 查询成功\n})\n\n// 插入字段\nconst user={name: 'Spuer-Man' password: '123'}\n//定义待执行的sql语句\nconst sqlStr = 'insert into users (name,password) values (?,?)'    //英文问号作为占位符\ndb.query(sqlStr,[user.name,user.password],(err,res)=>{\n  if(err) return console.log(err.message)\n  if(res.affectedRows === 1){  //判断数据是否插入成功\n    console.log('插入数据成功')\n  }\n})\n```\n\n#### 4.3 身份验证\n\n服务端渲染：在服务器动态拼接字符串数据，然后发送HTML页面\n优点：\n\n* 前端耗时少\n* 有利于SEO\n缺点：\n* 占用服务器端资源\n* 不利于前后端分离，开发效率低\n\n前后端分离：后端只负责API接口，前端使用Ajax调用接口\n优点：\n\n* 开发体验好\n* 用户体验好\n* 减轻服务器端的渲染压力\n缺点：\n* 不利于SEO\n\n**身份认证**：\n\n>1.服务端渲染：Session认证机制\n\n* HTTP请求的无状态性，每次HTTP请求都是独立的。\n* Cookie存储在浏览器中不超过4kb的字符串。不同域名的cookie各自独立，每当客户端发起请求时，会自动把当前域名下的未过期的cookie一同发送给服务器。\n* 服务器先通过响应头发送cookie给浏览器，浏览器保存cookie，浏览器再通过请求头发送cookie给服务器，服务器再响应内容。\n* cookie不具有安全性\n* session验证\n\n```js\n//使用session中间件\nconst session = require('express-session')\napp.use(\n  session({\n    secret: 'zs',\n    resave: false,\n    saveUninitialized: true\n  })\n)\n//解析提交的表单数据\napp.use(express.urlencoded{extended: false})\n//登录API接口\napp.post('/api/login',(req,res)=>{\n  //判断用户提交信息是否正确\n  if(req.body.username !== 'admin' || req.body.password !== '000000'){\n    return res.send({ status: 1,msg: '登陆失败'})\n  }\n  req.session.user = req.body\n  req.session.islogin = true\n  res.send({status: 0,msg: '登录成功'})\n})\n//取出session信息\napp.get('/api/username',(req,res)=>{\n  if(!req.session.islogin){\n    return res.send({status: 1,msg: 'failed'})\n  }\n  res.send({\n    status: 0,\n    msg: 'success',\n    username: req.session.user.username\n  })\n})\n//清除session\napp.post('/api/logout',(req,res)=>{\n  req.session.destroy()\n  res.send({status: 0,msg: '退出成功'})\n})\n```\n\n>2.前后端分离：JWT认证机制\n\n由于session需要配合cookie才能实现，而cookie默认不支持跨域访问，此时需要额外配置。\n\nJWT是最流行的跨域认证解决方案。\n服务器将用户信息加密成Token字符串，发送到客户端，客户端保存后，再发送Token，服务器把Token还原后进行身份验证。\n\nJWT的组成部分：Header（头部）、Payload（有效荷载）、Signature（签名），三者使用英文点号分割\n\nJWT放在HTTP请求头的Authorization字段中\n\n安装JWT包\n\n```bash\nnpm i jsonwebtoken express-jwt\n```\n\n```js\n//导入JWT\nconst jwt = require('jsonwebtoken')\nconst expressJwt = require('express-jwt')\n//定义secret密钥，用来加密和解密\nconst secretKey = 'my_secret_key'\n//解析token，把用户信息挂载在req.user上\napp.use(expressJwt({ secret: secretKey }).unless({ path: [/^\\/api\\//] }))\n//生成token\nconst tokenStr =jwt.sign({username: 'admin'},secretKey,{expiresIn: 60*60 })\n```\n\n### 5.在express中使用swagger写API文档\n\n#### 5.1 安装和使用swagger\n\n>方法一：使用jsdoc文档注释来生成API文档\n\n```bash\n# 安装相关工具\nnpm i swagger-ui-express\nnpm i swagger-jsdoc\n```\n\n```js\n// app.js\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerJsdoc = require('swagger-jsdoc');\nconst options = {\n    definition: {\n      openapi: '3.0.0',\n      info: {\n        title: 'Hello World',\n        version: '1.0.0',\n        description: '项目描述',\n      },\n    },\n    apis: ['./router/*.js'], //路由文件夹下面的所有js文件\n};\nconst swaggerSpec = swaggerJsdoc(options);\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n```\n\n```js\n//在路由模块前写下面的注释 \n/**\n * @swagger\n * /my/article/addcate:\n * post:\n *   tags:\n *      - 文章分类\n *   summary: 新增文章分类\n *   description: 来新增加一个文章的分类\n *   parameters:\n *      - name: name\n *        description: 文章分类名\n *        in: body\n *        required: true\n *        type: string\n *      - name: alias\n *        description: 文章分类的别名\n *        in: body\n *        required: true\n *        type: string\n *   responses:\n *      0:\n *         description: success，新增文章分类成功\n *      1:\n *         description: failed，新增文章分类失败\n */\n```\n\n> 方法二：使用json文件来写\n\n```bash\n# 安装相关工具\nnpm i swagger-ui-express\n```\n\n```js\n// app.js\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n```\n\n不熟悉语法时，使用在线的 [swagger editor](https://editor.swagger.io/) 进行API接口的编辑\n选择`File->Convert and save as JSON`，下载`swagger.json`放进项目中\n熟悉语法后，直接对`swagger.json`进行修改，不需要编辑器了\n官方文档：<https://swagger.io/docs/specification/about/>\n\n> 方法三：使用yaml文件来写\n\n其实是利用yamljs模块把yaml文件转化为json文件，如果直接写json文件，会发现json文件的所有属性都会加双引号，还有很多格式类的限制，没有yaml写起来舒服，快速。\n而且yaml文件写法才是最贴合官网的语法。\n\n```bash\n# 安装相关工具\nnpm i swagger-ui-express\nnpm i --save yamljs\n```\n\n```js\n// app.js\nconst swaggerUi = require('swagger-ui-express');\nconst YAML = require('yamljs');\nconst swaggerDocument = YAML.load('./swagger.yaml');\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n```\n\n#### 5.2 YAML\n\nYAML是一种标记语言，文件名为`.yaml`\n\n1. 大小写敏感\n2. 使用缩进标识层级关系\n3. 缩进不允许Tab，只允许空格\n4. 缩进的空格个数不重要，但是同级元素需要左对齐\n5. 注释：`#`\n6. 支持的数据类型：\n   1. 对象\n   2. 数组：使用`-`添加在元素前，表示该数组的元素，每一个数组元素都得添加。\n   3. 纯数：任意不可分的数据\n7. `|`使用换行 `>`忽略换行\n8. `$变量`标记一个属性，用`<<: *变量`来导入标记非重复的属性值\n\n#### 5.3 OpenAPI 规范\n\n* 数据类型\n\n| `type` | `format`| 评论 |\n| --- | --- | --- |\n| `integer` | `int32` | 有符号 32 位 |\n| `integer` | `int64` | 有符号 64 位 (a.k.a long) |\n| `number` | `float` |  |\n| `number` | `double` |  |\n| `string` |  |  |\n| `string` | `byte` | base64 编码字符 |\n| `string` | `binary` | 任何八位字节序列 |\n| `boolean` |  |  |\n| `string` | `date` | 由`full-date`定义 [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) |\n| `string` | `date-time` | 由`date-time`定义 [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) |\n| `string` | `password` | 提示 UI 以隐藏输入 |\n\n> URL中的相对引用\n\n除非另有说明，否则所有属于 URL 的属性都可以是 [RFC3986](https://tools.ietf.org/html/rfc3986#section-4.2) 定义的相对引用。使用[服务器对象](#66-服务器对象)中定义的 URL 作为基本 URI 来解析相对引用。\n`$ref` 中使用的相对引用按照 JSON 引用进行处理，使用当前文档的 URL 作为基本 URI。\n\n具体规范见：[OpenAPI规范英文版](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md)，[OpenAPI规范中文版](https://openapi.apifox.cn/)\n","slug":"计算机/前端/Nodejs快速入门","published":1,"updated":"2022-05-12T10:27:27.439Z","layout":"post","photos":[],"_id":"cm1z7gipo000pdwvx3ekugppc","content":"<h1 id=\"Node-js快速入门\"><a href=\"#Node-js快速入门\" class=\"headerlink\" title=\"Node.js快速入门\"></a>Node.js快速入门</h1><h2 id=\"一、Node-js\"><a href=\"#一、Node-js\" class=\"headerlink\" title=\"一、Node.js\"></a>一、Node.js</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>本笔记学习视频： <a href=\"https://www.bilibili.com/video/BV1a34y167AZ\">https://www.bilibili.com/video/BV1a34y167AZ</a></p>\n<p><a href=\"https://nodejs.org/zh-cn/\">Node.js</a>是一个基于Chrome V8引擎的JavaScript运行环境。</p>\n<p>Node.js是Javascript的后端运行环境，无法调用DOM和BOM等浏览器内置API。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#执行js文件</span></span><br><span class=\"line\">node <span class=\"string\">&quot;要执行的js文件&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-模块\"><a href=\"#2-模块\" class=\"headerlink\" title=\"2.模块\"></a>2.模块</h3><h4 id=\"2-1-fs文件系统模块\"><a href=\"#2-1-fs文件系统模块\" class=\"headerlink\" title=\"2.1 fs文件系统模块\"></a>2.1 fs文件系统模块</h4><p>Node.js提供的用来操作文件的模块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入fs模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>fs.readFile(path[,options],callback)</code>方法，读取指定文件的内容<ul>\n<li>参数：文件路径、表示以什么编码格式读取文件、文件读取完成后，通过回调函数拿到读取的结果。</li>\n<li>回调函数的参数err对象是否为null，是读取成功，否则读取失败<code>err.message</code>返回失败信息。</li>\n</ul>\n</li>\n<li><code>fs.writeFile(file,data[,options],callback)</code>方法，用来向指定文件写入内容<ul>\n<li>参数：指定存放的文件路径、表示写入的内容、表示写入格式、写入完成后的回调函数。</li>\n<li>写入成功err为null，否则为错误对象。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-path路径模块\"><a href=\"#2-2-path路径模块\" class=\"headerlink\" title=\"2.2 path路径模块\"></a>2.2 path路径模块</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入path模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>path.join([...path])</code>方法，将多个路径片段拼接成完整的路径<ul>\n<li>参数：多个路径字符串</li>\n</ul>\n</li>\n<li><code>path.basename(path[,ext])</code>方法，从路径解析文件名<ul>\n<li>参数：路径、文件扩展名</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-http模块\"><a href=\"#2-3-http模块\" class=\"headerlink\" title=\"2.3 http模块\"></a>2.3 http模块</h4><p>用来创建web服务器的模块。</p>\n<p>创建web服务器步骤：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.导入http模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> http=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//2.创建http实列</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> server=http.<span class=\"title function_\">createServer</span>()</span><br><span class=\"line\"><span class=\"comment\">//3.绑定request事件</span></span><br><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;request&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;客户端请求了服务器&#x27;</span>)</span><br><span class=\"line\">  <span class=\"comment\">//req是请求对象，包含了与客户端相关的数据和属性</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> url = req.<span class=\"property\">url</span>   <span class=\"comment\">//客户端请求的URL地址</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> method = req.<span class=\"property\">method</span>  <span class=\"comment\">// 客户端的method请求类型</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;你的请求地址为&#x27;</span>+url+<span class=\"string\">&#x27;，请求类型是&#x27;</span>+method</span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;text/html; charset=utf-8&#x27;</span>)  <span class=\"comment\">//防止中文乱码</span></span><br><span class=\"line\">  res.<span class=\"title function_\">end</span>(str) <span class=\"comment\">//向客户端发送指定内容，并结束这次请求的处理过程</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//4.启动服务器</span></span><br><span class=\"line\">server.<span class=\"title function_\">listen</span>(<span class=\"number\">8008</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;http server running at http://127.0.0.1:8008&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>根据url响应不同的html内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;request&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> url = req.<span class=\"property\">url</span> </span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"string\">&#x27;&lt;h1&gt;404 Not found!&lt;h1&gt;&#x27;</span> <span class=\"comment\">//默认输出内容</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(url===<span class=\"string\">&#x27;/&#x27;</span>||url===<span class=\"string\">&#x27;/index.html&#x27;</span>)&#123;</span><br><span class=\"line\">    content=<span class=\"string\">&#x27;&lt;h1&gt;首页&lt;h1&gt;&#x27;</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(url===<span class=\"string\">&#x27;/about.html&#x27;</span>)&#123;</span><br><span class=\"line\">    content=<span class=\"string\">&#x27;&lt;h1&gt;关于页面&lt;h1&gt;&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;text/html; charset=utf-8&#x27;</span>) </span><br><span class=\"line\">  res.<span class=\"title function_\">end</span>(content) </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-模块化\"><a href=\"#2-4-模块化\" class=\"headerlink\" title=\"2.4 模块化\"></a>2.4 模块化</h4><p>模块化是指解决一个复杂问题时，自顶向下逐层把系统划分成若干模块的过程。<br>优点：</p>\n<ol>\n<li>提高代码的复用性</li>\n<li>提高代码的可维护性</li>\n<li>可以实现按需加载</li>\n</ol>\n<p>分类：</p>\n<ul>\n<li>内置模块：Node.js提供的模块</li>\n<li>自定义模块：用户自己创建的js文件</li>\n<li>第三方模块：第三方开发出来的模块，需要先下载</li>\n</ul>\n<p>加载模块：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)  <span class=\"comment\">//加载内置模块，直接写名字</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./custom.js&#x27;</span>) <span class=\"comment\">//加载用户自定义模块，需要添加路径</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;moment&#x27;</span>) <span class=\"comment\">//加载第三方模块，直接写名字</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：<code>require()</code>方法加载模块，就会执行模块</p>\n<p>模块作用域：<br>自定义模块的变量、方法，只能在当前模块内被访问。</p>\n<p>每个js模块都有一个module对象，它里面存储了和当前模块有关的信息。</p>\n<p><code>moudle.exports</code>对象，将模块内的成员共享出去。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.挂载属性</span></span><br><span class=\"line\">moudle.<span class=\"property\">exports</span>.<span class=\"property\">uname</span>=<span class=\"string\">&#x27;zs&#x27;</span>;</span><br><span class=\"line\">moudle.<span class=\"property\">exports</span>.<span class=\"property\">sayHello</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello &#x27;</span>+uname);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.定义新对象</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">uname</span>: <span class=\"string\">&#x27;zs&#x27;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHello</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello &#x27;</span>+uname);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>简化代码使用<code>exports</code>对象，与<code>moudle.exports</code>对象用法一样，且两者指向一样。</p>\n<h4 id=\"2-5-包\"><a href=\"#2-5-包\" class=\"headerlink\" title=\"2.5 包\"></a>2.5 包</h4><p><strong>包</strong>是指第三方模块。<br><code>node_modules</code>文件夹存放项目安装的包，<code>package-lock.json</code>存放包的配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装全局包</span></span><br><span class=\"line\">npm install 包名 -g</span><br><span class=\"line\"><span class=\"comment\">#安装核心依赖包</span></span><br><span class=\"line\">npm install 包名</span><br><span class=\"line\"><span class=\"comment\">#安装开发依赖包</span></span><br><span class=\"line\">npm install 包名 -D</span><br><span class=\"line\"><span class=\"comment\">#安装指定版本的包</span></span><br><span class=\"line\">npm install 包名@2.22.2</span><br><span class=\"line\"><span class=\"comment\"># 版本号：第一位数字：大版本、第二位数字：功能版本、第三位数字：bug修复版本 </span></span><br><span class=\"line\"><span class=\"comment\">#卸载核心依赖包</span></span><br><span class=\"line\">npm uninstall 包名</span><br><span class=\"line\"><span class=\"comment\">#卸载全局包</span></span><br><span class=\"line\">npm uninstall 包名 -g</span><br></pre></td></tr></table></figure>\n\n<p>npm规定，在项目根目录中，必须提供一个叫做<code>package.json</code>的包管理配置文件，记录一些项目信息</p>\n<ul>\n<li>项目的名称、版本号、描述等</li>\n<li>项目中都用到了哪些包</li>\n<li>哪些在开发中使用</li>\n<li>哪些在开发和部署都要使用</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#新建项目时，创建package.json文件</span></span><br><span class=\"line\">npm init -y</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li>项目所在的文件夹路径只能为英文</li>\n<li>运行npm install安装包时，会自动向<code>package.json</code>添加信息</li>\n<li>运行npm uninstall卸载包时，会自动删除<code>package.json</code>中包相关信息</li>\n<li>节点dependencies会记录开发和部署都会用到的包</li>\n<li>节点devDependencies记录仅开发时用的包</li>\n</ul>\n<p>切换国内源下载包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前包的下载源</span></span><br><span class=\"line\">npm config get registry</span><br><span class=\"line\"><span class=\"comment\"># 切换国内源</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>\n\n<p><strong>模块加载</strong>:</p>\n<ul>\n<li>模块在第一次加载后会被缓存</li>\n<li>无论什么模块，都会先从缓存加载</li>\n<li>被加载目录先查找<code>package.json</code>的文件，并寻找<code>main</code>属性，作为<code>require()</code>加载入口</li>\n<li>如果没有<code>package.json</code>文件，查找该目录下的<code>index.js</code>文件</li>\n<li>如果没有找到<code>index.js</code>文件，会输出错误信息</li>\n</ul>\n<h3 id=\"3-Express\"><a href=\"#3-Express\" class=\"headerlink\" title=\"3.Express\"></a>3.Express</h3><blockquote>\n<p>基于Node.js平台，快速、开发、极简的Web开发框架</p>\n</blockquote>\n<h4 id=\"3-1-基本使用\"><a href=\"#3-1-基本使用\" class=\"headerlink\" title=\"3.1 基本使用\"></a>3.1 基本使用</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入express</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//创建web服务器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app=<span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"comment\">//启动web服务器</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">80</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;express server running at http://127.0.0.1&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>监听请求</p>\n<ul>\n<li>GET请求</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/user/:id&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//函数</span></span><br><span class=\"line\">  <span class=\"comment\">//req请求对象</span></span><br><span class=\"line\">  <span class=\"comment\">//res响应对象</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>() <span class=\"comment\">//把内容响应给客户端</span></span><br><span class=\"line\">  req.<span class=\"title function_\">query</span>() <span class=\"comment\">//访问客户端通过查询字符串的形式发送到服务器的参数</span></span><br><span class=\"line\">  req.<span class=\"property\">params</span>   <span class=\"comment\">// 访问url中，通过: 匹配到动态参数</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>POST请求</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;url&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//函数</span></span><br><span class=\"line\">  <span class=\"comment\">//req请求对象</span></span><br><span class=\"line\">  <span class=\"comment\">//res响应对象</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>() <span class=\"comment\">//把内容响应给客户端</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//托管静态资源，让文件夹都能让人访问，但存放静态资源的目录名不会出现在url中</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">static</span>(<span class=\"string\">&#x27;文件夹&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\">//可以在url添加文件夹1的名称来访问内容</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;文件夹1&#x27;</span>,express.<span class=\"title function_\">static</span>(<span class=\"string\">&#x27;文件夹2&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-路由\"><a href=\"#3-2-路由\" class=\"headerlink\" title=\"3.2 路由\"></a>3.2 路由</h4><blockquote>\n<p>Express 中，客户端请求与服务器处理函数之间的映射关系。</p>\n</blockquote>\n<p>Express的路由分为3部分，分别是请求的类型、请求的URL、处理函数</p>\n<p>为了方便管理需要对路由进行模块化：</p>\n<ol>\n<li>创建路由模块的js文件</li>\n<li>调用<code>express.Router()</code>函数创建路由对象</li>\n<li>向路由对象上挂载路由</li>\n<li>使用<code>module.exports</code>向外共享路由对象</li>\n<li>使用<code>app.use()</code>函数注册路由模块</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.<span class=\"title class_\">Router</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//挂载路由</span></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/user&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;GET user request&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/user&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;POST user request&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向外导出路由对象</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-中间件\"><a href=\"#3-3-中间件\" class=\"headerlink\" title=\"3.3 中间件\"></a>3.3 中间件</h4><p>当一个请求到达Express的服务器后，可以连续调用多个中间件，从而对这次请求进行预处理。</p>\n<p>中间件函数的形参必须包含next参数。</p>\n<p>next()函数把流转关系转到下一个中间件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//中间件函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">mw</span> = (<span class=\"params\">req,res,next</span>)=&gt;&#123;</span><br><span class=\"line\">  <span class=\"title function_\">next</span>()   <span class=\"comment\">//转到下一个中间件，没有就转给路由</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>调用<code>app.use(中间件函数)</code>，可以定义一个全局生效的中间件。</p>\n<p>多个中间件共享同一个<strong>req</strong>和<strong>res</strong>，可以在上游添加自定义的属性或者方法，给下游使用</p>\n<p>局部中间件：把中间件对象放在路由的url与处理函数之间，该中间件只对这个路由产生效果。</p>\n<p>分类：</p>\n<ol>\n<li>应用级别的中间件：绑定到app实例上的中间件</li>\n<li>路由级别的中间件：绑定到router实例上的中间件</li>\n<li>错误级别的中间件：专门捕获项目的抛出的异常错误（需要放在所有路由之后），必须有四个形参，(err,req,res,next)</li>\n<li>Express内置的中间件<ol>\n<li><code>express.static</code>快速托管静态资源</li>\n<li><code>express.json</code>解析JSON格式的请求体数据</li>\n<li><code>express.urlencoded</code>解析url格式的请求数据</li>\n</ol>\n</li>\n<li>第三方的中间件</li>\n</ol>\n<p>自定义中间件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> qs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;querystring&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"function\">(<span class=\"params\">req,res,next</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str =<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  req.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;data&#x27;</span>,<span class=\"function\">(<span class=\"params\">chunk</span>)=&gt;</span>&#123;   <span class=\"comment\">//监听data事件</span></span><br><span class=\"line\">    str += chunk</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  req.<span class=\"title function_\">end</span>(<span class=\"string\">&#x27;end&#x27;</span>,<span class=\"function\">()=&gt;</span>&#123;  <span class=\"comment\">//监听end事件</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str)</span><br><span class=\"line\">    <span class=\"comment\">//查询字符串解析成对象</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> body = qs.<span class=\"title function_\">parse</span>(str)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(body)</span><br><span class=\"line\">    <span class=\"comment\">// 挂载解析属性</span></span><br><span class=\"line\">    req.<span class=\"property\">body</span> = body</span><br><span class=\"line\">    <span class=\"title function_\">next</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-4-接口\"><a href=\"#3-4-接口\" class=\"headerlink\" title=\"3.4 接口\"></a>3.4 接口</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建服务器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app=<span class=\"title function_\">express</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//解析post请求的body</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">urlencoded</span>(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//配置跨域cors中间件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cors = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cors&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">cors</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./router&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api&#x27;</span>,router)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">8008</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;express server running at http://127.0.0.1:8008&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = express.<span class=\"title class_\">Router</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//GET接口</span></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/get&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> query=req.<span class=\"property\">query</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">status</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;GET 请求成功&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: query</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//POST接口</span></span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/post&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> body=req.<span class=\"property\">body</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">status</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;POST 请求成功&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: body</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向外导出路由对象</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>跨域问题：CORS和JSONP<br>CORS实现跨域响应步骤：</p>\n</blockquote>\n<ol>\n<li>安装cors中间件：<code>npm i cors</code></li>\n<li>使用<code>const cors=require(&#39;cors&#39;)</code>导入中间件，要在路由之前</li>\n<li>在路由之前调用配置中间件<code>app.use(cors())</code></li>\n</ol>\n<h3 id=\"4-数据库\"><a href=\"#4-数据库\" class=\"headerlink\" title=\"4.数据库\"></a>4.数据库</h3><h4 id=\"4-1-MySQL使用入门\"><a href=\"#4-1-MySQL使用入门\" class=\"headerlink\" title=\"4.1 MySQL使用入门\"></a>4.1 MySQL使用入门</h4><p>结构：数据库、数据表、数据行、字段（列）</p>\n<p>SQL：结构化查询语言，专门访问和处理<strong>关系数据库</strong>。</p>\n<p>sql的关键字大小写不敏感</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--向表中插入数据</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> 表名称(列名称)  <span class=\"keyword\">values</span>(数据)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除表中某一行数据</span></span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> 表名称  <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 更新表中某一行某一列数据</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表名称 <span class=\"keyword\">SET</span> 列名称 <span class=\"operator\">=</span> 新值 <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--从指定的表中查询所有的数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称</span><br><span class=\"line\"><span class=\"comment\">--从指定的表中查询特定列的数据，查询多个列用英文逗号隔开</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> 列名称 <span class=\"keyword\">FROM</span> 表名称</span><br></pre></td></tr></table></figure>\n\n<p><strong>WHERE</strong>可以添加运算符来筛选特定字段</p>\n<ul>\n<li><code>=</code>、<code>&lt;&gt;</code>、<code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>BETWEEN</code>、<code>LIKE</code></li>\n<li><code>AND</code>、<code>OR</code>运算符就是且和或，用来增加筛选条件</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--按照列名称大小进行升序排序</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> 列名称</span><br><span class=\"line\"><span class=\"comment\">--按照列名称大小进行降序排序 DESC</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> 列名称 <span class=\"keyword\">DESC</span></span><br><span class=\"line\"><span class=\"comment\">--按照列名称1进行大范围的降序排序再按照列名称2进行小范围的升序排序</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> 列名称<span class=\"number\">1</span> <span class=\"keyword\">DESC</span>, 列名称<span class=\"number\">2</span> <span class=\"keyword\">ASC</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--统计表中列为某值的个数</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">COUNT</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br><span class=\"line\"><span class=\"comment\">--统计表中列为某值的个数，并给结果起名字</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">COUNT</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">AS</span> 名称 <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-项目中连接MySQL数据库\"><a href=\"#4-2-项目中连接MySQL数据库\" class=\"headerlink\" title=\"4.2 项目中连接MySQL数据库\"></a>4.2 项目中连接MySQL数据库</h4><blockquote>\n<p>1.安装MySQL数据库第三方模块<code>mysql</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#mysql数据库</span></span><br><span class=\"line\">npm i mysql</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>2.通过mysql模块连接到MySQL数据库</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mysql = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mysql&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//创建连接池</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db = mysql.<span class=\"title function_\">createPool</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">host</span>: <span class=\"string\">&#x27;127.0.0.1&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">user</span>: <span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">port</span>: <span class=\"number\">3306</span>,</span><br><span class=\"line\">  <span class=\"attr\">password</span>: <span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">database</span>: <span class=\"string\">&#x27;mydb_01&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//检查连接正常</span></span><br><span class=\"line\">db.<span class=\"title function_\">query</span>(<span class=\"string\">&#x27;select 1&#x27;</span>,<span class=\"function\">(<span class=\"params\">err,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">message</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>3.通过mysql模块执行SQL语句</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sqlStr = <span class=\"string\">&#x27;select * from users&#x27;</span></span><br><span class=\"line\">db.<span class=\"title function_\">query</span>(sqlStr,<span class=\"function\">(<span class=\"params\">err,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">message</span>)   <span class=\"comment\">//查询失败</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)   <span class=\"comment\">// 查询成功</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 插入字段</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user=&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;Spuer-Man&#x27;</span> <span class=\"attr\">password</span>: <span class=\"string\">&#x27;123&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">//定义待执行的sql语句</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sqlStr = <span class=\"string\">&#x27;insert into users (name,password) values (?,?)&#x27;</span>    <span class=\"comment\">//英文问号作为占位符</span></span><br><span class=\"line\">db.<span class=\"title function_\">query</span>(sqlStr,[user.<span class=\"property\">name</span>,user.<span class=\"property\">password</span>],<span class=\"function\">(<span class=\"params\">err,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">message</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">affectedRows</span> === <span class=\"number\">1</span>)&#123;  <span class=\"comment\">//判断数据是否插入成功</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;插入数据成功&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-身份验证\"><a href=\"#4-3-身份验证\" class=\"headerlink\" title=\"4.3 身份验证\"></a>4.3 身份验证</h4><p>服务端渲染：在服务器动态拼接字符串数据，然后发送HTML页面<br>优点：</p>\n<ul>\n<li>前端耗时少</li>\n<li>有利于SEO<br>缺点：</li>\n<li>占用服务器端资源</li>\n<li>不利于前后端分离，开发效率低</li>\n</ul>\n<p>前后端分离：后端只负责API接口，前端使用Ajax调用接口<br>优点：</p>\n<ul>\n<li>开发体验好</li>\n<li>用户体验好</li>\n<li>减轻服务器端的渲染压力<br>缺点：</li>\n<li>不利于SEO</li>\n</ul>\n<p><strong>身份认证</strong>：</p>\n<blockquote>\n<p>1.服务端渲染：Session认证机制</p>\n</blockquote>\n<ul>\n<li>HTTP请求的无状态性，每次HTTP请求都是独立的。</li>\n<li>Cookie存储在浏览器中不超过4kb的字符串。不同域名的cookie各自独立，每当客户端发起请求时，会自动把当前域名下的未过期的cookie一同发送给服务器。</li>\n<li>服务器先通过响应头发送cookie给浏览器，浏览器保存cookie，浏览器再通过请求头发送cookie给服务器，服务器再响应内容。</li>\n<li>cookie不具有安全性</li>\n<li>session验证</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用session中间件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express-session&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"title function_\">session</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">secret</span>: <span class=\"string\">&#x27;zs&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">resave</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">saveUninitialized</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">//解析提交的表单数据</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"property\">urlencoded</span>&#123;<span class=\"attr\">extended</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\">//登录API接口</span></span><br><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/login&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//判断用户提交信息是否正确</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(req.<span class=\"property\">body</span>.<span class=\"property\">username</span> !== <span class=\"string\">&#x27;admin&#x27;</span> || req.<span class=\"property\">body</span>.<span class=\"property\">password</span> !== <span class=\"string\">&#x27;000000&#x27;</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.<span class=\"title function_\">send</span>(&#123; <span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;登陆失败&#x27;</span>&#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  req.<span class=\"property\">session</span>.<span class=\"property\">user</span> = req.<span class=\"property\">body</span></span><br><span class=\"line\">  req.<span class=\"property\">session</span>.<span class=\"property\">islogin</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;登录成功&#x27;</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//取出session信息</span></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/api/username&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!req.<span class=\"property\">session</span>.<span class=\"property\">islogin</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.<span class=\"title function_\">send</span>(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;failed&#x27;</span>&#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">status</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">username</span>: req.<span class=\"property\">session</span>.<span class=\"property\">user</span>.<span class=\"property\">username</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//清除session</span></span><br><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/logout&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  req.<span class=\"property\">session</span>.<span class=\"title function_\">destroy</span>()</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;退出成功&#x27;</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>2.前后端分离：JWT认证机制</p>\n</blockquote>\n<p>由于session需要配合cookie才能实现，而cookie默认不支持跨域访问，此时需要额外配置。</p>\n<p>JWT是最流行的跨域认证解决方案。<br>服务器将用户信息加密成Token字符串，发送到客户端，客户端保存后，再发送Token，服务器把Token还原后进行身份验证。</p>\n<p>JWT的组成部分：Header（头部）、Payload（有效荷载）、Signature（签名），三者使用英文点号分割</p>\n<p>JWT放在HTTP请求头的Authorization字段中</p>\n<p>安装JWT包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i jsonwebtoken express-jwt</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入JWT</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> jwt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> expressJwt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express-jwt&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//定义secret密钥，用来加密和解密</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> secretKey = <span class=\"string\">&#x27;my_secret_key&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//解析token，把用户信息挂载在req.user上</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">expressJwt</span>(&#123; <span class=\"attr\">secret</span>: secretKey &#125;).<span class=\"title function_\">unless</span>(&#123; <span class=\"attr\">path</span>: [<span class=\"regexp\">/^\\/api\\//</span>] &#125;))</span><br><span class=\"line\"><span class=\"comment\">//生成token</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tokenStr =jwt.<span class=\"title function_\">sign</span>(&#123;<span class=\"attr\">username</span>: <span class=\"string\">&#x27;admin&#x27;</span>&#125;,secretKey,&#123;<span class=\"attr\">expiresIn</span>: <span class=\"number\">60</span>*<span class=\"number\">60</span> &#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-在express中使用swagger写API文档\"><a href=\"#5-在express中使用swagger写API文档\" class=\"headerlink\" title=\"5.在express中使用swagger写API文档\"></a>5.在express中使用swagger写API文档</h3><h4 id=\"5-1-安装和使用swagger\"><a href=\"#5-1-安装和使用swagger\" class=\"headerlink\" title=\"5.1 安装和使用swagger\"></a>5.1 安装和使用swagger</h4><blockquote>\n<p>方法一：使用jsdoc文档注释来生成API文档</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装相关工具</span></span><br><span class=\"line\">npm i swagger-ui-express</span><br><span class=\"line\">npm i swagger-jsdoc</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerUi = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-ui-express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerJsdoc = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-jsdoc&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">    <span class=\"attr\">definition</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">openapi</span>: <span class=\"string\">&#x27;3.0.0&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">info</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Hello World&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">&#x27;1.0.0&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">description</span>: <span class=\"string\">&#x27;项目描述&#x27;</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">apis</span>: [<span class=\"string\">&#x27;./router/*.js&#x27;</span>], <span class=\"comment\">//路由文件夹下面的所有js文件</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerSpec = <span class=\"title function_\">swaggerJsdoc</span>(options);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api-docs&#x27;</span>, swaggerUi.<span class=\"property\">serve</span>, swaggerUi.<span class=\"title function_\">setup</span>(swaggerSpec));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在路由模块前写下面的注释 </span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@swagger</span></span></span><br><span class=\"line\"><span class=\"comment\"> * /my/article/addcate:</span></span><br><span class=\"line\"><span class=\"comment\"> * post:</span></span><br><span class=\"line\"><span class=\"comment\"> *   tags:</span></span><br><span class=\"line\"><span class=\"comment\"> *      - 文章分类</span></span><br><span class=\"line\"><span class=\"comment\"> *   summary: 新增文章分类</span></span><br><span class=\"line\"><span class=\"comment\"> *   description: 来新增加一个文章的分类</span></span><br><span class=\"line\"><span class=\"comment\"> *   parameters:</span></span><br><span class=\"line\"><span class=\"comment\"> *      - name: name</span></span><br><span class=\"line\"><span class=\"comment\"> *        description: 文章分类名</span></span><br><span class=\"line\"><span class=\"comment\"> *        in: body</span></span><br><span class=\"line\"><span class=\"comment\"> *        required: true</span></span><br><span class=\"line\"><span class=\"comment\"> *        type: string</span></span><br><span class=\"line\"><span class=\"comment\"> *      - name: alias</span></span><br><span class=\"line\"><span class=\"comment\"> *        description: 文章分类的别名</span></span><br><span class=\"line\"><span class=\"comment\"> *        in: body</span></span><br><span class=\"line\"><span class=\"comment\"> *        required: true</span></span><br><span class=\"line\"><span class=\"comment\"> *        type: string</span></span><br><span class=\"line\"><span class=\"comment\"> *   responses:</span></span><br><span class=\"line\"><span class=\"comment\"> *      0:</span></span><br><span class=\"line\"><span class=\"comment\"> *         description: success，新增文章分类成功</span></span><br><span class=\"line\"><span class=\"comment\"> *      1:</span></span><br><span class=\"line\"><span class=\"comment\"> *         description: failed，新增文章分类失败</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>方法二：使用json文件来写</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装相关工具</span></span><br><span class=\"line\">npm i swagger-ui-express</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerUi = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-ui-express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerDocument = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./swagger.json&#x27;</span>);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api-docs&#x27;</span>, swaggerUi.<span class=\"property\">serve</span>, swaggerUi.<span class=\"title function_\">setup</span>(swaggerDocument));</span><br></pre></td></tr></table></figure>\n\n<p>不熟悉语法时，使用在线的 <a href=\"https://editor.swagger.io/\">swagger editor</a> 进行API接口的编辑<br>选择<code>File-&gt;Convert and save as JSON</code>，下载<code>swagger.json</code>放进项目中<br>熟悉语法后，直接对<code>swagger.json</code>进行修改，不需要编辑器了<br>官方文档：<a href=\"https://swagger.io/docs/specification/about/\">https://swagger.io/docs/specification/about/</a></p>\n<blockquote>\n<p>方法三：使用yaml文件来写</p>\n</blockquote>\n<p>其实是利用yamljs模块把yaml文件转化为json文件，如果直接写json文件，会发现json文件的所有属性都会加双引号，还有很多格式类的限制，没有yaml写起来舒服，快速。<br>而且yaml文件写法才是最贴合官网的语法。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装相关工具</span></span><br><span class=\"line\">npm i swagger-ui-express</span><br><span class=\"line\">npm i --save yamljs</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerUi = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-ui-express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">YAML</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;yamljs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerDocument = <span class=\"variable constant_\">YAML</span>.<span class=\"title function_\">load</span>(<span class=\"string\">&#x27;./swagger.yaml&#x27;</span>);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api-docs&#x27;</span>, swaggerUi.<span class=\"property\">serve</span>, swaggerUi.<span class=\"title function_\">setup</span>(swaggerDocument));</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-YAML\"><a href=\"#5-2-YAML\" class=\"headerlink\" title=\"5.2 YAML\"></a>5.2 YAML</h4><p>YAML是一种标记语言，文件名为<code>.yaml</code></p>\n<ol>\n<li>大小写敏感</li>\n<li>使用缩进标识层级关系</li>\n<li>缩进不允许Tab，只允许空格</li>\n<li>缩进的空格个数不重要，但是同级元素需要左对齐</li>\n<li>注释：<code>#</code></li>\n<li>支持的数据类型：<ol>\n<li>对象</li>\n<li>数组：使用<code>-</code>添加在元素前，表示该数组的元素，每一个数组元素都得添加。</li>\n<li>纯数：任意不可分的数据</li>\n</ol>\n</li>\n<li><code>|</code>使用换行 <code>&gt;</code>忽略换行</li>\n<li><code>$变量</code>标记一个属性，用<code>&lt;&lt;: *变量</code>来导入标记非重复的属性值</li>\n</ol>\n<h4 id=\"5-3-OpenAPI-规范\"><a href=\"#5-3-OpenAPI-规范\" class=\"headerlink\" title=\"5.3 OpenAPI 规范\"></a>5.3 OpenAPI 规范</h4><ul>\n<li>数据类型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><code>type</code></th>\n<th><code>format</code></th>\n<th>评论</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>integer</code></td>\n<td><code>int32</code></td>\n<td>有符号 32 位</td>\n</tr>\n<tr>\n<td><code>integer</code></td>\n<td><code>int64</code></td>\n<td>有符号 64 位 (a.k.a long)</td>\n</tr>\n<tr>\n<td><code>number</code></td>\n<td><code>float</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>number</code></td>\n<td><code>double</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>byte</code></td>\n<td>base64 编码字符</td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>binary</code></td>\n<td>任何八位字节序列</td>\n</tr>\n<tr>\n<td><code>boolean</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>date</code></td>\n<td>由<code>full-date</code>定义 <a href=\"https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14\">RFC3339</a></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>date-time</code></td>\n<td>由<code>date-time</code>定义 <a href=\"https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14\">RFC3339</a></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>password</code></td>\n<td>提示 UI 以隐藏输入</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>URL中的相对引用</p>\n</blockquote>\n<p>除非另有说明，否则所有属于 URL 的属性都可以是 <a href=\"https://tools.ietf.org/html/rfc3986#section-4.2\">RFC3986</a> 定义的相对引用。使用<a href=\"#66-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AF%B9%E8%B1%A1\">服务器对象</a>中定义的 URL 作为基本 URI 来解析相对引用。<br><code>$ref</code> 中使用的相对引用按照 JSON 引用进行处理，使用当前文档的 URL 作为基本 URI。</p>\n<p>具体规范见：<a href=\"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md\">OpenAPI规范英文版</a>，<a href=\"https://openapi.apifox.cn/\">OpenAPI规范中文版</a></p>\n","more":"<h1 id=\"Node-js快速入门\"><a href=\"#Node-js快速入门\" class=\"headerlink\" title=\"Node.js快速入门\"></a>Node.js快速入门</h1><h2 id=\"一、Node-js\"><a href=\"#一、Node-js\" class=\"headerlink\" title=\"一、Node.js\"></a>一、Node.js</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>本笔记学习视频： <a href=\"https://www.bilibili.com/video/BV1a34y167AZ\">https://www.bilibili.com/video/BV1a34y167AZ</a></p>\n<p><a href=\"https://nodejs.org/zh-cn/\">Node.js</a>是一个基于Chrome V8引擎的JavaScript运行环境。</p>\n<p>Node.js是Javascript的后端运行环境，无法调用DOM和BOM等浏览器内置API。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#执行js文件</span></span><br><span class=\"line\">node <span class=\"string\">&quot;要执行的js文件&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-模块\"><a href=\"#2-模块\" class=\"headerlink\" title=\"2.模块\"></a>2.模块</h3><h4 id=\"2-1-fs文件系统模块\"><a href=\"#2-1-fs文件系统模块\" class=\"headerlink\" title=\"2.1 fs文件系统模块\"></a>2.1 fs文件系统模块</h4><p>Node.js提供的用来操作文件的模块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入fs模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>fs.readFile(path[,options],callback)</code>方法，读取指定文件的内容<ul>\n<li>参数：文件路径、表示以什么编码格式读取文件、文件读取完成后，通过回调函数拿到读取的结果。</li>\n<li>回调函数的参数err对象是否为null，是读取成功，否则读取失败<code>err.message</code>返回失败信息。</li>\n</ul>\n</li>\n<li><code>fs.writeFile(file,data[,options],callback)</code>方法，用来向指定文件写入内容<ul>\n<li>参数：指定存放的文件路径、表示写入的内容、表示写入格式、写入完成后的回调函数。</li>\n<li>写入成功err为null，否则为错误对象。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-path路径模块\"><a href=\"#2-2-path路径模块\" class=\"headerlink\" title=\"2.2 path路径模块\"></a>2.2 path路径模块</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入path模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>path.join([...path])</code>方法，将多个路径片段拼接成完整的路径<ul>\n<li>参数：多个路径字符串</li>\n</ul>\n</li>\n<li><code>path.basename(path[,ext])</code>方法，从路径解析文件名<ul>\n<li>参数：路径、文件扩展名</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-http模块\"><a href=\"#2-3-http模块\" class=\"headerlink\" title=\"2.3 http模块\"></a>2.3 http模块</h4><p>用来创建web服务器的模块。</p>\n<p>创建web服务器步骤：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.导入http模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> http=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//2.创建http实列</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> server=http.<span class=\"title function_\">createServer</span>()</span><br><span class=\"line\"><span class=\"comment\">//3.绑定request事件</span></span><br><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;request&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;客户端请求了服务器&#x27;</span>)</span><br><span class=\"line\">  <span class=\"comment\">//req是请求对象，包含了与客户端相关的数据和属性</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> url = req.<span class=\"property\">url</span>   <span class=\"comment\">//客户端请求的URL地址</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> method = req.<span class=\"property\">method</span>  <span class=\"comment\">// 客户端的method请求类型</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;你的请求地址为&#x27;</span>+url+<span class=\"string\">&#x27;，请求类型是&#x27;</span>+method</span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;text/html; charset=utf-8&#x27;</span>)  <span class=\"comment\">//防止中文乱码</span></span><br><span class=\"line\">  res.<span class=\"title function_\">end</span>(str) <span class=\"comment\">//向客户端发送指定内容，并结束这次请求的处理过程</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//4.启动服务器</span></span><br><span class=\"line\">server.<span class=\"title function_\">listen</span>(<span class=\"number\">8008</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;http server running at http://127.0.0.1:8008&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>根据url响应不同的html内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;request&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> url = req.<span class=\"property\">url</span> </span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"string\">&#x27;&lt;h1&gt;404 Not found!&lt;h1&gt;&#x27;</span> <span class=\"comment\">//默认输出内容</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(url===<span class=\"string\">&#x27;/&#x27;</span>||url===<span class=\"string\">&#x27;/index.html&#x27;</span>)&#123;</span><br><span class=\"line\">    content=<span class=\"string\">&#x27;&lt;h1&gt;首页&lt;h1&gt;&#x27;</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(url===<span class=\"string\">&#x27;/about.html&#x27;</span>)&#123;</span><br><span class=\"line\">    content=<span class=\"string\">&#x27;&lt;h1&gt;关于页面&lt;h1&gt;&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>,<span class=\"string\">&#x27;text/html; charset=utf-8&#x27;</span>) </span><br><span class=\"line\">  res.<span class=\"title function_\">end</span>(content) </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-模块化\"><a href=\"#2-4-模块化\" class=\"headerlink\" title=\"2.4 模块化\"></a>2.4 模块化</h4><p>模块化是指解决一个复杂问题时，自顶向下逐层把系统划分成若干模块的过程。<br>优点：</p>\n<ol>\n<li>提高代码的复用性</li>\n<li>提高代码的可维护性</li>\n<li>可以实现按需加载</li>\n</ol>\n<p>分类：</p>\n<ul>\n<li>内置模块：Node.js提供的模块</li>\n<li>自定义模块：用户自己创建的js文件</li>\n<li>第三方模块：第三方开发出来的模块，需要先下载</li>\n</ul>\n<p>加载模块：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)  <span class=\"comment\">//加载内置模块，直接写名字</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./custom.js&#x27;</span>) <span class=\"comment\">//加载用户自定义模块，需要添加路径</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;moment&#x27;</span>) <span class=\"comment\">//加载第三方模块，直接写名字</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：<code>require()</code>方法加载模块，就会执行模块</p>\n<p>模块作用域：<br>自定义模块的变量、方法，只能在当前模块内被访问。</p>\n<p>每个js模块都有一个module对象，它里面存储了和当前模块有关的信息。</p>\n<p><code>moudle.exports</code>对象，将模块内的成员共享出去。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.挂载属性</span></span><br><span class=\"line\">moudle.<span class=\"property\">exports</span>.<span class=\"property\">uname</span>=<span class=\"string\">&#x27;zs&#x27;</span>;</span><br><span class=\"line\">moudle.<span class=\"property\">exports</span>.<span class=\"property\">sayHello</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello &#x27;</span>+uname);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.定义新对象</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">uname</span>: <span class=\"string\">&#x27;zs&#x27;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHello</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello &#x27;</span>+uname);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>简化代码使用<code>exports</code>对象，与<code>moudle.exports</code>对象用法一样，且两者指向一样。</p>\n<h4 id=\"2-5-包\"><a href=\"#2-5-包\" class=\"headerlink\" title=\"2.5 包\"></a>2.5 包</h4><p><strong>包</strong>是指第三方模块。<br><code>node_modules</code>文件夹存放项目安装的包，<code>package-lock.json</code>存放包的配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装全局包</span></span><br><span class=\"line\">npm install 包名 -g</span><br><span class=\"line\"><span class=\"comment\">#安装核心依赖包</span></span><br><span class=\"line\">npm install 包名</span><br><span class=\"line\"><span class=\"comment\">#安装开发依赖包</span></span><br><span class=\"line\">npm install 包名 -D</span><br><span class=\"line\"><span class=\"comment\">#安装指定版本的包</span></span><br><span class=\"line\">npm install 包名@2.22.2</span><br><span class=\"line\"><span class=\"comment\"># 版本号：第一位数字：大版本、第二位数字：功能版本、第三位数字：bug修复版本 </span></span><br><span class=\"line\"><span class=\"comment\">#卸载核心依赖包</span></span><br><span class=\"line\">npm uninstall 包名</span><br><span class=\"line\"><span class=\"comment\">#卸载全局包</span></span><br><span class=\"line\">npm uninstall 包名 -g</span><br></pre></td></tr></table></figure>\n\n<p>npm规定，在项目根目录中，必须提供一个叫做<code>package.json</code>的包管理配置文件，记录一些项目信息</p>\n<ul>\n<li>项目的名称、版本号、描述等</li>\n<li>项目中都用到了哪些包</li>\n<li>哪些在开发中使用</li>\n<li>哪些在开发和部署都要使用</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#新建项目时，创建package.json文件</span></span><br><span class=\"line\">npm init -y</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li>项目所在的文件夹路径只能为英文</li>\n<li>运行npm install安装包时，会自动向<code>package.json</code>添加信息</li>\n<li>运行npm uninstall卸载包时，会自动删除<code>package.json</code>中包相关信息</li>\n<li>节点dependencies会记录开发和部署都会用到的包</li>\n<li>节点devDependencies记录仅开发时用的包</li>\n</ul>\n<p>切换国内源下载包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前包的下载源</span></span><br><span class=\"line\">npm config get registry</span><br><span class=\"line\"><span class=\"comment\"># 切换国内源</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>\n\n<p><strong>模块加载</strong>:</p>\n<ul>\n<li>模块在第一次加载后会被缓存</li>\n<li>无论什么模块，都会先从缓存加载</li>\n<li>被加载目录先查找<code>package.json</code>的文件，并寻找<code>main</code>属性，作为<code>require()</code>加载入口</li>\n<li>如果没有<code>package.json</code>文件，查找该目录下的<code>index.js</code>文件</li>\n<li>如果没有找到<code>index.js</code>文件，会输出错误信息</li>\n</ul>\n<h3 id=\"3-Express\"><a href=\"#3-Express\" class=\"headerlink\" title=\"3.Express\"></a>3.Express</h3><blockquote>\n<p>基于Node.js平台，快速、开发、极简的Web开发框架</p>\n</blockquote>\n<h4 id=\"3-1-基本使用\"><a href=\"#3-1-基本使用\" class=\"headerlink\" title=\"3.1 基本使用\"></a>3.1 基本使用</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入express</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//创建web服务器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app=<span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"comment\">//启动web服务器</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">80</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;express server running at http://127.0.0.1&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>监听请求</p>\n<ul>\n<li>GET请求</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/user/:id&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//函数</span></span><br><span class=\"line\">  <span class=\"comment\">//req请求对象</span></span><br><span class=\"line\">  <span class=\"comment\">//res响应对象</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>() <span class=\"comment\">//把内容响应给客户端</span></span><br><span class=\"line\">  req.<span class=\"title function_\">query</span>() <span class=\"comment\">//访问客户端通过查询字符串的形式发送到服务器的参数</span></span><br><span class=\"line\">  req.<span class=\"property\">params</span>   <span class=\"comment\">// 访问url中，通过: 匹配到动态参数</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>POST请求</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;url&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//函数</span></span><br><span class=\"line\">  <span class=\"comment\">//req请求对象</span></span><br><span class=\"line\">  <span class=\"comment\">//res响应对象</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>() <span class=\"comment\">//把内容响应给客户端</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//托管静态资源，让文件夹都能让人访问，但存放静态资源的目录名不会出现在url中</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">static</span>(<span class=\"string\">&#x27;文件夹&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\">//可以在url添加文件夹1的名称来访问内容</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;文件夹1&#x27;</span>,express.<span class=\"title function_\">static</span>(<span class=\"string\">&#x27;文件夹2&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-路由\"><a href=\"#3-2-路由\" class=\"headerlink\" title=\"3.2 路由\"></a>3.2 路由</h4><blockquote>\n<p>Express 中，客户端请求与服务器处理函数之间的映射关系。</p>\n</blockquote>\n<p>Express的路由分为3部分，分别是请求的类型、请求的URL、处理函数</p>\n<p>为了方便管理需要对路由进行模块化：</p>\n<ol>\n<li>创建路由模块的js文件</li>\n<li>调用<code>express.Router()</code>函数创建路由对象</li>\n<li>向路由对象上挂载路由</li>\n<li>使用<code>module.exports</code>向外共享路由对象</li>\n<li>使用<code>app.use()</code>函数注册路由模块</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.<span class=\"title class_\">Router</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//挂载路由</span></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/user&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;GET user request&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/user&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;POST user request&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向外导出路由对象</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-中间件\"><a href=\"#3-3-中间件\" class=\"headerlink\" title=\"3.3 中间件\"></a>3.3 中间件</h4><p>当一个请求到达Express的服务器后，可以连续调用多个中间件，从而对这次请求进行预处理。</p>\n<p>中间件函数的形参必须包含next参数。</p>\n<p>next()函数把流转关系转到下一个中间件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//中间件函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">mw</span> = (<span class=\"params\">req,res,next</span>)=&gt;&#123;</span><br><span class=\"line\">  <span class=\"title function_\">next</span>()   <span class=\"comment\">//转到下一个中间件，没有就转给路由</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>调用<code>app.use(中间件函数)</code>，可以定义一个全局生效的中间件。</p>\n<p>多个中间件共享同一个<strong>req</strong>和<strong>res</strong>，可以在上游添加自定义的属性或者方法，给下游使用</p>\n<p>局部中间件：把中间件对象放在路由的url与处理函数之间，该中间件只对这个路由产生效果。</p>\n<p>分类：</p>\n<ol>\n<li>应用级别的中间件：绑定到app实例上的中间件</li>\n<li>路由级别的中间件：绑定到router实例上的中间件</li>\n<li>错误级别的中间件：专门捕获项目的抛出的异常错误（需要放在所有路由之后），必须有四个形参，(err,req,res,next)</li>\n<li>Express内置的中间件<ol>\n<li><code>express.static</code>快速托管静态资源</li>\n<li><code>express.json</code>解析JSON格式的请求体数据</li>\n<li><code>express.urlencoded</code>解析url格式的请求数据</li>\n</ol>\n</li>\n<li>第三方的中间件</li>\n</ol>\n<p>自定义中间件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> qs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;querystring&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"function\">(<span class=\"params\">req,res,next</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str =<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  req.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;data&#x27;</span>,<span class=\"function\">(<span class=\"params\">chunk</span>)=&gt;</span>&#123;   <span class=\"comment\">//监听data事件</span></span><br><span class=\"line\">    str += chunk</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  req.<span class=\"title function_\">end</span>(<span class=\"string\">&#x27;end&#x27;</span>,<span class=\"function\">()=&gt;</span>&#123;  <span class=\"comment\">//监听end事件</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str)</span><br><span class=\"line\">    <span class=\"comment\">//查询字符串解析成对象</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> body = qs.<span class=\"title function_\">parse</span>(str)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(body)</span><br><span class=\"line\">    <span class=\"comment\">// 挂载解析属性</span></span><br><span class=\"line\">    req.<span class=\"property\">body</span> = body</span><br><span class=\"line\">    <span class=\"title function_\">next</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-4-接口\"><a href=\"#3-4-接口\" class=\"headerlink\" title=\"3.4 接口\"></a>3.4 接口</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建服务器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app=<span class=\"title function_\">express</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//解析post请求的body</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">urlencoded</span>(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//配置跨域cors中间件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cors = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cors&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">cors</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./router&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api&#x27;</span>,router)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">8008</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;express server running at http://127.0.0.1:8008&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = express.<span class=\"title class_\">Router</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//GET接口</span></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/get&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> query=req.<span class=\"property\">query</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">status</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;GET 请求成功&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: query</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//POST接口</span></span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/post&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> body=req.<span class=\"property\">body</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">status</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;POST 请求成功&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: body</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向外导出路由对象</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>跨域问题：CORS和JSONP<br>CORS实现跨域响应步骤：</p>\n</blockquote>\n<ol>\n<li>安装cors中间件：<code>npm i cors</code></li>\n<li>使用<code>const cors=require(&#39;cors&#39;)</code>导入中间件，要在路由之前</li>\n<li>在路由之前调用配置中间件<code>app.use(cors())</code></li>\n</ol>\n<h3 id=\"4-数据库\"><a href=\"#4-数据库\" class=\"headerlink\" title=\"4.数据库\"></a>4.数据库</h3><h4 id=\"4-1-MySQL使用入门\"><a href=\"#4-1-MySQL使用入门\" class=\"headerlink\" title=\"4.1 MySQL使用入门\"></a>4.1 MySQL使用入门</h4><p>结构：数据库、数据表、数据行、字段（列）</p>\n<p>SQL：结构化查询语言，专门访问和处理<strong>关系数据库</strong>。</p>\n<p>sql的关键字大小写不敏感</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--向表中插入数据</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> 表名称(列名称)  <span class=\"keyword\">values</span>(数据)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除表中某一行数据</span></span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> 表名称  <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 更新表中某一行某一列数据</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表名称 <span class=\"keyword\">SET</span> 列名称 <span class=\"operator\">=</span> 新值 <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--从指定的表中查询所有的数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称</span><br><span class=\"line\"><span class=\"comment\">--从指定的表中查询特定列的数据，查询多个列用英文逗号隔开</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> 列名称 <span class=\"keyword\">FROM</span> 表名称</span><br></pre></td></tr></table></figure>\n\n<p><strong>WHERE</strong>可以添加运算符来筛选特定字段</p>\n<ul>\n<li><code>=</code>、<code>&lt;&gt;</code>、<code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>BETWEEN</code>、<code>LIKE</code></li>\n<li><code>AND</code>、<code>OR</code>运算符就是且和或，用来增加筛选条件</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--按照列名称大小进行升序排序</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> 列名称</span><br><span class=\"line\"><span class=\"comment\">--按照列名称大小进行降序排序 DESC</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> 列名称 <span class=\"keyword\">DESC</span></span><br><span class=\"line\"><span class=\"comment\">--按照列名称1进行大范围的降序排序再按照列名称2进行小范围的升序排序</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> 列名称<span class=\"number\">1</span> <span class=\"keyword\">DESC</span>, 列名称<span class=\"number\">2</span> <span class=\"keyword\">ASC</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--统计表中列为某值的个数</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">COUNT</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br><span class=\"line\"><span class=\"comment\">--统计表中列为某值的个数，并给结果起名字</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">COUNT</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">AS</span> 名称 <span class=\"keyword\">FROM</span> 表名称 <span class=\"keyword\">WHERE</span> 列名称 <span class=\"operator\">=</span> 某值</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-项目中连接MySQL数据库\"><a href=\"#4-2-项目中连接MySQL数据库\" class=\"headerlink\" title=\"4.2 项目中连接MySQL数据库\"></a>4.2 项目中连接MySQL数据库</h4><blockquote>\n<p>1.安装MySQL数据库第三方模块<code>mysql</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#mysql数据库</span></span><br><span class=\"line\">npm i mysql</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>2.通过mysql模块连接到MySQL数据库</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mysql = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mysql&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//创建连接池</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db = mysql.<span class=\"title function_\">createPool</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">host</span>: <span class=\"string\">&#x27;127.0.0.1&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">user</span>: <span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">port</span>: <span class=\"number\">3306</span>,</span><br><span class=\"line\">  <span class=\"attr\">password</span>: <span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">database</span>: <span class=\"string\">&#x27;mydb_01&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//检查连接正常</span></span><br><span class=\"line\">db.<span class=\"title function_\">query</span>(<span class=\"string\">&#x27;select 1&#x27;</span>,<span class=\"function\">(<span class=\"params\">err,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">message</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>3.通过mysql模块执行SQL语句</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sqlStr = <span class=\"string\">&#x27;select * from users&#x27;</span></span><br><span class=\"line\">db.<span class=\"title function_\">query</span>(sqlStr,<span class=\"function\">(<span class=\"params\">err,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">message</span>)   <span class=\"comment\">//查询失败</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)   <span class=\"comment\">// 查询成功</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 插入字段</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user=&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;Spuer-Man&#x27;</span> <span class=\"attr\">password</span>: <span class=\"string\">&#x27;123&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">//定义待执行的sql语句</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sqlStr = <span class=\"string\">&#x27;insert into users (name,password) values (?,?)&#x27;</span>    <span class=\"comment\">//英文问号作为占位符</span></span><br><span class=\"line\">db.<span class=\"title function_\">query</span>(sqlStr,[user.<span class=\"property\">name</span>,user.<span class=\"property\">password</span>],<span class=\"function\">(<span class=\"params\">err,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">message</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">affectedRows</span> === <span class=\"number\">1</span>)&#123;  <span class=\"comment\">//判断数据是否插入成功</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;插入数据成功&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-身份验证\"><a href=\"#4-3-身份验证\" class=\"headerlink\" title=\"4.3 身份验证\"></a>4.3 身份验证</h4><p>服务端渲染：在服务器动态拼接字符串数据，然后发送HTML页面<br>优点：</p>\n<ul>\n<li>前端耗时少</li>\n<li>有利于SEO<br>缺点：</li>\n<li>占用服务器端资源</li>\n<li>不利于前后端分离，开发效率低</li>\n</ul>\n<p>前后端分离：后端只负责API接口，前端使用Ajax调用接口<br>优点：</p>\n<ul>\n<li>开发体验好</li>\n<li>用户体验好</li>\n<li>减轻服务器端的渲染压力<br>缺点：</li>\n<li>不利于SEO</li>\n</ul>\n<p><strong>身份认证</strong>：</p>\n<blockquote>\n<p>1.服务端渲染：Session认证机制</p>\n</blockquote>\n<ul>\n<li>HTTP请求的无状态性，每次HTTP请求都是独立的。</li>\n<li>Cookie存储在浏览器中不超过4kb的字符串。不同域名的cookie各自独立，每当客户端发起请求时，会自动把当前域名下的未过期的cookie一同发送给服务器。</li>\n<li>服务器先通过响应头发送cookie给浏览器，浏览器保存cookie，浏览器再通过请求头发送cookie给服务器，服务器再响应内容。</li>\n<li>cookie不具有安全性</li>\n<li>session验证</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用session中间件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express-session&#x27;</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"title function_\">session</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">secret</span>: <span class=\"string\">&#x27;zs&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">resave</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">saveUninitialized</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">//解析提交的表单数据</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"property\">urlencoded</span>&#123;<span class=\"attr\">extended</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\">//登录API接口</span></span><br><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/login&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//判断用户提交信息是否正确</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(req.<span class=\"property\">body</span>.<span class=\"property\">username</span> !== <span class=\"string\">&#x27;admin&#x27;</span> || req.<span class=\"property\">body</span>.<span class=\"property\">password</span> !== <span class=\"string\">&#x27;000000&#x27;</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.<span class=\"title function_\">send</span>(&#123; <span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;登陆失败&#x27;</span>&#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  req.<span class=\"property\">session</span>.<span class=\"property\">user</span> = req.<span class=\"property\">body</span></span><br><span class=\"line\">  req.<span class=\"property\">session</span>.<span class=\"property\">islogin</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;登录成功&#x27;</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//取出session信息</span></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/api/username&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!req.<span class=\"property\">session</span>.<span class=\"property\">islogin</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.<span class=\"title function_\">send</span>(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;failed&#x27;</span>&#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">status</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">username</span>: req.<span class=\"property\">session</span>.<span class=\"property\">user</span>.<span class=\"property\">username</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//清除session</span></span><br><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/logout&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  req.<span class=\"property\">session</span>.<span class=\"title function_\">destroy</span>()</span><br><span class=\"line\">  res.<span class=\"title function_\">send</span>(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>,<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;退出成功&#x27;</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>2.前后端分离：JWT认证机制</p>\n</blockquote>\n<p>由于session需要配合cookie才能实现，而cookie默认不支持跨域访问，此时需要额外配置。</p>\n<p>JWT是最流行的跨域认证解决方案。<br>服务器将用户信息加密成Token字符串，发送到客户端，客户端保存后，再发送Token，服务器把Token还原后进行身份验证。</p>\n<p>JWT的组成部分：Header（头部）、Payload（有效荷载）、Signature（签名），三者使用英文点号分割</p>\n<p>JWT放在HTTP请求头的Authorization字段中</p>\n<p>安装JWT包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i jsonwebtoken express-jwt</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入JWT</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> jwt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> expressJwt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express-jwt&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//定义secret密钥，用来加密和解密</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> secretKey = <span class=\"string\">&#x27;my_secret_key&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//解析token，把用户信息挂载在req.user上</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">expressJwt</span>(&#123; <span class=\"attr\">secret</span>: secretKey &#125;).<span class=\"title function_\">unless</span>(&#123; <span class=\"attr\">path</span>: [<span class=\"regexp\">/^\\/api\\//</span>] &#125;))</span><br><span class=\"line\"><span class=\"comment\">//生成token</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tokenStr =jwt.<span class=\"title function_\">sign</span>(&#123;<span class=\"attr\">username</span>: <span class=\"string\">&#x27;admin&#x27;</span>&#125;,secretKey,&#123;<span class=\"attr\">expiresIn</span>: <span class=\"number\">60</span>*<span class=\"number\">60</span> &#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-在express中使用swagger写API文档\"><a href=\"#5-在express中使用swagger写API文档\" class=\"headerlink\" title=\"5.在express中使用swagger写API文档\"></a>5.在express中使用swagger写API文档</h3><h4 id=\"5-1-安装和使用swagger\"><a href=\"#5-1-安装和使用swagger\" class=\"headerlink\" title=\"5.1 安装和使用swagger\"></a>5.1 安装和使用swagger</h4><blockquote>\n<p>方法一：使用jsdoc文档注释来生成API文档</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装相关工具</span></span><br><span class=\"line\">npm i swagger-ui-express</span><br><span class=\"line\">npm i swagger-jsdoc</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerUi = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-ui-express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerJsdoc = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-jsdoc&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">    <span class=\"attr\">definition</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">openapi</span>: <span class=\"string\">&#x27;3.0.0&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">info</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Hello World&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">&#x27;1.0.0&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">description</span>: <span class=\"string\">&#x27;项目描述&#x27;</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">apis</span>: [<span class=\"string\">&#x27;./router/*.js&#x27;</span>], <span class=\"comment\">//路由文件夹下面的所有js文件</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerSpec = <span class=\"title function_\">swaggerJsdoc</span>(options);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api-docs&#x27;</span>, swaggerUi.<span class=\"property\">serve</span>, swaggerUi.<span class=\"title function_\">setup</span>(swaggerSpec));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在路由模块前写下面的注释 </span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@swagger</span></span></span><br><span class=\"line\"><span class=\"comment\"> * /my/article/addcate:</span></span><br><span class=\"line\"><span class=\"comment\"> * post:</span></span><br><span class=\"line\"><span class=\"comment\"> *   tags:</span></span><br><span class=\"line\"><span class=\"comment\"> *      - 文章分类</span></span><br><span class=\"line\"><span class=\"comment\"> *   summary: 新增文章分类</span></span><br><span class=\"line\"><span class=\"comment\"> *   description: 来新增加一个文章的分类</span></span><br><span class=\"line\"><span class=\"comment\"> *   parameters:</span></span><br><span class=\"line\"><span class=\"comment\"> *      - name: name</span></span><br><span class=\"line\"><span class=\"comment\"> *        description: 文章分类名</span></span><br><span class=\"line\"><span class=\"comment\"> *        in: body</span></span><br><span class=\"line\"><span class=\"comment\"> *        required: true</span></span><br><span class=\"line\"><span class=\"comment\"> *        type: string</span></span><br><span class=\"line\"><span class=\"comment\"> *      - name: alias</span></span><br><span class=\"line\"><span class=\"comment\"> *        description: 文章分类的别名</span></span><br><span class=\"line\"><span class=\"comment\"> *        in: body</span></span><br><span class=\"line\"><span class=\"comment\"> *        required: true</span></span><br><span class=\"line\"><span class=\"comment\"> *        type: string</span></span><br><span class=\"line\"><span class=\"comment\"> *   responses:</span></span><br><span class=\"line\"><span class=\"comment\"> *      0:</span></span><br><span class=\"line\"><span class=\"comment\"> *         description: success，新增文章分类成功</span></span><br><span class=\"line\"><span class=\"comment\"> *      1:</span></span><br><span class=\"line\"><span class=\"comment\"> *         description: failed，新增文章分类失败</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>方法二：使用json文件来写</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装相关工具</span></span><br><span class=\"line\">npm i swagger-ui-express</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerUi = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-ui-express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerDocument = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./swagger.json&#x27;</span>);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api-docs&#x27;</span>, swaggerUi.<span class=\"property\">serve</span>, swaggerUi.<span class=\"title function_\">setup</span>(swaggerDocument));</span><br></pre></td></tr></table></figure>\n\n<p>不熟悉语法时，使用在线的 <a href=\"https://editor.swagger.io/\">swagger editor</a> 进行API接口的编辑<br>选择<code>File-&gt;Convert and save as JSON</code>，下载<code>swagger.json</code>放进项目中<br>熟悉语法后，直接对<code>swagger.json</code>进行修改，不需要编辑器了<br>官方文档：<a href=\"https://swagger.io/docs/specification/about/\">https://swagger.io/docs/specification/about/</a></p>\n<blockquote>\n<p>方法三：使用yaml文件来写</p>\n</blockquote>\n<p>其实是利用yamljs模块把yaml文件转化为json文件，如果直接写json文件，会发现json文件的所有属性都会加双引号，还有很多格式类的限制，没有yaml写起来舒服，快速。<br>而且yaml文件写法才是最贴合官网的语法。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装相关工具</span></span><br><span class=\"line\">npm i swagger-ui-express</span><br><span class=\"line\">npm i --save yamljs</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerUi = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;swagger-ui-express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">YAML</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;yamljs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> swaggerDocument = <span class=\"variable constant_\">YAML</span>.<span class=\"title function_\">load</span>(<span class=\"string\">&#x27;./swagger.yaml&#x27;</span>);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/api-docs&#x27;</span>, swaggerUi.<span class=\"property\">serve</span>, swaggerUi.<span class=\"title function_\">setup</span>(swaggerDocument));</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-YAML\"><a href=\"#5-2-YAML\" class=\"headerlink\" title=\"5.2 YAML\"></a>5.2 YAML</h4><p>YAML是一种标记语言，文件名为<code>.yaml</code></p>\n<ol>\n<li>大小写敏感</li>\n<li>使用缩进标识层级关系</li>\n<li>缩进不允许Tab，只允许空格</li>\n<li>缩进的空格个数不重要，但是同级元素需要左对齐</li>\n<li>注释：<code>#</code></li>\n<li>支持的数据类型：<ol>\n<li>对象</li>\n<li>数组：使用<code>-</code>添加在元素前，表示该数组的元素，每一个数组元素都得添加。</li>\n<li>纯数：任意不可分的数据</li>\n</ol>\n</li>\n<li><code>|</code>使用换行 <code>&gt;</code>忽略换行</li>\n<li><code>$变量</code>标记一个属性，用<code>&lt;&lt;: *变量</code>来导入标记非重复的属性值</li>\n</ol>\n<h4 id=\"5-3-OpenAPI-规范\"><a href=\"#5-3-OpenAPI-规范\" class=\"headerlink\" title=\"5.3 OpenAPI 规范\"></a>5.3 OpenAPI 规范</h4><ul>\n<li>数据类型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><code>type</code></th>\n<th><code>format</code></th>\n<th>评论</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>integer</code></td>\n<td><code>int32</code></td>\n<td>有符号 32 位</td>\n</tr>\n<tr>\n<td><code>integer</code></td>\n<td><code>int64</code></td>\n<td>有符号 64 位 (a.k.a long)</td>\n</tr>\n<tr>\n<td><code>number</code></td>\n<td><code>float</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>number</code></td>\n<td><code>double</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>byte</code></td>\n<td>base64 编码字符</td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>binary</code></td>\n<td>任何八位字节序列</td>\n</tr>\n<tr>\n<td><code>boolean</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>date</code></td>\n<td>由<code>full-date</code>定义 <a href=\"https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14\">RFC3339</a></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>date-time</code></td>\n<td>由<code>date-time</code>定义 <a href=\"https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14\">RFC3339</a></td>\n</tr>\n<tr>\n<td><code>string</code></td>\n<td><code>password</code></td>\n<td>提示 UI 以隐藏输入</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>URL中的相对引用</p>\n</blockquote>\n<p>除非另有说明，否则所有属于 URL 的属性都可以是 <a href=\"https://tools.ietf.org/html/rfc3986#section-4.2\">RFC3986</a> 定义的相对引用。使用<a href=\"#66-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AF%B9%E8%B1%A1\">服务器对象</a>中定义的 URL 作为基本 URI 来解析相对引用。<br><code>$ref</code> 中使用的相对引用按照 JSON 引用进行处理，使用当前文档的 URL 作为基本 URI。</p>\n<p>具体规范见：<a href=\"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md\">OpenAPI规范英文版</a>，<a href=\"https://openapi.apifox.cn/\">OpenAPI规范中文版</a></p>\n"},{"title":"HTML5快速入门语法","img":"https://cdn.pixabay.com/photo/2018/09/05/08/05/party-3655712_960_720.jpg","excerpt":"HTML5的学习笔记，以备查找和复习。","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-04-19T15:26:54.000Z","_content":"\n# HTML5快速入门语法\n\n## 一、基本语法\n\n### 1.前言\n本文参考视频：<https://www.bilibili.com/video/BV1Kg411T7t9>\n\n本文编辑器为VScode，使用`!+Tab键`快捷生成html骨架\n　　\n标签成对出现：双标签（多）\n\n标签单个出现：单标签（少）\n\n标签关系：包含关系和并列关系\n\nhtml骨架的标签：\n\n| 标签名          | 定义         | 说明                                        |\n| ----------------- | -------------- | --------------------------------------------- |\n| `<html></html>`   | HTML标签     | 页面中最大的标签，根标签                    |\n| `<head></head>`   | 文档头部     | 注意在head标签中，我们必须设置的标签为title |\n| `<title></title>` | 文档标题     | 让网页有一个标题                            |\n| `<body></body>`   | 文档主体     | 元素包含网页所有内容                        |\n| `<!DOCTYPE>`      | 文档类型声明 | 告诉浏览器使用哪种HTML版本                  |\n\n　　\n\n### 2.常用标签\n\n#### 2.1 标题标签\n\n```html\n<h1>这是一级标题</h1>\n<h2>这是二级标题</h2>\n<h3>这是三级标题</h3>\n<h4>这是四级标题</h4>\n<h5>这是五级标题</h5>\n<h6>这是六级标题</h6>\n```\n\n#### 2.2 段落标签\n\n```html\n<p>这是段落标签</p>\n```\n段落除了换行，还有一段距离\n\n#### 2.3 换行标签\n\n```html\n<br>\n```\n\n#### 2.4 水平分割线标签\n\n```html\n<hr>\n```\n\n#### 2.5 文本格式化标签\n\n| 语义   | 标签                         | 说明                   |\n| -------- | ------------------------------ | ------------------------ |\n| 加粗   | `<strong></strong>或者<b></b>` | `<strong>`语义更强力一点 |\n| 倾斜   | `<em></em>或者<i></i>  `       | `<em>`语义更强力一点     |\n| 删除线 |` <del></del>或者<s></s>`       | `<del>`语义更强力一点    |\n| 下划线 | `<ins></ins>或者<u ></u> `     |` <ins>`语义更强力一点    |\n\n\n#### 2.6 图像标签\n\n```html\n<img src=\"url\">\n```\n\n单标签，src为`<img>`的必须属性，用来指定图片的路径，相对路径或绝对路径。\n\n| 属性   | 属性值   | 说明                                 |\n| -------- | ---------- | -------------------------------------- |\n| src    | 图片路径 | 必须属性                             |\n| alt    | 文本     | 替换文本，图像不能显示的文字         |\n| title  | 文本     | 提示文本，鼠标放到图像上，显示的文字 |\n| width  | 像素     | 设置图像的宽度                       |\n| height | 像素     | 设置图像的高度                       |\n| border | 像素     | 设置图像的边框粗细                   |\n\n* 图像可以拥有多个属性\n* 属性不分前后顺序，标签名与属性、属性与属性均以==空格==分开\n* 属性采取键值对的格式，即 属性= \"属性值\"\n\n#### 2.7 音频标签\n\n```html\n<audio src=\"url\" controls></audio>\n```\n| 属性   | 属性值   | 说明                                 |\n| -------- | ---------- | -------------------------------------- |\n| src    | 音频路径 | 必须属性                             |\n| controls  | 无     | 显示播放的控件         |\n| autoplay  | 无     | 自动播放（部分浏览器不支持） |\n| loop  | 无     | 循环播放                  |\n\n* 目前支持的音频格式：MP3、Wav、Ogg\n\n#### 2.8 视频标签\n\n```html\n<video src=\"\" controls></video>\n```\n| 属性   | 属性值   | 说明                                 |\n| -------- | ---------- | -------------------------------------- |\n| src    | 视频路径 | 必须属性                             |\n| controls  | 无     | 显示播放的控件         |\n| autoplay  | 无     | 自动播放（谷歌浏览器配合muted实现静音播放） |\n| loop  | 无     | 循环播放                  |\n\n* 目前支持的视频格式：MP4、WebM、Ogg\n\n#### 2.9 链接标签\n\n```html\n<a href=\"url\">文本或者图像</a>\n```\n\n| 属性   | 作用                                                                                  |\n| -------- | --------------------------------------------------------------------------------------- |\n| href   | 用于指定链接的url地址，必须属性                                                       |\n| target | 用于指定链接页面的打开方式，其中_self为默认值(在当前窗口打开)，_blank为新窗口打开方式 |\n\n根据href属性值的不同可分为：\n\n* 外部链接：直接的外部地址\n* 内部链接：本地的html网页文件的相对路径\n* 空链接：\"#\"\n* 下载链接：链接地址为一个压缩包，或者其他文件\n* 锚点链接：\"#id\"，通过对标题设置id，可以快速定位当前页面的某个位置\n\n\n#### 2.10 注释标签\n\n```html\n<!-- 这是一段注释 -->\n```\n\n#### 2.11 列表标签\n\n作用：布局，整洁有序\n\n* 无序列表\n  ```html\n  <!--拥有自己的属性值，不常用，都用css设置-->\n  <!--ul只能有li标签，而li标签可以容纳所有标签-->\n  <ul>\n  \t<li>列表1</li>\n  \t<li>列表2</li>\n  </ul>\n  ```\n* 有序列表\n  ```html\n  <!--用css设置属性-->\n  <!--ol只能有li标签，而li标签可以容纳所有标签-->\n  <ol>\n          <li>列表1</li>\n          <li>列表2</li>\n  </ol>\n  ```\n* 自定义列表\n  ```html\n  <!--dl只能有dt和dd，而dd和dt可以放任意标签-->  \n  <!--dt与dd是兄弟关系-->  \n  <dl>\n          <dt>名词1</dt>\n          <dd>名词解释</dd>\n  </dl>\n  ```\n\n#### 2.12 表格标签\n\n作用：展示数据\n\n```html\n<table>\n  <thead>\n    <tr>\n      <th>表头1</th><th>表头2</th><th>表头3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>这是数据1</td><td>这是数据2</td><td>这是数据3</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n\n* `<table>`表示一个单元格\n  这些都是`<table>`的属性，通常不使用（用css来对表格进行修饰）\n  | 属性名      | 属性值              | 说明                             |\n  | ------------- | --------------------- | ---------------------------------- |\n  | align       | left、center、right | 规定表格相对于周围元素的对齐方式 |\n  | border      | 1或\"\"               | 规定表格单元格是否拥有边框       |\n  | cellpadding | 像素值              | 规定单元边沿与其内容之间的空白   |\n  | cellspacing | 像素值              | 规定单元格之间的空白             |\n  | width       | 像素值或者百分比    | 规定表格宽度                     |\n* `<tr>`表示一行，必须在`<table>`内\n* `<td>`表示一个单元格，必须在`<tr>`内\n  * 属性1：合并单元格，在起始（左上方）单元格内添加属性，合并后删除多余的单元格\n    跨行合并（第一行和第一行合并-->垂直合并）：rowspan = \"合并单元格个数\"\n    跨列合并（第一列和第二列合并-->水平合并）：clospan = \"合并单元格个数\"\n* `<th>`表示表头（居中加粗），也是一共单元格，也是在`<tr>`内\n* `<thead>`表格头部区域，在`<table>`内\n* `<tbody>`表格主体区域，在`<table>`内\n* `<tfoot>`表格底部区域，在`<table>`内\n* `<caption>`表格大标题，在`<table>`内\n\n\n#### 2.13 表单标签\n\n　　表单构成：表单域、表单控件、提示信息\n\n* 表单域`<form>`标签\n  | 属性   | 属性值   | 说明                                           |\n  | -------- | ---------- | ------------------------------------------------ |\n  | action | url地址  | 用于指定接收处理表单数据的服务器程序的url地址  |\n  | method | get/post | 用于设置表单数据的提交方式，其值为get或者post  |\n  | name   | 名称     | 用于指定表单名称，以区别同一个页面的多个表单域 |\n* 输入标签\n  ```html\n  <!--type为必须属性，通过对type设置属性来指定控件-->\n  <input type=\"属性值\">\n  ```\n  | type属性值 | 说明                             |\n  | ------------ | ---------------------------------- |\n  | button     | 定义按钮                         |\n  | reset      | 定义重置按钮，清除表单数据       |\n  | submit     | 定义提交按钮，提交给服务器       |\n  | image      | 定义图像形式的提交按钮           |\n  | checkbox   | 定义复选框                       |\n  | radio      | 定义单选按钮                     |\n  | file       | 定义输入字段，供文件上传         |\n  | hidden     | 定义隐藏的输入字段               |\n  | password   | 定义密码字段，该字段的字符被掩码 |\n  | text       | 定义单行输入字段                 |\n\n  | input属性 | 属性值  | 说明                       |\n  | ----------- | --------- | ---------------------------- |\n  | type      | 自定义  | 定义输入类型          |\n  | name      | 自定义  | 定义input元素名称          |\n  | value     | 自定义  | 规定input元素的值          |\n  | checked   | checked | 规定此元素首次加载时被选中 |\n  | maxlength | 正整数  | 规定输入的最大字符长度     |\n  | placeholder | 字符串  | 输入框提示字     |\n  | multiple | 无  | 多个文件上传     |\n\n* 按钮标签\n  ```html\n  <button type=\"属性值\">任意内容</button>\n  ```\n  | type属性值 | 说明                             |\n  | ------------ | ---------------------------------- |\n  | button     | 没有功能，配合js使用              |\n  | reset      | 定义重置按钮，清除表单数据       |\n  | submit     | 定义提交按钮，提交给服务器       |\n* 下拉菜单标签\n  ```html\n  <!--至少有一对option-->\n  <!--option添加selected属性，当前为默认选项-->\n  <select>\n  \t<option>选项1</option>\n  \t<option>选项2</option>\n  \t<option selected>选项3</option>\n  </select>\n  ```\n* 文本域标签\n  ```html\n  <textarea></textarea>\n  ```\n  属性值都用css设定不用记，在标签中间输入文字会显示在文本框中\n* 标签标签\n  ```  html\n  <label><input type=\"radio\" name=\"sex\">男</label>\n  <label><input type=\"radio\" name=\"sex\">女</label>\n  ```\n  `<label>`标签包裹住输入标签\n\n\n#### 2.14 布局标签\n\ndiv，表示分割、分区。span，表示跨区、跨距\n\n* ` <div>`标签用来布局，但是一行只能放一个`<div>`。大盒子\n* `<span>`标签用来布局，一行能放多个。小盒子\n  \n#### 2.15 字符标签\n| 特殊字符 | 描述     | 字符代码  |\n| ---------- | ---------- | ----------- |\n|        | 空格符   | &nbsp；   |\n| <        | 小于号   | &It;      |\n| >        | 大于号   | &gt；     |\n| &        | 和号     | &amp；    |\n| ￥       | 人民币   | &yen；    |\n| ©       | 版权     | &copy；   |\n| ®       | 注册商标 | &reg；    |\n| °       | 角度     | &deg；    |\n| ±       | 正负号   | &plusmn； |\n| ×       | 乘号     | &times；  |\n| ÷       | 除号     | &divide； |\n| ²       | 平方     | &sup2；   |\n| ³       | 立方     | &sup3；   |\n","source":"_posts/计算机/前端/HTML5快速入门语法.md","raw":"---\ntitle: HTML5快速入门语法\nimg: https://cdn.pixabay.com/photo/2018/09/05/08/05/party-3655712_960_720.jpg\nexcerpt: HTML5的学习笔记，以备查找和复习。\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [前端,编程语法,HTML5]\nmathjax: true\ndate: 2022-04-19 23:26:54\n---\n\n# HTML5快速入门语法\n\n## 一、基本语法\n\n### 1.前言\n本文参考视频：<https://www.bilibili.com/video/BV1Kg411T7t9>\n\n本文编辑器为VScode，使用`!+Tab键`快捷生成html骨架\n　　\n标签成对出现：双标签（多）\n\n标签单个出现：单标签（少）\n\n标签关系：包含关系和并列关系\n\nhtml骨架的标签：\n\n| 标签名          | 定义         | 说明                                        |\n| ----------------- | -------------- | --------------------------------------------- |\n| `<html></html>`   | HTML标签     | 页面中最大的标签，根标签                    |\n| `<head></head>`   | 文档头部     | 注意在head标签中，我们必须设置的标签为title |\n| `<title></title>` | 文档标题     | 让网页有一个标题                            |\n| `<body></body>`   | 文档主体     | 元素包含网页所有内容                        |\n| `<!DOCTYPE>`      | 文档类型声明 | 告诉浏览器使用哪种HTML版本                  |\n\n　　\n\n### 2.常用标签\n\n#### 2.1 标题标签\n\n```html\n<h1>这是一级标题</h1>\n<h2>这是二级标题</h2>\n<h3>这是三级标题</h3>\n<h4>这是四级标题</h4>\n<h5>这是五级标题</h5>\n<h6>这是六级标题</h6>\n```\n\n#### 2.2 段落标签\n\n```html\n<p>这是段落标签</p>\n```\n段落除了换行，还有一段距离\n\n#### 2.3 换行标签\n\n```html\n<br>\n```\n\n#### 2.4 水平分割线标签\n\n```html\n<hr>\n```\n\n#### 2.5 文本格式化标签\n\n| 语义   | 标签                         | 说明                   |\n| -------- | ------------------------------ | ------------------------ |\n| 加粗   | `<strong></strong>或者<b></b>` | `<strong>`语义更强力一点 |\n| 倾斜   | `<em></em>或者<i></i>  `       | `<em>`语义更强力一点     |\n| 删除线 |` <del></del>或者<s></s>`       | `<del>`语义更强力一点    |\n| 下划线 | `<ins></ins>或者<u ></u> `     |` <ins>`语义更强力一点    |\n\n\n#### 2.6 图像标签\n\n```html\n<img src=\"url\">\n```\n\n单标签，src为`<img>`的必须属性，用来指定图片的路径，相对路径或绝对路径。\n\n| 属性   | 属性值   | 说明                                 |\n| -------- | ---------- | -------------------------------------- |\n| src    | 图片路径 | 必须属性                             |\n| alt    | 文本     | 替换文本，图像不能显示的文字         |\n| title  | 文本     | 提示文本，鼠标放到图像上，显示的文字 |\n| width  | 像素     | 设置图像的宽度                       |\n| height | 像素     | 设置图像的高度                       |\n| border | 像素     | 设置图像的边框粗细                   |\n\n* 图像可以拥有多个属性\n* 属性不分前后顺序，标签名与属性、属性与属性均以==空格==分开\n* 属性采取键值对的格式，即 属性= \"属性值\"\n\n#### 2.7 音频标签\n\n```html\n<audio src=\"url\" controls></audio>\n```\n| 属性   | 属性值   | 说明                                 |\n| -------- | ---------- | -------------------------------------- |\n| src    | 音频路径 | 必须属性                             |\n| controls  | 无     | 显示播放的控件         |\n| autoplay  | 无     | 自动播放（部分浏览器不支持） |\n| loop  | 无     | 循环播放                  |\n\n* 目前支持的音频格式：MP3、Wav、Ogg\n\n#### 2.8 视频标签\n\n```html\n<video src=\"\" controls></video>\n```\n| 属性   | 属性值   | 说明                                 |\n| -------- | ---------- | -------------------------------------- |\n| src    | 视频路径 | 必须属性                             |\n| controls  | 无     | 显示播放的控件         |\n| autoplay  | 无     | 自动播放（谷歌浏览器配合muted实现静音播放） |\n| loop  | 无     | 循环播放                  |\n\n* 目前支持的视频格式：MP4、WebM、Ogg\n\n#### 2.9 链接标签\n\n```html\n<a href=\"url\">文本或者图像</a>\n```\n\n| 属性   | 作用                                                                                  |\n| -------- | --------------------------------------------------------------------------------------- |\n| href   | 用于指定链接的url地址，必须属性                                                       |\n| target | 用于指定链接页面的打开方式，其中_self为默认值(在当前窗口打开)，_blank为新窗口打开方式 |\n\n根据href属性值的不同可分为：\n\n* 外部链接：直接的外部地址\n* 内部链接：本地的html网页文件的相对路径\n* 空链接：\"#\"\n* 下载链接：链接地址为一个压缩包，或者其他文件\n* 锚点链接：\"#id\"，通过对标题设置id，可以快速定位当前页面的某个位置\n\n\n#### 2.10 注释标签\n\n```html\n<!-- 这是一段注释 -->\n```\n\n#### 2.11 列表标签\n\n作用：布局，整洁有序\n\n* 无序列表\n  ```html\n  <!--拥有自己的属性值，不常用，都用css设置-->\n  <!--ul只能有li标签，而li标签可以容纳所有标签-->\n  <ul>\n  \t<li>列表1</li>\n  \t<li>列表2</li>\n  </ul>\n  ```\n* 有序列表\n  ```html\n  <!--用css设置属性-->\n  <!--ol只能有li标签，而li标签可以容纳所有标签-->\n  <ol>\n          <li>列表1</li>\n          <li>列表2</li>\n  </ol>\n  ```\n* 自定义列表\n  ```html\n  <!--dl只能有dt和dd，而dd和dt可以放任意标签-->  \n  <!--dt与dd是兄弟关系-->  \n  <dl>\n          <dt>名词1</dt>\n          <dd>名词解释</dd>\n  </dl>\n  ```\n\n#### 2.12 表格标签\n\n作用：展示数据\n\n```html\n<table>\n  <thead>\n    <tr>\n      <th>表头1</th><th>表头2</th><th>表头3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>这是数据1</td><td>这是数据2</td><td>这是数据3</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n\n* `<table>`表示一个单元格\n  这些都是`<table>`的属性，通常不使用（用css来对表格进行修饰）\n  | 属性名      | 属性值              | 说明                             |\n  | ------------- | --------------------- | ---------------------------------- |\n  | align       | left、center、right | 规定表格相对于周围元素的对齐方式 |\n  | border      | 1或\"\"               | 规定表格单元格是否拥有边框       |\n  | cellpadding | 像素值              | 规定单元边沿与其内容之间的空白   |\n  | cellspacing | 像素值              | 规定单元格之间的空白             |\n  | width       | 像素值或者百分比    | 规定表格宽度                     |\n* `<tr>`表示一行，必须在`<table>`内\n* `<td>`表示一个单元格，必须在`<tr>`内\n  * 属性1：合并单元格，在起始（左上方）单元格内添加属性，合并后删除多余的单元格\n    跨行合并（第一行和第一行合并-->垂直合并）：rowspan = \"合并单元格个数\"\n    跨列合并（第一列和第二列合并-->水平合并）：clospan = \"合并单元格个数\"\n* `<th>`表示表头（居中加粗），也是一共单元格，也是在`<tr>`内\n* `<thead>`表格头部区域，在`<table>`内\n* `<tbody>`表格主体区域，在`<table>`内\n* `<tfoot>`表格底部区域，在`<table>`内\n* `<caption>`表格大标题，在`<table>`内\n\n\n#### 2.13 表单标签\n\n　　表单构成：表单域、表单控件、提示信息\n\n* 表单域`<form>`标签\n  | 属性   | 属性值   | 说明                                           |\n  | -------- | ---------- | ------------------------------------------------ |\n  | action | url地址  | 用于指定接收处理表单数据的服务器程序的url地址  |\n  | method | get/post | 用于设置表单数据的提交方式，其值为get或者post  |\n  | name   | 名称     | 用于指定表单名称，以区别同一个页面的多个表单域 |\n* 输入标签\n  ```html\n  <!--type为必须属性，通过对type设置属性来指定控件-->\n  <input type=\"属性值\">\n  ```\n  | type属性值 | 说明                             |\n  | ------------ | ---------------------------------- |\n  | button     | 定义按钮                         |\n  | reset      | 定义重置按钮，清除表单数据       |\n  | submit     | 定义提交按钮，提交给服务器       |\n  | image      | 定义图像形式的提交按钮           |\n  | checkbox   | 定义复选框                       |\n  | radio      | 定义单选按钮                     |\n  | file       | 定义输入字段，供文件上传         |\n  | hidden     | 定义隐藏的输入字段               |\n  | password   | 定义密码字段，该字段的字符被掩码 |\n  | text       | 定义单行输入字段                 |\n\n  | input属性 | 属性值  | 说明                       |\n  | ----------- | --------- | ---------------------------- |\n  | type      | 自定义  | 定义输入类型          |\n  | name      | 自定义  | 定义input元素名称          |\n  | value     | 自定义  | 规定input元素的值          |\n  | checked   | checked | 规定此元素首次加载时被选中 |\n  | maxlength | 正整数  | 规定输入的最大字符长度     |\n  | placeholder | 字符串  | 输入框提示字     |\n  | multiple | 无  | 多个文件上传     |\n\n* 按钮标签\n  ```html\n  <button type=\"属性值\">任意内容</button>\n  ```\n  | type属性值 | 说明                             |\n  | ------------ | ---------------------------------- |\n  | button     | 没有功能，配合js使用              |\n  | reset      | 定义重置按钮，清除表单数据       |\n  | submit     | 定义提交按钮，提交给服务器       |\n* 下拉菜单标签\n  ```html\n  <!--至少有一对option-->\n  <!--option添加selected属性，当前为默认选项-->\n  <select>\n  \t<option>选项1</option>\n  \t<option>选项2</option>\n  \t<option selected>选项3</option>\n  </select>\n  ```\n* 文本域标签\n  ```html\n  <textarea></textarea>\n  ```\n  属性值都用css设定不用记，在标签中间输入文字会显示在文本框中\n* 标签标签\n  ```  html\n  <label><input type=\"radio\" name=\"sex\">男</label>\n  <label><input type=\"radio\" name=\"sex\">女</label>\n  ```\n  `<label>`标签包裹住输入标签\n\n\n#### 2.14 布局标签\n\ndiv，表示分割、分区。span，表示跨区、跨距\n\n* ` <div>`标签用来布局，但是一行只能放一个`<div>`。大盒子\n* `<span>`标签用来布局，一行能放多个。小盒子\n  \n#### 2.15 字符标签\n| 特殊字符 | 描述     | 字符代码  |\n| ---------- | ---------- | ----------- |\n|        | 空格符   | &nbsp；   |\n| <        | 小于号   | &It;      |\n| >        | 大于号   | &gt；     |\n| &        | 和号     | &amp；    |\n| ￥       | 人民币   | &yen；    |\n| ©       | 版权     | &copy；   |\n| ®       | 注册商标 | &reg；    |\n| °       | 角度     | &deg；    |\n| ±       | 正负号   | &plusmn； |\n| ×       | 乘号     | &times；  |\n| ÷       | 除号     | &divide； |\n| ²       | 平方     | &sup2；   |\n| ³       | 立方     | &sup3；   |\n","slug":"计算机/前端/HTML5快速入门语法","published":1,"updated":"2022-04-23T07:53:49.334Z","layout":"post","photos":[],"_id":"cm1z7gipp000udwvx92smf6ie","content":"<h1 id=\"HTML5快速入门语法\"><a href=\"#HTML5快速入门语法\" class=\"headerlink\" title=\"HTML5快速入门语法\"></a>HTML5快速入门语法</h1><h2 id=\"一、基本语法\"><a href=\"#一、基本语法\" class=\"headerlink\" title=\"一、基本语法\"></a>一、基本语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>本文参考视频：<a href=\"https://www.bilibili.com/video/BV1Kg411T7t9\">https://www.bilibili.com/video/BV1Kg411T7t9</a></p>\n<p>本文编辑器为VScode，使用<code>!+Tab键</code>快捷生成html骨架<br>　　<br>标签成对出现：双标签（多）</p>\n<p>标签单个出现：单标签（少）</p>\n<p>标签关系：包含关系和并列关系</p>\n<p>html骨架的标签：</p>\n<table>\n<thead>\n<tr>\n<th>标签名</th>\n<th>定义</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>&lt;html&gt;&lt;/html&gt;</code></td>\n<td>HTML标签</td>\n<td>页面中最大的标签，根标签</td>\n</tr>\n<tr>\n<td><code>&lt;head&gt;&lt;/head&gt;</code></td>\n<td>文档头部</td>\n<td>注意在head标签中，我们必须设置的标签为title</td>\n</tr>\n<tr>\n<td><code>&lt;title&gt;&lt;/title&gt;</code></td>\n<td>文档标题</td>\n<td>让网页有一个标题</td>\n</tr>\n<tr>\n<td><code>&lt;body&gt;&lt;/body&gt;</code></td>\n<td>文档主体</td>\n<td>元素包含网页所有内容</td>\n</tr>\n<tr>\n<td><code>&lt;!DOCTYPE&gt;</code></td>\n<td>文档类型声明</td>\n<td>告诉浏览器使用哪种HTML版本</td>\n</tr>\n</tbody></table>\n<p>　　</p>\n<h3 id=\"2-常用标签\"><a href=\"#2-常用标签\" class=\"headerlink\" title=\"2.常用标签\"></a>2.常用标签</h3><h4 id=\"2-1-标题标签\"><a href=\"#2-1-标题标签\" class=\"headerlink\" title=\"2.1 标题标签\"></a>2.1 标题标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一级标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>这是二级标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>这是三级标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>这是四级标题<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>这是五级标题<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>这是六级标题<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-段落标签\"><a href=\"#2-2-段落标签\" class=\"headerlink\" title=\"2.2 段落标签\"></a>2.2 段落标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是段落标签<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>段落除了换行，还有一段距离</p>\n<h4 id=\"2-3-换行标签\"><a href=\"#2-3-换行标签\" class=\"headerlink\" title=\"2.3 换行标签\"></a>2.3 换行标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-水平分割线标签\"><a href=\"#2-4-水平分割线标签\" class=\"headerlink\" title=\"2.4 水平分割线标签\"></a>2.4 水平分割线标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-文本格式化标签\"><a href=\"#2-5-文本格式化标签\" class=\"headerlink\" title=\"2.5 文本格式化标签\"></a>2.5 文本格式化标签</h4><table>\n<thead>\n<tr>\n<th>语义</th>\n<th>标签</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>加粗</td>\n<td><code>&lt;strong&gt;&lt;/strong&gt;或者&lt;b&gt;&lt;/b&gt;</code></td>\n<td><code>&lt;strong&gt;</code>语义更强力一点</td>\n</tr>\n<tr>\n<td>倾斜</td>\n<td><code>&lt;em&gt;&lt;/em&gt;或者&lt;i&gt;&lt;/i&gt;  </code></td>\n<td><code>&lt;em&gt;</code>语义更强力一点</td>\n</tr>\n<tr>\n<td>删除线</td>\n<td><code> &lt;del&gt;&lt;/del&gt;或者&lt;s&gt;&lt;/s&gt;</code></td>\n<td><code>&lt;del&gt;</code>语义更强力一点</td>\n</tr>\n<tr>\n<td>下划线</td>\n<td><code>&lt;ins&gt;&lt;/ins&gt;或者&lt;u &gt;&lt;/u&gt; </code></td>\n<td><code> &lt;ins&gt;</code>语义更强力一点</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-6-图像标签\"><a href=\"#2-6-图像标签\" class=\"headerlink\" title=\"2.6 图像标签\"></a>2.6 图像标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>单标签，src为<code>&lt;img&gt;</code>的必须属性，用来指定图片的路径，相对路径或绝对路径。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>src</td>\n<td>图片路径</td>\n<td>必须属性</td>\n</tr>\n<tr>\n<td>alt</td>\n<td>文本</td>\n<td>替换文本，图像不能显示的文字</td>\n</tr>\n<tr>\n<td>title</td>\n<td>文本</td>\n<td>提示文本，鼠标放到图像上，显示的文字</td>\n</tr>\n<tr>\n<td>width</td>\n<td>像素</td>\n<td>设置图像的宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>像素</td>\n<td>设置图像的高度</td>\n</tr>\n<tr>\n<td>border</td>\n<td>像素</td>\n<td>设置图像的边框粗细</td>\n</tr>\n</tbody></table>\n<ul>\n<li>图像可以拥有多个属性</li>\n<li>属性不分前后顺序，标签名与属性、属性与属性均以&#x3D;&#x3D;空格&#x3D;&#x3D;分开</li>\n<li>属性采取键值对的格式，即 属性&#x3D; “属性值”</li>\n</ul>\n<h4 id=\"2-7-音频标签\"><a href=\"#2-7-音频标签\" class=\"headerlink\" title=\"2.7 音频标签\"></a>2.7 音频标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">controls</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>src</td>\n<td>音频路径</td>\n<td>必须属性</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>无</td>\n<td>显示播放的控件</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>无</td>\n<td>自动播放（部分浏览器不支持）</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>无</td>\n<td>循环播放</td>\n</tr>\n</tbody></table>\n<ul>\n<li>目前支持的音频格式：MP3、Wav、Ogg</li>\n</ul>\n<h4 id=\"2-8-视频标签\"><a href=\"#2-8-视频标签\" class=\"headerlink\" title=\"2.8 视频标签\"></a>2.8 视频标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">controls</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>src</td>\n<td>视频路径</td>\n<td>必须属性</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>无</td>\n<td>显示播放的控件</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>无</td>\n<td>自动播放（谷歌浏览器配合muted实现静音播放）</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>无</td>\n<td>循环播放</td>\n</tr>\n</tbody></table>\n<ul>\n<li>目前支持的视频格式：MP4、WebM、Ogg</li>\n</ul>\n<h4 id=\"2-9-链接标签\"><a href=\"#2-9-链接标签\" class=\"headerlink\" title=\"2.9 链接标签\"></a>2.9 链接标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>文本或者图像<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>href</td>\n<td>用于指定链接的url地址，必须属性</td>\n</tr>\n<tr>\n<td>target</td>\n<td>用于指定链接页面的打开方式，其中_self为默认值(在当前窗口打开)，_blank为新窗口打开方式</td>\n</tr>\n</tbody></table>\n<p>根据href属性值的不同可分为：</p>\n<ul>\n<li>外部链接：直接的外部地址</li>\n<li>内部链接：本地的html网页文件的相对路径</li>\n<li>空链接：”#”</li>\n<li>下载链接：链接地址为一个压缩包，或者其他文件</li>\n<li>锚点链接：”#id”，通过对标题设置id，可以快速定位当前页面的某个位置</li>\n</ul>\n<h4 id=\"2-10-注释标签\"><a href=\"#2-10-注释标签\" class=\"headerlink\" title=\"2.10 注释标签\"></a>2.10 注释标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 这是一段注释 --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-11-列表标签\"><a href=\"#2-11-列表标签\" class=\"headerlink\" title=\"2.11 列表标签\"></a>2.11 列表标签</h4><p>作用：布局，整洁有序</p>\n<ul>\n<li>无序列表<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--拥有自己的属性值，不常用，都用css设置--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--ul只能有li标签，而li标签可以容纳所有标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>有序列表<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--用css设置属性--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--ol只能有li标签，而li标签可以容纳所有标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>自定义列表<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--dl只能有dt和dd，而dd和dt可以放任意标签--&gt;</span>  </span><br><span class=\"line\"><span class=\"comment\">&lt;!--dt与dd是兄弟关系--&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>名词1<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>名词解释<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2-12-表格标签\"><a href=\"#2-12-表格标签\" class=\"headerlink\" title=\"2.12 表格标签\"></a>2.12 表格标签</h4><p>作用：展示数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>表头1<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>表头2<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>表头3<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>这是数据1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>这是数据2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>这是数据3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><code>&lt;table&gt;</code>表示一个单元格<br>这些都是<code>&lt;table&gt;</code>的属性，通常不使用（用css来对表格进行修饰）<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>align</td>\n<td>left、center、right</td>\n<td>规定表格相对于周围元素的对齐方式</td>\n</tr>\n<tr>\n<td>border</td>\n<td>1或””</td>\n<td>规定表格单元格是否拥有边框</td>\n</tr>\n<tr>\n<td>cellpadding</td>\n<td>像素值</td>\n<td>规定单元边沿与其内容之间的空白</td>\n</tr>\n<tr>\n<td>cellspacing</td>\n<td>像素值</td>\n<td>规定单元格之间的空白</td>\n</tr>\n<tr>\n<td>width</td>\n<td>像素值或者百分比</td>\n<td>规定表格宽度</td>\n</tr>\n</tbody></table>\n</li>\n<li><code>&lt;tr&gt;</code>表示一行，必须在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;td&gt;</code>表示一个单元格，必须在<code>&lt;tr&gt;</code>内<ul>\n<li>属性1：合并单元格，在起始（左上方）单元格内添加属性，合并后删除多余的单元格<br>跨行合并（第一行和第一行合并–&gt;垂直合并）：rowspan &#x3D; “合并单元格个数”<br>跨列合并（第一列和第二列合并–&gt;水平合并）：clospan &#x3D; “合并单元格个数”</li>\n</ul>\n</li>\n<li><code>&lt;th&gt;</code>表示表头（居中加粗），也是一共单元格，也是在<code>&lt;tr&gt;</code>内</li>\n<li><code>&lt;thead&gt;</code>表格头部区域，在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;tbody&gt;</code>表格主体区域，在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;tfoot&gt;</code>表格底部区域，在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;caption&gt;</code>表格大标题，在<code>&lt;table&gt;</code>内</li>\n</ul>\n<h4 id=\"2-13-表单标签\"><a href=\"#2-13-表单标签\" class=\"headerlink\" title=\"2.13 表单标签\"></a>2.13 表单标签</h4><p>　　表单构成：表单域、表单控件、提示信息</p>\n<ul>\n<li><p>表单域<code>&lt;form&gt;</code>标签</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>action</td>\n<td>url地址</td>\n<td>用于指定接收处理表单数据的服务器程序的url地址</td>\n</tr>\n<tr>\n<td>method</td>\n<td>get&#x2F;post</td>\n<td>用于设置表单数据的提交方式，其值为get或者post</td>\n</tr>\n<tr>\n<td>name</td>\n<td>名称</td>\n<td>用于指定表单名称，以区别同一个页面的多个表单域</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>输入标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--type为必须属性，通过对type设置属性来指定控件--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;属性值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>type属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>button</td>\n<td>定义按钮</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>定义重置按钮，清除表单数据</td>\n</tr>\n<tr>\n<td>submit</td>\n<td>定义提交按钮，提交给服务器</td>\n</tr>\n<tr>\n<td>image</td>\n<td>定义图像形式的提交按钮</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>定义复选框</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>定义单选按钮</td>\n</tr>\n<tr>\n<td>file</td>\n<td>定义输入字段，供文件上传</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>定义隐藏的输入字段</td>\n</tr>\n<tr>\n<td>password</td>\n<td>定义密码字段，该字段的字符被掩码</td>\n</tr>\n<tr>\n<td>text</td>\n<td>定义单行输入字段</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>input属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type</td>\n<td>自定义</td>\n<td>定义输入类型</td>\n</tr>\n<tr>\n<td>name</td>\n<td>自定义</td>\n<td>定义input元素名称</td>\n</tr>\n<tr>\n<td>value</td>\n<td>自定义</td>\n<td>规定input元素的值</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>checked</td>\n<td>规定此元素首次加载时被选中</td>\n</tr>\n<tr>\n<td>maxlength</td>\n<td>正整数</td>\n<td>规定输入的最大字符长度</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>字符串</td>\n<td>输入框提示字</td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>无</td>\n<td>多个文件上传</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>按钮标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;属性值&quot;</span>&gt;</span>任意内容<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>type属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>button</td>\n<td>没有功能，配合js使用</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>定义重置按钮，清除表单数据</td>\n</tr>\n<tr>\n<td>submit</td>\n<td>定义提交按钮，提交给服务器</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>下拉菜单标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--至少有一对option--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--option添加selected属性，当前为默认选项--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>选项1<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>选项2<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">selected</span>&gt;</span>选项3<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>文本域标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性值都用css设定不用记，在标签中间输入文字会显示在文本框中</p>\n</li>\n<li><p>标签标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span>男<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span>女<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&lt;label&gt;</code>标签包裹住输入标签</p>\n</li>\n</ul>\n<h4 id=\"2-14-布局标签\"><a href=\"#2-14-布局标签\" class=\"headerlink\" title=\"2.14 布局标签\"></a>2.14 布局标签</h4><p>div，表示分割、分区。span，表示跨区、跨距</p>\n<ul>\n<li><code> &lt;div&gt;</code>标签用来布局，但是一行只能放一个<code>&lt;div&gt;</code>。大盒子</li>\n<li><code>&lt;span&gt;</code>标签用来布局，一行能放多个。小盒子</li>\n</ul>\n<h4 id=\"2-15-字符标签\"><a href=\"#2-15-字符标签\" class=\"headerlink\" title=\"2.15 字符标签\"></a>2.15 字符标签</h4><table>\n<thead>\n<tr>\n<th>特殊字符</th>\n<th>描述</th>\n<th>字符代码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>空格符</td>\n<td>&amp;nbsp；</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于号</td>\n<td>&It;</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于号</td>\n<td>&amp;gt；</td>\n</tr>\n<tr>\n<td>&amp;</td>\n<td>和号</td>\n<td>&amp;amp；</td>\n</tr>\n<tr>\n<td>￥</td>\n<td>人民币</td>\n<td>&amp;yen；</td>\n</tr>\n<tr>\n<td>©</td>\n<td>版权</td>\n<td>&amp;copy；</td>\n</tr>\n<tr>\n<td>®</td>\n<td>注册商标</td>\n<td>&amp;reg；</td>\n</tr>\n<tr>\n<td>°</td>\n<td>角度</td>\n<td>&amp;deg；</td>\n</tr>\n<tr>\n<td>±</td>\n<td>正负号</td>\n<td>&amp;plusmn；</td>\n</tr>\n<tr>\n<td>×</td>\n<td>乘号</td>\n<td>&amp;times；</td>\n</tr>\n<tr>\n<td>÷</td>\n<td>除号</td>\n<td>&amp;divide；</td>\n</tr>\n<tr>\n<td>²</td>\n<td>平方</td>\n<td>&amp;sup2；</td>\n</tr>\n<tr>\n<td>³</td>\n<td>立方</td>\n<td>&amp;sup3；</td>\n</tr>\n</tbody></table>\n","more":"<h1 id=\"HTML5快速入门语法\"><a href=\"#HTML5快速入门语法\" class=\"headerlink\" title=\"HTML5快速入门语法\"></a>HTML5快速入门语法</h1><h2 id=\"一、基本语法\"><a href=\"#一、基本语法\" class=\"headerlink\" title=\"一、基本语法\"></a>一、基本语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>本文参考视频：<a href=\"https://www.bilibili.com/video/BV1Kg411T7t9\">https://www.bilibili.com/video/BV1Kg411T7t9</a></p>\n<p>本文编辑器为VScode，使用<code>!+Tab键</code>快捷生成html骨架<br>　　<br>标签成对出现：双标签（多）</p>\n<p>标签单个出现：单标签（少）</p>\n<p>标签关系：包含关系和并列关系</p>\n<p>html骨架的标签：</p>\n<table>\n<thead>\n<tr>\n<th>标签名</th>\n<th>定义</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>&lt;html&gt;&lt;/html&gt;</code></td>\n<td>HTML标签</td>\n<td>页面中最大的标签，根标签</td>\n</tr>\n<tr>\n<td><code>&lt;head&gt;&lt;/head&gt;</code></td>\n<td>文档头部</td>\n<td>注意在head标签中，我们必须设置的标签为title</td>\n</tr>\n<tr>\n<td><code>&lt;title&gt;&lt;/title&gt;</code></td>\n<td>文档标题</td>\n<td>让网页有一个标题</td>\n</tr>\n<tr>\n<td><code>&lt;body&gt;&lt;/body&gt;</code></td>\n<td>文档主体</td>\n<td>元素包含网页所有内容</td>\n</tr>\n<tr>\n<td><code>&lt;!DOCTYPE&gt;</code></td>\n<td>文档类型声明</td>\n<td>告诉浏览器使用哪种HTML版本</td>\n</tr>\n</tbody></table>\n<p>　　</p>\n<h3 id=\"2-常用标签\"><a href=\"#2-常用标签\" class=\"headerlink\" title=\"2.常用标签\"></a>2.常用标签</h3><h4 id=\"2-1-标题标签\"><a href=\"#2-1-标题标签\" class=\"headerlink\" title=\"2.1 标题标签\"></a>2.1 标题标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一级标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>这是二级标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>这是三级标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>这是四级标题<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>这是五级标题<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>这是六级标题<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-段落标签\"><a href=\"#2-2-段落标签\" class=\"headerlink\" title=\"2.2 段落标签\"></a>2.2 段落标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是段落标签<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>段落除了换行，还有一段距离</p>\n<h4 id=\"2-3-换行标签\"><a href=\"#2-3-换行标签\" class=\"headerlink\" title=\"2.3 换行标签\"></a>2.3 换行标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-水平分割线标签\"><a href=\"#2-4-水平分割线标签\" class=\"headerlink\" title=\"2.4 水平分割线标签\"></a>2.4 水平分割线标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-文本格式化标签\"><a href=\"#2-5-文本格式化标签\" class=\"headerlink\" title=\"2.5 文本格式化标签\"></a>2.5 文本格式化标签</h4><table>\n<thead>\n<tr>\n<th>语义</th>\n<th>标签</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>加粗</td>\n<td><code>&lt;strong&gt;&lt;/strong&gt;或者&lt;b&gt;&lt;/b&gt;</code></td>\n<td><code>&lt;strong&gt;</code>语义更强力一点</td>\n</tr>\n<tr>\n<td>倾斜</td>\n<td><code>&lt;em&gt;&lt;/em&gt;或者&lt;i&gt;&lt;/i&gt;  </code></td>\n<td><code>&lt;em&gt;</code>语义更强力一点</td>\n</tr>\n<tr>\n<td>删除线</td>\n<td><code> &lt;del&gt;&lt;/del&gt;或者&lt;s&gt;&lt;/s&gt;</code></td>\n<td><code>&lt;del&gt;</code>语义更强力一点</td>\n</tr>\n<tr>\n<td>下划线</td>\n<td><code>&lt;ins&gt;&lt;/ins&gt;或者&lt;u &gt;&lt;/u&gt; </code></td>\n<td><code> &lt;ins&gt;</code>语义更强力一点</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-6-图像标签\"><a href=\"#2-6-图像标签\" class=\"headerlink\" title=\"2.6 图像标签\"></a>2.6 图像标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>单标签，src为<code>&lt;img&gt;</code>的必须属性，用来指定图片的路径，相对路径或绝对路径。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>src</td>\n<td>图片路径</td>\n<td>必须属性</td>\n</tr>\n<tr>\n<td>alt</td>\n<td>文本</td>\n<td>替换文本，图像不能显示的文字</td>\n</tr>\n<tr>\n<td>title</td>\n<td>文本</td>\n<td>提示文本，鼠标放到图像上，显示的文字</td>\n</tr>\n<tr>\n<td>width</td>\n<td>像素</td>\n<td>设置图像的宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>像素</td>\n<td>设置图像的高度</td>\n</tr>\n<tr>\n<td>border</td>\n<td>像素</td>\n<td>设置图像的边框粗细</td>\n</tr>\n</tbody></table>\n<ul>\n<li>图像可以拥有多个属性</li>\n<li>属性不分前后顺序，标签名与属性、属性与属性均以&#x3D;&#x3D;空格&#x3D;&#x3D;分开</li>\n<li>属性采取键值对的格式，即 属性&#x3D; “属性值”</li>\n</ul>\n<h4 id=\"2-7-音频标签\"><a href=\"#2-7-音频标签\" class=\"headerlink\" title=\"2.7 音频标签\"></a>2.7 音频标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">controls</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>src</td>\n<td>音频路径</td>\n<td>必须属性</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>无</td>\n<td>显示播放的控件</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>无</td>\n<td>自动播放（部分浏览器不支持）</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>无</td>\n<td>循环播放</td>\n</tr>\n</tbody></table>\n<ul>\n<li>目前支持的音频格式：MP3、Wav、Ogg</li>\n</ul>\n<h4 id=\"2-8-视频标签\"><a href=\"#2-8-视频标签\" class=\"headerlink\" title=\"2.8 视频标签\"></a>2.8 视频标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">controls</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>src</td>\n<td>视频路径</td>\n<td>必须属性</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>无</td>\n<td>显示播放的控件</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>无</td>\n<td>自动播放（谷歌浏览器配合muted实现静音播放）</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>无</td>\n<td>循环播放</td>\n</tr>\n</tbody></table>\n<ul>\n<li>目前支持的视频格式：MP4、WebM、Ogg</li>\n</ul>\n<h4 id=\"2-9-链接标签\"><a href=\"#2-9-链接标签\" class=\"headerlink\" title=\"2.9 链接标签\"></a>2.9 链接标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>文本或者图像<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>href</td>\n<td>用于指定链接的url地址，必须属性</td>\n</tr>\n<tr>\n<td>target</td>\n<td>用于指定链接页面的打开方式，其中_self为默认值(在当前窗口打开)，_blank为新窗口打开方式</td>\n</tr>\n</tbody></table>\n<p>根据href属性值的不同可分为：</p>\n<ul>\n<li>外部链接：直接的外部地址</li>\n<li>内部链接：本地的html网页文件的相对路径</li>\n<li>空链接：”#”</li>\n<li>下载链接：链接地址为一个压缩包，或者其他文件</li>\n<li>锚点链接：”#id”，通过对标题设置id，可以快速定位当前页面的某个位置</li>\n</ul>\n<h4 id=\"2-10-注释标签\"><a href=\"#2-10-注释标签\" class=\"headerlink\" title=\"2.10 注释标签\"></a>2.10 注释标签</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 这是一段注释 --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-11-列表标签\"><a href=\"#2-11-列表标签\" class=\"headerlink\" title=\"2.11 列表标签\"></a>2.11 列表标签</h4><p>作用：布局，整洁有序</p>\n<ul>\n<li>无序列表<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--拥有自己的属性值，不常用，都用css设置--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--ul只能有li标签，而li标签可以容纳所有标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>有序列表<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--用css设置属性--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--ol只能有li标签，而li标签可以容纳所有标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>列表2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>自定义列表<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--dl只能有dt和dd，而dd和dt可以放任意标签--&gt;</span>  </span><br><span class=\"line\"><span class=\"comment\">&lt;!--dt与dd是兄弟关系--&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>名词1<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>名词解释<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2-12-表格标签\"><a href=\"#2-12-表格标签\" class=\"headerlink\" title=\"2.12 表格标签\"></a>2.12 表格标签</h4><p>作用：展示数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>表头1<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>表头2<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>表头3<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>这是数据1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>这是数据2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>这是数据3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><code>&lt;table&gt;</code>表示一个单元格<br>这些都是<code>&lt;table&gt;</code>的属性，通常不使用（用css来对表格进行修饰）<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>align</td>\n<td>left、center、right</td>\n<td>规定表格相对于周围元素的对齐方式</td>\n</tr>\n<tr>\n<td>border</td>\n<td>1或””</td>\n<td>规定表格单元格是否拥有边框</td>\n</tr>\n<tr>\n<td>cellpadding</td>\n<td>像素值</td>\n<td>规定单元边沿与其内容之间的空白</td>\n</tr>\n<tr>\n<td>cellspacing</td>\n<td>像素值</td>\n<td>规定单元格之间的空白</td>\n</tr>\n<tr>\n<td>width</td>\n<td>像素值或者百分比</td>\n<td>规定表格宽度</td>\n</tr>\n</tbody></table>\n</li>\n<li><code>&lt;tr&gt;</code>表示一行，必须在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;td&gt;</code>表示一个单元格，必须在<code>&lt;tr&gt;</code>内<ul>\n<li>属性1：合并单元格，在起始（左上方）单元格内添加属性，合并后删除多余的单元格<br>跨行合并（第一行和第一行合并–&gt;垂直合并）：rowspan &#x3D; “合并单元格个数”<br>跨列合并（第一列和第二列合并–&gt;水平合并）：clospan &#x3D; “合并单元格个数”</li>\n</ul>\n</li>\n<li><code>&lt;th&gt;</code>表示表头（居中加粗），也是一共单元格，也是在<code>&lt;tr&gt;</code>内</li>\n<li><code>&lt;thead&gt;</code>表格头部区域，在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;tbody&gt;</code>表格主体区域，在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;tfoot&gt;</code>表格底部区域，在<code>&lt;table&gt;</code>内</li>\n<li><code>&lt;caption&gt;</code>表格大标题，在<code>&lt;table&gt;</code>内</li>\n</ul>\n<h4 id=\"2-13-表单标签\"><a href=\"#2-13-表单标签\" class=\"headerlink\" title=\"2.13 表单标签\"></a>2.13 表单标签</h4><p>　　表单构成：表单域、表单控件、提示信息</p>\n<ul>\n<li><p>表单域<code>&lt;form&gt;</code>标签</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>action</td>\n<td>url地址</td>\n<td>用于指定接收处理表单数据的服务器程序的url地址</td>\n</tr>\n<tr>\n<td>method</td>\n<td>get&#x2F;post</td>\n<td>用于设置表单数据的提交方式，其值为get或者post</td>\n</tr>\n<tr>\n<td>name</td>\n<td>名称</td>\n<td>用于指定表单名称，以区别同一个页面的多个表单域</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>输入标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--type为必须属性，通过对type设置属性来指定控件--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;属性值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>type属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>button</td>\n<td>定义按钮</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>定义重置按钮，清除表单数据</td>\n</tr>\n<tr>\n<td>submit</td>\n<td>定义提交按钮，提交给服务器</td>\n</tr>\n<tr>\n<td>image</td>\n<td>定义图像形式的提交按钮</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>定义复选框</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>定义单选按钮</td>\n</tr>\n<tr>\n<td>file</td>\n<td>定义输入字段，供文件上传</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>定义隐藏的输入字段</td>\n</tr>\n<tr>\n<td>password</td>\n<td>定义密码字段，该字段的字符被掩码</td>\n</tr>\n<tr>\n<td>text</td>\n<td>定义单行输入字段</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>input属性</th>\n<th>属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type</td>\n<td>自定义</td>\n<td>定义输入类型</td>\n</tr>\n<tr>\n<td>name</td>\n<td>自定义</td>\n<td>定义input元素名称</td>\n</tr>\n<tr>\n<td>value</td>\n<td>自定义</td>\n<td>规定input元素的值</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>checked</td>\n<td>规定此元素首次加载时被选中</td>\n</tr>\n<tr>\n<td>maxlength</td>\n<td>正整数</td>\n<td>规定输入的最大字符长度</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>字符串</td>\n<td>输入框提示字</td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>无</td>\n<td>多个文件上传</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>按钮标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;属性值&quot;</span>&gt;</span>任意内容<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>type属性值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>button</td>\n<td>没有功能，配合js使用</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>定义重置按钮，清除表单数据</td>\n</tr>\n<tr>\n<td>submit</td>\n<td>定义提交按钮，提交给服务器</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>下拉菜单标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--至少有一对option--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--option添加selected属性，当前为默认选项--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>选项1<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>选项2<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">selected</span>&gt;</span>选项3<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>文本域标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性值都用css设定不用记，在标签中间输入文字会显示在文本框中</p>\n</li>\n<li><p>标签标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span>男<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span>女<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&lt;label&gt;</code>标签包裹住输入标签</p>\n</li>\n</ul>\n<h4 id=\"2-14-布局标签\"><a href=\"#2-14-布局标签\" class=\"headerlink\" title=\"2.14 布局标签\"></a>2.14 布局标签</h4><p>div，表示分割、分区。span，表示跨区、跨距</p>\n<ul>\n<li><code> &lt;div&gt;</code>标签用来布局，但是一行只能放一个<code>&lt;div&gt;</code>。大盒子</li>\n<li><code>&lt;span&gt;</code>标签用来布局，一行能放多个。小盒子</li>\n</ul>\n<h4 id=\"2-15-字符标签\"><a href=\"#2-15-字符标签\" class=\"headerlink\" title=\"2.15 字符标签\"></a>2.15 字符标签</h4><table>\n<thead>\n<tr>\n<th>特殊字符</th>\n<th>描述</th>\n<th>字符代码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>空格符</td>\n<td>&amp;nbsp；</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于号</td>\n<td>&It;</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于号</td>\n<td>&amp;gt；</td>\n</tr>\n<tr>\n<td>&amp;</td>\n<td>和号</td>\n<td>&amp;amp；</td>\n</tr>\n<tr>\n<td>￥</td>\n<td>人民币</td>\n<td>&amp;yen；</td>\n</tr>\n<tr>\n<td>©</td>\n<td>版权</td>\n<td>&amp;copy；</td>\n</tr>\n<tr>\n<td>®</td>\n<td>注册商标</td>\n<td>&amp;reg；</td>\n</tr>\n<tr>\n<td>°</td>\n<td>角度</td>\n<td>&amp;deg；</td>\n</tr>\n<tr>\n<td>±</td>\n<td>正负号</td>\n<td>&amp;plusmn；</td>\n</tr>\n<tr>\n<td>×</td>\n<td>乘号</td>\n<td>&amp;times；</td>\n</tr>\n<tr>\n<td>÷</td>\n<td>除号</td>\n<td>&amp;divide；</td>\n</tr>\n<tr>\n<td>²</td>\n<td>平方</td>\n<td>&amp;sup2；</td>\n</tr>\n<tr>\n<td>³</td>\n<td>立方</td>\n<td>&amp;sup3；</td>\n</tr>\n</tbody></table>\n"},{"title":"React快速入门","img":"https://images.pexels.com/photos/11990061/pexels-photo-11990061.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500","excerpt":"React的语法","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-05-16T09:02:22.000Z","_content":"\n# React快速入门\n\n## 一、React\n\n### 1.JSX\n\n> JSX全称JavaScript XML，与HTML结构相似，大大降低学习成本。\n\n#### 1.1 前言\n\n```bash\n#初始化react项目\nnpx create-react-app 项目名称\n# 启动项目\ncd 项目名称\nnpm start\n```\n\n注意：\n\n1. React元素的属性名使用驼峰命名法\n2. 特殊属性名：class->className，for->htmlFor、tabindex->tabIndex\n3. 没有子节点的React元素可以用`/>`结束。\n4. 小括号包裹JSX语法\n\nJSX嵌入JS表达式\n\n* 数据存储在JS中\n* 语法：{JS表达式}\n* JSX也是合法的JS表达式\n* 不能出现对象和语句\n\n#### 1.2 JSX条件渲染\n\n```jsx\nconst isLoading = false\nconst loadData=()=>{\n    if(isLoading) return <div>loading...</div>\n    return <div>数据加载完成</div>\n}\nconst title =(\n    <h1>\n        {loadData()}\n    </h1>\n)\n```\n\n#### 1.3 JSX列表渲染\n\n* 要渲染一组数据，应该使用数组的map()方法\n* 每一个列表都应该添加key属性且不可变保持唯一\n\n```jsx\nconst songs=[\n    {id: 1,name: '我'},\n    {id: 2,name: '号'}\n]\n\nconst list = (\n    <ul>\n        {songs.map(item=> <li key={item.id}>{item.name}</li>)}\n    </ul>\n)\n```\n\n#### 1.4 JSX样式处理\n\n```jsx\n//导入css\nimport './index.css';\n\nconst list=(\n    <h1 className=\"title\">\n        JSX样式处理\n    </h1>\n)\n```\n\n### 2.TSX\n\n#### 2.1 使用CRA创建支持TS的项目\n\n```bash\n# 创建一个支持ts的react项目\nnpx create-react-app my-app --template typescript\n# 在现有react项目添加TS支持\nnpm install --save typescript @types/node @types/react @types/react-dom @types/jest\n```\n\n* 项目新增了`tsconfig.json`用来配置TS的编译选项\n* 文件扩展名为 `*.tsx`\n* 项目中`src`文件夹下增加了`react-app-env.d.ts`，用来声明React的默认类型\n  * 三斜线指令：指定依赖其他的类型声明文件\n\n#### 2.2 函数组件类型\n\n```ts\n//可以舍弃JS的PropTypes进行类型检查，利用Ts的语法来实现其功能\ntype MyProps = {\n  name: string;\n  age?: number;\n}\n\nconst Hello = ({ name, age = 18 }: MyProps) => {\n  return <div>My Name is {name} ,my age is {age}</div>;\n}\n\nconst App = () => {\n  return (\n    <div>\n      <Hello name=\"John\" age={30} />\n    </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n```\n\n#### 2.3 class组件类型\n\n```ts\ntype State = { count: number };\ntype Props = {message?: string};\n\n//无props无state\nclass App extends React.Component {}\n\n//无props有state\nclass App2 extends React.Component<{}, State> {}\n\n//有props无state\nclass App3 extends React.Component<Props> {}\n\n//有props有state\nclass App4 extends React.Component<Props, State> {}\n\n```\n\n```ts\n// props属性与state属性的类型\ntype State = { count: number };\ntype Props = {name: string, age?: number};\n\nclass App extends React.Component<Props> {\n  state: State = {\n    count: 0\n  };\n\n  handleClick = () => {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  render() {\n    const { name, age = 18 } = this.props;\n    return (\n      <div>\n        <h1>Hello, {name}</h1>\n        <h2>You are {age} years old</h2>\n        <h3>{this.state.count}</h3>\n        <button onClick={this.handleClick}>Click me</button>\n      </div>\n    );\n  }\n}\n```\n\n### 3.组件\n\n> 组件是React核心\n> 组件特点：可复用性、独立、可组合性\n\n#### 3.1创建组件\n\n* 函数创建组件\n\n注意：\n\n1. 函数名必须大写字母开头\n2. 必须有返回值，表示该组件的结构\n3. 如果返回值为null表示不渲染任何内容\n\n```jsx\n//普通函数创建组件\nfunction Hello(){\n    return <div>这个是我的函数组件</div>   \n}\n\n//箭头函数创建组件\nconst Hello = ()=> <div>这个是我的函数组件</div>\n\n//渲染组件\nReactDom.render(<Hello />,document.getElementById('root'))\n```\n\n* 类创建组件\n\n注意：\n\n1. 类名首字母大写\n2. 类组件应该继承React.Component父类\n3. 类组件必须提供render()方法\n4. render()方法必须有返回值\n\n```jsx\n//创建类组件\nclass Hello extends React.Componet{\n    render(){\n        return <div>这个是我的类组件</div>\n    }\n}\n\n//渲染组件\nReactDom.render(<Hello />,document.getElementById('root'))\n```\n\n**每个组件都应该放在单独的文件中**:\n\n步骤：\n\n1. 创建组件文件\n2. 在文件中导入React\n3. 创建组件\n4. 导出组件\n5. 在需要使用的文件中导入该组件\n\n```jsx\nimport React from 'react'\n\n//创建组件\nclass Hello extends React.Componet{\n    render(){\n        return <div>这个是我的JS组件</div>\n    }\n}\n\n//导出组件\nexport default Hello\n```\n\n```jsx\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Hello from './Hello.js'\n\n//渲染组件\nReactDom.render(<Hello />,document.getElementById('root'))\n```\n\n#### 3.2 事件处理\n\n* 事件绑定语法：\n  * `on+事件名称={事件处理程序}`\n  * 事件的名称采用驼峰命名法\n\n```jsx\nclass App extends React.Component {\n  //事件处理函数\n  handleClick = () => {\n    console.log('click');\n  }\n  render() {\n    return <button onClick={this.handleClick}>按钮</button>;\n  }\n}\n\n//渲染组件\nconst root = ReactDOM.createRoot(document.getElementById('root')); \nroot.render(\n  <App />\n);\n```\n\n* 事件处理对象\n  * 可以通过事件处理程序的参数获得事件对象\n  * 该合成事件对象兼容所有浏览器\n\n```jsx\nclass App extends React.Component {\n  //事件处理函数\n  handleClick(e) {\n    e.preventDefault(); //利用事件对象阻止浏览器默认行为\n    console.log('click');\n   }\n  render() {\n    return <button onClick={this.handleClick}>按钮</button>;\n  }\n}\n```\n\n#### 3.3 有状态组件和无状态组件\n\n* 函数组件叫做无状态组件，类组件叫做有状态组件\n* 状态（state）即数据\n* 函数组件没有自己的状态，只负责数据的展示（静）\n* 类组件有自己的状态，负责更新UI，让组件动起来\n* 状态（state）值是对象，是组件的私有数据\n* 只能用`setState()`来修改`state`数据\n* `setState()`用来修改状态和更新UI\n* 思想：数据驱动视图\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    count: 0\n  }\n  render() {\n    return (\n      <div>\n        <h1>计数器：{this.state.count}</h1>\n        <button onClick={() => this.setState({count: this.state.count + 1})}>+1</button>\n      </div>\n    );\n  }\n}\n```\n\n> 逻辑代码独立出去后this指向问题处理\n\n* 箭头函数\n\n```js\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    count: 0\n  }\n  // 在这里更新状态\n  onAddOne = () => {\n    this.setState({  //this必须指向实例\n      count: this.state.count + 1\n    })\n  }\n  render() {\n    return (\n      <div>\n        <h1>计数器：{this.state.count}</h1>\n        <button onClick={this.onAddOne}>+1</button>\n      </div>\n    );\n  }\n}\n```\n\n* ES5的bind()函数\n\n```jsx\nconstructor(){\n    super()\n    this.onAddOne = this.onAddOne.bind(this)\n}\n```\n\n#### 3.4 表单处理\n\n* 受控组件：受到React控制的html\n\n步骤：\n\n1. 在state中添加一个状态，作为表单元素额value值\n2. 给表单元素绑定change事件，将表单元素的值 设置为state的值 (双向绑定)\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    txt: '',\n  }\n  // 在这里更新状态\n  onChange = (e) => {\n    this.setState({\n      txt: e.target.value,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <input type=\"text\" value={this.state.txt} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n```\n\n> 多表单元素统一处理\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    txt: '',\n    content: '',\n    city: 'SZ',\n    isChecked: false,\n  }\n  // 在这里更新状态\n  onChange = (e) => {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n  render() {\n    return (\n      <div>\n        <input type=\"text\" name='txt' value={this.state.txt} onChange={this.onChange} /><br />\n        <textarea name='content' value={this.state.content} onChange={this.onChange} /><br />\n        <select name='city' value={this.state.city} onChange={this.onChange}>\n          <option value=\"BJ\">北京</option>\n          <option value=\"SH\">上海</option>\n          <option value=\"SZ\">深圳</option>\n        </select><br />\n        <input type=\"checkbox\" name='isChecked' checked={this.state.isChecked} onChange={this.onChange} /><br />\n      </div>\n    );\n  }\n}\n```\n\n* 非控组件：操作DOM获取元素数据\n\n1. 调用React.createRef()创建一个ref对象\n2. 将创建好的ref对象添加到文本框中\n3. 通过ref对象获取到文本框的值\n\n#### 3.5 小结案例--评论\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    comments: [\n      { id: 1, name: 'Pete Hunt', text: 'This is one comment' },\n      { id: 2, name: 'Jordan Walke', text: 'This is *another* comment' },\n    ],\n    username: '',\n    content: '',\n  }\n  // 在这里更新状态\n\n  commentsList = () => {\n    return (this.state.comments.length === 0 \n      ?<div className='noComment'><strong>暂无评论，快去评论吧~</strong></div>\n      :(\n        <ul>\n          {this.state.comments.map((comment) => {\n            return (\n              <li key={comment.id}>\n                <h3>{comment.name}:</h3>\n                <p>{comment.text}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )\n    );\n  }\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addComment = () => {\n    const comment = {\n      id: this.state.comments.length + 1,\n      name: this.state.username,\n      text: this.state.content,\n    };\n    this.setState({\n      comments: [...this.state.comments, comment],\n    });\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <div>\n          <input type=\"text\" name='username' value={this.state.username} className='user' placeholder='输入姓名' onChange={this.onChange}/><br/>\n          <textarea name='content' className='text' value={this.state.content} placeholder='输入评论' onChange={this.onChange}/><br/>\n          <button className='btn' onClick={this.addComment}>提交</button>\n        </div>\n        <div><h2>评论列表</h2></div>\n        {this.commentsList()}\n      </div>\n    );\n  }\n}\n\n//渲染组件\nconst root = ReactDOM.createRoot(document.getElementById('root')); \nroot.render(\n  <App />\n);\n```\n\n### 4.组件通讯\n\n#### 4.1 组件接收数据\n\n组件是独立且封闭的单元，默认情况下只能使用自己的数据，而对于一个复杂的项目通常需要拆分多个组件，而多个组件需要数据传递就是组件通讯。\n\nprops的作用：接收传递给组件的数据\n\n* 传递数据：给组件标签添加属性\n* 接收数据：函数组件通过参数props接收数据，类组件通过this.props接收数据\n\n```js\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>{this.props.name}</h1>\n      </div>\n    );\n  }\n}\n\n//渲染组件\nconst root = ReactDOM.createRoot(document.getElementById('root')); \nroot.render(\n  //传递字符串、数值、数组、函数\n  <App name='jack'  age={19} colors={['read','green']} fn={()=> console.log('Hello')}/>  \n);\n```\n\n注意：\n\n* props无法对属性赋值，这是个只读属性\n* 类组件在使用构造函数时，需要把props作为构造函数和super()的参数\n\n#### 4.2 父组件传递给子组件\n\n1. 父组件要提供传递的state数据\n2. 给子组件标签添加属性，值为state中的数据\n3. 子组件通过props接收父组件中传递的数据\n\n```jsx\nclass Father extends React.Component {\n  state = {\n    name: '王五',\n  }\n  render() {\n    return (\n      <div>\n        <Child name={this.state.name} />\n      </div>\n    );\n  }\n}\n\nconst Child = (props) => {\n  return (\n      <h1>{props.name}</h1>\n  );\n}\n```\n\n#### 4.3  子组件传递数据给父组件\n\n1. 父组件提供回调函数\n2. 将该函数作为属性值传递给子组件\n3. 子组件通过props调用回调函数\n4. 将子组件的数据作为参数传递给回调函数\n\n```jsx\nclass Father extends React.Component {\n  state = {\n    msg: ''\n  }\n  say=(data)=>{\n    console.log('father say:', data);\n    this.setState({\n      msg: data\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Child say={this.say} />\n      </div>\n    );\n  }\n}\nclass Child extends React.Component {\n  state = {\n    data: 'hello'\n  }\n  handleClick=()=>{\n    this.props.say(this.state.data);\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick}>click</button>\n      </div>\n    );\n  }\n}\n```\n\n#### 4.4 兄弟组件通信\n\n1. 状态提升\n2. 将多个组件需要共享的状态提升到他们最近的父组件中\n3. 公共父组件职责：提供共享状态、提供操作共享状态的方法\n4. 要通讯的子组件只需通过props接收状态或操作状态的方法\n\n```jsx\nclass Father extends React.Component {\n  state = {\n    count: 0,\n  }\n  add = () => {\n    this.setState({\n      count: this.state.count + 1,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Child1 count={this.state.count} />\n        <Child2 add={this.add} />\n      </div>\n    );\n  }\n}\nconst Child1 = (props) => {\n  return (\n    <div>\n      <h1>计数器：{props.count}</h1>\n    </div>\n  )\n}\nconst Child2 = (props) => {\n  return (\n    <div>\n      <button onClick={()=> props.add()}>+1</button>\n    </div>\n  )\n}\n```\n\n#### 4.5 跨多个组件通信\n\n1. 生产者与消费者\n2. 调用React.createContext()创建Provider和Consumer两个组件\n3. 使用Provider在通信组件的最近父组件\n4. 设置value属性，表示要传递的数据\n5. 使用Consumer组件接收数据\n\n```jsx\nconst {Provider, Consumer} = React.createContext();\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  };\n  \n  add = () => {\n    this.setState({\n      count: this.state.count + 1,\n    });\n  };\n\n  render() {\n    return (\n      <Provider value={{count: this.state.count,add: this.add}}>\n        <div>\n          <App1 />\n          <App2 />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nconst App1 = () => (\n  <div>\n    <Consumer>\n      { value => <h1>{value.count}</h1> }\n    </Consumer>\n  </div>\n);\n\nconst App2 = () => (\n  <Consumer>\n    {value => {\n      return (\n        <button onClick={ ()=>value.add() }>Click</button>\n      );\n    }}\n  </Consumer>\n)\n```\n\n### 5.组件进阶\n\n#### 5.1 静态类型检查\n\nprop-types库提供props属性的类型校验\n\n```jsx\nApp.propTypes={\n  a: PropTypes.number,                 //属性a ，数值类型\n  fn: PropTypes.func.isRequired,  //属性fn，函数且为必填项\n  tag: PropTypes.element,            //React元素\n  filter: PropTypes.shape({          //对象，area属性为字符串，price为数值\n    area: PropTypes.string,\n    price: PropTypes.number,\n  })\n}\n```\n\nprop-types库提供props属性默认值\n\n```jsx\nApp.defaultProps={\n  a: 10,\n}\n```\n\n#### 5.2 组件的生命周期\n\n* 生命周期：组件从创建到挂载到页面中运行，再到组件不用时卸载的过程。\n* 生命周期的每个阶段总是伴随着一些方法的调用，这些方法就是生命周期的钩子函数\n* 钩子函数：为开发人员在不同阶段提供操作时机\n* 只有类组件才有生命周期\n\n**创建时**:\n\n* 执行时间：组件创建时\n* 执行顺序：`constructor()--->render()--->componentDidMount()`\n\n| 钩子函数          | 触发时间                      | 作用                                     |\n| ----------------- | ----------------------------- | ---------------------------------------- |\n| constructor       | 组件创建时，最先执行          | 1.初始化state   2.为事件处理程序绑定this |\n| render            | 每次渲染都会触发              | 渲染UI（不能调用setState）               |\n| componentDidMount | 组件挂载（DOM渲染完成）后触发 | 1.发送网络请求   2.DOM操作               |\n\n**更新时**:\n\n* 执行时间：调用函数 1.`setState()` 2.`forceUpdate()` 3.组件接收到新的`props`\n* 执行顺序：`render()--->componentDidUpdate()`\n\n| 钩子函数           | 触发时间                      | 作用                      |\n| ------------------ | ----------------------------- | ------------------------- |\n| render             | 每次渲染都会触发              | 渲染UI                    |\n| componentDidUpdate | 组件更新（DOM渲染完成）后触发 | 1.发送网络请求  2.DOM操作 |\n\n**卸载时**:\n\n* 执行时间：组件消失\n\n| 钩子函数             | 触发时间       | 作用     |\n| -------------------- | -------------- | -------- |\n| componentWillUnmount | 组件卸载时触发 | 清理工作 |\n\n**新的生命周期函数**:\n\n| 钩子函数                 | 触发时间                         | 用法                                                                          |\n| ------------------------ | -------------------------------- | ----------------------------------------------------------------------------- |\n| getDerivedStateFromProps | 第一次初始化组件以及后续的更新前 | 静态函数，需要加static。 返回一个对象作为新的state，返回null则不需要更新state |\n| getSnapshotBeforeUpdate  | 组件更新前                       | 在更新前获得过去的快照                                                        |\n\n#### 5.3 组件复用\n\nprops的children属性\n\n* 表示了组件的子节点，当组件标签有子节点时，props就会有该属性\n* 与普通props一样，值可以是任意值。\n\n利用复用来处理相似功能的方法\n两种方式：\n\n  1. render props模式\n  2. 高阶组件\n\n步骤：\n\n1. 创建复用的组件，在复用组件中提供状态和操作状态的方法\n2. 将复用组件的状态作为props.render(state)方法的参数，暴露到组件外\n3. 外部使用render()的属性接收参数并使用\n\n```jsx\nclass Mouse extends React.Component {\n  state = {\n    x: 0,\n    y: 0\n  }\n  handleMouseMove = (event) => {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleMouseMove);\n  }\n  render() {\n    return this.props.render(this.state);\n  }\n}\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <Mouse render={(mouse) => (\n          <p>The mouse position is ({mouse.x}, {mouse.y})</p>\n        )} />\n      </div>\n    );\n  }\n}\n```\n\nchildren属性 代替 render属性\n\n```jsx\nclass Mouse extends React.Component {\n  state = {\n    x: 0,\n    y: 0\n  }\n  handleMouseMove = (event) => {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleMouseMove);\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\nclass App extends React.Component {\n  render() {\n    return (\n      <Mouse>\n        {(mouse) => (\n          <div>\n            <h1>Move the mouse around!</h1>\n            <p>The current mouse position is ({mouse.x}, {mouse.y})</p>\n          </div>\n        )}\n      </Mouse>\n    );\n  }\n}\n```\n\n代码优化：\n\n```jsx\n//卸载时，解除事件绑定\ncomponentWillUnmount() {\n  document.removeEventListener('mousemove', this.handleMouseMove);\n}\n//添加类型限制\nMouse.propTypes = {\n  children: PropTypes.func.isRequired\n}\n```\n\n高阶组件采用包装（装饰）模式来实现状态逻辑复用\n\n步骤：\n\n1. 创建一个函数，名称为with开头\n2. 指定函数参数，为大写字母开头\n3. 在函数内部创建一个类组件，提供复用的状态逻辑代码\n4. 在该组件中，渲染参数组件，同时将状态通过prop传递给参数组件\n5. 调用该高阶组件，传入要增强的组件，通过返回值拿到增强后的组件，并将其渲染到页面中\n\n```jsx\nfunction withMouse(WrappedComponent){\n  class Mouse extends React.Component {\n    state = {\n      x: 0,\n      y: 0\n    }\n    handleMouseMove = (event) => {\n      this.setState({\n        x: event.clientX,\n        y: event.clientY\n      });\n    }\n    componentDidMount() {\n      document.addEventListener('mousemove', this.handleMouseMove);\n    }\n    componentWillUnmount() {\n      document.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    render() {\n      return <WrappedComponent {...this.state}/>\n    }\n  }\n  //设置装饰不同组件的名字，给调试使用\n  Mouse.displayName = `withMouse(${getDisplayName(WrappedComponent)})`;\n  return Mouse;\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nconst Position = (props) => {\n  return (\n      <p>The current mouse position is ({props.x}, {props.y})</p>\n  );\n}\n\nconst MousePosition = withMouse(Position);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <MousePosition/>\n      </div>\n    );\n  }\n}\n```\n\n高阶组件的props的传递丢失问题：\n\n```jsx\n//把props继续往下传\nrender() {\n  return <WrappedComponent {...this.state} {...this.props}/>\n}\n```\n\n#### 5.4 setState函数\n\n* setState()函数是异步更新的（有延迟）\n\n```jsx\n//原来语法\nthis.setState({\n  x: event.clientX,\n  y: event.clientY\n});\n```\n\n```jsx\n//推荐语法，表示最新的state和props\nthis.setState((prevState,props) => {\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n},()=>{\n  //第二个参数，回调函数，在状态更新完成后立即执行\n\n});\n```\n\n#### 5.5 组件性能优化\n\n```jsx\n//在render()之前运行，用来判断组件是否渲染，避免重复渲染\nshouldComponentUpdate(nextProps,nextSate){\n  //状态不是自己的用nextProps进行比较，状态是自己的用nextSate进行比较\n  //需要重新渲染\n  return true\n  //不需要重新渲染\n  return false\n}\n```\n\n类组件继承`React.PureComponent`，自己已经实现`shouldComponentUpdate`钩子函数，来对前后props和state进行比较，来决定是否进行本次渲染。\n\n当要对比引用类型的值时，需要重新创建对象，才能更新组件。\n\n#### 5.6 虚拟DOM和Diff算法\n\n执行过程：\n\n1. React初始state，创建虚拟DOM对象树\n2. 根据虚拟DOM生成真正的DOM，渲染到页面中\n3. 当数据变化后，重新根据新的数据，创建新的虚拟DOM对象树\n4. 与上一次得到的虚拟DOM，使用Diff算法进行对比，得到需要更新的内容\n5. 最终，React只将变化的内容更新到DOM中，重新渲染到页面。\n\n### 6.Hooks\n\n1. 高阶组件复用代码复杂\n2. 生命周期复杂\n3. 函数组件是无状态组件\n\n#### 6.1 useState\n\n>接收一个初始值，返回一个状态值和一个更新函数\n\n```jsx\nconst [state, setState] = useState(initialState);\n```\n\n> 更新函数通过接收一个新的值来更新状态值\n\n```jsx\nsetState(newState);\n```\n\n>Example\n\n```jsx\nimport React,{useState} from 'react';\n\nconst {Provider, Consumer} = React.createContext();\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const add = () => setCount(count + 1);\n  return (\n    <Provider value={{count, add}}>\n      <App1 />\n      <App2 />\n    </Provider>\n  );\n}\n\nconst App1 = () => (\n  <div>\n    <Consumer>\n      { value => <h1>{ value.count }</h1> }\n    </Consumer>\n  </div>\n);\n\nconst App2 = () => (\n  <Consumer>\n    {value => {\n      return (\n        <button onClick={ value.add }>Click</button>\n      );\n    }}\n  </Consumer>\n)\n```\n\n#### 6.2 useEffect\n\n函数组件没有生命周期\n\nuseEffect作用：通过使用这个 Hook，你告诉 React 你的组件需要在渲染后做一些事情。React 会记住你传递的函数（我们将它称为我们的“效果”），并在执行 DOM 更新后调用它。\n\nuseEffect运行时间：默认情况下，它在第一次渲染后和每次更新后运行。\n\n```jsx\n// useEffect不加第二个参数，监测所有数据，一旦数据发生改变就会调用该Hook\nuseEffect(() => {\n  document.title = `You clicked ${count} times`;\n});\n```\n\n```jsx\n// useEffect加第二个参数，监测指定数据，一旦指定数据发生改变就会调用该Hook\nuseEffect(() => {\n  document.title = `You clicked ${count} times`;\n},[count]);\n```\n\n```jsx\nconst App = () => {\n  const [count, setCount] = useState(0);\n\n  const add = () => setCount(count + 1);\n  const remove = () =>  ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n\n  // return后面的数据将会在组件卸载后执行\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  },[]);\n\n  return (\n    <Provider value={{count, add, remove}}>\n      <App1 />\n      <App2 />\n    </Provider>\n  );\n}\n```\n\n常用操作：\n\n1. 发起ajax请求\n2. 设置订阅/启动定时器\n3. 更改DOM\n\n#### 6.3 useContext\n\n函数组件中处理跨多个组件通信的问题\n\n>单文件跨组件通信\n\n```jsx\nconst Context = React.createContext();\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n\n  const add = () => setCount(count + 1);\n\n  return (\n    <Context.Provider value={{count, add}}>\n      <App1 />\n      <App2 />\n    </Context.Provider>\n  );\n}\n\nconst App1 = () => {\n  const {count} = useContext(Context);\n  return <h1>{count}</h1>;\n}\n\nconst App2 = () => {\n  const {add} = useContext(Context);\n  return <button onClick={ add }>Add</button>\n}\n```\n\n>多文件跨组件通信\n\n```jsx\n// ------------\"./components/Add\"--------------------\nimport React, { useContext } from 'react';\n\nconst App2 = (props) => {\n    const { add, remove } = useContext(props.context);\n    return (\n        <>\n            <button onClick={add}>Add</button>\n            <button onClick={remove}>Remove</button>\n        </>\n    );\n}\n\nexport default App2;\n\n//-------------'./components/Show'---------------------\nimport React,{useContext} from 'react';\n\nconst App1 = (props) => {\n    const {count} = useContext(props.context);\n    return <h1>{count}</h1>;\n};\n\nexport default App1;\n\n//------------\"./App.jsx\"--------------------\nimport React, { useEffect, useState } from 'react';\nimport App1 from './components/Show';\nimport App2 from './components/Add';\n\nconst Context = React.createContext();\n\nconst App = (props) => {\n  const [count, setCount] = useState(0);\n\n  const add = () => setCount(count + 1);\n  const remove = () => props.root.unmount();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Context.Provider value={{ count, add, remove }}>\n      <App1 context={Context} />\n      <App2 context={Context} />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n\n// --------\"./index.js\"-------------------\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App root={root}/>\n  </React.StrictMode>\n);\n```\n\n### 7.外部常用库\n\n#### 7.1 axios请求数据\n\naxios是基于promise对ajax的一种封装\n\n```shell\n# 安装axios\nnpm i axios\n```\n\n* 发起GET请求\n  `axios.get('url',{params:{（js对象）参数}}).then(callback)`\n* 发起POST请求\n  `axios.post('url',{（js对象）参数}).then(callback)`\n* 其他方式\n\n  ```jsx\n  axios({\n    method: '请求类型',\n    url: '请求的URL地址',\n    data: {数据},\n    params: {参数}\n    // then获得返回的数据，catch在请求错误时处理，可以无限叠加\n  }).then(result => result).catch(err => callback).\n  ```\n\n#### 7.2 Router路由\n\n现代前端应用大多都是SPA（单页应用程序），也就是只有一个HTML页面的应用程序，可以减轻服务器压力，用户体验好，为了有效使用单页面管理原来的多页面的功能，前端路由应运而生。\n\nReact Router官网：<https://reactrouterdotcom.fly.dev/docs/en/v6>\n\n>安装\n\n```bash\nnpm i react-router-dom\n```\n\n```js\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n```\n\n> 基础使用 Routes, Route, Link, Outlet\n\n```jsx\nimport {Routes, Route, Link, Outlet} from 'react-router-dom';\n\nconst Header = () => (\n  <>\n    <h1>Header</h1>\n    <p>\n      Outlet 标签为子元素占位符，为子元素占位，布局页面\n    </p>\n    <ul>\n      <li><Link to=\"/\">Home</Link></li>\n      <li><Link to=\"/First\">First</Link></li>\n      <li><Link to=\"/Second\">Second</Link></li>\n    </ul>\n    <hr />\n    <Outlet/>\n  </>\n);\n\nconst Home = () => (\n  <>\n    <h1>Home</h1>\n    <p>\n      This is the home page\n    </p>\n  </>\n);\n\nconst First = () => (\n  <>\n    <h1>First</h1>\n    <p>\n      This is the first page\n    </p>\n  </>\n);\n\nconst NotFound = () => (\n  <>\n    <h1>Not Found</h1>\n    <p>\n      This page is not found\n    </p>\n  </>\n);\n\nconst App = () => (\n  <Routes>\n    <Route path=\"/\" element={ <Header/> }>\n      <Route index element={ <Home/> }/>\n      <Route path=\"First\" element={ <First/> }/>\n      <Route path=\"*\" element={ <NotFound/> }/>\n    </Route>\n  </Routes>\n);\n```\n\n#### 7.3 Ant Design的UI库\n\n```shell\n# 安装UI样式\nnpm install antd --save\n# 安装依赖修改webpack\nnpm install @craco/craco\nnpm install craco-less\nnpm install less-loader less\n```\n\n修改 `package.json` 里的 `scripts` 属性\n\n```json\n\"scripts\": {  \n  \"start\": \"craco start\", \n  \"build\": \"craco build\", \n  \"test\": \"craco test\", \n}\n```\n\n然后在项目根目录创建一个 `craco.config.js` 用于修改默认配置\n\n```js\n// 修改为绿色主题\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          lessOptions: {\n            modifyVars: { '@primary-color': '#1DA57A' },\n            javascriptEnabled: true,\n          },\n        },\n      },\n    },\n  ],\n};\n```\n\n#### 7.4 Redux\n\n专门用于状态管理的JS库，集中管理React组件的共享状态\n从 UI 层完全抽离出来，只负责管理数据，让 React 只专注于 View 层的绘制。\n\n中文文档：<https://cn.redux.js.org/>\n\n英文文档： <https://redux.js.org/>\n\n```shell\n# 安装 redux\nnpm install @reduxjs/toolkit\nnpm install react-redux\n```\n\n> 创建 Redux Store\n\n```js\nimport { configureStore } from '@reduxjs/toolkit'\n\n// 导入别的文件配置好的 reducer\nimport counterReducer from '../features/counter/counterSlice'\n\n// 把reducer存到store中，store的属性可以随便改\nexport default configureStore({\n  reducer: {\n    counter: counterReducer\n  }\n})\n```\n\n> 创建 Slice Reducer\n\n```js\nimport { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice = createSlice({\n  //name字符串用作每个action类型的第一部分, 每个reducer函数的键名用作第二部分\n  name: 'counter',\n  // 初始化state值\n  initialState: {\n    value: 0\n  },\n  // 定义操作属性的方法\n  reducers: {\n    increment: state => {\n      state.value += 1\n    },\n    decrement: state => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    }\n  }\n})\n//导出操作属性的方法给组件使用\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n//导出 reducer\nexport default counterSlice.reducer\n```\n\n> React Counter 组件\n\n```js\nimport React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  selectCount\n} from './counterSlice'\nimport styles from './Counter.module.css'\n\nexport function Counter() {\n  // 从store中导出属性值给组件使用\n  const count = useSelector(selectCount)\n  // 导出store的dispatch函数来给组件调用方法\n  const dispatch = useDispatch()\n  // 给组件显示属性\n  const [incrementAmount, setIncrementAmount] = useState('2')\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())} // 调用方法\n        >\n          +\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n      </div>\n    </div>\n  )\n}\n```\n","source":"_posts/计算机/前端/React快速入门.md","raw":"---\ntitle: React快速入门\nimg: https://images.pexels.com/photos/11990061/pexels-photo-11990061.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\nexcerpt: React的语法\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [前端,React,JSX,TSX,JavaScript,TypeScript]\nmathjax: true\ndate: 2022-05-16 17:02:22\n---\n\n# React快速入门\n\n## 一、React\n\n### 1.JSX\n\n> JSX全称JavaScript XML，与HTML结构相似，大大降低学习成本。\n\n#### 1.1 前言\n\n```bash\n#初始化react项目\nnpx create-react-app 项目名称\n# 启动项目\ncd 项目名称\nnpm start\n```\n\n注意：\n\n1. React元素的属性名使用驼峰命名法\n2. 特殊属性名：class->className，for->htmlFor、tabindex->tabIndex\n3. 没有子节点的React元素可以用`/>`结束。\n4. 小括号包裹JSX语法\n\nJSX嵌入JS表达式\n\n* 数据存储在JS中\n* 语法：{JS表达式}\n* JSX也是合法的JS表达式\n* 不能出现对象和语句\n\n#### 1.2 JSX条件渲染\n\n```jsx\nconst isLoading = false\nconst loadData=()=>{\n    if(isLoading) return <div>loading...</div>\n    return <div>数据加载完成</div>\n}\nconst title =(\n    <h1>\n        {loadData()}\n    </h1>\n)\n```\n\n#### 1.3 JSX列表渲染\n\n* 要渲染一组数据，应该使用数组的map()方法\n* 每一个列表都应该添加key属性且不可变保持唯一\n\n```jsx\nconst songs=[\n    {id: 1,name: '我'},\n    {id: 2,name: '号'}\n]\n\nconst list = (\n    <ul>\n        {songs.map(item=> <li key={item.id}>{item.name}</li>)}\n    </ul>\n)\n```\n\n#### 1.4 JSX样式处理\n\n```jsx\n//导入css\nimport './index.css';\n\nconst list=(\n    <h1 className=\"title\">\n        JSX样式处理\n    </h1>\n)\n```\n\n### 2.TSX\n\n#### 2.1 使用CRA创建支持TS的项目\n\n```bash\n# 创建一个支持ts的react项目\nnpx create-react-app my-app --template typescript\n# 在现有react项目添加TS支持\nnpm install --save typescript @types/node @types/react @types/react-dom @types/jest\n```\n\n* 项目新增了`tsconfig.json`用来配置TS的编译选项\n* 文件扩展名为 `*.tsx`\n* 项目中`src`文件夹下增加了`react-app-env.d.ts`，用来声明React的默认类型\n  * 三斜线指令：指定依赖其他的类型声明文件\n\n#### 2.2 函数组件类型\n\n```ts\n//可以舍弃JS的PropTypes进行类型检查，利用Ts的语法来实现其功能\ntype MyProps = {\n  name: string;\n  age?: number;\n}\n\nconst Hello = ({ name, age = 18 }: MyProps) => {\n  return <div>My Name is {name} ,my age is {age}</div>;\n}\n\nconst App = () => {\n  return (\n    <div>\n      <Hello name=\"John\" age={30} />\n    </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n```\n\n#### 2.3 class组件类型\n\n```ts\ntype State = { count: number };\ntype Props = {message?: string};\n\n//无props无state\nclass App extends React.Component {}\n\n//无props有state\nclass App2 extends React.Component<{}, State> {}\n\n//有props无state\nclass App3 extends React.Component<Props> {}\n\n//有props有state\nclass App4 extends React.Component<Props, State> {}\n\n```\n\n```ts\n// props属性与state属性的类型\ntype State = { count: number };\ntype Props = {name: string, age?: number};\n\nclass App extends React.Component<Props> {\n  state: State = {\n    count: 0\n  };\n\n  handleClick = () => {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  render() {\n    const { name, age = 18 } = this.props;\n    return (\n      <div>\n        <h1>Hello, {name}</h1>\n        <h2>You are {age} years old</h2>\n        <h3>{this.state.count}</h3>\n        <button onClick={this.handleClick}>Click me</button>\n      </div>\n    );\n  }\n}\n```\n\n### 3.组件\n\n> 组件是React核心\n> 组件特点：可复用性、独立、可组合性\n\n#### 3.1创建组件\n\n* 函数创建组件\n\n注意：\n\n1. 函数名必须大写字母开头\n2. 必须有返回值，表示该组件的结构\n3. 如果返回值为null表示不渲染任何内容\n\n```jsx\n//普通函数创建组件\nfunction Hello(){\n    return <div>这个是我的函数组件</div>   \n}\n\n//箭头函数创建组件\nconst Hello = ()=> <div>这个是我的函数组件</div>\n\n//渲染组件\nReactDom.render(<Hello />,document.getElementById('root'))\n```\n\n* 类创建组件\n\n注意：\n\n1. 类名首字母大写\n2. 类组件应该继承React.Component父类\n3. 类组件必须提供render()方法\n4. render()方法必须有返回值\n\n```jsx\n//创建类组件\nclass Hello extends React.Componet{\n    render(){\n        return <div>这个是我的类组件</div>\n    }\n}\n\n//渲染组件\nReactDom.render(<Hello />,document.getElementById('root'))\n```\n\n**每个组件都应该放在单独的文件中**:\n\n步骤：\n\n1. 创建组件文件\n2. 在文件中导入React\n3. 创建组件\n4. 导出组件\n5. 在需要使用的文件中导入该组件\n\n```jsx\nimport React from 'react'\n\n//创建组件\nclass Hello extends React.Componet{\n    render(){\n        return <div>这个是我的JS组件</div>\n    }\n}\n\n//导出组件\nexport default Hello\n```\n\n```jsx\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Hello from './Hello.js'\n\n//渲染组件\nReactDom.render(<Hello />,document.getElementById('root'))\n```\n\n#### 3.2 事件处理\n\n* 事件绑定语法：\n  * `on+事件名称={事件处理程序}`\n  * 事件的名称采用驼峰命名法\n\n```jsx\nclass App extends React.Component {\n  //事件处理函数\n  handleClick = () => {\n    console.log('click');\n  }\n  render() {\n    return <button onClick={this.handleClick}>按钮</button>;\n  }\n}\n\n//渲染组件\nconst root = ReactDOM.createRoot(document.getElementById('root')); \nroot.render(\n  <App />\n);\n```\n\n* 事件处理对象\n  * 可以通过事件处理程序的参数获得事件对象\n  * 该合成事件对象兼容所有浏览器\n\n```jsx\nclass App extends React.Component {\n  //事件处理函数\n  handleClick(e) {\n    e.preventDefault(); //利用事件对象阻止浏览器默认行为\n    console.log('click');\n   }\n  render() {\n    return <button onClick={this.handleClick}>按钮</button>;\n  }\n}\n```\n\n#### 3.3 有状态组件和无状态组件\n\n* 函数组件叫做无状态组件，类组件叫做有状态组件\n* 状态（state）即数据\n* 函数组件没有自己的状态，只负责数据的展示（静）\n* 类组件有自己的状态，负责更新UI，让组件动起来\n* 状态（state）值是对象，是组件的私有数据\n* 只能用`setState()`来修改`state`数据\n* `setState()`用来修改状态和更新UI\n* 思想：数据驱动视图\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    count: 0\n  }\n  render() {\n    return (\n      <div>\n        <h1>计数器：{this.state.count}</h1>\n        <button onClick={() => this.setState({count: this.state.count + 1})}>+1</button>\n      </div>\n    );\n  }\n}\n```\n\n> 逻辑代码独立出去后this指向问题处理\n\n* 箭头函数\n\n```js\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    count: 0\n  }\n  // 在这里更新状态\n  onAddOne = () => {\n    this.setState({  //this必须指向实例\n      count: this.state.count + 1\n    })\n  }\n  render() {\n    return (\n      <div>\n        <h1>计数器：{this.state.count}</h1>\n        <button onClick={this.onAddOne}>+1</button>\n      </div>\n    );\n  }\n}\n```\n\n* ES5的bind()函数\n\n```jsx\nconstructor(){\n    super()\n    this.onAddOne = this.onAddOne.bind(this)\n}\n```\n\n#### 3.4 表单处理\n\n* 受控组件：受到React控制的html\n\n步骤：\n\n1. 在state中添加一个状态，作为表单元素额value值\n2. 给表单元素绑定change事件，将表单元素的值 设置为state的值 (双向绑定)\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    txt: '',\n  }\n  // 在这里更新状态\n  onChange = (e) => {\n    this.setState({\n      txt: e.target.value,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <input type=\"text\" value={this.state.txt} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n```\n\n> 多表单元素统一处理\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    txt: '',\n    content: '',\n    city: 'SZ',\n    isChecked: false,\n  }\n  // 在这里更新状态\n  onChange = (e) => {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n  render() {\n    return (\n      <div>\n        <input type=\"text\" name='txt' value={this.state.txt} onChange={this.onChange} /><br />\n        <textarea name='content' value={this.state.content} onChange={this.onChange} /><br />\n        <select name='city' value={this.state.city} onChange={this.onChange}>\n          <option value=\"BJ\">北京</option>\n          <option value=\"SH\">上海</option>\n          <option value=\"SZ\">深圳</option>\n        </select><br />\n        <input type=\"checkbox\" name='isChecked' checked={this.state.isChecked} onChange={this.onChange} /><br />\n      </div>\n    );\n  }\n}\n```\n\n* 非控组件：操作DOM获取元素数据\n\n1. 调用React.createRef()创建一个ref对象\n2. 将创建好的ref对象添加到文本框中\n3. 通过ref对象获取到文本框的值\n\n#### 3.5 小结案例--评论\n\n```jsx\nclass App extends React.Component {\n  // 在这里初始化状态\n  state = {\n    comments: [\n      { id: 1, name: 'Pete Hunt', text: 'This is one comment' },\n      { id: 2, name: 'Jordan Walke', text: 'This is *another* comment' },\n    ],\n    username: '',\n    content: '',\n  }\n  // 在这里更新状态\n\n  commentsList = () => {\n    return (this.state.comments.length === 0 \n      ?<div className='noComment'><strong>暂无评论，快去评论吧~</strong></div>\n      :(\n        <ul>\n          {this.state.comments.map((comment) => {\n            return (\n              <li key={comment.id}>\n                <h3>{comment.name}:</h3>\n                <p>{comment.text}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )\n    );\n  }\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addComment = () => {\n    const comment = {\n      id: this.state.comments.length + 1,\n      name: this.state.username,\n      text: this.state.content,\n    };\n    this.setState({\n      comments: [...this.state.comments, comment],\n    });\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <div>\n          <input type=\"text\" name='username' value={this.state.username} className='user' placeholder='输入姓名' onChange={this.onChange}/><br/>\n          <textarea name='content' className='text' value={this.state.content} placeholder='输入评论' onChange={this.onChange}/><br/>\n          <button className='btn' onClick={this.addComment}>提交</button>\n        </div>\n        <div><h2>评论列表</h2></div>\n        {this.commentsList()}\n      </div>\n    );\n  }\n}\n\n//渲染组件\nconst root = ReactDOM.createRoot(document.getElementById('root')); \nroot.render(\n  <App />\n);\n```\n\n### 4.组件通讯\n\n#### 4.1 组件接收数据\n\n组件是独立且封闭的单元，默认情况下只能使用自己的数据，而对于一个复杂的项目通常需要拆分多个组件，而多个组件需要数据传递就是组件通讯。\n\nprops的作用：接收传递给组件的数据\n\n* 传递数据：给组件标签添加属性\n* 接收数据：函数组件通过参数props接收数据，类组件通过this.props接收数据\n\n```js\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>{this.props.name}</h1>\n      </div>\n    );\n  }\n}\n\n//渲染组件\nconst root = ReactDOM.createRoot(document.getElementById('root')); \nroot.render(\n  //传递字符串、数值、数组、函数\n  <App name='jack'  age={19} colors={['read','green']} fn={()=> console.log('Hello')}/>  \n);\n```\n\n注意：\n\n* props无法对属性赋值，这是个只读属性\n* 类组件在使用构造函数时，需要把props作为构造函数和super()的参数\n\n#### 4.2 父组件传递给子组件\n\n1. 父组件要提供传递的state数据\n2. 给子组件标签添加属性，值为state中的数据\n3. 子组件通过props接收父组件中传递的数据\n\n```jsx\nclass Father extends React.Component {\n  state = {\n    name: '王五',\n  }\n  render() {\n    return (\n      <div>\n        <Child name={this.state.name} />\n      </div>\n    );\n  }\n}\n\nconst Child = (props) => {\n  return (\n      <h1>{props.name}</h1>\n  );\n}\n```\n\n#### 4.3  子组件传递数据给父组件\n\n1. 父组件提供回调函数\n2. 将该函数作为属性值传递给子组件\n3. 子组件通过props调用回调函数\n4. 将子组件的数据作为参数传递给回调函数\n\n```jsx\nclass Father extends React.Component {\n  state = {\n    msg: ''\n  }\n  say=(data)=>{\n    console.log('father say:', data);\n    this.setState({\n      msg: data\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Child say={this.say} />\n      </div>\n    );\n  }\n}\nclass Child extends React.Component {\n  state = {\n    data: 'hello'\n  }\n  handleClick=()=>{\n    this.props.say(this.state.data);\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick}>click</button>\n      </div>\n    );\n  }\n}\n```\n\n#### 4.4 兄弟组件通信\n\n1. 状态提升\n2. 将多个组件需要共享的状态提升到他们最近的父组件中\n3. 公共父组件职责：提供共享状态、提供操作共享状态的方法\n4. 要通讯的子组件只需通过props接收状态或操作状态的方法\n\n```jsx\nclass Father extends React.Component {\n  state = {\n    count: 0,\n  }\n  add = () => {\n    this.setState({\n      count: this.state.count + 1,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Child1 count={this.state.count} />\n        <Child2 add={this.add} />\n      </div>\n    );\n  }\n}\nconst Child1 = (props) => {\n  return (\n    <div>\n      <h1>计数器：{props.count}</h1>\n    </div>\n  )\n}\nconst Child2 = (props) => {\n  return (\n    <div>\n      <button onClick={()=> props.add()}>+1</button>\n    </div>\n  )\n}\n```\n\n#### 4.5 跨多个组件通信\n\n1. 生产者与消费者\n2. 调用React.createContext()创建Provider和Consumer两个组件\n3. 使用Provider在通信组件的最近父组件\n4. 设置value属性，表示要传递的数据\n5. 使用Consumer组件接收数据\n\n```jsx\nconst {Provider, Consumer} = React.createContext();\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  };\n  \n  add = () => {\n    this.setState({\n      count: this.state.count + 1,\n    });\n  };\n\n  render() {\n    return (\n      <Provider value={{count: this.state.count,add: this.add}}>\n        <div>\n          <App1 />\n          <App2 />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nconst App1 = () => (\n  <div>\n    <Consumer>\n      { value => <h1>{value.count}</h1> }\n    </Consumer>\n  </div>\n);\n\nconst App2 = () => (\n  <Consumer>\n    {value => {\n      return (\n        <button onClick={ ()=>value.add() }>Click</button>\n      );\n    }}\n  </Consumer>\n)\n```\n\n### 5.组件进阶\n\n#### 5.1 静态类型检查\n\nprop-types库提供props属性的类型校验\n\n```jsx\nApp.propTypes={\n  a: PropTypes.number,                 //属性a ，数值类型\n  fn: PropTypes.func.isRequired,  //属性fn，函数且为必填项\n  tag: PropTypes.element,            //React元素\n  filter: PropTypes.shape({          //对象，area属性为字符串，price为数值\n    area: PropTypes.string,\n    price: PropTypes.number,\n  })\n}\n```\n\nprop-types库提供props属性默认值\n\n```jsx\nApp.defaultProps={\n  a: 10,\n}\n```\n\n#### 5.2 组件的生命周期\n\n* 生命周期：组件从创建到挂载到页面中运行，再到组件不用时卸载的过程。\n* 生命周期的每个阶段总是伴随着一些方法的调用，这些方法就是生命周期的钩子函数\n* 钩子函数：为开发人员在不同阶段提供操作时机\n* 只有类组件才有生命周期\n\n**创建时**:\n\n* 执行时间：组件创建时\n* 执行顺序：`constructor()--->render()--->componentDidMount()`\n\n| 钩子函数          | 触发时间                      | 作用                                     |\n| ----------------- | ----------------------------- | ---------------------------------------- |\n| constructor       | 组件创建时，最先执行          | 1.初始化state   2.为事件处理程序绑定this |\n| render            | 每次渲染都会触发              | 渲染UI（不能调用setState）               |\n| componentDidMount | 组件挂载（DOM渲染完成）后触发 | 1.发送网络请求   2.DOM操作               |\n\n**更新时**:\n\n* 执行时间：调用函数 1.`setState()` 2.`forceUpdate()` 3.组件接收到新的`props`\n* 执行顺序：`render()--->componentDidUpdate()`\n\n| 钩子函数           | 触发时间                      | 作用                      |\n| ------------------ | ----------------------------- | ------------------------- |\n| render             | 每次渲染都会触发              | 渲染UI                    |\n| componentDidUpdate | 组件更新（DOM渲染完成）后触发 | 1.发送网络请求  2.DOM操作 |\n\n**卸载时**:\n\n* 执行时间：组件消失\n\n| 钩子函数             | 触发时间       | 作用     |\n| -------------------- | -------------- | -------- |\n| componentWillUnmount | 组件卸载时触发 | 清理工作 |\n\n**新的生命周期函数**:\n\n| 钩子函数                 | 触发时间                         | 用法                                                                          |\n| ------------------------ | -------------------------------- | ----------------------------------------------------------------------------- |\n| getDerivedStateFromProps | 第一次初始化组件以及后续的更新前 | 静态函数，需要加static。 返回一个对象作为新的state，返回null则不需要更新state |\n| getSnapshotBeforeUpdate  | 组件更新前                       | 在更新前获得过去的快照                                                        |\n\n#### 5.3 组件复用\n\nprops的children属性\n\n* 表示了组件的子节点，当组件标签有子节点时，props就会有该属性\n* 与普通props一样，值可以是任意值。\n\n利用复用来处理相似功能的方法\n两种方式：\n\n  1. render props模式\n  2. 高阶组件\n\n步骤：\n\n1. 创建复用的组件，在复用组件中提供状态和操作状态的方法\n2. 将复用组件的状态作为props.render(state)方法的参数，暴露到组件外\n3. 外部使用render()的属性接收参数并使用\n\n```jsx\nclass Mouse extends React.Component {\n  state = {\n    x: 0,\n    y: 0\n  }\n  handleMouseMove = (event) => {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleMouseMove);\n  }\n  render() {\n    return this.props.render(this.state);\n  }\n}\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <Mouse render={(mouse) => (\n          <p>The mouse position is ({mouse.x}, {mouse.y})</p>\n        )} />\n      </div>\n    );\n  }\n}\n```\n\nchildren属性 代替 render属性\n\n```jsx\nclass Mouse extends React.Component {\n  state = {\n    x: 0,\n    y: 0\n  }\n  handleMouseMove = (event) => {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleMouseMove);\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\nclass App extends React.Component {\n  render() {\n    return (\n      <Mouse>\n        {(mouse) => (\n          <div>\n            <h1>Move the mouse around!</h1>\n            <p>The current mouse position is ({mouse.x}, {mouse.y})</p>\n          </div>\n        )}\n      </Mouse>\n    );\n  }\n}\n```\n\n代码优化：\n\n```jsx\n//卸载时，解除事件绑定\ncomponentWillUnmount() {\n  document.removeEventListener('mousemove', this.handleMouseMove);\n}\n//添加类型限制\nMouse.propTypes = {\n  children: PropTypes.func.isRequired\n}\n```\n\n高阶组件采用包装（装饰）模式来实现状态逻辑复用\n\n步骤：\n\n1. 创建一个函数，名称为with开头\n2. 指定函数参数，为大写字母开头\n3. 在函数内部创建一个类组件，提供复用的状态逻辑代码\n4. 在该组件中，渲染参数组件，同时将状态通过prop传递给参数组件\n5. 调用该高阶组件，传入要增强的组件，通过返回值拿到增强后的组件，并将其渲染到页面中\n\n```jsx\nfunction withMouse(WrappedComponent){\n  class Mouse extends React.Component {\n    state = {\n      x: 0,\n      y: 0\n    }\n    handleMouseMove = (event) => {\n      this.setState({\n        x: event.clientX,\n        y: event.clientY\n      });\n    }\n    componentDidMount() {\n      document.addEventListener('mousemove', this.handleMouseMove);\n    }\n    componentWillUnmount() {\n      document.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    render() {\n      return <WrappedComponent {...this.state}/>\n    }\n  }\n  //设置装饰不同组件的名字，给调试使用\n  Mouse.displayName = `withMouse(${getDisplayName(WrappedComponent)})`;\n  return Mouse;\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nconst Position = (props) => {\n  return (\n      <p>The current mouse position is ({props.x}, {props.y})</p>\n  );\n}\n\nconst MousePosition = withMouse(Position);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <MousePosition/>\n      </div>\n    );\n  }\n}\n```\n\n高阶组件的props的传递丢失问题：\n\n```jsx\n//把props继续往下传\nrender() {\n  return <WrappedComponent {...this.state} {...this.props}/>\n}\n```\n\n#### 5.4 setState函数\n\n* setState()函数是异步更新的（有延迟）\n\n```jsx\n//原来语法\nthis.setState({\n  x: event.clientX,\n  y: event.clientY\n});\n```\n\n```jsx\n//推荐语法，表示最新的state和props\nthis.setState((prevState,props) => {\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n},()=>{\n  //第二个参数，回调函数，在状态更新完成后立即执行\n\n});\n```\n\n#### 5.5 组件性能优化\n\n```jsx\n//在render()之前运行，用来判断组件是否渲染，避免重复渲染\nshouldComponentUpdate(nextProps,nextSate){\n  //状态不是自己的用nextProps进行比较，状态是自己的用nextSate进行比较\n  //需要重新渲染\n  return true\n  //不需要重新渲染\n  return false\n}\n```\n\n类组件继承`React.PureComponent`，自己已经实现`shouldComponentUpdate`钩子函数，来对前后props和state进行比较，来决定是否进行本次渲染。\n\n当要对比引用类型的值时，需要重新创建对象，才能更新组件。\n\n#### 5.6 虚拟DOM和Diff算法\n\n执行过程：\n\n1. React初始state，创建虚拟DOM对象树\n2. 根据虚拟DOM生成真正的DOM，渲染到页面中\n3. 当数据变化后，重新根据新的数据，创建新的虚拟DOM对象树\n4. 与上一次得到的虚拟DOM，使用Diff算法进行对比，得到需要更新的内容\n5. 最终，React只将变化的内容更新到DOM中，重新渲染到页面。\n\n### 6.Hooks\n\n1. 高阶组件复用代码复杂\n2. 生命周期复杂\n3. 函数组件是无状态组件\n\n#### 6.1 useState\n\n>接收一个初始值，返回一个状态值和一个更新函数\n\n```jsx\nconst [state, setState] = useState(initialState);\n```\n\n> 更新函数通过接收一个新的值来更新状态值\n\n```jsx\nsetState(newState);\n```\n\n>Example\n\n```jsx\nimport React,{useState} from 'react';\n\nconst {Provider, Consumer} = React.createContext();\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const add = () => setCount(count + 1);\n  return (\n    <Provider value={{count, add}}>\n      <App1 />\n      <App2 />\n    </Provider>\n  );\n}\n\nconst App1 = () => (\n  <div>\n    <Consumer>\n      { value => <h1>{ value.count }</h1> }\n    </Consumer>\n  </div>\n);\n\nconst App2 = () => (\n  <Consumer>\n    {value => {\n      return (\n        <button onClick={ value.add }>Click</button>\n      );\n    }}\n  </Consumer>\n)\n```\n\n#### 6.2 useEffect\n\n函数组件没有生命周期\n\nuseEffect作用：通过使用这个 Hook，你告诉 React 你的组件需要在渲染后做一些事情。React 会记住你传递的函数（我们将它称为我们的“效果”），并在执行 DOM 更新后调用它。\n\nuseEffect运行时间：默认情况下，它在第一次渲染后和每次更新后运行。\n\n```jsx\n// useEffect不加第二个参数，监测所有数据，一旦数据发生改变就会调用该Hook\nuseEffect(() => {\n  document.title = `You clicked ${count} times`;\n});\n```\n\n```jsx\n// useEffect加第二个参数，监测指定数据，一旦指定数据发生改变就会调用该Hook\nuseEffect(() => {\n  document.title = `You clicked ${count} times`;\n},[count]);\n```\n\n```jsx\nconst App = () => {\n  const [count, setCount] = useState(0);\n\n  const add = () => setCount(count + 1);\n  const remove = () =>  ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n\n  // return后面的数据将会在组件卸载后执行\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  },[]);\n\n  return (\n    <Provider value={{count, add, remove}}>\n      <App1 />\n      <App2 />\n    </Provider>\n  );\n}\n```\n\n常用操作：\n\n1. 发起ajax请求\n2. 设置订阅/启动定时器\n3. 更改DOM\n\n#### 6.3 useContext\n\n函数组件中处理跨多个组件通信的问题\n\n>单文件跨组件通信\n\n```jsx\nconst Context = React.createContext();\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n\n  const add = () => setCount(count + 1);\n\n  return (\n    <Context.Provider value={{count, add}}>\n      <App1 />\n      <App2 />\n    </Context.Provider>\n  );\n}\n\nconst App1 = () => {\n  const {count} = useContext(Context);\n  return <h1>{count}</h1>;\n}\n\nconst App2 = () => {\n  const {add} = useContext(Context);\n  return <button onClick={ add }>Add</button>\n}\n```\n\n>多文件跨组件通信\n\n```jsx\n// ------------\"./components/Add\"--------------------\nimport React, { useContext } from 'react';\n\nconst App2 = (props) => {\n    const { add, remove } = useContext(props.context);\n    return (\n        <>\n            <button onClick={add}>Add</button>\n            <button onClick={remove}>Remove</button>\n        </>\n    );\n}\n\nexport default App2;\n\n//-------------'./components/Show'---------------------\nimport React,{useContext} from 'react';\n\nconst App1 = (props) => {\n    const {count} = useContext(props.context);\n    return <h1>{count}</h1>;\n};\n\nexport default App1;\n\n//------------\"./App.jsx\"--------------------\nimport React, { useEffect, useState } from 'react';\nimport App1 from './components/Show';\nimport App2 from './components/Add';\n\nconst Context = React.createContext();\n\nconst App = (props) => {\n  const [count, setCount] = useState(0);\n\n  const add = () => setCount(count + 1);\n  const remove = () => props.root.unmount();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Context.Provider value={{ count, add, remove }}>\n      <App1 context={Context} />\n      <App2 context={Context} />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n\n// --------\"./index.js\"-------------------\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App root={root}/>\n  </React.StrictMode>\n);\n```\n\n### 7.外部常用库\n\n#### 7.1 axios请求数据\n\naxios是基于promise对ajax的一种封装\n\n```shell\n# 安装axios\nnpm i axios\n```\n\n* 发起GET请求\n  `axios.get('url',{params:{（js对象）参数}}).then(callback)`\n* 发起POST请求\n  `axios.post('url',{（js对象）参数}).then(callback)`\n* 其他方式\n\n  ```jsx\n  axios({\n    method: '请求类型',\n    url: '请求的URL地址',\n    data: {数据},\n    params: {参数}\n    // then获得返回的数据，catch在请求错误时处理，可以无限叠加\n  }).then(result => result).catch(err => callback).\n  ```\n\n#### 7.2 Router路由\n\n现代前端应用大多都是SPA（单页应用程序），也就是只有一个HTML页面的应用程序，可以减轻服务器压力，用户体验好，为了有效使用单页面管理原来的多页面的功能，前端路由应运而生。\n\nReact Router官网：<https://reactrouterdotcom.fly.dev/docs/en/v6>\n\n>安装\n\n```bash\nnpm i react-router-dom\n```\n\n```js\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n```\n\n> 基础使用 Routes, Route, Link, Outlet\n\n```jsx\nimport {Routes, Route, Link, Outlet} from 'react-router-dom';\n\nconst Header = () => (\n  <>\n    <h1>Header</h1>\n    <p>\n      Outlet 标签为子元素占位符，为子元素占位，布局页面\n    </p>\n    <ul>\n      <li><Link to=\"/\">Home</Link></li>\n      <li><Link to=\"/First\">First</Link></li>\n      <li><Link to=\"/Second\">Second</Link></li>\n    </ul>\n    <hr />\n    <Outlet/>\n  </>\n);\n\nconst Home = () => (\n  <>\n    <h1>Home</h1>\n    <p>\n      This is the home page\n    </p>\n  </>\n);\n\nconst First = () => (\n  <>\n    <h1>First</h1>\n    <p>\n      This is the first page\n    </p>\n  </>\n);\n\nconst NotFound = () => (\n  <>\n    <h1>Not Found</h1>\n    <p>\n      This page is not found\n    </p>\n  </>\n);\n\nconst App = () => (\n  <Routes>\n    <Route path=\"/\" element={ <Header/> }>\n      <Route index element={ <Home/> }/>\n      <Route path=\"First\" element={ <First/> }/>\n      <Route path=\"*\" element={ <NotFound/> }/>\n    </Route>\n  </Routes>\n);\n```\n\n#### 7.3 Ant Design的UI库\n\n```shell\n# 安装UI样式\nnpm install antd --save\n# 安装依赖修改webpack\nnpm install @craco/craco\nnpm install craco-less\nnpm install less-loader less\n```\n\n修改 `package.json` 里的 `scripts` 属性\n\n```json\n\"scripts\": {  \n  \"start\": \"craco start\", \n  \"build\": \"craco build\", \n  \"test\": \"craco test\", \n}\n```\n\n然后在项目根目录创建一个 `craco.config.js` 用于修改默认配置\n\n```js\n// 修改为绿色主题\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          lessOptions: {\n            modifyVars: { '@primary-color': '#1DA57A' },\n            javascriptEnabled: true,\n          },\n        },\n      },\n    },\n  ],\n};\n```\n\n#### 7.4 Redux\n\n专门用于状态管理的JS库，集中管理React组件的共享状态\n从 UI 层完全抽离出来，只负责管理数据，让 React 只专注于 View 层的绘制。\n\n中文文档：<https://cn.redux.js.org/>\n\n英文文档： <https://redux.js.org/>\n\n```shell\n# 安装 redux\nnpm install @reduxjs/toolkit\nnpm install react-redux\n```\n\n> 创建 Redux Store\n\n```js\nimport { configureStore } from '@reduxjs/toolkit'\n\n// 导入别的文件配置好的 reducer\nimport counterReducer from '../features/counter/counterSlice'\n\n// 把reducer存到store中，store的属性可以随便改\nexport default configureStore({\n  reducer: {\n    counter: counterReducer\n  }\n})\n```\n\n> 创建 Slice Reducer\n\n```js\nimport { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice = createSlice({\n  //name字符串用作每个action类型的第一部分, 每个reducer函数的键名用作第二部分\n  name: 'counter',\n  // 初始化state值\n  initialState: {\n    value: 0\n  },\n  // 定义操作属性的方法\n  reducers: {\n    increment: state => {\n      state.value += 1\n    },\n    decrement: state => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    }\n  }\n})\n//导出操作属性的方法给组件使用\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n//导出 reducer\nexport default counterSlice.reducer\n```\n\n> React Counter 组件\n\n```js\nimport React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  selectCount\n} from './counterSlice'\nimport styles from './Counter.module.css'\n\nexport function Counter() {\n  // 从store中导出属性值给组件使用\n  const count = useSelector(selectCount)\n  // 导出store的dispatch函数来给组件调用方法\n  const dispatch = useDispatch()\n  // 给组件显示属性\n  const [incrementAmount, setIncrementAmount] = useState('2')\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())} // 调用方法\n        >\n          +\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n      </div>\n    </div>\n  )\n}\n```\n","slug":"计算机/前端/React快速入门","published":1,"updated":"2022-05-19T07:58:00.210Z","layout":"post","photos":[],"_id":"cm1z7giq60037dwvxhblccf1k","content":"<h1 id=\"React快速入门\"><a href=\"#React快速入门\" class=\"headerlink\" title=\"React快速入门\"></a>React快速入门</h1><h2 id=\"一、React\"><a href=\"#一、React\" class=\"headerlink\" title=\"一、React\"></a>一、React</h2><h3 id=\"1-JSX\"><a href=\"#1-JSX\" class=\"headerlink\" title=\"1.JSX\"></a>1.JSX</h3><blockquote>\n<p>JSX全称JavaScript XML，与HTML结构相似，大大降低学习成本。</p>\n</blockquote>\n<h4 id=\"1-1-前言\"><a href=\"#1-1-前言\" class=\"headerlink\" title=\"1.1 前言\"></a>1.1 前言</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#初始化react项目</span></span><br><span class=\"line\">npx create-react-app 项目名称</span><br><span class=\"line\"><span class=\"comment\"># 启动项目</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> 项目名称</span><br><span class=\"line\">npm start</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ol>\n<li>React元素的属性名使用驼峰命名法</li>\n<li>特殊属性名：class-&gt;className，for-&gt;htmlFor、tabindex-&gt;tabIndex</li>\n<li>没有子节点的React元素可以用<code>/&gt;</code>结束。</li>\n<li>小括号包裹JSX语法</li>\n</ol>\n<p>JSX嵌入JS表达式</p>\n<ul>\n<li>数据存储在JS中</li>\n<li>语法：{JS表达式}</li>\n<li>JSX也是合法的JS表达式</li>\n<li>不能出现对象和语句</li>\n</ul>\n<h4 id=\"1-2-JSX条件渲染\"><a href=\"#1-2-JSX条件渲染\" class=\"headerlink\" title=\"1.2 JSX条件渲染\"></a>1.2 JSX条件渲染</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isLoading = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">loadData</span>=(<span class=\"params\"></span>)=&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isLoading) <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>loading...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>数据加载完成<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> title =(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;loadData()&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-JSX列表渲染\"><a href=\"#1-3-JSX列表渲染\" class=\"headerlink\" title=\"1.3 JSX列表渲染\"></a>1.3 JSX列表渲染</h4><ul>\n<li>要渲染一组数据，应该使用数组的map()方法</li>\n<li>每一个列表都应该添加key属性且不可变保持唯一</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> songs=[</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>,<span class=\"attr\">name</span>: <span class=\"string\">&#x27;我&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>,<span class=\"attr\">name</span>: <span class=\"string\">&#x27;号&#x27;</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> list = (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;songs.map(item=&gt; <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;item.id&#125;</span>&gt;</span>&#123;item.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>)&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-4-JSX样式处理\"><a href=\"#1-4-JSX样式处理\" class=\"headerlink\" title=\"1.4 JSX样式处理\"></a>1.4 JSX样式处理</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入css</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./index.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> list=(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        JSX样式处理</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-TSX\"><a href=\"#2-TSX\" class=\"headerlink\" title=\"2.TSX\"></a>2.TSX</h3><h4 id=\"2-1-使用CRA创建支持TS的项目\"><a href=\"#2-1-使用CRA创建支持TS的项目\" class=\"headerlink\" title=\"2.1 使用CRA创建支持TS的项目\"></a>2.1 使用CRA创建支持TS的项目</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建一个支持ts的react项目</span></span><br><span class=\"line\">npx create-react-app my-app --template typescript</span><br><span class=\"line\"><span class=\"comment\"># 在现有react项目添加TS支持</span></span><br><span class=\"line\">npm install --save typescript @types/node @types/react @types/react-dom @types/jest</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>项目新增了<code>tsconfig.json</code>用来配置TS的编译选项</li>\n<li>文件扩展名为 <code>*.tsx</code></li>\n<li>项目中<code>src</code>文件夹下增加了<code>react-app-env.d.ts</code>，用来声明React的默认类型<ul>\n<li>三斜线指令：指定依赖其他的类型声明文件</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-函数组件类型\"><a href=\"#2-2-函数组件类型\" class=\"headerlink\" title=\"2.2 函数组件类型\"></a>2.2 函数组件类型</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//可以舍弃JS的PropTypes进行类型检查，利用Ts的语法来实现其功能</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">MyProps</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  age?: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Hello</span> = (<span class=\"params\">&#123; name, age = <span class=\"number\">18</span> &#125;: <span class=\"title class_\">MyProps</span></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>My Name is &#123;name&#125; ,my age is &#123;age&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Hello</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;John&quot;</span> <span class=\"attr\">age</span>=<span class=\"string\">&#123;30&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"title class_\">HTMLElement</span></span><br><span class=\"line\">);</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-class组件类型\"><a href=\"#2-3-class组件类型\" class=\"headerlink\" title=\"2.3 class组件类型\"></a>2.3 class组件类型</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">State</span> = &#123; <span class=\"attr\">count</span>: <span class=\"built_in\">number</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Props</span> = &#123;message?: <span class=\"built_in\">string</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//无props无state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//无props有state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App2</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;&#123;&#125;, <span class=\"title class_\">State</span>&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//有props无state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App3</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;<span class=\"title class_\">Props</span>&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//有props有state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App4</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;<span class=\"title class_\">Props</span>, <span class=\"title class_\">State</span>&gt; &#123;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// props属性与state属性的类型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">State</span> = &#123; <span class=\"attr\">count</span>: <span class=\"built_in\">number</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Props</span> = &#123;<span class=\"attr\">name</span>: <span class=\"built_in\">string</span>, age?: <span class=\"built_in\">number</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;<span class=\"title class_\">Props</span>&gt; &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"title class_\">State</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleClick = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; name, age = <span class=\"number\">18</span> &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>You are &#123;age&#125; years old<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;this.state.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-组件\"><a href=\"#3-组件\" class=\"headerlink\" title=\"3.组件\"></a>3.组件</h3><blockquote>\n<p>组件是React核心<br>组件特点：可复用性、独立、可组合性</p>\n</blockquote>\n<h4 id=\"3-1创建组件\"><a href=\"#3-1创建组件\" class=\"headerlink\" title=\"3.1创建组件\"></a>3.1创建组件</h4><ul>\n<li>函数创建组件</li>\n</ul>\n<p>注意：</p>\n<ol>\n<li>函数名必须大写字母开头</li>\n<li>必须有返回值，表示该组件的结构</li>\n<li>如果返回值为null表示不渲染任何内容</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//普通函数创建组件</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Hello</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的函数组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//箭头函数创建组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Hello</span> = (<span class=\"params\"></span>)=&gt; <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的函数组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDom</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Hello</span> /&gt;</span></span>,<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>类创建组件</li>\n</ul>\n<p>注意：</p>\n<ol>\n<li>类名首字母大写</li>\n<li>类组件应该继承React.Component父类</li>\n<li>类组件必须提供render()方法</li>\n<li>render()方法必须有返回值</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建类组件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Hello</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Componet</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">render</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的类组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDom</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Hello</span> /&gt;</span></span>,<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<p><strong>每个组件都应该放在单独的文件中</strong>:</p>\n<p>步骤：</p>\n<ol>\n<li>创建组件文件</li>\n<li>在文件中导入React</li>\n<li>创建组件</li>\n<li>导出组件</li>\n<li>在需要使用的文件中导入该组件</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建组件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Hello</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Componet</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">render</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的JS组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//导出组件</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Hello</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ReactDOM</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Hello</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Hello.js&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDom</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Hello</span> /&gt;</span></span>,<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-事件处理\"><a href=\"#3-2-事件处理\" class=\"headerlink\" title=\"3.2 事件处理\"></a>3.2 事件处理</h4><ul>\n<li>事件绑定语法：<ul>\n<li><code>on+事件名称=&#123;事件处理程序&#125;</code></li>\n<li>事件的名称采用驼峰命名法</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//事件处理函数</span></span><br><span class=\"line\">  handleClick = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>)); </span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>事件处理对象<ul>\n<li>可以通过事件处理程序的参数获得事件对象</li>\n<li>该合成事件对象兼容所有浏览器</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//事件处理函数</span></span><br><span class=\"line\">  <span class=\"title function_\">handleClick</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    e.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">//利用事件对象阻止浏览器默认行为</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-有状态组件和无状态组件\"><a href=\"#3-3-有状态组件和无状态组件\" class=\"headerlink\" title=\"3.3 有状态组件和无状态组件\"></a>3.3 有状态组件和无状态组件</h4><ul>\n<li>函数组件叫做无状态组件，类组件叫做有状态组件</li>\n<li>状态（state）即数据</li>\n<li>函数组件没有自己的状态，只负责数据的展示（静）</li>\n<li>类组件有自己的状态，负责更新UI，让组件动起来</li>\n<li>状态（state）值是对象，是组件的私有数据</li>\n<li>只能用<code>setState()</code>来修改<code>state</code>数据</li>\n<li><code>setState()</code>用来修改状态和更新UI</li>\n<li>思想：数据驱动视图</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>计数器：&#123;this.state.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> this.setState(&#123;count: this.state.count + 1&#125;)&#125;&gt;+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>逻辑代码独立出去后this指向问题处理</p>\n</blockquote>\n<ul>\n<li>箭头函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\">  onAddOne = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;  <span class=\"comment\">//this必须指向实例</span></span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>计数器：&#123;this.state.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.onAddOne&#125;</span>&gt;</span>+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ES5的bind()函数</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">constructor</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">onAddOne</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">onAddOne</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-4-表单处理\"><a href=\"#3-4-表单处理\" class=\"headerlink\" title=\"3.4 表单处理\"></a>3.4 表单处理</h4><ul>\n<li>受控组件：受到React控制的html</li>\n</ul>\n<p>步骤：</p>\n<ol>\n<li>在state中添加一个状态，作为表单元素额value值</li>\n<li>给表单元素绑定change事件，将表单元素的值 设置为state的值 (双向绑定)</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">txt</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\">  onChange = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">txt</span>: e.<span class=\"property\">target</span>.<span class=\"property\">value</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.txt&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>多表单元素统一处理</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">txt</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">content</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">city</span>: <span class=\"string\">&#x27;SZ&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">isChecked</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\">  onChange = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = e.<span class=\"property\">target</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> value = target.<span class=\"property\">type</span> === <span class=\"string\">&#x27;checkbox&#x27;</span> ? target.<span class=\"property\">checked</span> : target.<span class=\"property\">value</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> name = target.<span class=\"property\">name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      [name]: value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;txt&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.txt&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;content&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.content&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;city&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.city&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;BJ&quot;</span>&gt;</span>北京<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;SH&quot;</span>&gt;</span>上海<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;SZ&quot;</span>&gt;</span>深圳<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;isChecked&#x27;</span> <span class=\"attr\">checked</span>=<span class=\"string\">&#123;this.state.isChecked&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>非控组件：操作DOM获取元素数据</li>\n</ul>\n<ol>\n<li>调用React.createRef()创建一个ref对象</li>\n<li>将创建好的ref对象添加到文本框中</li>\n<li>通过ref对象获取到文本框的值</li>\n</ol>\n<h4 id=\"3-5-小结案例–评论\"><a href=\"#3-5-小结案例–评论\" class=\"headerlink\" title=\"3.5 小结案例–评论\"></a>3.5 小结案例–评论</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">comments</span>: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Pete Hunt&#x27;</span>, <span class=\"attr\">text</span>: <span class=\"string\">&#x27;This is one comment&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jordan Walke&#x27;</span>, <span class=\"attr\">text</span>: <span class=\"string\">&#x27;This is *another* comment&#x27;</span> &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">content</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\"></span><br><span class=\"line\">  commentsList = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">comments</span>.<span class=\"property\">length</span> === <span class=\"number\">0</span> </span><br><span class=\"line\">      ?<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;noComment&#x27;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>暂无评论，快去评论吧~<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">      :(</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          &#123;this.state.comments.map((comment) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">            return (</span></span><br><span class=\"line\"><span class=\"language-xml\">              <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;comment.id&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;comment.name&#125;:<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;comment.text&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">              <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            );</span></span><br><span class=\"line\"><span class=\"language-xml\">          &#125;)&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  onChange = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; name, value &#125; = e.<span class=\"property\">target</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      [name]: value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  addComment = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> comment = &#123;</span><br><span class=\"line\">      <span class=\"attr\">id</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">comments</span>.<span class=\"property\">length</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">text</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">content</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">comments</span>: [...<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">comments</span>, comment],</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;app&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;username&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.username&#125;</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;user&#x27;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&#x27;输入姓名&#x27;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;/</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;content&#x27;</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;text&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.content&#125;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&#x27;输入评论&#x27;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;/</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;btn&#x27;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.addComment&#125;</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>评论列表<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;this.commentsList()&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>)); </span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-组件通讯\"><a href=\"#4-组件通讯\" class=\"headerlink\" title=\"4.组件通讯\"></a>4.组件通讯</h3><h4 id=\"4-1-组件接收数据\"><a href=\"#4-1-组件接收数据\" class=\"headerlink\" title=\"4.1 组件接收数据\"></a>4.1 组件接收数据</h4><p>组件是独立且封闭的单元，默认情况下只能使用自己的数据，而对于一个复杂的项目通常需要拆分多个组件，而多个组件需要数据传递就是组件通讯。</p>\n<p>props的作用：接收传递给组件的数据</p>\n<ul>\n<li>传递数据：给组件标签添加属性</li>\n<li>接收数据：函数组件通过参数props接收数据，类组件通过this.props接收数据</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>)); </span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"comment\">//传递字符串、数值、数组、函数</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;jack&#x27;</span>  <span class=\"attr\">age</span>=<span class=\"string\">&#123;19&#125;</span> <span class=\"attr\">colors</span>=<span class=\"string\">&#123;[</span>&#x27;<span class=\"attr\">read</span>&#x27;,&#x27;<span class=\"attr\">green</span>&#x27;]&#125; <span class=\"attr\">fn</span>=<span class=\"string\">&#123;()</span>=&gt;</span> console.log(&#x27;Hello&#x27;)&#125;/&gt;</span>  </span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li>props无法对属性赋值，这是个只读属性</li>\n<li>类组件在使用构造函数时，需要把props作为构造函数和super()的参数</li>\n</ul>\n<h4 id=\"4-2-父组件传递给子组件\"><a href=\"#4-2-父组件传递给子组件\" class=\"headerlink\" title=\"4.2 父组件传递给子组件\"></a>4.2 父组件传递给子组件</h4><ol>\n<li>父组件要提供传递的state数据</li>\n<li>给子组件标签添加属性，值为state中的数据</li>\n<li>子组件通过props接收父组件中传递的数据</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王五&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">name</span>=<span class=\"string\">&#123;this.state.name&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Child</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-子组件传递数据给父组件\"><a href=\"#4-3-子组件传递数据给父组件\" class=\"headerlink\" title=\"4.3  子组件传递数据给父组件\"></a>4.3  子组件传递数据给父组件</h4><ol>\n<li>父组件提供回调函数</li>\n<li>将该函数作为属性值传递给子组件</li>\n<li>子组件通过props调用回调函数</li>\n<li>将子组件的数据作为参数传递给回调函数</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  say=<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;father say:&#x27;</span>, data);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">msg</span>: data</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">say</span>=<span class=\"string\">&#123;this.say&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  handleClick=<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"title function_\">say</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">data</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-兄弟组件通信\"><a href=\"#4-4-兄弟组件通信\" class=\"headerlink\" title=\"4.4 兄弟组件通信\"></a>4.4 兄弟组件通信</h4><ol>\n<li>状态提升</li>\n<li>将多个组件需要共享的状态提升到他们最近的父组件中</li>\n<li>公共父组件职责：提供共享状态、提供操作共享状态的方法</li>\n<li>要通讯的子组件只需通过props接收状态或操作状态的方法</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  add = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child1</span> <span class=\"attr\">count</span>=<span class=\"string\">&#123;this.state.count&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child2</span> <span class=\"attr\">add</span>=<span class=\"string\">&#123;this.add&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Child1</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>计数器：&#123;props.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Child2</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span>=&gt;</span> props.add()&#125;&gt;+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-跨多个组件通信\"><a href=\"#4-5-跨多个组件通信\" class=\"headerlink\" title=\"4.5 跨多个组件通信\"></a>4.5 跨多个组件通信</h4><ol>\n<li>生产者与消费者</li>\n<li>调用React.createContext()创建Provider和Consumer两个组件</li>\n<li>使用Provider在通信组件的最近父组件</li>\n<li>设置value属性，表示要传递的数据</li>\n<li>使用Consumer组件接收数据</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Provider</span>, <span class=\"title class_\">Consumer</span>&#125; = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  add = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count:</span> <span class=\"attr\">this.state.count</span>,<span class=\"attr\">add:</span> <span class=\"attr\">this.add</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123; value =&gt; <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;value.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;value =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">      return (</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span> ()=&gt;</span>value.add() &#125;&gt;Click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      );</span></span><br><span class=\"line\"><span class=\"language-xml\">    &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-组件进阶\"><a href=\"#5-组件进阶\" class=\"headerlink\" title=\"5.组件进阶\"></a>5.组件进阶</h3><h4 id=\"5-1-静态类型检查\"><a href=\"#5-1-静态类型检查\" class=\"headerlink\" title=\"5.1 静态类型检查\"></a>5.1 静态类型检查</h4><p>prop-types库提供props属性的类型校验</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">App</span>.<span class=\"property\">propTypes</span>=&#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">number</span>,                 <span class=\"comment\">//属性a ，数值类型</span></span><br><span class=\"line\">  <span class=\"attr\">fn</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">func</span>.<span class=\"property\">isRequired</span>,  <span class=\"comment\">//属性fn，函数且为必填项</span></span><br><span class=\"line\">  <span class=\"attr\">tag</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">element</span>,            <span class=\"comment\">//React元素</span></span><br><span class=\"line\">  <span class=\"attr\">filter</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"title function_\">shape</span>(&#123;          <span class=\"comment\">//对象，area属性为字符串，price为数值</span></span><br><span class=\"line\">    <span class=\"attr\">area</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">price</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">number</span>,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>prop-types库提供props属性默认值</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">App</span>.<span class=\"property\">defaultProps</span>=&#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-组件的生命周期\"><a href=\"#5-2-组件的生命周期\" class=\"headerlink\" title=\"5.2 组件的生命周期\"></a>5.2 组件的生命周期</h4><ul>\n<li>生命周期：组件从创建到挂载到页面中运行，再到组件不用时卸载的过程。</li>\n<li>生命周期的每个阶段总是伴随着一些方法的调用，这些方法就是生命周期的钩子函数</li>\n<li>钩子函数：为开发人员在不同阶段提供操作时机</li>\n<li>只有类组件才有生命周期</li>\n</ul>\n<p><strong>创建时</strong>:</p>\n<ul>\n<li>执行时间：组件创建时</li>\n<li>执行顺序：<code>constructor()---&gt;render()---&gt;componentDidMount()</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>constructor</td>\n<td>组件创建时，最先执行</td>\n<td>1.初始化state   2.为事件处理程序绑定this</td>\n</tr>\n<tr>\n<td>render</td>\n<td>每次渲染都会触发</td>\n<td>渲染UI（不能调用setState）</td>\n</tr>\n<tr>\n<td>componentDidMount</td>\n<td>组件挂载（DOM渲染完成）后触发</td>\n<td>1.发送网络请求   2.DOM操作</td>\n</tr>\n</tbody></table>\n<p><strong>更新时</strong>:</p>\n<ul>\n<li>执行时间：调用函数 1.<code>setState()</code> 2.<code>forceUpdate()</code> 3.组件接收到新的<code>props</code></li>\n<li>执行顺序：<code>render()---&gt;componentDidUpdate()</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>render</td>\n<td>每次渲染都会触发</td>\n<td>渲染UI</td>\n</tr>\n<tr>\n<td>componentDidUpdate</td>\n<td>组件更新（DOM渲染完成）后触发</td>\n<td>1.发送网络请求  2.DOM操作</td>\n</tr>\n</tbody></table>\n<p><strong>卸载时</strong>:</p>\n<ul>\n<li>执行时间：组件消失</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>componentWillUnmount</td>\n<td>组件卸载时触发</td>\n<td>清理工作</td>\n</tr>\n</tbody></table>\n<p><strong>新的生命周期函数</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>getDerivedStateFromProps</td>\n<td>第一次初始化组件以及后续的更新前</td>\n<td>静态函数，需要加static。 返回一个对象作为新的state，返回null则不需要更新state</td>\n</tr>\n<tr>\n<td>getSnapshotBeforeUpdate</td>\n<td>组件更新前</td>\n<td>在更新前获得过去的快照</td>\n</tr>\n</tbody></table>\n<h4 id=\"5-3-组件复用\"><a href=\"#5-3-组件复用\" class=\"headerlink\" title=\"5.3 组件复用\"></a>5.3 组件复用</h4><p>props的children属性</p>\n<ul>\n<li>表示了组件的子节点，当组件标签有子节点时，props就会有该属性</li>\n<li>与普通props一样，值可以是任意值。</li>\n</ul>\n<p>利用复用来处理相似功能的方法<br>两种方式：</p>\n<ol>\n<li>render props模式</li>\n<li>高阶组件</li>\n</ol>\n<p>步骤：</p>\n<ol>\n<li>创建复用的组件，在复用组件中提供状态和操作状态的方法</li>\n<li>将复用组件的状态作为props.render(state)方法的参数，暴露到组件外</li>\n<li>外部使用render()的属性接收参数并使用</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mouse</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  handleMouseMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">      <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"title function_\">render</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Move the mouse around!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Mouse</span> <span class=\"attr\">render</span>=<span class=\"string\">&#123;(mouse)</span> =&gt;</span> (</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The mouse position is (&#123;mouse.x&#125;, &#123;mouse.y&#125;)<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        )&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>children属性 代替 render属性</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mouse</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  handleMouseMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">      <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"title function_\">children</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Mouse</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;(mouse) =&gt; (</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Move the mouse around!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The current mouse position is (&#123;mouse.x&#125;, &#123;mouse.y&#125;)<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        )&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Mouse</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>代码优化：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//卸载时，解除事件绑定</span></span><br><span class=\"line\"><span class=\"title function_\">componentWillUnmount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//添加类型限制</span></span><br><span class=\"line\"><span class=\"title class_\">Mouse</span>.<span class=\"property\">propTypes</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">children</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">func</span>.<span class=\"property\">isRequired</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>高阶组件采用包装（装饰）模式来实现状态逻辑复用</p>\n<p>步骤：</p>\n<ol>\n<li>创建一个函数，名称为with开头</li>\n<li>指定函数参数，为大写字母开头</li>\n<li>在函数内部创建一个类组件，提供复用的状态逻辑代码</li>\n<li>在该组件中，渲染参数组件，同时将状态通过prop传递给参数组件</li>\n<li>调用该高阶组件，传入要增强的组件，通过返回值拿到增强后的组件，并将其渲染到页面中</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">withMouse</span>(<span class=\"params\">WrappedComponent</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Mouse</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">    state = &#123;</span><br><span class=\"line\">      <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">y</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    handleMouseMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">componentWillUnmount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">WrappedComponent</span> &#123;<span class=\"attr\">...this.state</span>&#125;/&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//设置装饰不同组件的名字，给调试使用</span></span><br><span class=\"line\">  <span class=\"title class_\">Mouse</span>.<span class=\"property\">displayName</span> = <span class=\"string\">`withMouse(<span class=\"subst\">$&#123;getDisplayName(WrappedComponent)&#125;</span>)`</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Mouse</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getDisplayName</span>(<span class=\"params\">WrappedComponent</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">WrappedComponent</span>.<span class=\"property\">displayName</span> || <span class=\"title class_\">WrappedComponent</span>.<span class=\"property\">name</span> || <span class=\"string\">&#x27;Component&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Position</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The current mouse position is (&#123;props.x&#125;, &#123;props.y&#125;)<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">MousePosition</span> = <span class=\"title function_\">withMouse</span>(<span class=\"title class_\">Position</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Move the mouse around!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">MousePosition</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>高阶组件的props的传递丢失问题：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//把props继续往下传</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">WrappedComponent</span> &#123;<span class=\"attr\">...this.state</span>&#125; &#123;<span class=\"attr\">...this.props</span>&#125;/&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-4-setState函数\"><a href=\"#5-4-setState函数\" class=\"headerlink\" title=\"5.4 setState函数\"></a>5.4 setState函数</h4><ul>\n<li>setState()函数是异步更新的（有延迟）</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原来语法</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">  <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//推荐语法，表示最新的state和props</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(<span class=\"function\">(<span class=\"params\">prevState,props</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//第二个参数，回调函数，在状态更新完成后立即执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-5-组件性能优化\"><a href=\"#5-5-组件性能优化\" class=\"headerlink\" title=\"5.5 组件性能优化\"></a>5.5 组件性能优化</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在render()之前运行，用来判断组件是否渲染，避免重复渲染</span></span><br><span class=\"line\"><span class=\"title function_\">shouldComponentUpdate</span>(<span class=\"params\">nextProps,nextSate</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//状态不是自己的用nextProps进行比较，状态是自己的用nextSate进行比较</span></span><br><span class=\"line\">  <span class=\"comment\">//需要重新渲染</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\">//不需要重新渲染</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>类组件继承<code>React.PureComponent</code>，自己已经实现<code>shouldComponentUpdate</code>钩子函数，来对前后props和state进行比较，来决定是否进行本次渲染。</p>\n<p>当要对比引用类型的值时，需要重新创建对象，才能更新组件。</p>\n<h4 id=\"5-6-虚拟DOM和Diff算法\"><a href=\"#5-6-虚拟DOM和Diff算法\" class=\"headerlink\" title=\"5.6 虚拟DOM和Diff算法\"></a>5.6 虚拟DOM和Diff算法</h4><p>执行过程：</p>\n<ol>\n<li>React初始state，创建虚拟DOM对象树</li>\n<li>根据虚拟DOM生成真正的DOM，渲染到页面中</li>\n<li>当数据变化后，重新根据新的数据，创建新的虚拟DOM对象树</li>\n<li>与上一次得到的虚拟DOM，使用Diff算法进行对比，得到需要更新的内容</li>\n<li>最终，React只将变化的内容更新到DOM中，重新渲染到页面。</li>\n</ol>\n<h3 id=\"6-Hooks\"><a href=\"#6-Hooks\" class=\"headerlink\" title=\"6.Hooks\"></a>6.Hooks</h3><ol>\n<li>高阶组件复用代码复杂</li>\n<li>生命周期复杂</li>\n<li>函数组件是无状态组件</li>\n</ol>\n<h4 id=\"6-1-useState\"><a href=\"#6-1-useState\" class=\"headerlink\" title=\"6.1 useState\"></a>6.1 useState</h4><blockquote>\n<p>接收一个初始值，返回一个状态值和一个更新函数</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [state, setState] = <span class=\"title function_\">useState</span>(initialState);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>更新函数通过接收一个新的值来更新状态值</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">setState</span>(newState);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Example</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>,&#123;useState&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Provider</span>, <span class=\"title class_\">Consumer</span>&#125; = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count,</span> <span class=\"attr\">add</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123; value =&gt; <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123; value.count &#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;value =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">      return (</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span> <span class=\"attr\">value.add</span> &#125;&gt;</span>Click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      );</span></span><br><span class=\"line\"><span class=\"language-xml\">    &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-2-useEffect\"><a href=\"#6-2-useEffect\" class=\"headerlink\" title=\"6.2 useEffect\"></a>6.2 useEffect</h4><p>函数组件没有生命周期</p>\n<p>useEffect作用：通过使用这个 Hook，你告诉 React 你的组件需要在渲染后做一些事情。React 会记住你传递的函数（我们将它称为我们的“效果”），并在执行 DOM 更新后调用它。</p>\n<p>useEffect运行时间：默认情况下，它在第一次渲染后和每次更新后运行。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// useEffect不加第二个参数，监测所有数据，一旦数据发生改变就会调用该Hook</span></span><br><span class=\"line\"><span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">`You clicked <span class=\"subst\">$&#123;count&#125;</span> times`</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// useEffect加第二个参数，监测指定数据，一旦指定数据发生改变就会调用该Hook</span></span><br><span class=\"line\"><span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">`You clicked <span class=\"subst\">$&#123;count&#125;</span> times`</span>;</span><br><span class=\"line\">&#125;,[count]);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">remove</span> = (<span class=\"params\"></span>) =&gt;  <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">unmountComponentAtNode</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// return后面的数据将会在组件卸载后执行</span></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">setCount</span>(<span class=\"function\"><span class=\"params\">count</span> =&gt;</span> count + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(timer);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,[]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count,</span> <span class=\"attr\">add</span>, <span class=\"attr\">remove</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>常用操作：</p>\n<ol>\n<li>发起ajax请求</li>\n<li>设置订阅&#x2F;启动定时器</li>\n<li>更改DOM</li>\n</ol>\n<h4 id=\"6-3-useContext\"><a href=\"#6-3-useContext\" class=\"headerlink\" title=\"6.3 useContext\"></a>6.3 useContext</h4><p>函数组件中处理跨多个组件通信的问题</p>\n<blockquote>\n<p>单文件跨组件通信</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Context</span> = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Context.Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count,</span> <span class=\"attr\">add</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Context.Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123;count&#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123;add&#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span> <span class=\"attr\">add</span> &#125;&gt;</span>Add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>多文件跨组件通信</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ------------&quot;./components/Add&quot;--------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useContext &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; add, remove &#125; = <span class=\"title function_\">useContext</span>(props.<span class=\"property\">context</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;add&#125;</span>&gt;</span>Add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;remove&#125;</span>&gt;</span>Remove<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//-------------&#x27;./components/Show&#x27;---------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>,&#123;useContext&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;count&#125; = <span class=\"title function_\">useContext</span>(props.<span class=\"property\">context</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------------&quot;./App.jsx&quot;--------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useEffect, useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App1</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Show&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App2</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Add&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Context</span> = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">remove</span> = (<span class=\"params\"></span>) =&gt; props.<span class=\"property\">root</span>.<span class=\"title function_\">unmount</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> interval = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">setCount</span>(<span class=\"function\"><span class=\"params\">count</span> =&gt;</span> count + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">clearInterval</span>(interval);</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Context.Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;</span> <span class=\"attr\">count</span>, <span class=\"attr\">add</span>, <span class=\"attr\">remove</span> &#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> <span class=\"attr\">context</span>=<span class=\"string\">&#123;Context&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> <span class=\"attr\">context</span>=<span class=\"string\">&#123;Context&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Context.Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------&quot;./index.js&quot;-------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ReactDOM</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom/client&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./index.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.jsx&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">App</span> <span class=\"attr\">root</span>=<span class=\"string\">&#123;root&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-外部常用库\"><a href=\"#7-外部常用库\" class=\"headerlink\" title=\"7.外部常用库\"></a>7.外部常用库</h3><h4 id=\"7-1-axios请求数据\"><a href=\"#7-1-axios请求数据\" class=\"headerlink\" title=\"7.1 axios请求数据\"></a>7.1 axios请求数据</h4><p>axios是基于promise对ajax的一种封装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装axios</span></span><br><span class=\"line\">npm i axios</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>发起GET请求<br><code>axios.get(&#39;url&#39;,&#123;params:&#123;（js对象）参数&#125;&#125;).then(callback)</code></p>\n</li>\n<li><p>发起POST请求<br><code>axios.post(&#39;url&#39;,&#123;（js对象）参数&#125;).then(callback)</code></p>\n</li>\n<li><p>其他方式</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">method</span>: <span class=\"string\">&#x27;请求类型&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;请求的URL地址&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;数据&#125;,</span><br><span class=\"line\">  <span class=\"attr\">params</span>: &#123;参数&#125;</span><br><span class=\"line\">  <span class=\"comment\">// then获得返回的数据，catch在请求错误时处理，可以无限叠加</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> callback).</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"7-2-Router路由\"><a href=\"#7-2-Router路由\" class=\"headerlink\" title=\"7.2 Router路由\"></a>7.2 Router路由</h4><p>现代前端应用大多都是SPA（单页应用程序），也就是只有一个HTML页面的应用程序，可以减轻服务器压力，用户体验好，为了有效使用单页面管理原来的多页面的功能，前端路由应运而生。</p>\n<p>React Router官网：<a href=\"https://reactrouterdotcom.fly.dev/docs/en/v6\">https://reactrouterdotcom.fly.dev/docs/en/v6</a></p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i react-router-dom</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">BrowserRouter</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;bootstrap/dist/css/bootstrap.min.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">BrowserRouter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">BrowserRouter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>基础使用 Routes, Route, Link, Outlet</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">Routes</span>, <span class=\"title class_\">Route</span>, <span class=\"title class_\">Link</span>, <span class=\"title class_\">Outlet</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Header</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Header<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      Outlet 标签为子元素占位符，为子元素占位，布局页面</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/First&quot;</span>&gt;</span>First<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/Second&quot;</span>&gt;</span>Second<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Outlet</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Home</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      This is the home page</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">First</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>First<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      This is the first page</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">NotFound</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Not Found<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      This page is not found</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">Header</span>/&gt;</span> &#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">index</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">Home</span>/&gt;</span> &#125;/&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;First&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">First</span>/&gt;</span> &#125;/&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;*&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">NotFound</span>/&gt;</span> &#125;/&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-3-Ant-Design的UI库\"><a href=\"#7-3-Ant-Design的UI库\" class=\"headerlink\" title=\"7.3 Ant Design的UI库\"></a>7.3 Ant Design的UI库</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装UI样式</span></span><br><span class=\"line\">npm install antd --save</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装依赖修改webpack</span></span><br><span class=\"line\">npm install @craco/craco</span><br><span class=\"line\">npm install craco-less</span><br><span class=\"line\">npm install less-loader less</span><br></pre></td></tr></table></figure>\n\n<p>修改 <code>package.json</code> 里的 <code>scripts</code> 属性</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  </span><br><span class=\"line\">  <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;craco start&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;craco build&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  <span class=\"attr\">&quot;test&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;craco test&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后在项目根目录创建一个 <code>craco.config.js</code> 用于修改默认配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改为绿色主题</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">CracoLessPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">plugin</span>: <span class=\"title class_\">CracoLessPlugin</span>,</span><br><span class=\"line\">      <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">lessLoaderOptions</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">lessOptions</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">modifyVars</span>: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">javascriptEnabled</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-4-Redux\"><a href=\"#7-4-Redux\" class=\"headerlink\" title=\"7.4 Redux\"></a>7.4 Redux</h4><p>专门用于状态管理的JS库，集中管理React组件的共享状态<br>从 UI 层完全抽离出来，只负责管理数据，让 React 只专注于 View 层的绘制。</p>\n<p>中文文档：<a href=\"https://cn.redux.js.org/\">https://cn.redux.js.org/</a></p>\n<p>英文文档： <a href=\"https://redux.js.org/\">https://redux.js.org/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装 redux</span></span><br><span class=\"line\">npm install @reduxjs/toolkit</span><br><span class=\"line\">npm install react-redux</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建 Redux Store</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; configureStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@reduxjs/toolkit&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导入别的文件配置好的 reducer</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> counterReducer <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../features/counter/counterSlice&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 把reducer存到store中，store的属性可以随便改</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">configureStore</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">reducer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">counter</span>: counterReducer</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建 Slice Reducer</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createSlice &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@reduxjs/toolkit&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> counterSlice = <span class=\"title function_\">createSlice</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//name字符串用作每个action类型的第一部分, 每个reducer函数的键名用作第二部分</span></span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;counter&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 初始化state值</span></span><br><span class=\"line\">  <span class=\"attr\">initialState</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">value</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 定义操作属性的方法</span></span><br><span class=\"line\">  <span class=\"attr\">reducers</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">increment</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      state.<span class=\"property\">value</span> += <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">decrement</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      state.<span class=\"property\">value</span> -= <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">incrementByAmount</span>: <span class=\"function\">(<span class=\"params\">state, action</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.<span class=\"property\">value</span> += action.<span class=\"property\">payload</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//导出操作属性的方法给组件使用</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> &#123; increment, decrement, incrementByAmount &#125; = counterSlice.<span class=\"property\">actions</span></span><br><span class=\"line\"><span class=\"comment\">//导出 reducer</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> counterSlice.<span class=\"property\">reducer</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>React Counter 组件</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useSelector, useDispatch &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-redux&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  decrement,</span><br><span class=\"line\">  increment,</span><br><span class=\"line\">  incrementByAmount,</span><br><span class=\"line\">  incrementAsync,</span><br><span class=\"line\">  selectCount</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./counterSlice&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> styles <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Counter.module.css&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Counter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 从store中导出属性值给组件使用</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"title function_\">useSelector</span>(selectCount)</span><br><span class=\"line\">  <span class=\"comment\">// 导出store的dispatch函数来给组件调用方法</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dispatch = <span class=\"title function_\">useDispatch</span>()</span><br><span class=\"line\">  <span class=\"comment\">// 给组件显示属性</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [incrementAmount, setIncrementAmount] = <span class=\"title function_\">useState</span>(<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.row&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.button&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Increment value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> dispatch(increment())&#125; // 调用方法</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">          +</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.value&#125;</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.button&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Decrement value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> dispatch(decrement())&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">          -</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","more":"<h1 id=\"React快速入门\"><a href=\"#React快速入门\" class=\"headerlink\" title=\"React快速入门\"></a>React快速入门</h1><h2 id=\"一、React\"><a href=\"#一、React\" class=\"headerlink\" title=\"一、React\"></a>一、React</h2><h3 id=\"1-JSX\"><a href=\"#1-JSX\" class=\"headerlink\" title=\"1.JSX\"></a>1.JSX</h3><blockquote>\n<p>JSX全称JavaScript XML，与HTML结构相似，大大降低学习成本。</p>\n</blockquote>\n<h4 id=\"1-1-前言\"><a href=\"#1-1-前言\" class=\"headerlink\" title=\"1.1 前言\"></a>1.1 前言</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#初始化react项目</span></span><br><span class=\"line\">npx create-react-app 项目名称</span><br><span class=\"line\"><span class=\"comment\"># 启动项目</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> 项目名称</span><br><span class=\"line\">npm start</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ol>\n<li>React元素的属性名使用驼峰命名法</li>\n<li>特殊属性名：class-&gt;className，for-&gt;htmlFor、tabindex-&gt;tabIndex</li>\n<li>没有子节点的React元素可以用<code>/&gt;</code>结束。</li>\n<li>小括号包裹JSX语法</li>\n</ol>\n<p>JSX嵌入JS表达式</p>\n<ul>\n<li>数据存储在JS中</li>\n<li>语法：{JS表达式}</li>\n<li>JSX也是合法的JS表达式</li>\n<li>不能出现对象和语句</li>\n</ul>\n<h4 id=\"1-2-JSX条件渲染\"><a href=\"#1-2-JSX条件渲染\" class=\"headerlink\" title=\"1.2 JSX条件渲染\"></a>1.2 JSX条件渲染</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isLoading = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">loadData</span>=(<span class=\"params\"></span>)=&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isLoading) <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>loading...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>数据加载完成<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> title =(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;loadData()&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-JSX列表渲染\"><a href=\"#1-3-JSX列表渲染\" class=\"headerlink\" title=\"1.3 JSX列表渲染\"></a>1.3 JSX列表渲染</h4><ul>\n<li>要渲染一组数据，应该使用数组的map()方法</li>\n<li>每一个列表都应该添加key属性且不可变保持唯一</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> songs=[</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>,<span class=\"attr\">name</span>: <span class=\"string\">&#x27;我&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>,<span class=\"attr\">name</span>: <span class=\"string\">&#x27;号&#x27;</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> list = (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;songs.map(item=&gt; <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;item.id&#125;</span>&gt;</span>&#123;item.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>)&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-4-JSX样式处理\"><a href=\"#1-4-JSX样式处理\" class=\"headerlink\" title=\"1.4 JSX样式处理\"></a>1.4 JSX样式处理</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入css</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./index.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> list=(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        JSX样式处理</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-TSX\"><a href=\"#2-TSX\" class=\"headerlink\" title=\"2.TSX\"></a>2.TSX</h3><h4 id=\"2-1-使用CRA创建支持TS的项目\"><a href=\"#2-1-使用CRA创建支持TS的项目\" class=\"headerlink\" title=\"2.1 使用CRA创建支持TS的项目\"></a>2.1 使用CRA创建支持TS的项目</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建一个支持ts的react项目</span></span><br><span class=\"line\">npx create-react-app my-app --template typescript</span><br><span class=\"line\"><span class=\"comment\"># 在现有react项目添加TS支持</span></span><br><span class=\"line\">npm install --save typescript @types/node @types/react @types/react-dom @types/jest</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>项目新增了<code>tsconfig.json</code>用来配置TS的编译选项</li>\n<li>文件扩展名为 <code>*.tsx</code></li>\n<li>项目中<code>src</code>文件夹下增加了<code>react-app-env.d.ts</code>，用来声明React的默认类型<ul>\n<li>三斜线指令：指定依赖其他的类型声明文件</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-函数组件类型\"><a href=\"#2-2-函数组件类型\" class=\"headerlink\" title=\"2.2 函数组件类型\"></a>2.2 函数组件类型</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//可以舍弃JS的PropTypes进行类型检查，利用Ts的语法来实现其功能</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">MyProps</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  age?: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Hello</span> = (<span class=\"params\">&#123; name, age = <span class=\"number\">18</span> &#125;: <span class=\"title class_\">MyProps</span></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>My Name is &#123;name&#125; ,my age is &#123;age&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Hello</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;John&quot;</span> <span class=\"attr\">age</span>=<span class=\"string\">&#123;30&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"title class_\">HTMLElement</span></span><br><span class=\"line\">);</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-class组件类型\"><a href=\"#2-3-class组件类型\" class=\"headerlink\" title=\"2.3 class组件类型\"></a>2.3 class组件类型</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">State</span> = &#123; <span class=\"attr\">count</span>: <span class=\"built_in\">number</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Props</span> = &#123;message?: <span class=\"built_in\">string</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//无props无state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//无props有state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App2</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;&#123;&#125;, <span class=\"title class_\">State</span>&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//有props无state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App3</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;<span class=\"title class_\">Props</span>&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//有props有state</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App4</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;<span class=\"title class_\">Props</span>, <span class=\"title class_\">State</span>&gt; &#123;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// props属性与state属性的类型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">State</span> = &#123; <span class=\"attr\">count</span>: <span class=\"built_in\">number</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Props</span> = &#123;<span class=\"attr\">name</span>: <span class=\"built_in\">string</span>, age?: <span class=\"built_in\">number</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;<span class=\"title class_\">Props</span>&gt; &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"title class_\">State</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleClick = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; name, age = <span class=\"number\">18</span> &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>You are &#123;age&#125; years old<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;this.state.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-组件\"><a href=\"#3-组件\" class=\"headerlink\" title=\"3.组件\"></a>3.组件</h3><blockquote>\n<p>组件是React核心<br>组件特点：可复用性、独立、可组合性</p>\n</blockquote>\n<h4 id=\"3-1创建组件\"><a href=\"#3-1创建组件\" class=\"headerlink\" title=\"3.1创建组件\"></a>3.1创建组件</h4><ul>\n<li>函数创建组件</li>\n</ul>\n<p>注意：</p>\n<ol>\n<li>函数名必须大写字母开头</li>\n<li>必须有返回值，表示该组件的结构</li>\n<li>如果返回值为null表示不渲染任何内容</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//普通函数创建组件</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Hello</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的函数组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//箭头函数创建组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Hello</span> = (<span class=\"params\"></span>)=&gt; <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的函数组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDom</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Hello</span> /&gt;</span></span>,<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>类创建组件</li>\n</ul>\n<p>注意：</p>\n<ol>\n<li>类名首字母大写</li>\n<li>类组件应该继承React.Component父类</li>\n<li>类组件必须提供render()方法</li>\n<li>render()方法必须有返回值</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建类组件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Hello</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Componet</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">render</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的类组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDom</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Hello</span> /&gt;</span></span>,<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<p><strong>每个组件都应该放在单独的文件中</strong>:</p>\n<p>步骤：</p>\n<ol>\n<li>创建组件文件</li>\n<li>在文件中导入React</li>\n<li>创建组件</li>\n<li>导出组件</li>\n<li>在需要使用的文件中导入该组件</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建组件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Hello</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Componet</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">render</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这个是我的JS组件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//导出组件</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Hello</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ReactDOM</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Hello</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Hello.js&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDom</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Hello</span> /&gt;</span></span>,<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-事件处理\"><a href=\"#3-2-事件处理\" class=\"headerlink\" title=\"3.2 事件处理\"></a>3.2 事件处理</h4><ul>\n<li>事件绑定语法：<ul>\n<li><code>on+事件名称=&#123;事件处理程序&#125;</code></li>\n<li>事件的名称采用驼峰命名法</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//事件处理函数</span></span><br><span class=\"line\">  handleClick = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>)); </span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>事件处理对象<ul>\n<li>可以通过事件处理程序的参数获得事件对象</li>\n<li>该合成事件对象兼容所有浏览器</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//事件处理函数</span></span><br><span class=\"line\">  <span class=\"title function_\">handleClick</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    e.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">//利用事件对象阻止浏览器默认行为</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-有状态组件和无状态组件\"><a href=\"#3-3-有状态组件和无状态组件\" class=\"headerlink\" title=\"3.3 有状态组件和无状态组件\"></a>3.3 有状态组件和无状态组件</h4><ul>\n<li>函数组件叫做无状态组件，类组件叫做有状态组件</li>\n<li>状态（state）即数据</li>\n<li>函数组件没有自己的状态，只负责数据的展示（静）</li>\n<li>类组件有自己的状态，负责更新UI，让组件动起来</li>\n<li>状态（state）值是对象，是组件的私有数据</li>\n<li>只能用<code>setState()</code>来修改<code>state</code>数据</li>\n<li><code>setState()</code>用来修改状态和更新UI</li>\n<li>思想：数据驱动视图</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>计数器：&#123;this.state.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> this.setState(&#123;count: this.state.count + 1&#125;)&#125;&gt;+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>逻辑代码独立出去后this指向问题处理</p>\n</blockquote>\n<ul>\n<li>箭头函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\">  onAddOne = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;  <span class=\"comment\">//this必须指向实例</span></span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>计数器：&#123;this.state.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.onAddOne&#125;</span>&gt;</span>+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ES5的bind()函数</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">constructor</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">onAddOne</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">onAddOne</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-4-表单处理\"><a href=\"#3-4-表单处理\" class=\"headerlink\" title=\"3.4 表单处理\"></a>3.4 表单处理</h4><ul>\n<li>受控组件：受到React控制的html</li>\n</ul>\n<p>步骤：</p>\n<ol>\n<li>在state中添加一个状态，作为表单元素额value值</li>\n<li>给表单元素绑定change事件，将表单元素的值 设置为state的值 (双向绑定)</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">txt</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\">  onChange = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">txt</span>: e.<span class=\"property\">target</span>.<span class=\"property\">value</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.txt&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>多表单元素统一处理</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">txt</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">content</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">city</span>: <span class=\"string\">&#x27;SZ&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">isChecked</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\">  onChange = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = e.<span class=\"property\">target</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> value = target.<span class=\"property\">type</span> === <span class=\"string\">&#x27;checkbox&#x27;</span> ? target.<span class=\"property\">checked</span> : target.<span class=\"property\">value</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> name = target.<span class=\"property\">name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      [name]: value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;txt&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.txt&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;content&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.content&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;city&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.city&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;BJ&quot;</span>&gt;</span>北京<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;SH&quot;</span>&gt;</span>上海<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;SZ&quot;</span>&gt;</span>深圳<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;isChecked&#x27;</span> <span class=\"attr\">checked</span>=<span class=\"string\">&#123;this.state.isChecked&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>非控组件：操作DOM获取元素数据</li>\n</ul>\n<ol>\n<li>调用React.createRef()创建一个ref对象</li>\n<li>将创建好的ref对象添加到文本框中</li>\n<li>通过ref对象获取到文本框的值</li>\n</ol>\n<h4 id=\"3-5-小结案例–评论\"><a href=\"#3-5-小结案例–评论\" class=\"headerlink\" title=\"3.5 小结案例–评论\"></a>3.5 小结案例–评论</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里初始化状态</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">comments</span>: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Pete Hunt&#x27;</span>, <span class=\"attr\">text</span>: <span class=\"string\">&#x27;This is one comment&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jordan Walke&#x27;</span>, <span class=\"attr\">text</span>: <span class=\"string\">&#x27;This is *another* comment&#x27;</span> &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">content</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在这里更新状态</span></span><br><span class=\"line\"></span><br><span class=\"line\">  commentsList = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">comments</span>.<span class=\"property\">length</span> === <span class=\"number\">0</span> </span><br><span class=\"line\">      ?<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;noComment&#x27;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>暂无评论，快去评论吧~<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">      :(</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          &#123;this.state.comments.map((comment) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">            return (</span></span><br><span class=\"line\"><span class=\"language-xml\">              <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;comment.id&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;comment.name&#125;:<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;comment.text&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">              <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            );</span></span><br><span class=\"line\"><span class=\"language-xml\">          &#125;)&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  onChange = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; name, value &#125; = e.<span class=\"property\">target</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      [name]: value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  addComment = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> comment = &#123;</span><br><span class=\"line\">      <span class=\"attr\">id</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">comments</span>.<span class=\"property\">length</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">text</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">content</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">comments</span>: [...<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">comments</span>, comment],</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;app&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;username&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.username&#125;</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;user&#x27;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&#x27;输入姓名&#x27;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;/</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;content&#x27;</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;text&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.content&#125;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&#x27;输入评论&#x27;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.onChange&#125;/</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">className</span>=<span class=\"string\">&#x27;btn&#x27;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.addComment&#125;</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>评论列表<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;this.commentsList()&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>)); </span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-组件通讯\"><a href=\"#4-组件通讯\" class=\"headerlink\" title=\"4.组件通讯\"></a>4.组件通讯</h3><h4 id=\"4-1-组件接收数据\"><a href=\"#4-1-组件接收数据\" class=\"headerlink\" title=\"4.1 组件接收数据\"></a>4.1 组件接收数据</h4><p>组件是独立且封闭的单元，默认情况下只能使用自己的数据，而对于一个复杂的项目通常需要拆分多个组件，而多个组件需要数据传递就是组件通讯。</p>\n<p>props的作用：接收传递给组件的数据</p>\n<ul>\n<li>传递数据：给组件标签添加属性</li>\n<li>接收数据：函数组件通过参数props接收数据，类组件通过this.props接收数据</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//渲染组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>)); </span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"comment\">//传递字符串、数值、数组、函数</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;jack&#x27;</span>  <span class=\"attr\">age</span>=<span class=\"string\">&#123;19&#125;</span> <span class=\"attr\">colors</span>=<span class=\"string\">&#123;[</span>&#x27;<span class=\"attr\">read</span>&#x27;,&#x27;<span class=\"attr\">green</span>&#x27;]&#125; <span class=\"attr\">fn</span>=<span class=\"string\">&#123;()</span>=&gt;</span> console.log(&#x27;Hello&#x27;)&#125;/&gt;</span>  </span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li>props无法对属性赋值，这是个只读属性</li>\n<li>类组件在使用构造函数时，需要把props作为构造函数和super()的参数</li>\n</ul>\n<h4 id=\"4-2-父组件传递给子组件\"><a href=\"#4-2-父组件传递给子组件\" class=\"headerlink\" title=\"4.2 父组件传递给子组件\"></a>4.2 父组件传递给子组件</h4><ol>\n<li>父组件要提供传递的state数据</li>\n<li>给子组件标签添加属性，值为state中的数据</li>\n<li>子组件通过props接收父组件中传递的数据</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王五&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">name</span>=<span class=\"string\">&#123;this.state.name&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Child</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-子组件传递数据给父组件\"><a href=\"#4-3-子组件传递数据给父组件\" class=\"headerlink\" title=\"4.3  子组件传递数据给父组件\"></a>4.3  子组件传递数据给父组件</h4><ol>\n<li>父组件提供回调函数</li>\n<li>将该函数作为属性值传递给子组件</li>\n<li>子组件通过props调用回调函数</li>\n<li>将子组件的数据作为参数传递给回调函数</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  say=<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;father say:&#x27;</span>, data);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">msg</span>: data</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">say</span>=<span class=\"string\">&#123;this.say&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  handleClick=<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"title function_\">say</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">data</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-兄弟组件通信\"><a href=\"#4-4-兄弟组件通信\" class=\"headerlink\" title=\"4.4 兄弟组件通信\"></a>4.4 兄弟组件通信</h4><ol>\n<li>状态提升</li>\n<li>将多个组件需要共享的状态提升到他们最近的父组件中</li>\n<li>公共父组件职责：提供共享状态、提供操作共享状态的方法</li>\n<li>要通讯的子组件只需通过props接收状态或操作状态的方法</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  add = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child1</span> <span class=\"attr\">count</span>=<span class=\"string\">&#123;this.state.count&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Child2</span> <span class=\"attr\">add</span>=<span class=\"string\">&#123;this.add&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Child1</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>计数器：&#123;props.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Child2</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span>=&gt;</span> props.add()&#125;&gt;+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-跨多个组件通信\"><a href=\"#4-5-跨多个组件通信\" class=\"headerlink\" title=\"4.5 跨多个组件通信\"></a>4.5 跨多个组件通信</h4><ol>\n<li>生产者与消费者</li>\n<li>调用React.createContext()创建Provider和Consumer两个组件</li>\n<li>使用Provider在通信组件的最近父组件</li>\n<li>设置value属性，表示要传递的数据</li>\n<li>使用Consumer组件接收数据</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Provider</span>, <span class=\"title class_\">Consumer</span>&#125; = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  add = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count:</span> <span class=\"attr\">this.state.count</span>,<span class=\"attr\">add:</span> <span class=\"attr\">this.add</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123; value =&gt; <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;value.count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;value =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">      return (</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span> ()=&gt;</span>value.add() &#125;&gt;Click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      );</span></span><br><span class=\"line\"><span class=\"language-xml\">    &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-组件进阶\"><a href=\"#5-组件进阶\" class=\"headerlink\" title=\"5.组件进阶\"></a>5.组件进阶</h3><h4 id=\"5-1-静态类型检查\"><a href=\"#5-1-静态类型检查\" class=\"headerlink\" title=\"5.1 静态类型检查\"></a>5.1 静态类型检查</h4><p>prop-types库提供props属性的类型校验</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">App</span>.<span class=\"property\">propTypes</span>=&#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">number</span>,                 <span class=\"comment\">//属性a ，数值类型</span></span><br><span class=\"line\">  <span class=\"attr\">fn</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">func</span>.<span class=\"property\">isRequired</span>,  <span class=\"comment\">//属性fn，函数且为必填项</span></span><br><span class=\"line\">  <span class=\"attr\">tag</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">element</span>,            <span class=\"comment\">//React元素</span></span><br><span class=\"line\">  <span class=\"attr\">filter</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"title function_\">shape</span>(&#123;          <span class=\"comment\">//对象，area属性为字符串，price为数值</span></span><br><span class=\"line\">    <span class=\"attr\">area</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">price</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">number</span>,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>prop-types库提供props属性默认值</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">App</span>.<span class=\"property\">defaultProps</span>=&#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-组件的生命周期\"><a href=\"#5-2-组件的生命周期\" class=\"headerlink\" title=\"5.2 组件的生命周期\"></a>5.2 组件的生命周期</h4><ul>\n<li>生命周期：组件从创建到挂载到页面中运行，再到组件不用时卸载的过程。</li>\n<li>生命周期的每个阶段总是伴随着一些方法的调用，这些方法就是生命周期的钩子函数</li>\n<li>钩子函数：为开发人员在不同阶段提供操作时机</li>\n<li>只有类组件才有生命周期</li>\n</ul>\n<p><strong>创建时</strong>:</p>\n<ul>\n<li>执行时间：组件创建时</li>\n<li>执行顺序：<code>constructor()---&gt;render()---&gt;componentDidMount()</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>constructor</td>\n<td>组件创建时，最先执行</td>\n<td>1.初始化state   2.为事件处理程序绑定this</td>\n</tr>\n<tr>\n<td>render</td>\n<td>每次渲染都会触发</td>\n<td>渲染UI（不能调用setState）</td>\n</tr>\n<tr>\n<td>componentDidMount</td>\n<td>组件挂载（DOM渲染完成）后触发</td>\n<td>1.发送网络请求   2.DOM操作</td>\n</tr>\n</tbody></table>\n<p><strong>更新时</strong>:</p>\n<ul>\n<li>执行时间：调用函数 1.<code>setState()</code> 2.<code>forceUpdate()</code> 3.组件接收到新的<code>props</code></li>\n<li>执行顺序：<code>render()---&gt;componentDidUpdate()</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>render</td>\n<td>每次渲染都会触发</td>\n<td>渲染UI</td>\n</tr>\n<tr>\n<td>componentDidUpdate</td>\n<td>组件更新（DOM渲染完成）后触发</td>\n<td>1.发送网络请求  2.DOM操作</td>\n</tr>\n</tbody></table>\n<p><strong>卸载时</strong>:</p>\n<ul>\n<li>执行时间：组件消失</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>componentWillUnmount</td>\n<td>组件卸载时触发</td>\n<td>清理工作</td>\n</tr>\n</tbody></table>\n<p><strong>新的生命周期函数</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>钩子函数</th>\n<th>触发时间</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>getDerivedStateFromProps</td>\n<td>第一次初始化组件以及后续的更新前</td>\n<td>静态函数，需要加static。 返回一个对象作为新的state，返回null则不需要更新state</td>\n</tr>\n<tr>\n<td>getSnapshotBeforeUpdate</td>\n<td>组件更新前</td>\n<td>在更新前获得过去的快照</td>\n</tr>\n</tbody></table>\n<h4 id=\"5-3-组件复用\"><a href=\"#5-3-组件复用\" class=\"headerlink\" title=\"5.3 组件复用\"></a>5.3 组件复用</h4><p>props的children属性</p>\n<ul>\n<li>表示了组件的子节点，当组件标签有子节点时，props就会有该属性</li>\n<li>与普通props一样，值可以是任意值。</li>\n</ul>\n<p>利用复用来处理相似功能的方法<br>两种方式：</p>\n<ol>\n<li>render props模式</li>\n<li>高阶组件</li>\n</ol>\n<p>步骤：</p>\n<ol>\n<li>创建复用的组件，在复用组件中提供状态和操作状态的方法</li>\n<li>将复用组件的状态作为props.render(state)方法的参数，暴露到组件外</li>\n<li>外部使用render()的属性接收参数并使用</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mouse</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  handleMouseMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">      <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"title function_\">render</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Move the mouse around!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Mouse</span> <span class=\"attr\">render</span>=<span class=\"string\">&#123;(mouse)</span> =&gt;</span> (</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The mouse position is (&#123;mouse.x&#125;, &#123;mouse.y&#125;)<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        )&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>children属性 代替 render属性</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mouse</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  handleMouseMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">      <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"title function_\">children</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Mouse</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;(mouse) =&gt; (</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Move the mouse around!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The current mouse position is (&#123;mouse.x&#125;, &#123;mouse.y&#125;)<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        )&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Mouse</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>代码优化：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//卸载时，解除事件绑定</span></span><br><span class=\"line\"><span class=\"title function_\">componentWillUnmount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//添加类型限制</span></span><br><span class=\"line\"><span class=\"title class_\">Mouse</span>.<span class=\"property\">propTypes</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">children</span>: <span class=\"title class_\">PropTypes</span>.<span class=\"property\">func</span>.<span class=\"property\">isRequired</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>高阶组件采用包装（装饰）模式来实现状态逻辑复用</p>\n<p>步骤：</p>\n<ol>\n<li>创建一个函数，名称为with开头</li>\n<li>指定函数参数，为大写字母开头</li>\n<li>在函数内部创建一个类组件，提供复用的状态逻辑代码</li>\n<li>在该组件中，渲染参数组件，同时将状态通过prop传递给参数组件</li>\n<li>调用该高阶组件，传入要增强的组件，通过返回值拿到增强后的组件，并将其渲染到页面中</li>\n</ol>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">withMouse</span>(<span class=\"params\">WrappedComponent</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Mouse</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">    state = &#123;</span><br><span class=\"line\">      <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">y</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    handleMouseMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">componentWillUnmount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">handleMouseMove</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">WrappedComponent</span> &#123;<span class=\"attr\">...this.state</span>&#125;/&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//设置装饰不同组件的名字，给调试使用</span></span><br><span class=\"line\">  <span class=\"title class_\">Mouse</span>.<span class=\"property\">displayName</span> = <span class=\"string\">`withMouse(<span class=\"subst\">$&#123;getDisplayName(WrappedComponent)&#125;</span>)`</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Mouse</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getDisplayName</span>(<span class=\"params\">WrappedComponent</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">WrappedComponent</span>.<span class=\"property\">displayName</span> || <span class=\"title class_\">WrappedComponent</span>.<span class=\"property\">name</span> || <span class=\"string\">&#x27;Component&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Position</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The current mouse position is (&#123;props.x&#125;, &#123;props.y&#125;)<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">MousePosition</span> = <span class=\"title function_\">withMouse</span>(<span class=\"title class_\">Position</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Move the mouse around!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">MousePosition</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>高阶组件的props的传递丢失问题：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//把props继续往下传</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">WrappedComponent</span> &#123;<span class=\"attr\">...this.state</span>&#125; &#123;<span class=\"attr\">...this.props</span>&#125;/&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-4-setState函数\"><a href=\"#5-4-setState函数\" class=\"headerlink\" title=\"5.4 setState函数\"></a>5.4 setState函数</h4><ul>\n<li>setState()函数是异步更新的（有延迟）</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原来语法</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">  <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//推荐语法，表示最新的state和props</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(<span class=\"function\">(<span class=\"params\">prevState,props</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: event.<span class=\"property\">clientX</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: event.<span class=\"property\">clientY</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//第二个参数，回调函数，在状态更新完成后立即执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-5-组件性能优化\"><a href=\"#5-5-组件性能优化\" class=\"headerlink\" title=\"5.5 组件性能优化\"></a>5.5 组件性能优化</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在render()之前运行，用来判断组件是否渲染，避免重复渲染</span></span><br><span class=\"line\"><span class=\"title function_\">shouldComponentUpdate</span>(<span class=\"params\">nextProps,nextSate</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//状态不是自己的用nextProps进行比较，状态是自己的用nextSate进行比较</span></span><br><span class=\"line\">  <span class=\"comment\">//需要重新渲染</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\">//不需要重新渲染</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>类组件继承<code>React.PureComponent</code>，自己已经实现<code>shouldComponentUpdate</code>钩子函数，来对前后props和state进行比较，来决定是否进行本次渲染。</p>\n<p>当要对比引用类型的值时，需要重新创建对象，才能更新组件。</p>\n<h4 id=\"5-6-虚拟DOM和Diff算法\"><a href=\"#5-6-虚拟DOM和Diff算法\" class=\"headerlink\" title=\"5.6 虚拟DOM和Diff算法\"></a>5.6 虚拟DOM和Diff算法</h4><p>执行过程：</p>\n<ol>\n<li>React初始state，创建虚拟DOM对象树</li>\n<li>根据虚拟DOM生成真正的DOM，渲染到页面中</li>\n<li>当数据变化后，重新根据新的数据，创建新的虚拟DOM对象树</li>\n<li>与上一次得到的虚拟DOM，使用Diff算法进行对比，得到需要更新的内容</li>\n<li>最终，React只将变化的内容更新到DOM中，重新渲染到页面。</li>\n</ol>\n<h3 id=\"6-Hooks\"><a href=\"#6-Hooks\" class=\"headerlink\" title=\"6.Hooks\"></a>6.Hooks</h3><ol>\n<li>高阶组件复用代码复杂</li>\n<li>生命周期复杂</li>\n<li>函数组件是无状态组件</li>\n</ol>\n<h4 id=\"6-1-useState\"><a href=\"#6-1-useState\" class=\"headerlink\" title=\"6.1 useState\"></a>6.1 useState</h4><blockquote>\n<p>接收一个初始值，返回一个状态值和一个更新函数</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [state, setState] = <span class=\"title function_\">useState</span>(initialState);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>更新函数通过接收一个新的值来更新状态值</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">setState</span>(newState);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Example</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>,&#123;useState&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Provider</span>, <span class=\"title class_\">Consumer</span>&#125; = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count,</span> <span class=\"attr\">add</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123; value =&gt; <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123; value.count &#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;value =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">      return (</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span> <span class=\"attr\">value.add</span> &#125;&gt;</span>Click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      );</span></span><br><span class=\"line\"><span class=\"language-xml\">    &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Consumer</span>&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-2-useEffect\"><a href=\"#6-2-useEffect\" class=\"headerlink\" title=\"6.2 useEffect\"></a>6.2 useEffect</h4><p>函数组件没有生命周期</p>\n<p>useEffect作用：通过使用这个 Hook，你告诉 React 你的组件需要在渲染后做一些事情。React 会记住你传递的函数（我们将它称为我们的“效果”），并在执行 DOM 更新后调用它。</p>\n<p>useEffect运行时间：默认情况下，它在第一次渲染后和每次更新后运行。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// useEffect不加第二个参数，监测所有数据，一旦数据发生改变就会调用该Hook</span></span><br><span class=\"line\"><span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">`You clicked <span class=\"subst\">$&#123;count&#125;</span> times`</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// useEffect加第二个参数，监测指定数据，一旦指定数据发生改变就会调用该Hook</span></span><br><span class=\"line\"><span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">`You clicked <span class=\"subst\">$&#123;count&#125;</span> times`</span>;</span><br><span class=\"line\">&#125;,[count]);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">remove</span> = (<span class=\"params\"></span>) =&gt;  <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">unmountComponentAtNode</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// return后面的数据将会在组件卸载后执行</span></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">setCount</span>(<span class=\"function\"><span class=\"params\">count</span> =&gt;</span> count + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(timer);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,[]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count,</span> <span class=\"attr\">add</span>, <span class=\"attr\">remove</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>常用操作：</p>\n<ol>\n<li>发起ajax请求</li>\n<li>设置订阅&#x2F;启动定时器</li>\n<li>更改DOM</li>\n</ol>\n<h4 id=\"6-3-useContext\"><a href=\"#6-3-useContext\" class=\"headerlink\" title=\"6.3 useContext\"></a>6.3 useContext</h4><p>函数组件中处理跨多个组件通信的问题</p>\n<blockquote>\n<p>单文件跨组件通信</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Context</span> = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Context.Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;count,</span> <span class=\"attr\">add</span>&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Context.Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123;count&#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123;add&#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span> <span class=\"attr\">add</span> &#125;&gt;</span>Add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>多文件跨组件通信</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ------------&quot;./components/Add&quot;--------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useContext &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App2</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; add, remove &#125; = <span class=\"title function_\">useContext</span>(props.<span class=\"property\">context</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;add&#125;</span>&gt;</span>Add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;remove&#125;</span>&gt;</span>Remove<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//-------------&#x27;./components/Show&#x27;---------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>,&#123;useContext&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App1</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;count&#125; = <span class=\"title function_\">useContext</span>(props.<span class=\"property\">context</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------------&quot;./App.jsx&quot;--------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useEffect, useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App1</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Show&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App2</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Add&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Context</span> = <span class=\"title class_\">React</span>.<span class=\"title function_\">createContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">add</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">setCount</span>(count + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">remove</span> = (<span class=\"params\"></span>) =&gt; props.<span class=\"property\">root</span>.<span class=\"title function_\">unmount</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> interval = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">setCount</span>(<span class=\"function\"><span class=\"params\">count</span> =&gt;</span> count + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">clearInterval</span>(interval);</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Context.Provider</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;</span> <span class=\"attr\">count</span>, <span class=\"attr\">add</span>, <span class=\"attr\">remove</span> &#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App1</span> <span class=\"attr\">context</span>=<span class=\"string\">&#123;Context&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App2</span> <span class=\"attr\">context</span>=<span class=\"string\">&#123;Context&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Context.Provider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------&quot;./index.js&quot;-------------------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ReactDOM</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom/client&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./index.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.jsx&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">App</span> <span class=\"attr\">root</span>=<span class=\"string\">&#123;root&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-外部常用库\"><a href=\"#7-外部常用库\" class=\"headerlink\" title=\"7.外部常用库\"></a>7.外部常用库</h3><h4 id=\"7-1-axios请求数据\"><a href=\"#7-1-axios请求数据\" class=\"headerlink\" title=\"7.1 axios请求数据\"></a>7.1 axios请求数据</h4><p>axios是基于promise对ajax的一种封装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装axios</span></span><br><span class=\"line\">npm i axios</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>发起GET请求<br><code>axios.get(&#39;url&#39;,&#123;params:&#123;（js对象）参数&#125;&#125;).then(callback)</code></p>\n</li>\n<li><p>发起POST请求<br><code>axios.post(&#39;url&#39;,&#123;（js对象）参数&#125;).then(callback)</code></p>\n</li>\n<li><p>其他方式</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">method</span>: <span class=\"string\">&#x27;请求类型&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;请求的URL地址&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;数据&#125;,</span><br><span class=\"line\">  <span class=\"attr\">params</span>: &#123;参数&#125;</span><br><span class=\"line\">  <span class=\"comment\">// then获得返回的数据，catch在请求错误时处理，可以无限叠加</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> callback).</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"7-2-Router路由\"><a href=\"#7-2-Router路由\" class=\"headerlink\" title=\"7.2 Router路由\"></a>7.2 Router路由</h4><p>现代前端应用大多都是SPA（单页应用程序），也就是只有一个HTML页面的应用程序，可以减轻服务器压力，用户体验好，为了有效使用单页面管理原来的多页面的功能，前端路由应运而生。</p>\n<p>React Router官网：<a href=\"https://reactrouterdotcom.fly.dev/docs/en/v6\">https://reactrouterdotcom.fly.dev/docs/en/v6</a></p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i react-router-dom</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">BrowserRouter</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;bootstrap/dist/css/bootstrap.min.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">BrowserRouter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">BrowserRouter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">React.StrictMode</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>基础使用 Routes, Route, Link, Outlet</p>\n</blockquote>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">Routes</span>, <span class=\"title class_\">Route</span>, <span class=\"title class_\">Link</span>, <span class=\"title class_\">Outlet</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Header</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Header<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      Outlet 标签为子元素占位符，为子元素占位，布局页面</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/First&quot;</span>&gt;</span>First<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/Second&quot;</span>&gt;</span>Second<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Outlet</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Home</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      This is the home page</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">First</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>First<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      This is the first page</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">NotFound</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Not Found<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      This page is not found</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">Header</span>/&gt;</span> &#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">index</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">Home</span>/&gt;</span> &#125;/&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;First&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">First</span>/&gt;</span> &#125;/&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;*&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span> &lt;<span class=\"attr\">NotFound</span>/&gt;</span> &#125;/&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-3-Ant-Design的UI库\"><a href=\"#7-3-Ant-Design的UI库\" class=\"headerlink\" title=\"7.3 Ant Design的UI库\"></a>7.3 Ant Design的UI库</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装UI样式</span></span><br><span class=\"line\">npm install antd --save</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装依赖修改webpack</span></span><br><span class=\"line\">npm install @craco/craco</span><br><span class=\"line\">npm install craco-less</span><br><span class=\"line\">npm install less-loader less</span><br></pre></td></tr></table></figure>\n\n<p>修改 <code>package.json</code> 里的 <code>scripts</code> 属性</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  </span><br><span class=\"line\">  <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;craco start&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;craco build&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  <span class=\"attr\">&quot;test&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;craco test&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后在项目根目录创建一个 <code>craco.config.js</code> 用于修改默认配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改为绿色主题</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">CracoLessPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">plugin</span>: <span class=\"title class_\">CracoLessPlugin</span>,</span><br><span class=\"line\">      <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">lessLoaderOptions</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">lessOptions</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">modifyVars</span>: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">javascriptEnabled</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-4-Redux\"><a href=\"#7-4-Redux\" class=\"headerlink\" title=\"7.4 Redux\"></a>7.4 Redux</h4><p>专门用于状态管理的JS库，集中管理React组件的共享状态<br>从 UI 层完全抽离出来，只负责管理数据，让 React 只专注于 View 层的绘制。</p>\n<p>中文文档：<a href=\"https://cn.redux.js.org/\">https://cn.redux.js.org/</a></p>\n<p>英文文档： <a href=\"https://redux.js.org/\">https://redux.js.org/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装 redux</span></span><br><span class=\"line\">npm install @reduxjs/toolkit</span><br><span class=\"line\">npm install react-redux</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建 Redux Store</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; configureStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@reduxjs/toolkit&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导入别的文件配置好的 reducer</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> counterReducer <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../features/counter/counterSlice&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 把reducer存到store中，store的属性可以随便改</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">configureStore</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">reducer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">counter</span>: counterReducer</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建 Slice Reducer</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createSlice &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@reduxjs/toolkit&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> counterSlice = <span class=\"title function_\">createSlice</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//name字符串用作每个action类型的第一部分, 每个reducer函数的键名用作第二部分</span></span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;counter&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 初始化state值</span></span><br><span class=\"line\">  <span class=\"attr\">initialState</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">value</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 定义操作属性的方法</span></span><br><span class=\"line\">  <span class=\"attr\">reducers</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">increment</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      state.<span class=\"property\">value</span> += <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">decrement</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      state.<span class=\"property\">value</span> -= <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">incrementByAmount</span>: <span class=\"function\">(<span class=\"params\">state, action</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.<span class=\"property\">value</span> += action.<span class=\"property\">payload</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//导出操作属性的方法给组件使用</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> &#123; increment, decrement, incrementByAmount &#125; = counterSlice.<span class=\"property\">actions</span></span><br><span class=\"line\"><span class=\"comment\">//导出 reducer</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> counterSlice.<span class=\"property\">reducer</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>React Counter 组件</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useSelector, useDispatch &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-redux&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  decrement,</span><br><span class=\"line\">  increment,</span><br><span class=\"line\">  incrementByAmount,</span><br><span class=\"line\">  incrementAsync,</span><br><span class=\"line\">  selectCount</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./counterSlice&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> styles <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Counter.module.css&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Counter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 从store中导出属性值给组件使用</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"title function_\">useSelector</span>(selectCount)</span><br><span class=\"line\">  <span class=\"comment\">// 导出store的dispatch函数来给组件调用方法</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dispatch = <span class=\"title function_\">useDispatch</span>()</span><br><span class=\"line\">  <span class=\"comment\">// 给组件显示属性</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [incrementAmount, setIncrementAmount] = <span class=\"title function_\">useState</span>(<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.row&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.button&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Increment value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> dispatch(increment())&#125; // 调用方法</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">          +</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.value&#125;</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.button&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Decrement value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> dispatch(decrement())&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">          -</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"TypeScript快速入门语法","img":"https://cdn.pixabay.com/photo/2015/04/14/10/30/bird-721951_960_720.jpg","excerpt":"作为JavaScript的超集, 大大扩展了JavaScript的数据类型, 在大型项目中有效的避免出现低级的bug","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-05-05T13:30:11.000Z","_content":"\n\n# TypeScript快速入门语法\n\n## 一、语法\n\n### 1.前言\n\nJS绝大部分都是类型错误，TS为JS添加类型支持。\n\nJS属于动态类型的编程语言，在执行期做类型检查。\nTS属于静态类型的编程语言，可以提前在编写代码的同时发现代码的错误。\n\nNode.js和浏览器都只认识JS，不认识TS，需要先将TS代码转化为JS代码。\n\n```bash\nnpm i -g typescript # 安装TS工具包，把TS文件解析成JS文件\ntsc hello.ts\nnode hello.js \n```\n\n所有合法的JS代码都是TS代码\n\n>新建ts文件\n\n```typescript\nlet a:number = 18;\nconsole.log(a);\n```\n\n```bash\n#安装ts-node包，直接运行ts代码\nnpm i -g ts-node\n#运行TS文件\nts-node hello.ts  \n```\n　　\n### 2.基本数据类型\n\n#### 2.1 类型注解\n\n给变量一个限制类型，如果更换其他类型会报错\n\n```ts\nlet a:number = 18;\n```\n\n#### 2.2 数据类型\n\n1. 原始类型：`number`/`string`/`boolean`/`null`/`undefined`/`symbol`\n为JS原来就有的类型\n\n2. 对象类型: object\n在TS中更加细化\n\n* 数组类型：\n  * `let a: number[]=[1,2,3]`\n  * `let a: boolen[]=[true,false]`\n* 联合类型，由多个类型组成\n  * `let a: (number | string)[]=[1,'a',3]`\n* 类型别名，为复杂类型起别名\n  * `type CustomArray = (number | string)[]`\n* 函数类型，指定参数类型和返回值类型\n  * `function add(num1: number,num2: number): number{ return num1+num2 }`\n  * `const add:(num1: number,num2: number)=>number=(num1,num2)=>{return num1+num2}`\n  * `function say(): void{ console.log('Hello') }`\n  * `function mySile(start?:number):void{}` 可选参数，往后站\n* 对象类型\n\n  ```ts\n  let person:{\n      name:string;\n      age:number;\n      hobbies:string[];\n      say():void;\n  } = {\n      name: 'Max',\n      age: 27,\n      hobbies: ['Sports', 'Cooking'],\n      say() {console.log(\"Hello!\");}\n  }\n  ```\n\n* 接口\n  * 当对象类型被多次使用，一般用接口来描述\n\n  ```ts\n  interface IPerson{\n      name: string;\n      age: number;\n      hobbies: string[];\n      say(): void;\n  }\n  let person:IPerson = {\n      name: 'Max',\n      age: 27,\n      hobbies: ['Sports', 'Cooking'],\n      say() {console.log(\"Hello!\");}\n  }\n  ```\n\n  * 接口`interface`与类型别名`type`的区别\n    * 接口只能为对象指定类型，类型别名可以指定任何类型\n  * 接口继承\n\n    ```ts\n    interface IAnimal{\n        age: number;\n        say(): void;\n    }\n    interface IPerson extends IAnimal{\n        name: string;\n        hobbies: string[];\n    }\n    let person:IPerson = {\n        name: 'Max',\n        age: 27,\n        hobbies: ['Sports', 'Cooking'],\n        say() {console.log(\"Hello!\");}\n    }\n    ```\n\n* 元组（Tuple）\n  * 特定类型的数组：确切的知道要包含的元素以及特定索引对应的类型。\n  * `let position:[number,number] = [39,40]`\n* 类型推论\n  * TS自带类型推论，在声明变量和初始化值时，会自动对变量进行类型推断\n* 类型断言\n  * 利用`as`指定一个更加具体的类型\n* 字面量类型\n  * `const a = 'up'`，a的类型就是`up`\n* 枚举类型\n\n  ```ts\n  enum Dirction {\n    Up,\n    Down,\n    Left,\n    Right\n  }\n  Dirction.up  //使用枚举类型,枚举数值默认从0开始自增\n  ```\n\n* any类型\n  * `typeof`获取变量类型，也可以对类型进行查询\n\n### 3.高级数据类型\n\n#### 3.1 class类型\n\n* 初始化\n\n```ts\nclass Person {\n  age: number;\n  sex = 'man';\n}\n```\n\n* 构造函数\n\n```ts\nclass Person {\n  age: number;\n  sex: string;\n\n  constructor(age:number,sex:string){\n      this.age=age;\n      this.sex=sex;\n  }\n}\n```\n\n* 继承\n\n```ts\nclass Animal{\n  move(){\n    console.log('roaming the earch...');\n  }\n}\nclass Dog extends Animal{\n  say(){\n    console.log(\"wang wang\");\n  }   \n}\nlet dog = new Dog();\ndog.say();\n```\n\n* 实现\n\n```ts\ninterface Hello {\n  say(): void;\n}\nclass Person implements Hello{\n  say(): void {\n    console.log(\"Hello\");\n  }\n}\nlet p = new Person();\np.say();\n```\n\n* 可见性\n  * public 公有的（默认）\n  * protected 受保护的：类与子类中（非实例对象）可见\n  * private 私有的：只在当前类可见\n* readonly 修饰符\n  * 防止构造函数外对属性赋值，但必须手动进行类型注解，否则就为字面量类型\n* 类型兼容\n  * 结构化的类型系统：当两个类的结构相同，可以互相实现\n  * 接口之间也有兼容性\n\n  ```ts\n  class Point {\n      x: number;\n      y: number;\n      z: number;\n  }\n  class Point2 {\n      x: number;\n      y: number;\n  }\n  let p:Point2 = new Point(); // 不能反过来，Point > Point2\n  ```\n\n  * 函数之间的兼容性：1. 参数个数 2. 参数类型 3. 返回值类型\n\n#### 3.2 交叉类型\n\n功能类似继承\n\n```ts\ninterface Person {\n    name: string;\n    age: number;\n}\ninterface Book {\n    title: string;\n}\ntype PersonAndBook = Person & Book;\nlet personAndBook: PersonAndBook = {\n    name: 'John',\n    age: 30,\n    title: 'Hello World'\n}\n```\n\n与继承额区别：\n\n1. 当出现同名属性和方法时，继承会报错\n\n#### 3.3 泛型\n\n在保证类型安全的情况下，让函数与多种类型一起工作，从而实现复用\n\n* 创建泛型函数\n\n```ts\nfunction id<Type>(value: Type):Type{   //Type可以为任意字符串\n    return value;\n}\nlet num = id<number>(10);  //调用函数\nlet num = id(10);          //TS类型参数推断，简化写法\n```\n\n* 泛型约束\n\n```ts\nfunction id<Type>(value: Type[]):Type[]{  //约束为数组\n    return value;\n}\n```\n\n```ts\n//利用接口类型兼容性来作泛型约束\ninterface ILength {\n    length: number;\n}\nfunction id<Type extends ILength>(value: Type[]):Type[]{\n    console.log(value.length);\n    return value;\n}\n```\n\n```ts\n//泛型可以有多个，而且泛型之间还可以有类型约束\nfunction grep<Type, Key extends keyof Type>(obj: Type, key: Key) {\n\n}\ngrep({ name: 'John', age: 30 }, 'name');\n```\n\n* 泛型接口\n\n```ts\ninterface IAnimal<T> {\n  name: T;\n  age: number;\n}\n\nlet animal: IAnimal<string> = {\n  name: \"cat\",\n  age: 3\n}\n```\n\n* 泛型类\n  * 类似泛型接口\n\n* 泛型工具\n  * `Partial<Type>` 用来创建一个类型，把传入的对象所有属性设置为可选\n  * `Readonly<Type>`用来创建一个类型，把传入的对象所有属性设置为只读\n  * `Pick<Type,Keys>`用来创建一个类型，从传入对象中选择其中几个属性\n  * `Record<Keys,Type>`用来创建一个类型，把属性设置为Key，类型设置为Type\n\n#### 3.4 索引签名类型\n\n当无法确定对象的属性时，需要用到索引签名类型\n\n```ts\ninterface Object {\n  [key: string]: number;\n}\n\nlet obj: Object = {\n  name: 1,\n  age: 2,\n  height: 3,\n}\n```\n\n#### 3.5 映射类型\n\n基于旧类型创建新类型\n\n```ts\ntype PropKey = \"x\" | \"y\" | \"z\";\ntype Type1 = { x: number; y: number; z: string };\ntype Type2 = { [P in PropKey]: number };\ntype Type3 = { [p in keyof Type1]: string };\ntype Type4 = Type1['x'];            //索引查询类型，获取特定的键对应值的类型\ntype Type5 = Type1['x'|'y'|'z'];    //获取三个值的联合类型\ntype Type6 = Type1[keyof Type1];    //获取Type1所有属性的联合类型\n```\n\n#### 3.6 类型声明文件\n\n* `.ts`文件\n  1. 既包含类型信息又包含可执行文件代码\n  2. 可以编译为js文件\n* `.d.ts`文件\n  1. 只包含类型信息的类型声明文件\n  2. 不会生成js文件\n* 内置类型声明文件\n* 第三方库的类型声明文件\n* 自己实现类型声明文件\n  * 给JS文件声明类型，方便给TS文件使用\n    * 使用declare关键字，声明js与ts相同的数据类型\n    * 声明文件的名字需要与js的名字相同\n    * 用export导出声明后的数据类型\n  * 给TS文件声明类型，方便给其他TS文件使用\n","source":"_posts/计算机/前端/TypeScript快速入门语法.md","raw":"---\ntitle: TypeScript快速入门语法\nimg: https://cdn.pixabay.com/photo/2015/04/14/10/30/bird-721951_960_720.jpg\nexcerpt: 作为JavaScript的超集, 大大扩展了JavaScript的数据类型, 在大型项目中有效的避免出现低级的bug\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [前端,TypeScript,编程语法]\nmathjax: true\ndate: 2022-05-05 21:30:11\n---\n\n\n# TypeScript快速入门语法\n\n## 一、语法\n\n### 1.前言\n\nJS绝大部分都是类型错误，TS为JS添加类型支持。\n\nJS属于动态类型的编程语言，在执行期做类型检查。\nTS属于静态类型的编程语言，可以提前在编写代码的同时发现代码的错误。\n\nNode.js和浏览器都只认识JS，不认识TS，需要先将TS代码转化为JS代码。\n\n```bash\nnpm i -g typescript # 安装TS工具包，把TS文件解析成JS文件\ntsc hello.ts\nnode hello.js \n```\n\n所有合法的JS代码都是TS代码\n\n>新建ts文件\n\n```typescript\nlet a:number = 18;\nconsole.log(a);\n```\n\n```bash\n#安装ts-node包，直接运行ts代码\nnpm i -g ts-node\n#运行TS文件\nts-node hello.ts  \n```\n　　\n### 2.基本数据类型\n\n#### 2.1 类型注解\n\n给变量一个限制类型，如果更换其他类型会报错\n\n```ts\nlet a:number = 18;\n```\n\n#### 2.2 数据类型\n\n1. 原始类型：`number`/`string`/`boolean`/`null`/`undefined`/`symbol`\n为JS原来就有的类型\n\n2. 对象类型: object\n在TS中更加细化\n\n* 数组类型：\n  * `let a: number[]=[1,2,3]`\n  * `let a: boolen[]=[true,false]`\n* 联合类型，由多个类型组成\n  * `let a: (number | string)[]=[1,'a',3]`\n* 类型别名，为复杂类型起别名\n  * `type CustomArray = (number | string)[]`\n* 函数类型，指定参数类型和返回值类型\n  * `function add(num1: number,num2: number): number{ return num1+num2 }`\n  * `const add:(num1: number,num2: number)=>number=(num1,num2)=>{return num1+num2}`\n  * `function say(): void{ console.log('Hello') }`\n  * `function mySile(start?:number):void{}` 可选参数，往后站\n* 对象类型\n\n  ```ts\n  let person:{\n      name:string;\n      age:number;\n      hobbies:string[];\n      say():void;\n  } = {\n      name: 'Max',\n      age: 27,\n      hobbies: ['Sports', 'Cooking'],\n      say() {console.log(\"Hello!\");}\n  }\n  ```\n\n* 接口\n  * 当对象类型被多次使用，一般用接口来描述\n\n  ```ts\n  interface IPerson{\n      name: string;\n      age: number;\n      hobbies: string[];\n      say(): void;\n  }\n  let person:IPerson = {\n      name: 'Max',\n      age: 27,\n      hobbies: ['Sports', 'Cooking'],\n      say() {console.log(\"Hello!\");}\n  }\n  ```\n\n  * 接口`interface`与类型别名`type`的区别\n    * 接口只能为对象指定类型，类型别名可以指定任何类型\n  * 接口继承\n\n    ```ts\n    interface IAnimal{\n        age: number;\n        say(): void;\n    }\n    interface IPerson extends IAnimal{\n        name: string;\n        hobbies: string[];\n    }\n    let person:IPerson = {\n        name: 'Max',\n        age: 27,\n        hobbies: ['Sports', 'Cooking'],\n        say() {console.log(\"Hello!\");}\n    }\n    ```\n\n* 元组（Tuple）\n  * 特定类型的数组：确切的知道要包含的元素以及特定索引对应的类型。\n  * `let position:[number,number] = [39,40]`\n* 类型推论\n  * TS自带类型推论，在声明变量和初始化值时，会自动对变量进行类型推断\n* 类型断言\n  * 利用`as`指定一个更加具体的类型\n* 字面量类型\n  * `const a = 'up'`，a的类型就是`up`\n* 枚举类型\n\n  ```ts\n  enum Dirction {\n    Up,\n    Down,\n    Left,\n    Right\n  }\n  Dirction.up  //使用枚举类型,枚举数值默认从0开始自增\n  ```\n\n* any类型\n  * `typeof`获取变量类型，也可以对类型进行查询\n\n### 3.高级数据类型\n\n#### 3.1 class类型\n\n* 初始化\n\n```ts\nclass Person {\n  age: number;\n  sex = 'man';\n}\n```\n\n* 构造函数\n\n```ts\nclass Person {\n  age: number;\n  sex: string;\n\n  constructor(age:number,sex:string){\n      this.age=age;\n      this.sex=sex;\n  }\n}\n```\n\n* 继承\n\n```ts\nclass Animal{\n  move(){\n    console.log('roaming the earch...');\n  }\n}\nclass Dog extends Animal{\n  say(){\n    console.log(\"wang wang\");\n  }   \n}\nlet dog = new Dog();\ndog.say();\n```\n\n* 实现\n\n```ts\ninterface Hello {\n  say(): void;\n}\nclass Person implements Hello{\n  say(): void {\n    console.log(\"Hello\");\n  }\n}\nlet p = new Person();\np.say();\n```\n\n* 可见性\n  * public 公有的（默认）\n  * protected 受保护的：类与子类中（非实例对象）可见\n  * private 私有的：只在当前类可见\n* readonly 修饰符\n  * 防止构造函数外对属性赋值，但必须手动进行类型注解，否则就为字面量类型\n* 类型兼容\n  * 结构化的类型系统：当两个类的结构相同，可以互相实现\n  * 接口之间也有兼容性\n\n  ```ts\n  class Point {\n      x: number;\n      y: number;\n      z: number;\n  }\n  class Point2 {\n      x: number;\n      y: number;\n  }\n  let p:Point2 = new Point(); // 不能反过来，Point > Point2\n  ```\n\n  * 函数之间的兼容性：1. 参数个数 2. 参数类型 3. 返回值类型\n\n#### 3.2 交叉类型\n\n功能类似继承\n\n```ts\ninterface Person {\n    name: string;\n    age: number;\n}\ninterface Book {\n    title: string;\n}\ntype PersonAndBook = Person & Book;\nlet personAndBook: PersonAndBook = {\n    name: 'John',\n    age: 30,\n    title: 'Hello World'\n}\n```\n\n与继承额区别：\n\n1. 当出现同名属性和方法时，继承会报错\n\n#### 3.3 泛型\n\n在保证类型安全的情况下，让函数与多种类型一起工作，从而实现复用\n\n* 创建泛型函数\n\n```ts\nfunction id<Type>(value: Type):Type{   //Type可以为任意字符串\n    return value;\n}\nlet num = id<number>(10);  //调用函数\nlet num = id(10);          //TS类型参数推断，简化写法\n```\n\n* 泛型约束\n\n```ts\nfunction id<Type>(value: Type[]):Type[]{  //约束为数组\n    return value;\n}\n```\n\n```ts\n//利用接口类型兼容性来作泛型约束\ninterface ILength {\n    length: number;\n}\nfunction id<Type extends ILength>(value: Type[]):Type[]{\n    console.log(value.length);\n    return value;\n}\n```\n\n```ts\n//泛型可以有多个，而且泛型之间还可以有类型约束\nfunction grep<Type, Key extends keyof Type>(obj: Type, key: Key) {\n\n}\ngrep({ name: 'John', age: 30 }, 'name');\n```\n\n* 泛型接口\n\n```ts\ninterface IAnimal<T> {\n  name: T;\n  age: number;\n}\n\nlet animal: IAnimal<string> = {\n  name: \"cat\",\n  age: 3\n}\n```\n\n* 泛型类\n  * 类似泛型接口\n\n* 泛型工具\n  * `Partial<Type>` 用来创建一个类型，把传入的对象所有属性设置为可选\n  * `Readonly<Type>`用来创建一个类型，把传入的对象所有属性设置为只读\n  * `Pick<Type,Keys>`用来创建一个类型，从传入对象中选择其中几个属性\n  * `Record<Keys,Type>`用来创建一个类型，把属性设置为Key，类型设置为Type\n\n#### 3.4 索引签名类型\n\n当无法确定对象的属性时，需要用到索引签名类型\n\n```ts\ninterface Object {\n  [key: string]: number;\n}\n\nlet obj: Object = {\n  name: 1,\n  age: 2,\n  height: 3,\n}\n```\n\n#### 3.5 映射类型\n\n基于旧类型创建新类型\n\n```ts\ntype PropKey = \"x\" | \"y\" | \"z\";\ntype Type1 = { x: number; y: number; z: string };\ntype Type2 = { [P in PropKey]: number };\ntype Type3 = { [p in keyof Type1]: string };\ntype Type4 = Type1['x'];            //索引查询类型，获取特定的键对应值的类型\ntype Type5 = Type1['x'|'y'|'z'];    //获取三个值的联合类型\ntype Type6 = Type1[keyof Type1];    //获取Type1所有属性的联合类型\n```\n\n#### 3.6 类型声明文件\n\n* `.ts`文件\n  1. 既包含类型信息又包含可执行文件代码\n  2. 可以编译为js文件\n* `.d.ts`文件\n  1. 只包含类型信息的类型声明文件\n  2. 不会生成js文件\n* 内置类型声明文件\n* 第三方库的类型声明文件\n* 自己实现类型声明文件\n  * 给JS文件声明类型，方便给TS文件使用\n    * 使用declare关键字，声明js与ts相同的数据类型\n    * 声明文件的名字需要与js的名字相同\n    * 用export导出声明后的数据类型\n  * 给TS文件声明类型，方便给其他TS文件使用\n","slug":"计算机/前端/TypeScript快速入门语法","published":1,"updated":"2022-05-16T06:45:51.320Z","layout":"post","photos":[],"_id":"cm1z7giq60038dwvx3jr88fbq","content":"<h1 id=\"TypeScript快速入门语法\"><a href=\"#TypeScript快速入门语法\" class=\"headerlink\" title=\"TypeScript快速入门语法\"></a>TypeScript快速入门语法</h1><h2 id=\"一、语法\"><a href=\"#一、语法\" class=\"headerlink\" title=\"一、语法\"></a>一、语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>JS绝大部分都是类型错误，TS为JS添加类型支持。</p>\n<p>JS属于动态类型的编程语言，在执行期做类型检查。<br>TS属于静态类型的编程语言，可以提前在编写代码的同时发现代码的错误。</p>\n<p>Node.js和浏览器都只认识JS，不认识TS，需要先将TS代码转化为JS代码。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g typescript <span class=\"comment\"># 安装TS工具包，把TS文件解析成JS文件</span></span><br><span class=\"line\">tsc hello.ts</span><br><span class=\"line\">node hello.js </span><br></pre></td></tr></table></figure>\n\n<p>所有合法的JS代码都是TS代码</p>\n<blockquote>\n<p>新建ts文件</p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">a</span>:<span class=\"built_in\">number</span> = <span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装ts-node包，直接运行ts代码</span></span><br><span class=\"line\">npm i -g ts-node</span><br><span class=\"line\"><span class=\"comment\">#运行TS文件</span></span><br><span class=\"line\">ts-node hello.ts  </span><br></pre></td></tr></table></figure>\n<p>　　</p>\n<h3 id=\"2-基本数据类型\"><a href=\"#2-基本数据类型\" class=\"headerlink\" title=\"2.基本数据类型\"></a>2.基本数据类型</h3><h4 id=\"2-1-类型注解\"><a href=\"#2-1-类型注解\" class=\"headerlink\" title=\"2.1 类型注解\"></a>2.1 类型注解</h4><p>给变量一个限制类型，如果更换其他类型会报错</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">a</span>:<span class=\"built_in\">number</span> = <span class=\"number\">18</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-数据类型\"><a href=\"#2-2-数据类型\" class=\"headerlink\" title=\"2.2 数据类型\"></a>2.2 数据类型</h4><ol>\n<li><p>原始类型：<code>number</code>&#x2F;<code>string</code>&#x2F;<code>boolean</code>&#x2F;<code>null</code>&#x2F;<code>undefined</code>&#x2F;<code>symbol</code><br>为JS原来就有的类型</p>\n</li>\n<li><p>对象类型: object<br>在TS中更加细化</p>\n</li>\n</ol>\n<ul>\n<li><p>数组类型：</p>\n<ul>\n<li><code>let a: number[]=[1,2,3]</code></li>\n<li><code>let a: boolen[]=[true,false]</code></li>\n</ul>\n</li>\n<li><p>联合类型，由多个类型组成</p>\n<ul>\n<li><code>let a: (number | string)[]=[1,&#39;a&#39;,3]</code></li>\n</ul>\n</li>\n<li><p>类型别名，为复杂类型起别名</p>\n<ul>\n<li><code>type CustomArray = (number | string)[]</code></li>\n</ul>\n</li>\n<li><p>函数类型，指定参数类型和返回值类型</p>\n<ul>\n<li><code>function add(num1: number,num2: number): number&#123; return num1+num2 &#125;</code></li>\n<li><code>const add:(num1: number,num2: number)=&gt;number=(num1,num2)=&gt;&#123;return num1+num2&#125;</code></li>\n<li><code>function say(): void&#123; console.log(&#39;Hello&#39;) &#125;</code></li>\n<li><code>function mySile(start?:number):void&#123;&#125;</code> 可选参数，往后站</li>\n</ul>\n</li>\n<li><p>对象类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">person</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>:<span class=\"built_in\">string</span>[];</span><br><span class=\"line\">    <span class=\"title function_\">say</span>():<span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125; = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Max&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: [<span class=\"string\">&#x27;Sports&#x27;</span>, <span class=\"string\">&#x27;Cooking&#x27;</span>],</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>) &#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello!&quot;</span>);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接口</p>\n<ul>\n<li>当对象类型被多次使用，一般用接口来描述</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPerson</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: <span class=\"built_in\">string</span>[];</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">person</span>:<span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Max&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: [<span class=\"string\">&#x27;Sports&#x27;</span>, <span class=\"string\">&#x27;Cooking&#x27;</span>],</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>) &#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello!&quot;</span>);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>接口<code>interface</code>与类型别名<code>type</code>的区别</p>\n<ul>\n<li>接口只能为对象指定类型，类型别名可以指定任何类型</li>\n</ul>\n</li>\n<li><p>接口继承</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IAnimal</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPerson</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IAnimal</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: <span class=\"built_in\">string</span>[];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">person</span>:<span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Max&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: [<span class=\"string\">&#x27;Sports&#x27;</span>, <span class=\"string\">&#x27;Cooking&#x27;</span>],</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>) &#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello!&quot;</span>);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>元组（Tuple）</p>\n<ul>\n<li>特定类型的数组：确切的知道要包含的元素以及特定索引对应的类型。</li>\n<li><code>let position:[number,number] = [39,40]</code></li>\n</ul>\n</li>\n<li><p>类型推论</p>\n<ul>\n<li>TS自带类型推论，在声明变量和初始化值时，会自动对变量进行类型推断</li>\n</ul>\n</li>\n<li><p>类型断言</p>\n<ul>\n<li>利用<code>as</code>指定一个更加具体的类型</li>\n</ul>\n</li>\n<li><p>字面量类型</p>\n<ul>\n<li><code>const a = &#39;up&#39;</code>，a的类型就是<code>up</code></li>\n</ul>\n</li>\n<li><p>枚举类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">Dirction</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Up</span>,</span><br><span class=\"line\">  <span class=\"title class_\">Down</span>,</span><br><span class=\"line\">  <span class=\"title class_\">Left</span>,</span><br><span class=\"line\">  <span class=\"title class_\">Right</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Dirction</span>.<span class=\"property\">up</span>  <span class=\"comment\">//使用枚举类型,枚举数值默认从0开始自增</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>any类型</p>\n<ul>\n<li><code>typeof</code>获取变量类型，也可以对类型进行查询</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-高级数据类型\"><a href=\"#3-高级数据类型\" class=\"headerlink\" title=\"3.高级数据类型\"></a>3.高级数据类型</h3><h4 id=\"3-1-class类型\"><a href=\"#3-1-class类型\" class=\"headerlink\" title=\"3.1 class类型\"></a>3.1 class类型</h4><ul>\n<li>初始化</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  sex = <span class=\"string\">&#x27;man&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>构造函数</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"><span class=\"attr\">age</span>:<span class=\"built_in\">number</span>,<span class=\"attr\">sex</span>:<span class=\"built_in\">string</span></span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">age</span>=age;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">sex</span>=sex;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>继承</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">move</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;roaming the earch...&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">say</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;wang wang&quot;</span>);</span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> dog = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>();</span><br><span class=\"line\">dog.<span class=\"title function_\">say</span>();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>实现</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Hello</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Hello</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">p.<span class=\"title function_\">say</span>();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>可见性</p>\n<ul>\n<li>public 公有的（默认）</li>\n<li>protected 受保护的：类与子类中（非实例对象）可见</li>\n<li>private 私有的：只在当前类可见</li>\n</ul>\n</li>\n<li><p>readonly 修饰符</p>\n<ul>\n<li>防止构造函数外对属性赋值，但必须手动进行类型注解，否则就为字面量类型</li>\n</ul>\n</li>\n<li><p>类型兼容</p>\n<ul>\n<li>结构化的类型系统：当两个类的结构相同，可以互相实现</li>\n<li>接口之间也有兼容性</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">z</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point2</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">p</span>:<span class=\"title class_\">Point2</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Point</span>(); <span class=\"comment\">// 不能反过来，Point &gt; Point2</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>函数之间的兼容性：1. 参数个数 2. 参数类型 3. 返回值类型</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-2-交叉类型\"><a href=\"#3-2-交叉类型\" class=\"headerlink\" title=\"3.2 交叉类型\"></a>3.2 交叉类型</h4><p>功能类似继承</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Book</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">PersonAndBook</span> = <span class=\"title class_\">Person</span> &amp; <span class=\"title class_\">Book</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">personAndBook</span>: <span class=\"title class_\">PersonAndBook</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;John&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">30</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Hello World&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>与继承额区别：</p>\n<ol>\n<li>当出现同名属性和方法时，继承会报错</li>\n</ol>\n<h4 id=\"3-3-泛型\"><a href=\"#3-3-泛型\" class=\"headerlink\" title=\"3.3 泛型\"></a>3.3 泛型</h4><p>在保证类型安全的情况下，让函数与多种类型一起工作，从而实现复用</p>\n<ul>\n<li>创建泛型函数</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> id&lt;<span class=\"title class_\">Type</span>&gt;(<span class=\"attr\">value</span>: <span class=\"title class_\">Type</span>):<span class=\"title class_\">Type</span>&#123;   <span class=\"comment\">//Type可以为任意字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> num = id&lt;<span class=\"built_in\">number</span>&gt;(<span class=\"number\">10</span>);  <span class=\"comment\">//调用函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"title function_\">id</span>(<span class=\"number\">10</span>);          <span class=\"comment\">//TS类型参数推断，简化写法</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>泛型约束</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> id&lt;<span class=\"title class_\">Type</span>&gt;(<span class=\"attr\">value</span>: <span class=\"title class_\">Type</span>[]):<span class=\"title class_\">Type</span>[]&#123;  <span class=\"comment\">//约束为数组</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//利用接口类型兼容性来作泛型约束</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">ILength</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">length</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> id&lt;<span class=\"title class_\">Type</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ILength</span>&gt;(<span class=\"attr\">value</span>: <span class=\"title class_\">Type</span>[]):<span class=\"title class_\">Type</span>[]&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value.<span class=\"property\">length</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//泛型可以有多个，而且泛型之间还可以有类型约束</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> grep&lt;<span class=\"title class_\">Type</span>, <span class=\"title class_\">Key</span> <span class=\"keyword\">extends</span> keyof <span class=\"title class_\">Type</span>&gt;(<span class=\"attr\">obj</span>: <span class=\"title class_\">Type</span>, <span class=\"attr\">key</span>: <span class=\"title class_\">Key</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">grep</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;John&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">30</span> &#125;, <span class=\"string\">&#x27;name&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>泛型接口</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IAnimal</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: T;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">animal</span>: <span class=\"title class_\">IAnimal</span>&lt;<span class=\"built_in\">string</span>&gt; = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;cat&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>泛型类</p>\n<ul>\n<li>类似泛型接口</li>\n</ul>\n</li>\n<li><p>泛型工具</p>\n<ul>\n<li><code>Partial&lt;Type&gt;</code> 用来创建一个类型，把传入的对象所有属性设置为可选</li>\n<li><code>Readonly&lt;Type&gt;</code>用来创建一个类型，把传入的对象所有属性设置为只读</li>\n<li><code>Pick&lt;Type,Keys&gt;</code>用来创建一个类型，从传入对象中选择其中几个属性</li>\n<li><code>Record&lt;Keys,Type&gt;</code>用来创建一个类型，把属性设置为Key，类型设置为Type</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-4-索引签名类型\"><a href=\"#3-4-索引签名类型\" class=\"headerlink\" title=\"3.4 索引签名类型\"></a>3.4 索引签名类型</h4><p>当无法确定对象的属性时，需要用到索引签名类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Object</span> &#123;</span><br><span class=\"line\">  [<span class=\"attr\">key</span>: <span class=\"built_in\">string</span>]: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">obj</span>: <span class=\"title class_\">Object</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">height</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-5-映射类型\"><a href=\"#3-5-映射类型\" class=\"headerlink\" title=\"3.5 映射类型\"></a>3.5 映射类型</h4><p>基于旧类型创建新类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">PropKey</span> = <span class=\"string\">&quot;x&quot;</span> | <span class=\"string\">&quot;y&quot;</span> | <span class=\"string\">&quot;z&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type1</span> = &#123; <span class=\"attr\">x</span>: <span class=\"built_in\">number</span>; <span class=\"attr\">y</span>: <span class=\"built_in\">number</span>; <span class=\"attr\">z</span>: <span class=\"built_in\">string</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type2</span> = &#123; [P <span class=\"keyword\">in</span> <span class=\"title class_\">PropKey</span>]: <span class=\"built_in\">number</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type3</span> = &#123; [p <span class=\"keyword\">in</span> keyof <span class=\"title class_\">Type1</span>]: <span class=\"built_in\">string</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type4</span> = <span class=\"title class_\">Type1</span>[<span class=\"string\">&#x27;x&#x27;</span>];            <span class=\"comment\">//索引查询类型，获取特定的键对应值的类型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type5</span> = <span class=\"title class_\">Type1</span>[<span class=\"string\">&#x27;x&#x27;</span>|<span class=\"string\">&#x27;y&#x27;</span>|<span class=\"string\">&#x27;z&#x27;</span>];    <span class=\"comment\">//获取三个值的联合类型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type6</span> = <span class=\"title class_\">Type1</span>[keyof <span class=\"title class_\">Type1</span>];    <span class=\"comment\">//获取Type1所有属性的联合类型</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-6-类型声明文件\"><a href=\"#3-6-类型声明文件\" class=\"headerlink\" title=\"3.6 类型声明文件\"></a>3.6 类型声明文件</h4><ul>\n<li><code>.ts</code>文件<ol>\n<li>既包含类型信息又包含可执行文件代码</li>\n<li>可以编译为js文件</li>\n</ol>\n</li>\n<li><code>.d.ts</code>文件<ol>\n<li>只包含类型信息的类型声明文件</li>\n<li>不会生成js文件</li>\n</ol>\n</li>\n<li>内置类型声明文件</li>\n<li>第三方库的类型声明文件</li>\n<li>自己实现类型声明文件<ul>\n<li>给JS文件声明类型，方便给TS文件使用<ul>\n<li>使用declare关键字，声明js与ts相同的数据类型</li>\n<li>声明文件的名字需要与js的名字相同</li>\n<li>用export导出声明后的数据类型</li>\n</ul>\n</li>\n<li>给TS文件声明类型，方便给其他TS文件使用</li>\n</ul>\n</li>\n</ul>\n","more":"<h1 id=\"TypeScript快速入门语法\"><a href=\"#TypeScript快速入门语法\" class=\"headerlink\" title=\"TypeScript快速入门语法\"></a>TypeScript快速入门语法</h1><h2 id=\"一、语法\"><a href=\"#一、语法\" class=\"headerlink\" title=\"一、语法\"></a>一、语法</h2><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><p>JS绝大部分都是类型错误，TS为JS添加类型支持。</p>\n<p>JS属于动态类型的编程语言，在执行期做类型检查。<br>TS属于静态类型的编程语言，可以提前在编写代码的同时发现代码的错误。</p>\n<p>Node.js和浏览器都只认识JS，不认识TS，需要先将TS代码转化为JS代码。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g typescript <span class=\"comment\"># 安装TS工具包，把TS文件解析成JS文件</span></span><br><span class=\"line\">tsc hello.ts</span><br><span class=\"line\">node hello.js </span><br></pre></td></tr></table></figure>\n\n<p>所有合法的JS代码都是TS代码</p>\n<blockquote>\n<p>新建ts文件</p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">a</span>:<span class=\"built_in\">number</span> = <span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装ts-node包，直接运行ts代码</span></span><br><span class=\"line\">npm i -g ts-node</span><br><span class=\"line\"><span class=\"comment\">#运行TS文件</span></span><br><span class=\"line\">ts-node hello.ts  </span><br></pre></td></tr></table></figure>\n<p>　　</p>\n<h3 id=\"2-基本数据类型\"><a href=\"#2-基本数据类型\" class=\"headerlink\" title=\"2.基本数据类型\"></a>2.基本数据类型</h3><h4 id=\"2-1-类型注解\"><a href=\"#2-1-类型注解\" class=\"headerlink\" title=\"2.1 类型注解\"></a>2.1 类型注解</h4><p>给变量一个限制类型，如果更换其他类型会报错</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">a</span>:<span class=\"built_in\">number</span> = <span class=\"number\">18</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-数据类型\"><a href=\"#2-2-数据类型\" class=\"headerlink\" title=\"2.2 数据类型\"></a>2.2 数据类型</h4><ol>\n<li><p>原始类型：<code>number</code>&#x2F;<code>string</code>&#x2F;<code>boolean</code>&#x2F;<code>null</code>&#x2F;<code>undefined</code>&#x2F;<code>symbol</code><br>为JS原来就有的类型</p>\n</li>\n<li><p>对象类型: object<br>在TS中更加细化</p>\n</li>\n</ol>\n<ul>\n<li><p>数组类型：</p>\n<ul>\n<li><code>let a: number[]=[1,2,3]</code></li>\n<li><code>let a: boolen[]=[true,false]</code></li>\n</ul>\n</li>\n<li><p>联合类型，由多个类型组成</p>\n<ul>\n<li><code>let a: (number | string)[]=[1,&#39;a&#39;,3]</code></li>\n</ul>\n</li>\n<li><p>类型别名，为复杂类型起别名</p>\n<ul>\n<li><code>type CustomArray = (number | string)[]</code></li>\n</ul>\n</li>\n<li><p>函数类型，指定参数类型和返回值类型</p>\n<ul>\n<li><code>function add(num1: number,num2: number): number&#123; return num1+num2 &#125;</code></li>\n<li><code>const add:(num1: number,num2: number)=&gt;number=(num1,num2)=&gt;&#123;return num1+num2&#125;</code></li>\n<li><code>function say(): void&#123; console.log(&#39;Hello&#39;) &#125;</code></li>\n<li><code>function mySile(start?:number):void&#123;&#125;</code> 可选参数，往后站</li>\n</ul>\n</li>\n<li><p>对象类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">person</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>:<span class=\"built_in\">string</span>[];</span><br><span class=\"line\">    <span class=\"title function_\">say</span>():<span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125; = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Max&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: [<span class=\"string\">&#x27;Sports&#x27;</span>, <span class=\"string\">&#x27;Cooking&#x27;</span>],</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>) &#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello!&quot;</span>);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接口</p>\n<ul>\n<li>当对象类型被多次使用，一般用接口来描述</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPerson</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: <span class=\"built_in\">string</span>[];</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">person</span>:<span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Max&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: [<span class=\"string\">&#x27;Sports&#x27;</span>, <span class=\"string\">&#x27;Cooking&#x27;</span>],</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>) &#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello!&quot;</span>);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>接口<code>interface</code>与类型别名<code>type</code>的区别</p>\n<ul>\n<li>接口只能为对象指定类型，类型别名可以指定任何类型</li>\n</ul>\n</li>\n<li><p>接口继承</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IAnimal</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPerson</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IAnimal</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: <span class=\"built_in\">string</span>[];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">person</span>:<span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Max&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">    <span class=\"attr\">hobbies</span>: [<span class=\"string\">&#x27;Sports&#x27;</span>, <span class=\"string\">&#x27;Cooking&#x27;</span>],</span><br><span class=\"line\">    <span class=\"title function_\">say</span>(<span class=\"params\"></span>) &#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello!&quot;</span>);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>元组（Tuple）</p>\n<ul>\n<li>特定类型的数组：确切的知道要包含的元素以及特定索引对应的类型。</li>\n<li><code>let position:[number,number] = [39,40]</code></li>\n</ul>\n</li>\n<li><p>类型推论</p>\n<ul>\n<li>TS自带类型推论，在声明变量和初始化值时，会自动对变量进行类型推断</li>\n</ul>\n</li>\n<li><p>类型断言</p>\n<ul>\n<li>利用<code>as</code>指定一个更加具体的类型</li>\n</ul>\n</li>\n<li><p>字面量类型</p>\n<ul>\n<li><code>const a = &#39;up&#39;</code>，a的类型就是<code>up</code></li>\n</ul>\n</li>\n<li><p>枚举类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">Dirction</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Up</span>,</span><br><span class=\"line\">  <span class=\"title class_\">Down</span>,</span><br><span class=\"line\">  <span class=\"title class_\">Left</span>,</span><br><span class=\"line\">  <span class=\"title class_\">Right</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Dirction</span>.<span class=\"property\">up</span>  <span class=\"comment\">//使用枚举类型,枚举数值默认从0开始自增</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>any类型</p>\n<ul>\n<li><code>typeof</code>获取变量类型，也可以对类型进行查询</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-高级数据类型\"><a href=\"#3-高级数据类型\" class=\"headerlink\" title=\"3.高级数据类型\"></a>3.高级数据类型</h3><h4 id=\"3-1-class类型\"><a href=\"#3-1-class类型\" class=\"headerlink\" title=\"3.1 class类型\"></a>3.1 class类型</h4><ul>\n<li>初始化</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  sex = <span class=\"string\">&#x27;man&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>构造函数</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"><span class=\"attr\">age</span>:<span class=\"built_in\">number</span>,<span class=\"attr\">sex</span>:<span class=\"built_in\">string</span></span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">age</span>=age;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">sex</span>=sex;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>继承</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">move</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;roaming the earch...&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">say</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;wang wang&quot;</span>);</span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> dog = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>();</span><br><span class=\"line\">dog.<span class=\"title function_\">say</span>();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>实现</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Hello</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Hello</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">say</span>(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hello&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">p.<span class=\"title function_\">say</span>();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>可见性</p>\n<ul>\n<li>public 公有的（默认）</li>\n<li>protected 受保护的：类与子类中（非实例对象）可见</li>\n<li>private 私有的：只在当前类可见</li>\n</ul>\n</li>\n<li><p>readonly 修饰符</p>\n<ul>\n<li>防止构造函数外对属性赋值，但必须手动进行类型注解，否则就为字面量类型</li>\n</ul>\n</li>\n<li><p>类型兼容</p>\n<ul>\n<li>结构化的类型系统：当两个类的结构相同，可以互相实现</li>\n<li>接口之间也有兼容性</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">z</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point2</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">p</span>:<span class=\"title class_\">Point2</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Point</span>(); <span class=\"comment\">// 不能反过来，Point &gt; Point2</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>函数之间的兼容性：1. 参数个数 2. 参数类型 3. 返回值类型</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-2-交叉类型\"><a href=\"#3-2-交叉类型\" class=\"headerlink\" title=\"3.2 交叉类型\"></a>3.2 交叉类型</h4><p>功能类似继承</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Book</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">PersonAndBook</span> = <span class=\"title class_\">Person</span> &amp; <span class=\"title class_\">Book</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">personAndBook</span>: <span class=\"title class_\">PersonAndBook</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;John&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">30</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Hello World&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>与继承额区别：</p>\n<ol>\n<li>当出现同名属性和方法时，继承会报错</li>\n</ol>\n<h4 id=\"3-3-泛型\"><a href=\"#3-3-泛型\" class=\"headerlink\" title=\"3.3 泛型\"></a>3.3 泛型</h4><p>在保证类型安全的情况下，让函数与多种类型一起工作，从而实现复用</p>\n<ul>\n<li>创建泛型函数</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> id&lt;<span class=\"title class_\">Type</span>&gt;(<span class=\"attr\">value</span>: <span class=\"title class_\">Type</span>):<span class=\"title class_\">Type</span>&#123;   <span class=\"comment\">//Type可以为任意字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> num = id&lt;<span class=\"built_in\">number</span>&gt;(<span class=\"number\">10</span>);  <span class=\"comment\">//调用函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"title function_\">id</span>(<span class=\"number\">10</span>);          <span class=\"comment\">//TS类型参数推断，简化写法</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>泛型约束</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> id&lt;<span class=\"title class_\">Type</span>&gt;(<span class=\"attr\">value</span>: <span class=\"title class_\">Type</span>[]):<span class=\"title class_\">Type</span>[]&#123;  <span class=\"comment\">//约束为数组</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//利用接口类型兼容性来作泛型约束</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">ILength</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">length</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> id&lt;<span class=\"title class_\">Type</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ILength</span>&gt;(<span class=\"attr\">value</span>: <span class=\"title class_\">Type</span>[]):<span class=\"title class_\">Type</span>[]&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value.<span class=\"property\">length</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//泛型可以有多个，而且泛型之间还可以有类型约束</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> grep&lt;<span class=\"title class_\">Type</span>, <span class=\"title class_\">Key</span> <span class=\"keyword\">extends</span> keyof <span class=\"title class_\">Type</span>&gt;(<span class=\"attr\">obj</span>: <span class=\"title class_\">Type</span>, <span class=\"attr\">key</span>: <span class=\"title class_\">Key</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">grep</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;John&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">30</span> &#125;, <span class=\"string\">&#x27;name&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>泛型接口</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IAnimal</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: T;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">animal</span>: <span class=\"title class_\">IAnimal</span>&lt;<span class=\"built_in\">string</span>&gt; = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;cat&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>泛型类</p>\n<ul>\n<li>类似泛型接口</li>\n</ul>\n</li>\n<li><p>泛型工具</p>\n<ul>\n<li><code>Partial&lt;Type&gt;</code> 用来创建一个类型，把传入的对象所有属性设置为可选</li>\n<li><code>Readonly&lt;Type&gt;</code>用来创建一个类型，把传入的对象所有属性设置为只读</li>\n<li><code>Pick&lt;Type,Keys&gt;</code>用来创建一个类型，从传入对象中选择其中几个属性</li>\n<li><code>Record&lt;Keys,Type&gt;</code>用来创建一个类型，把属性设置为Key，类型设置为Type</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-4-索引签名类型\"><a href=\"#3-4-索引签名类型\" class=\"headerlink\" title=\"3.4 索引签名类型\"></a>3.4 索引签名类型</h4><p>当无法确定对象的属性时，需要用到索引签名类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Object</span> &#123;</span><br><span class=\"line\">  [<span class=\"attr\">key</span>: <span class=\"built_in\">string</span>]: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">obj</span>: <span class=\"title class_\">Object</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">height</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-5-映射类型\"><a href=\"#3-5-映射类型\" class=\"headerlink\" title=\"3.5 映射类型\"></a>3.5 映射类型</h4><p>基于旧类型创建新类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">PropKey</span> = <span class=\"string\">&quot;x&quot;</span> | <span class=\"string\">&quot;y&quot;</span> | <span class=\"string\">&quot;z&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type1</span> = &#123; <span class=\"attr\">x</span>: <span class=\"built_in\">number</span>; <span class=\"attr\">y</span>: <span class=\"built_in\">number</span>; <span class=\"attr\">z</span>: <span class=\"built_in\">string</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type2</span> = &#123; [P <span class=\"keyword\">in</span> <span class=\"title class_\">PropKey</span>]: <span class=\"built_in\">number</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type3</span> = &#123; [p <span class=\"keyword\">in</span> keyof <span class=\"title class_\">Type1</span>]: <span class=\"built_in\">string</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type4</span> = <span class=\"title class_\">Type1</span>[<span class=\"string\">&#x27;x&#x27;</span>];            <span class=\"comment\">//索引查询类型，获取特定的键对应值的类型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type5</span> = <span class=\"title class_\">Type1</span>[<span class=\"string\">&#x27;x&#x27;</span>|<span class=\"string\">&#x27;y&#x27;</span>|<span class=\"string\">&#x27;z&#x27;</span>];    <span class=\"comment\">//获取三个值的联合类型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Type6</span> = <span class=\"title class_\">Type1</span>[keyof <span class=\"title class_\">Type1</span>];    <span class=\"comment\">//获取Type1所有属性的联合类型</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-6-类型声明文件\"><a href=\"#3-6-类型声明文件\" class=\"headerlink\" title=\"3.6 类型声明文件\"></a>3.6 类型声明文件</h4><ul>\n<li><code>.ts</code>文件<ol>\n<li>既包含类型信息又包含可执行文件代码</li>\n<li>可以编译为js文件</li>\n</ol>\n</li>\n<li><code>.d.ts</code>文件<ol>\n<li>只包含类型信息的类型声明文件</li>\n<li>不会生成js文件</li>\n</ol>\n</li>\n<li>内置类型声明文件</li>\n<li>第三方库的类型声明文件</li>\n<li>自己实现类型声明文件<ul>\n<li>给JS文件声明类型，方便给TS文件使用<ul>\n<li>使用declare关键字，声明js与ts相同的数据类型</li>\n<li>声明文件的名字需要与js的名字相同</li>\n<li>用export导出声明后的数据类型</li>\n</ul>\n</li>\n<li>给TS文件声明类型，方便给其他TS文件使用</li>\n</ul>\n</li>\n</ul>\n"},{"title":"QSS快速入门语法","img":"https://images.pexels.com/photos/11582120/pexels-photo-11582120.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500","excerpt":"Qt的桌面开发","top":false,"toc":true,"tocOpen":true,"onlyTitle":false,"comments":1,"share":true,"copyright":true,"donate":false,"prismjs":"default","mathjax":true,"date":"2022-05-20T17:59:22.000Z","_content":"\n# QSS快速入门语法\n\n## 一、基础语法\n\n> 版本 Qt6.3 官网文档：<https://doc.qt.io/qt-6/stylesheet.html>\n\n### 1.选择器\n\n> 基本使用\n\n```css\n选择器 {\n  属性: 属性值;\n}\n```\n\n> 选择器的种类\n\n| 选择器     | 实例                        | 作用                                                                                                                                                                                                                                                                                        |\n| ---------- | --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 通配选择器 | `*`                         | 匹配所有组件                                                                                                                                                                                                                                                                                |\n| 类型选择器 | `QPushButton`               | 匹配[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html) 及其子类的实例                                                                                                                                                                                                                   |\n| 属性选择器 | `QPushButton[flat=\"false\"]` | 匹配非`flat`的`QPushButton`实例。您可以使用此选择器测试任何支持`QVariant::toString()`的Qt`property`(有关详细信息，请参阅`toString()`函数文档)。此外，对于类的名称，还支持特殊的`class`属性。此选择器也可用于测试动态特性。有关使用动态特性进行自定义的详细信息。除了`=`，您还可以使用`~=`。 |\n| 类选择器   | `.QPushButton`              | 匹配[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html)的实例，但不匹配其子类的实例。 这相当于 `*[class~=\"QPushButton\"]`                                                                                                                                                                 |\n| ID选择器   | `QPushButton#okButton`      | 匹配对象名称为`okButton`的所有[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html)实例。                                                                                                                                                                                                  |\n| 后代选择器 | `QDialog QPushButton`       | 匹配[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html)的所有实例，这些实例是[QDialog](https://doc.qt.io/qt-6/qdialog.html)的子代（子代、孙代等）                                                                                                                                        |\n| 子代选择器 | `QDialog > QPushButton`     | 匹配作为[QDialog](https://doc.qt.io/qt-6/qdialog.html)直接子级的[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html) 的所有实例                                                                                                                                                           |\n\n> 访问子控件\n\n对于复杂的小部件的样式，有必要访问小部件的子控件，例如 QComboBox 的下拉按钮或 QSpinBox 的上下箭头。选择器可能包含子角色，使其能够将规则的应用限制到特定的小部件子角色。例如：\n\n```css\nQComboBox::drop-down { image: url(dropdown.png) }\n```\n\n### 2.伪状态\n\n选择器可能包含伪状态，表示根据小部件的状态限制规则的应用。伪状态显示在选择器的末尾，中间有冒号（：）\n\n```css\nQPushButton:hover { color: white }\n```\n\n伪状态可以使用感叹号运算符求反。\n\n```css\nQRadioButton:!hover { color: red }\n```\n\n伪状态可以增加约束，在这种情况下，类似逻辑AND。下面例子表示鼠标悬停在被选中的QCheckBox上\n\n```css\nQCheckBox:hover:checked { color: white }\n\nQPushButton:hover:!pressed { color: blue; }\n```\n\n如果需要，可以使用逗号运算符表示逻辑OR\n\n```css\nQCheckBox:hover, QCheckBox:checked { color: white }\n```\n\n伪状态可以与子控件一起出现。\n\n```css\nQComboBox::drop-down:hover { image: url(dropdown_bright.png) }\n```\n\n**样式冲突问题**：\n\n选择器谁指定的控件更具体按照谁的标准\n\n**样式继承问题**：\n\n控件并不会自动的继承父类的样式，必须显式指定控件样式\n","source":"_posts/计算机/桌面开发/QSS快速入门语法.md","raw":"---\ntitle: QSS快速入门语法\nimg: https://images.pexels.com/photos/11582120/pexels-photo-11582120.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\nexcerpt: Qt的桌面开发\ntop: false\ntoc: true\ntocOpen: true\nonlyTitle: false\ncomments: true\nshare: true\ncopyright: true\ndonate: false\nprismjs: default\ncategories: 计算机\ntags: [GUI开发,QT6,跨平台桌面开发,QSS]\nmathjax: true\ndate: 2022-05-21 01:59:22\n---\n\n# QSS快速入门语法\n\n## 一、基础语法\n\n> 版本 Qt6.3 官网文档：<https://doc.qt.io/qt-6/stylesheet.html>\n\n### 1.选择器\n\n> 基本使用\n\n```css\n选择器 {\n  属性: 属性值;\n}\n```\n\n> 选择器的种类\n\n| 选择器     | 实例                        | 作用                                                                                                                                                                                                                                                                                        |\n| ---------- | --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 通配选择器 | `*`                         | 匹配所有组件                                                                                                                                                                                                                                                                                |\n| 类型选择器 | `QPushButton`               | 匹配[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html) 及其子类的实例                                                                                                                                                                                                                   |\n| 属性选择器 | `QPushButton[flat=\"false\"]` | 匹配非`flat`的`QPushButton`实例。您可以使用此选择器测试任何支持`QVariant::toString()`的Qt`property`(有关详细信息，请参阅`toString()`函数文档)。此外，对于类的名称，还支持特殊的`class`属性。此选择器也可用于测试动态特性。有关使用动态特性进行自定义的详细信息。除了`=`，您还可以使用`~=`。 |\n| 类选择器   | `.QPushButton`              | 匹配[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html)的实例，但不匹配其子类的实例。 这相当于 `*[class~=\"QPushButton\"]`                                                                                                                                                                 |\n| ID选择器   | `QPushButton#okButton`      | 匹配对象名称为`okButton`的所有[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html)实例。                                                                                                                                                                                                  |\n| 后代选择器 | `QDialog QPushButton`       | 匹配[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html)的所有实例，这些实例是[QDialog](https://doc.qt.io/qt-6/qdialog.html)的子代（子代、孙代等）                                                                                                                                        |\n| 子代选择器 | `QDialog > QPushButton`     | 匹配作为[QDialog](https://doc.qt.io/qt-6/qdialog.html)直接子级的[QPushButton](https://doc.qt.io/qt-6/qpushbutton.html) 的所有实例                                                                                                                                                           |\n\n> 访问子控件\n\n对于复杂的小部件的样式，有必要访问小部件的子控件，例如 QComboBox 的下拉按钮或 QSpinBox 的上下箭头。选择器可能包含子角色，使其能够将规则的应用限制到特定的小部件子角色。例如：\n\n```css\nQComboBox::drop-down { image: url(dropdown.png) }\n```\n\n### 2.伪状态\n\n选择器可能包含伪状态，表示根据小部件的状态限制规则的应用。伪状态显示在选择器的末尾，中间有冒号（：）\n\n```css\nQPushButton:hover { color: white }\n```\n\n伪状态可以使用感叹号运算符求反。\n\n```css\nQRadioButton:!hover { color: red }\n```\n\n伪状态可以增加约束，在这种情况下，类似逻辑AND。下面例子表示鼠标悬停在被选中的QCheckBox上\n\n```css\nQCheckBox:hover:checked { color: white }\n\nQPushButton:hover:!pressed { color: blue; }\n```\n\n如果需要，可以使用逗号运算符表示逻辑OR\n\n```css\nQCheckBox:hover, QCheckBox:checked { color: white }\n```\n\n伪状态可以与子控件一起出现。\n\n```css\nQComboBox::drop-down:hover { image: url(dropdown_bright.png) }\n```\n\n**样式冲突问题**：\n\n选择器谁指定的控件更具体按照谁的标准\n\n**样式继承问题**：\n\n控件并不会自动的继承父类的样式，必须显式指定控件样式\n","slug":"计算机/桌面开发/QSS快速入门语法","published":1,"updated":"2023-12-09T07:05:18.479Z","layout":"post","photos":[],"_id":"cm1z7giq8003adwvx22q10ye7","content":"<h1 id=\"QSS快速入门语法\"><a href=\"#QSS快速入门语法\" class=\"headerlink\" title=\"QSS快速入门语法\"></a>QSS快速入门语法</h1><h2 id=\"一、基础语法\"><a href=\"#一、基础语法\" class=\"headerlink\" title=\"一、基础语法\"></a>一、基础语法</h2><blockquote>\n<p>版本 Qt6.3 官网文档：<a href=\"https://doc.qt.io/qt-6/stylesheet.html\">https://doc.qt.io/qt-6/stylesheet.html</a></p>\n</blockquote>\n<h3 id=\"1-选择器\"><a href=\"#1-选择器\" class=\"headerlink\" title=\"1.选择器\"></a>1.选择器</h3><blockquote>\n<p>基本使用</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选择器 &#123;</span><br><span class=\"line\">  属性: 属性值;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>选择器的种类</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>实例</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>通配选择器</td>\n<td><code>*</code></td>\n<td>匹配所有组件</td>\n</tr>\n<tr>\n<td>类型选择器</td>\n<td><code>QPushButton</code></td>\n<td>匹配<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a> 及其子类的实例</td>\n</tr>\n<tr>\n<td>属性选择器</td>\n<td><code>QPushButton[flat=&quot;false&quot;]</code></td>\n<td>匹配非<code>flat</code>的<code>QPushButton</code>实例。您可以使用此选择器测试任何支持<code>QVariant::toString()</code>的Qt<code>property</code>(有关详细信息，请参阅<code>toString()</code>函数文档)。此外，对于类的名称，还支持特殊的<code>class</code>属性。此选择器也可用于测试动态特性。有关使用动态特性进行自定义的详细信息。除了<code>=</code>，您还可以使用<code>~=</code>。</td>\n</tr>\n<tr>\n<td>类选择器</td>\n<td><code>.QPushButton</code></td>\n<td>匹配<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a>的实例，但不匹配其子类的实例。 这相当于 <code>*[class~=&quot;QPushButton&quot;]</code></td>\n</tr>\n<tr>\n<td>ID选择器</td>\n<td><code>QPushButton#okButton</code></td>\n<td>匹配对象名称为<code>okButton</code>的所有<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a>实例。</td>\n</tr>\n<tr>\n<td>后代选择器</td>\n<td><code>QDialog QPushButton</code></td>\n<td>匹配<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a>的所有实例，这些实例是<a href=\"https://doc.qt.io/qt-6/qdialog.html\">QDialog</a>的子代（子代、孙代等）</td>\n</tr>\n<tr>\n<td>子代选择器</td>\n<td><code>QDialog &gt; QPushButton</code></td>\n<td>匹配作为<a href=\"https://doc.qt.io/qt-6/qdialog.html\">QDialog</a>直接子级的<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a> 的所有实例</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>访问子控件</p>\n</blockquote>\n<p>对于复杂的小部件的样式，有必要访问小部件的子控件，例如 QComboBox 的下拉按钮或 QSpinBox 的上下箭头。选择器可能包含子角色，使其能够将规则的应用限制到特定的小部件子角色。例如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QComboBox::drop-down &#123; <span class=\"selector-tag\">image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">dropdown.png</span>) &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-伪状态\"><a href=\"#2-伪状态\" class=\"headerlink\" title=\"2.伪状态\"></a>2.伪状态</h3><p>选择器可能包含伪状态，表示根据小部件的状态限制规则的应用。伪状态显示在选择器的末尾，中间有冒号（：）</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QPushButton<span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">color</span>: white &#125;</span><br></pre></td></tr></table></figure>\n\n<p>伪状态可以使用感叹号运算符求反。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QRadioButton:!hover &#123; <span class=\"attribute\">color</span>: red &#125;</span><br></pre></td></tr></table></figure>\n\n<p>伪状态可以增加约束，在这种情况下，类似逻辑AND。下面例子表示鼠标悬停在被选中的QCheckBox上</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QCheckBox<span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:checked</span> &#123; <span class=\"attribute\">color</span>: white &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">QPushButton<span class=\"selector-pseudo\">:hover</span>:!pressed &#123; <span class=\"attribute\">color</span>: blue; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果需要，可以使用逗号运算符表示逻辑OR</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QCheckBox<span class=\"selector-pseudo\">:hover</span>, QCheckBox<span class=\"selector-pseudo\">:checked</span> &#123; <span class=\"attribute\">color</span>: white &#125;</span><br></pre></td></tr></table></figure>\n\n<p>伪状态可以与子控件一起出现。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QComboBox::drop-down:hover &#123; <span class=\"selector-tag\">image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">dropdown_bright.png</span>) &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>样式冲突问题</strong>：</p>\n<p>选择器谁指定的控件更具体按照谁的标准</p>\n<p><strong>样式继承问题</strong>：</p>\n<p>控件并不会自动的继承父类的样式，必须显式指定控件样式</p>\n","more":"<h1 id=\"QSS快速入门语法\"><a href=\"#QSS快速入门语法\" class=\"headerlink\" title=\"QSS快速入门语法\"></a>QSS快速入门语法</h1><h2 id=\"一、基础语法\"><a href=\"#一、基础语法\" class=\"headerlink\" title=\"一、基础语法\"></a>一、基础语法</h2><blockquote>\n<p>版本 Qt6.3 官网文档：<a href=\"https://doc.qt.io/qt-6/stylesheet.html\">https://doc.qt.io/qt-6/stylesheet.html</a></p>\n</blockquote>\n<h3 id=\"1-选择器\"><a href=\"#1-选择器\" class=\"headerlink\" title=\"1.选择器\"></a>1.选择器</h3><blockquote>\n<p>基本使用</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选择器 &#123;</span><br><span class=\"line\">  属性: 属性值;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>选择器的种类</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>实例</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>通配选择器</td>\n<td><code>*</code></td>\n<td>匹配所有组件</td>\n</tr>\n<tr>\n<td>类型选择器</td>\n<td><code>QPushButton</code></td>\n<td>匹配<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a> 及其子类的实例</td>\n</tr>\n<tr>\n<td>属性选择器</td>\n<td><code>QPushButton[flat=&quot;false&quot;]</code></td>\n<td>匹配非<code>flat</code>的<code>QPushButton</code>实例。您可以使用此选择器测试任何支持<code>QVariant::toString()</code>的Qt<code>property</code>(有关详细信息，请参阅<code>toString()</code>函数文档)。此外，对于类的名称，还支持特殊的<code>class</code>属性。此选择器也可用于测试动态特性。有关使用动态特性进行自定义的详细信息。除了<code>=</code>，您还可以使用<code>~=</code>。</td>\n</tr>\n<tr>\n<td>类选择器</td>\n<td><code>.QPushButton</code></td>\n<td>匹配<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a>的实例，但不匹配其子类的实例。 这相当于 <code>*[class~=&quot;QPushButton&quot;]</code></td>\n</tr>\n<tr>\n<td>ID选择器</td>\n<td><code>QPushButton#okButton</code></td>\n<td>匹配对象名称为<code>okButton</code>的所有<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a>实例。</td>\n</tr>\n<tr>\n<td>后代选择器</td>\n<td><code>QDialog QPushButton</code></td>\n<td>匹配<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a>的所有实例，这些实例是<a href=\"https://doc.qt.io/qt-6/qdialog.html\">QDialog</a>的子代（子代、孙代等）</td>\n</tr>\n<tr>\n<td>子代选择器</td>\n<td><code>QDialog &gt; QPushButton</code></td>\n<td>匹配作为<a href=\"https://doc.qt.io/qt-6/qdialog.html\">QDialog</a>直接子级的<a href=\"https://doc.qt.io/qt-6/qpushbutton.html\">QPushButton</a> 的所有实例</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>访问子控件</p>\n</blockquote>\n<p>对于复杂的小部件的样式，有必要访问小部件的子控件，例如 QComboBox 的下拉按钮或 QSpinBox 的上下箭头。选择器可能包含子角色，使其能够将规则的应用限制到特定的小部件子角色。例如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QComboBox::drop-down &#123; <span class=\"selector-tag\">image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">dropdown.png</span>) &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-伪状态\"><a href=\"#2-伪状态\" class=\"headerlink\" title=\"2.伪状态\"></a>2.伪状态</h3><p>选择器可能包含伪状态，表示根据小部件的状态限制规则的应用。伪状态显示在选择器的末尾，中间有冒号（：）</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QPushButton<span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">color</span>: white &#125;</span><br></pre></td></tr></table></figure>\n\n<p>伪状态可以使用感叹号运算符求反。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QRadioButton:!hover &#123; <span class=\"attribute\">color</span>: red &#125;</span><br></pre></td></tr></table></figure>\n\n<p>伪状态可以增加约束，在这种情况下，类似逻辑AND。下面例子表示鼠标悬停在被选中的QCheckBox上</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QCheckBox<span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:checked</span> &#123; <span class=\"attribute\">color</span>: white &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">QPushButton<span class=\"selector-pseudo\">:hover</span>:!pressed &#123; <span class=\"attribute\">color</span>: blue; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果需要，可以使用逗号运算符表示逻辑OR</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QCheckBox<span class=\"selector-pseudo\">:hover</span>, QCheckBox<span class=\"selector-pseudo\">:checked</span> &#123; <span class=\"attribute\">color</span>: white &#125;</span><br></pre></td></tr></table></figure>\n\n<p>伪状态可以与子控件一起出现。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QComboBox::drop-down:hover &#123; <span class=\"selector-tag\">image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">dropdown_bright.png</span>) &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>样式冲突问题</strong>：</p>\n<p>选择器谁指定的控件更具体按照谁的标准</p>\n<p><strong>样式继承问题</strong>：</p>\n<p>控件并不会自动的继承父类的样式，必须显式指定控件样式</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm1z7gip30001dwvx0mpc4m73","category_id":"cm1z7gipa0004dwvx2duz409r","_id":"cm1z7gipi000fdwvxhazt9xaz"},{"post_id":"cm1z7gip70003dwvx8ga51wh0","category_id":"cm1z7gipf000bdwvx527w6pgp","_id":"cm1z7gipl000kdwvxebym5hr1"},{"post_id":"cm1z7gipj000idwvxhtcf5ew7","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gipo000qdwvxgay398mh"},{"post_id":"cm1z7gipc0007dwvx005rbugc","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gipq000vdwvxhcsd3s85"},{"post_id":"cm1z7gipk000jdwvx14j5dnxk","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gipq000xdwvx0m3032dg"},{"post_id":"cm1z7gipm000ndwvxgvxdgtvi","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gipr000zdwvx3quxhoeq"},{"post_id":"cm1z7gipd0009dwvxdxxl8ob1","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gipr0011dwvx4jsw5tzn"},{"post_id":"cm1z7gipo000pdwvx3ekugppc","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gipr0013dwvxgs2x8s57"},{"post_id":"cm1z7gipp000udwvx92smf6ie","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gips0015dwvxe032gc7a"},{"post_id":"cm1z7gipe000adwvxau9ce15l","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gips0017dwvxa56r2yue"},{"post_id":"cm1z7gipg000ddwvx738o8txq","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gips001adwvxdajx54zy"},{"post_id":"cm1z7giph000edwvx6foi6zdu","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7gips001cdwvxc5xdfcic"},{"post_id":"cm1z7giq60037dwvxhblccf1k","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7giq8003bdwvxdh4y73zs"},{"post_id":"cm1z7giq60038dwvx3jr88fbq","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7giq9003cdwvx9dpp6cdc"},{"post_id":"cm1z7giq8003adwvx22q10ye7","category_id":"cm1z7gipi000gdwvx3pda2nqn","_id":"cm1z7giq9003edwvx3evg2za1"}],"PostTag":[{"post_id":"cm1z7gip30001dwvx0mpc4m73","tag_id":"cm1z7gipb0005dwvxddq54lpj","_id":"cm1z7gipo000odwvx178igqfk"},{"post_id":"cm1z7gip30001dwvx0mpc4m73","tag_id":"cm1z7gipg000cdwvx1z4yb3gn","_id":"cm1z7gipo000rdwvx5z60gpta"},{"post_id":"cm1z7gip30001dwvx0mpc4m73","tag_id":"cm1z7gipi000hdwvxdtp5f1yr","_id":"cm1z7gipq000wdwvx0kljfsdk"},{"post_id":"cm1z7gip70003dwvx8ga51wh0","tag_id":"cm1z7gipl000mdwvx2b5q80cf","_id":"cm1z7gips0016dwvx8z9e5g8r"},{"post_id":"cm1z7gip70003dwvx8ga51wh0","tag_id":"cm1z7gipp000tdwvx9x327r0a","_id":"cm1z7gips0018dwvxes7chd8q"},{"post_id":"cm1z7gip70003dwvx8ga51wh0","tag_id":"cm1z7gipr0010dwvx3lduet5j","_id":"cm1z7gips001bdwvxbedlaona"},{"post_id":"cm1z7gipc0007dwvx005rbugc","tag_id":"cm1z7gipr0014dwvx8geu7oln","_id":"cm1z7gipt001fdwvx4vtj012r"},{"post_id":"cm1z7gipc0007dwvx005rbugc","tag_id":"cm1z7gips0019dwvx6hmggwtl","_id":"cm1z7gipt001gdwvx361a8uz7"},{"post_id":"cm1z7gipc0007dwvx005rbugc","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7gipu001idwvx0s4x1nwl"},{"post_id":"cm1z7gipd0009dwvxdxxl8ob1","tag_id":"cm1z7gipt001edwvxbrel8y5l","_id":"cm1z7gipv001ndwvxgnq4ax22"},{"post_id":"cm1z7gipd0009dwvxdxxl8ob1","tag_id":"cm1z7gipu001hdwvx31c6cjj8","_id":"cm1z7gipv001odwvxcxuhelk3"},{"post_id":"cm1z7gipd0009dwvxdxxl8ob1","tag_id":"cm1z7gipu001jdwvxbzzj6po5","_id":"cm1z7gipv001qdwvx80yyc1dx"},{"post_id":"cm1z7gipd0009dwvxdxxl8ob1","tag_id":"cm1z7gipu001kdwvx8lln1tya","_id":"cm1z7gipv001rdwvx3uj0bffi"},{"post_id":"cm1z7gipd0009dwvxdxxl8ob1","tag_id":"cm1z7gipu001ldwvxcfcmecez","_id":"cm1z7gipv001tdwvxg041e0sa"},{"post_id":"cm1z7gipe000adwvxau9ce15l","tag_id":"cm1z7gipv001mdwvxaw9ygyw4","_id":"cm1z7gipw001vdwvx6jdf7s9r"},{"post_id":"cm1z7gipe000adwvxau9ce15l","tag_id":"cm1z7gipv001pdwvx4nwb8bt0","_id":"cm1z7gipw001wdwvx8d6aam7e"},{"post_id":"cm1z7gipe000adwvxau9ce15l","tag_id":"cm1z7gipv001sdwvx47ed9az0","_id":"cm1z7gipw001ydwvxc5pwdx06"},{"post_id":"cm1z7gipg000ddwvx738o8txq","tag_id":"cm1z7gipw001udwvx963f0tg9","_id":"cm1z7gipx0022dwvx4g0ra3p9"},{"post_id":"cm1z7gipg000ddwvx738o8txq","tag_id":"cm1z7gipw001xdwvx6ng8biv2","_id":"cm1z7gipx0023dwvxbb3lam1f"},{"post_id":"cm1z7gipg000ddwvx738o8txq","tag_id":"cm1z7gipw001zdwvx8w6tgakb","_id":"cm1z7gipx0025dwvx91ma50dq"},{"post_id":"cm1z7gipg000ddwvx738o8txq","tag_id":"cm1z7gipw0020dwvxfiehem9h","_id":"cm1z7gipx0026dwvxeiom9gfh"},{"post_id":"cm1z7giph000edwvx6foi6zdu","tag_id":"cm1z7gipx0021dwvx2oub0i27","_id":"cm1z7gipy0029dwvx6hp5g5kn"},{"post_id":"cm1z7giph000edwvx6foi6zdu","tag_id":"cm1z7gipu001hdwvx31c6cjj8","_id":"cm1z7gipy002adwvxghuphb9o"},{"post_id":"cm1z7giph000edwvx6foi6zdu","tag_id":"cm1z7gipx0027dwvx810khxu7","_id":"cm1z7gipy002cdwvx4pee5ve2"},{"post_id":"cm1z7gipj000idwvxhtcf5ew7","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7gipz002fdwvxangd9dnt"},{"post_id":"cm1z7gipj000idwvxhtcf5ew7","tag_id":"cm1z7gipy002bdwvxcxqh6d3k","_id":"cm1z7gipz002gdwvxhc3ygsx7"},{"post_id":"cm1z7gipj000idwvxhtcf5ew7","tag_id":"cm1z7gipy002ddwvxe8mk1wbq","_id":"cm1z7gipz002idwvx7t956gw1"},{"post_id":"cm1z7gipk000jdwvx14j5dnxk","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7giq1002ldwvx9g555ej3"},{"post_id":"cm1z7gipk000jdwvx14j5dnxk","tag_id":"cm1z7gipx0027dwvx810khxu7","_id":"cm1z7giq1002mdwvxaviz7xq3"},{"post_id":"cm1z7gipk000jdwvx14j5dnxk","tag_id":"cm1z7gipz002jdwvx67nv5mkf","_id":"cm1z7giq1002odwvxgc6raqcg"},{"post_id":"cm1z7gipm000ndwvxgvxdgtvi","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7giq2002rdwvx53mo17va"},{"post_id":"cm1z7gipm000ndwvxgvxdgtvi","tag_id":"cm1z7giq1002ndwvxftj482gc","_id":"cm1z7giq2002sdwvxbkw50gsw"},{"post_id":"cm1z7gipm000ndwvxgvxdgtvi","tag_id":"cm1z7gipx0027dwvx810khxu7","_id":"cm1z7giq2002udwvx4qvn9gvb"},{"post_id":"cm1z7gipo000pdwvx3ekugppc","tag_id":"cm1z7giq2002qdwvx9ak53sve","_id":"cm1z7giq3002ydwvx0gq2hmyd"},{"post_id":"cm1z7gipo000pdwvx3ekugppc","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7giq3002zdwvx7f4o5jll"},{"post_id":"cm1z7gipo000pdwvx3ekugppc","tag_id":"cm1z7giq2002vdwvx8ed5fk8m","_id":"cm1z7giq40031dwvx0d91bcv2"},{"post_id":"cm1z7gipo000pdwvx3ekugppc","tag_id":"cm1z7giq1002ndwvxftj482gc","_id":"cm1z7giq40032dwvx7cfscmdh"},{"post_id":"cm1z7gipp000udwvx92smf6ie","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7giq40034dwvxhw9ug3wc"},{"post_id":"cm1z7gipp000udwvx92smf6ie","tag_id":"cm1z7gipx0027dwvx810khxu7","_id":"cm1z7giq40035dwvx0o6ngxs0"},{"post_id":"cm1z7gipp000udwvx92smf6ie","tag_id":"cm1z7giq40033dwvxf2jb6i5o","_id":"cm1z7giq40036dwvxf7j4gh1n"},{"post_id":"cm1z7giq60037dwvxhblccf1k","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7giqa003idwvxf6ku2p76"},{"post_id":"cm1z7giq60037dwvxhblccf1k","tag_id":"cm1z7giq70039dwvx3ty2guol","_id":"cm1z7giqa003jdwvx08vffym9"},{"post_id":"cm1z7giq60037dwvxhblccf1k","tag_id":"cm1z7giq9003ddwvx2rsu7r7x","_id":"cm1z7giqa003ldwvxblup12ew"},{"post_id":"cm1z7giq60037dwvxhblccf1k","tag_id":"cm1z7giq9003fdwvxhxs7dovv","_id":"cm1z7giqa003mdwvx9r5a00ag"},{"post_id":"cm1z7giq60037dwvxhblccf1k","tag_id":"cm1z7giq1002ndwvxftj482gc","_id":"cm1z7giqb003odwvx8l6p0546"},{"post_id":"cm1z7giq60037dwvxhblccf1k","tag_id":"cm1z7giq9003gdwvx7h9acb56","_id":"cm1z7giqb003pdwvxfb9k0vm4"},{"post_id":"cm1z7giq60038dwvx3jr88fbq","tag_id":"cm1z7gips001ddwvx6km11az9","_id":"cm1z7giqb003rdwvx19hf4mpm"},{"post_id":"cm1z7giq60038dwvx3jr88fbq","tag_id":"cm1z7giq9003gdwvx7h9acb56","_id":"cm1z7giqb003sdwvx27mw27z9"},{"post_id":"cm1z7giq60038dwvx3jr88fbq","tag_id":"cm1z7gipx0027dwvx810khxu7","_id":"cm1z7giqb003udwvxaolwhlpj"},{"post_id":"cm1z7giq8003adwvx22q10ye7","tag_id":"cm1z7giqa003kdwvxcy3fg3gz","_id":"cm1z7giqb003vdwvx5wjhhmq3"},{"post_id":"cm1z7giq8003adwvx22q10ye7","tag_id":"cm1z7giqb003ndwvxdcfyf1lb","_id":"cm1z7giqc003wdwvxcx4pab95"},{"post_id":"cm1z7giq8003adwvx22q10ye7","tag_id":"cm1z7giqb003qdwvxaxx2ezbp","_id":"cm1z7giqc003xdwvx7a1p1o51"},{"post_id":"cm1z7giq8003adwvx22q10ye7","tag_id":"cm1z7giqb003tdwvx4lj2bl0q","_id":"cm1z7giqc003ydwvx62qhgu1k"}],"Tag":[{"name":"LaTex","_id":"cm1z7gipb0005dwvxddq54lpj"},{"name":"数学","_id":"cm1z7gipg000cdwvx1z4yb3gn"},{"name":"数学公式符号","_id":"cm1z7gipi000hdwvxdtp5f1yr"},{"name":"基础学习","_id":"cm1z7gipl000mdwvx2b5q80cf"},{"name":"英语","_id":"cm1z7gipp000tdwvx9x327r0a"},{"name":"英语语法","_id":"cm1z7gipr0010dwvx3lduet5j"},{"name":"Hexo","_id":"cm1z7gipr0014dwvx8geu7oln"},{"name":"博客","_id":"cm1z7gips0019dwvx6hmggwtl"},{"name":"前端","_id":"cm1z7gips001ddwvx6km11az9"},{"name":"matlab","_id":"cm1z7gipt001edwvxbrel8y5l"},{"name":"编程语言","_id":"cm1z7gipu001hdwvx31c6cjj8"},{"name":"Linux","_id":"cm1z7gipu001jdwvxbzzj6po5"},{"name":"shell","_id":"cm1z7gipu001kdwvx8lln1tya"},{"name":"进度条","_id":"cm1z7gipu001ldwvxcfcmecez"},{"name":"软件破解","_id":"cm1z7gipv001mdwvxaw9ygyw4"},{"name":"MathType","_id":"cm1z7gipv001pdwvx4nwb8bt0"},{"name":"数学软件","_id":"cm1z7gipv001sdwvx47ed9az0"},{"name":"树莓派","_id":"cm1z7gipw001udwvx963f0tg9"},{"name":"MTI","_id":"cm1z7gipw001xdwvx6ng8biv2"},{"name":"ubuntu","_id":"cm1z7gipw001zdwvx8w6tgakb"},{"name":"ros","_id":"cm1z7gipw0020dwvxfiehem9h"},{"name":"Python","_id":"cm1z7gipx0021dwvx2oub0i27"},{"name":"编程语法","_id":"cm1z7gipx0027dwvx810khxu7"},{"name":"Ajax","_id":"cm1z7gipy002bdwvxcxqh6d3k"},{"name":"前后端通信","_id":"cm1z7gipy002ddwvxe8mk1wbq"},{"name":"CSS3","_id":"cm1z7gipz002jdwvx67nv5mkf"},{"name":"JavaScript","_id":"cm1z7giq1002ndwvxftj482gc"},{"name":"Node.js","_id":"cm1z7giq2002qdwvx9ak53sve"},{"name":"后端","_id":"cm1z7giq2002vdwvx8ed5fk8m"},{"name":"HTML5","_id":"cm1z7giq40033dwvxf2jb6i5o"},{"name":"React","_id":"cm1z7giq70039dwvx3ty2guol"},{"name":"JSX","_id":"cm1z7giq9003ddwvx2rsu7r7x"},{"name":"TSX","_id":"cm1z7giq9003fdwvxhxs7dovv"},{"name":"TypeScript","_id":"cm1z7giq9003gdwvx7h9acb56"},{"name":"GUI开发","_id":"cm1z7giqa003kdwvxcy3fg3gz"},{"name":"QT6","_id":"cm1z7giqb003ndwvxdcfyf1lb"},{"name":"跨平台桌面开发","_id":"cm1z7giqb003qdwvxaxx2ezbp"},{"name":"QSS","_id":"cm1z7giqb003tdwvx4lj2bl0q"}]}}